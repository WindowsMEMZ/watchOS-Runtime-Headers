//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CMWakeGestureManager_h
#define CMWakeGestureManager_h
@import Foundation;

@protocol CMWakeGestureDelegate, OS_dispatch_queue, {unique_ptr<CMWakeGestureVisitor, std::default_delete<CMWakeGestureVisitor>>="__ptr_"{__compressed_pair<CMWakeGestureVisitor *, std::default_delete<CMWakeGestureVisitor>>="__value_"^{CMWakeGestureVisitor}}};

@interface CMWakeGestureManager : NSObject {
  /* instance variables */
  struct Dispatcher { undefined * * x0; id x1; } * fWakeDispatcher;
  long long fCurrentState;
  double fLastNotificationTime;
  BOOL fEnableAudioAlert;
  BOOL fSendOrientationFailed;
  int fNightStandThreshold;
  NSObject<OS_dispatch_queue> *fDispatchQ;
  struct unique_ptr<CMWakeGestureVisitor, std::default_delete<CMWakeGestureVisitor>> { struct __compressed_pair<CMWakeGestureVisitor *, std::default_delete<CMWakeGestureVisitor>> { struct CMWakeGestureVisitor *__value_; } __ptr_; } fWakeGestureVisitor;
  int fScreenDimmingNotificationToken;
  int fSelector;
  NSObject<CMWakeGestureDelegate> *fUpdatedDelegate;
  NSObject<CMWakeGestureDelegate> *fDelegate;
}

@property (nonatomic) NSObject<CMWakeGestureDelegate> *delegate;
@property (nonatomic) long long wrist;
@property (nonatomic) long long crown;

/* class methods */
+ (id)stringForGestureState:(long long)state;
+ (id)sharedManager;
+ (BOOL)isWakeGestureAvailable;
+ (BOOL)isWakeGestureOverrideEnabled;
+ (long long)toState:(unsigned char)state;
+ (unsigned char)toRaw:(long long)raw;

/* instance methods */
- (id)initWithQueue:(id)queue;
- (void)createGestureDispatcherIfNecessary;
- (void)dealloc;
- (void)startWakeGestureUpdates;
- (void)stopWakeGestureUpdates;
- (void)playAlert;
- (BOOL)simulateGestureWithDelay:(double)delay Duration:(double)duration;
- (void)simulateGesture:(long long)gesture after:(double)after;
- (void)updateWristAndCrown;
- (BOOL)setNightStandMode:(BOOL)mode withConfiguration:(long long)configuration;
- (void)setDetectedStateEnabled:(BOOL)enabled;
- (void)reset;
- (BOOL)setFireAllEnabled:(BOOL)enabled;
- (void)forceDetected;
- (void)onWakeUpdated:(const struct Sample { unsigned long long x0; struct GestureReport * x1; } *)updated;
@end

#endif /* CMWakeGestureManager_h */
