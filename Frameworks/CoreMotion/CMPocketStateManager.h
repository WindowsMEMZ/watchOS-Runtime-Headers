//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CMPocketStateManager_h
#define CMPocketStateManager_h
@import Foundation;

@class NSMutableArray;
@protocol CMPocketStateDelegate, OS_dispatch_queue, OS_dispatch_source, {unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>>="__ptr_"{__compressed_pair<CLMotionNotifier::Dispatcher *, std::default_delete<CLMotionNotifier::Dispatcher>>="__value_"^{Dispatcher}}};

@interface CMPocketStateManager : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_source> *fQueryTimer;
  NSObject<OS_dispatch_queue> *fPrivateQueue;
  int fCachedState;
  struct unique_ptr<CLMotionNotifier::Dispatcher, std::default_delete<CLMotionNotifier::Dispatcher>> { struct __compressed_pair<CLMotionNotifier::Dispatcher *, std::default_delete<CLMotionNotifier::Dispatcher>> { struct Dispatcher *__value_; } __ptr_; } fDispatcher;
  double fMaxMonitorTime;
  NSMutableArray *fQueryBlocks;
}

@property (nonatomic) NSObject<CMPocketStateDelegate> *delegate;

/* class methods */
+ (BOOL)isPocketStateAvailable;

/* instance methods */
- (id)init;
- (void)_prepareDispatcher;
- (void)dealloc;
- (void)_disableDispatcher;
- (long long)translateInternalState:(int)state;
- (id)externalStateToString:(long long)string;
- (void)addToAggdScalarWithName:(id)name andScalar:(unsigned long long)scalar;
- (void)queryStateOntoQueue:(id)queue withTimeout:(double)timeout andHandler:(id /* block */)handler;
- (void)queryStateOntoQueue:(id)queue andMonitorFor:(double)for withTimeout:(double)timeout andHandler:(id /* block */)handler;
- (void)onNotification:(id)notification;
- (void)onPocketStateUpdated:(int)updated;
@end

#endif /* CMPocketStateManager_h */
