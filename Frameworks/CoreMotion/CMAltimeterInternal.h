//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CMAltimeterInternal_h
#define CMAltimeterInternal_h
@import Foundation;

@class NSOperationQueue;
@protocol OS_dispatch_queue, {deque<float, std::allocator<float>>="__map_"{__split_buffer<float *, std::allocator<float *>>="__first_"^^f"__begin_"^^f"__end_"^^f"__end_cap_"{__compressed_pair<float **, std::allocator<float *>>="__value_"^^f}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<float>>="__value_"Q}};

@interface CMAltimeterInternal : NSObject {
  /* instance variables */
  struct Dispatcher { undefined * * x0; id x1; } * fFilteredPressureDispatcher;
  id /* block */ fRelativeAltimeterHandler;
  NSOperationQueue *fRelativeAltimeterQueue;
  struct Sample { double timestamp; struct { float pressure; float temperature; } pressureData; } fBaseAltimeterSample;
  float fBarometricBaseAltitude;
  BOOL fBaselineReceived;
  float fMostRecentFilteredPressure;
  struct deque<float, std::allocator<float>> { struct __split_buffer<float *, std::allocator<float *>> { float * *__first_; float * *__begin_; float * *__end_; struct __compressed_pair<float **, std::allocator<float *>> { float * *__value_; } __end_cap_; } __map_; unsigned long long __start_; struct __compressed_pair<unsigned long, std::allocator<float>> { unsigned long long __value_; } __size_; } fPressureSamples;
  NSObject<OS_dispatch_queue> *fInternalQueue;
  NSObject<OS_dispatch_queue> *fAppQueue;
  void * fLocationdConnection;
  id /* block */ fHandler;
  id /* block */ fSignificantElevationSampleHandler;
  double fElevationAscendedOffset;
  double fElevationDescendedOffset;
  BOOL fStopSignificantElevationUpdates;
  double fFilteredElevationOffset;
  BOOL fStopRelativeAltitudeUpdates;
  NSOperationQueue *fAbsoluteAltitudeClientQueue;
  id /* block */ fAbsoluteAltitudeClientHandler;
}

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)_teardown;
- (void)_startElevationUpdatesWithHandler:(id /* block */)handler;
- (void)_stopElevationUpdates;
- (void)_startSignificantElevationUpdatesWithHandler:(id /* block */)handler;
- (void)_stopSignificantElevationUpdates;
- (void)_querySignificantElevationChangeFromDate:(id)date toDate:(id)date withHandler:(id /* block */)handler;
- (void)_queryElevationProfileFromDate:(id)date toDate:(id)date withBatchSize:(unsigned long long)size fromRecordId:(int)id withHandler:(id /* block */)handler;
- (void)_queryElevationProfileFromDate:(id)date toDate:(id)date withBatchSize:(unsigned long long)size withHandler:(id /* block */)handler;
- (void)_startRelativeAltitudeUpdates;
- (void)_stopRelativeAltitudeUpdates;
- (void)_releaseHandlerObjects;
- (void)_startAbsoluteAltitudeUpdatesToQueue:(id)queue withHandler:(id /* block */)handler;
- (void)_stopAbsoluteAltitudeUpdates;
- (void)_pauseAbsoluteAltitudeUpdates;
- (void)_resumeAbsoluteAltitudeUpdates;
- (void)_handleAbsoluteAltitudeUpdate:(struct shared_ptr<CLConnectionMessage> { struct CLConnectionMessage * x0; struct __shared_weak_count * x1; })update;
@end

#endif /* CMAltimeterInternal_h */
