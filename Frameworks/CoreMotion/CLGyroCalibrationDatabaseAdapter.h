//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CLGyroCalibrationDatabaseAdapter_h
#define CLGyroCalibrationDatabaseAdapter_h
@import Foundation;

#include "CLNotifierServiceAdapter.h"
#include "CLGyroCalibrationDatabaseProtocol-Protocol.h"

@class NSString;

@interface CLGyroCalibrationDatabaseAdapter : CLNotifierServiceAdapter<CLGyroCalibrationDatabaseProtocol>

@property (nonatomic) BOOL valid;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)becameFatallyBlocked:(id)blocked index:(unsigned long long)index;
+ (void)performSyncOnSilo:(id)silo invoker:(id /* block */)invoker;
+ (id)getSilo;
+ (BOOL)isSupported;

/* instance methods */
- (id)init;
- (void)beginService;
- (void)endService;
- (void *)adaptee;
- (void)doAsync:(id /* block */)async;
- (void)doAsync:(id /* block */)async withReply:(id /* block */)reply;
- (BOOL)syncgetDoSync:(id /* block */)sync;
- (BOOL)syncgetGyroStatsWithBias:(struct { float x0; float x1; float x2; } *)bias slope:(struct { float x0; float x1; float x2; } *)slope l2Error:(struct { float x0; float x1; float x2; } *)error isDynamic:(BOOL)dynamic deltaBias:(struct { float x0; float x1; float x2; } *)bias deltaSlope:(struct { float x0; float x1; float x2; } *)slope deltaError:(struct { float x0; float x1; float x2; } *)error isDeltaDynamic:(BOOL)dynamic;
- (int)syncgetMaxDynamicTemperature;
- (void)startFactoryGYTT;
- (BOOL)syncgetBiasFit:(struct { int x0; double x1; double x2; float x3; float x4; union { struct { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; } x0; struct { BOOL x0; char x1[282] } x1; } x5; } *)fit;
- (void)getBiasFitWithReply:(id /* block */)reply;
- (int)syncgetNonFactoryRoundCount;
- (BOOL)syncgetSupportsMiniCalibration;
- (double)syncgetLastMiniCalibration;
- (BOOL)syncgetInsertWithBias:(const struct { float x0; float x1; float x2; } *)bias variance:(const struct { float x0; float x1; float x2; } *)variance temperature:(float)temperature timestamp:(double)timestamp;
- (void)dumpDatabase:(id)database onCompletion:(id /* block */)completion;
- (BOOL)syncgetWipeDatabase;
- (int)syncgetNumTemperatures;
@end

#endif /* CLGyroCalibrationDatabaseAdapter_h */
