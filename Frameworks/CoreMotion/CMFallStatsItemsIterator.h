//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CMFallStatsItemsIterator_h
#define CMFallStatsItemsIterator_h
@import Foundation;

#include "NSFastEnumeration-Protocol.h"

@class NSData, NSDictionary;
@protocol {Reader="fDelegate"^{Delegate}"fFd"i"fMappedSize"Q"fMappedOffset"Q"fMappedData"*"fMustScan"B"fZStream"{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}"fUncompressedSens"{vector<unsigned char, std::allocator<unsigned char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::allocator<unsigned char>>="__value_"*}}"fSensRemaining"Q"fSensData"*}, {ReaderIterator="fReader"^{Reader}"fItem"{shared_ptr<CMMsl::Item>="__ptr_"^{Item}"__cntrl_"^{__shared_weak_count}}};

@interface CMFallStatsItemsIterator : NSObject<NSFastEnumeration> {
  /* instance variables */
  NSData *_data;
  NSDictionary *_item;
  struct Reader { struct Delegate *fDelegate; int fFd; unsigned long long fMappedSize; unsigned long long fMappedOffset; char *fMappedData; BOOL fMustScan; struct z_stream_s { char *next_in; unsigned int avail_in; unsigned long long total_in; char *next_out; unsigned int avail_out; unsigned long long total_out; char *msg; struct internal_state *state; undefined *zalloc; undefined *zfree; void *opaque; int data_type; unsigned long long adler; unsigned long long reserved; } fZStream; struct vector<unsigned char, std::allocator<unsigned char>> { char *__begin_; char *__end_; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char *__value_; } __end_cap_; } fUncompressedSens; unsigned long long fSensRemaining; char *fSensData; } fMslReader;
  struct MemoryDelegate { undefined * *_vptr$Delegate; char *fBuffer; unsigned long long fLength; } fMslReaderDelegate;
  struct ReaderIterator { struct Reader *fReader; struct shared_ptr<CMMsl::Item> { struct Item *__ptr_; struct __shared_weak_count *__cntrl_; } fItem; } fMslIterator;
}

/* instance methods */
- (id)initWithData:(id)data;
- (void)dealloc;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
@end

#endif /* CMFallStatsItemsIterator_h */
