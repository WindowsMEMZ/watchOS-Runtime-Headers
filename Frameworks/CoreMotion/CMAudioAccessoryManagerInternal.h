//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CMAudioAccessoryManagerInternal_h
#define CMAudioAccessoryManagerInternal_h
@import Foundation;

@class NSOperationQueue;

@interface CMAudioAccessoryManagerInternal : NSObject {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } fSampleLock;
  struct Dispatcher { undefined * * x0; id x1; } * fAudioAccessoryAccelerometerDispatcher;
  double fAudioAccessoryAccelerometerUpdateInterval;
  id /* block */ fAudioAccessoryAccelerometerHandler;
  NSOperationQueue *fAudioAccessoryAccelerometerQueue;
  struct Sample { double timestamp; struct { float x; float y; float z; } acceleration; unsigned long long sensorTime; unsigned short sequenceNumber; } fLatestAudioAccessoryAccelerometerSample;
  struct Dispatcher { undefined * * x0; id x1; } * fAudioAccessoryGyroDispatcher;
  double fAudioAccessoryGyroUpdateInterval;
  id /* block */ fAudioAccessoryGyroHandler;
  NSOperationQueue *fAudioAccessoryGyroQueue;
  struct Sample { double timestamp; struct { float x; float y; float z; } gyro; unsigned long long sensorTime; unsigned short sequenceNumber; float temperature; } fLatestAudioAccessoryGyroSample;
  struct Dispatcher { undefined * * x0; id x1; } * fAudioAccessoryMagnetometerDispatcher;
  double fAudioAccessoryMagnetometerUpdateInterval;
  id /* block */ fAudioAccessoryMagnetometerHandler;
  NSOperationQueue *fAudioAccessoryMagnetometerQueue;
  struct Sample { double timestamp; struct { float x; float y; float z; } magneticField; unsigned long long sensorTime; unsigned short sequenceNumber; float temperature; } fLatestAudioAccessoryMagnetometerSample;
  struct Dispatcher { undefined * * x0; id x1; } * fAudioAccessoryDeviceMotionDispatcher;
  struct Dispatcher { undefined * * x0; id x1; } * fAudioAccessoryDeviceMotionConfigDispatcher;
  double fAudioAccessoryDeviceMotionUpdateInterval;
  id /* block */ fAudioAccessoryDeviceMotionHandler;
  NSOperationQueue *fAudioAccessoryDeviceMotionQueue;
  struct CMOQuaternion { float x[4] elements; } fFrameRotation;
  struct Dispatcher { undefined * * x0; id x1; } * fAudioAccessoryDeviceMotionStatusDispatcher;
  id /* block */ fAudioAccessoryDeviceMotionStatusHandler;
  NSOperationQueue *fAudioAccessoryDeviceMotionStatusQueue;
  BOOL fAudioAccessoryAccelerometerAvailable;
  BOOL fAudioAccessoryGyroAvailable;
  BOOL fAudioAccessoryMagnetometerAvailable;
  BOOL fAudioAccessoryDeviceMotionAvailable;
}

/* instance methods */
- (id)init;
@end

#endif /* CMAudioAccessoryManagerInternal_h */
