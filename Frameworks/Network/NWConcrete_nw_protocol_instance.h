//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3762.60.29.0.0
//
#ifndef NWConcrete_nw_protocol_instance_h
#define NWConcrete_nw_protocol_instance_h
@import Foundation;

#include "NWConcrete_nw_protocol_definition.h"
#include "NWConcrete_nw_protocol_metadata.h"
#include "NWConcrete_nw_protocol_options.h"
#include "OS_nw_association-Protocol.h"
#include "OS_nw_context-Protocol.h"
#include "OS_nw_endpoint-Protocol.h"
#include "OS_nw_parameters-Protocol.h"
#include "OS_nw_path-Protocol.h"
#include "OS_nw_path_flow_registration-Protocol.h"
#include "OS_nw_protocol_instance-Protocol.h"
#include "OS_nw_protocol_instance_registrar-Protocol.h"

@class NSString;
@protocol OS_nw_array, OS_xpc_object;

@interface NWConcrete_nw_protocol_instance : NSObject<OS_nw_protocol_instance> {
  /* instance variables */
  NWConcrete_nw_protocol_definition *parent_definition;
  struct nw_protocol_callbacks { undefined *add_input_handler; undefined *remove_input_handler; undefined *replace_input_handler; undefined *connect; undefined *disconnect; undefined *connected; undefined *disconnected; undefined *error; undefined *input_available; undefined *output_available; undefined *get_input_frames; undefined *get_output_frames; undefined *finalize_output_frames; undefined *link_state; undefined *get_parameters; undefined *get_path; undefined *get_local_endpoint; undefined *get_remote_endpoint; undefined *register_notification; undefined *unregister_notification; undefined *notify; undefined *updated_path; undefined *supports_external_data; undefined *input_finished; undefined *output_finished; undefined *get_output_local_endpoint; undefined *get_output_interface; undefined *waiting_for_output; undefined *copy_info; undefined *add_listen_handler; undefined *remove_listen_handler; undefined *get_message_properties; undefined *reset; undefined *input_flush; } callbacks;
  struct nw_protocol { unsigned char x[16] flow_id; struct nw_protocol_identifier *identifier; struct nw_protocol_callbacks *callbacks; struct nw_protocol *output_handler; void *handle; struct nw_protocol *default_input_handler; void *output_handler_context; } protocol;
  struct nw_listen_protocol { struct nw_listen_protocol_callbacks * x0; struct nw_protocol * x1; void * x2; void * x3; } * listen_handler;
  void * destroy_timer;
  NSObject<OS_nw_endpoint> *endpoint;
  NSObject<OS_nw_parameters> *parameters;
  NWConcrete_nw_protocol_options *options;
  NSObject<OS_nw_association> *association;
  NSObject<OS_xpc_object> *paths_to_establish;
  unsigned long long reserve_header_size;
  unsigned long long reserve_footer_size;
  unsigned long long maximum_content_size;
  unsigned int protocol_outbound_data_limit;
  void * handle;
  NSObject<OS_nw_context> *context;
  struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame * *tqh_last; } inbound_frames;
  struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame * *tqh_last; } outbound_frames;
  unsigned int empty_frame_pool_count;
  struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame * *tqh_last; } empty_frame_pool;
  struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame * *tqh_last; } pending_inbound_frames;
  unsigned int pending_inbound_frame_count;
  unsigned int pending_inbound_frame_bytes;
  struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame * *tqh_last; } pending_outbound_frames;
  NSObject<OS_nw_array> *outbound_data_requests;
  struct nw_hash_table * flows_table;
  struct nw_hash_table * custom_flow_mapping_table;
  unsigned long long last_accepted_flow;
  NWConcrete_nw_protocol_metadata *new_flow_metadata;
  id /* block */ wakeup;
  id /* block */ wakeup_block;
  NSObject<OS_nw_path_flow_registration> *flow_registration;
  NSObject<OS_nw_path> *current_path;
  struct nw_hash_table * paths_table;
  unsigned long long default_path;
  unsigned long long primary_path;
  unsigned long long current_setup_path;
  NSObject<OS_nw_endpoint> *current_setup_path_endpoint;
  NSObject<OS_nw_endpoint> *current_setup_path_local_endpoint;
  NSObject<OS_nw_parameters> *current_setup_path_parameters;
  NSObject<OS_nw_endpoint> *derived_ipv4_endpoint;
  NSObject<OS_nw_endpoint> *preferred_ipv4_address;
  NSObject<OS_nw_endpoint> *preferred_ipv6_address;
  int level;
  unsigned long long flow_in_connected;
  NSObject<OS_nw_protocol_instance_registrar> *registrar;
  unsigned short paths_log_id_num;
  unsigned int x :1 last_probe_connectivity;
  unsigned int x :1 initialized;
  unsigned int x :1 started;
  unsigned int x :1 ready;
  unsigned int x :1 connection_used;
  unsigned int x :1 output_connected;
  unsigned int x :1 limit_outbound_data;
  unsigned int x :1 datagram;
  unsigned int x :1 reported_send_error;
  unsigned int x :1 supports_external_data;
  unsigned int x :1 link_flow_controlled;
  unsigned int x :1 waiting_for_link_flow_control;
  unsigned int x :1 processing_input;
  unsigned int x :1 processing_output;
  unsigned int x :1 pending_input_finished;
  unsigned int x :1 should_signal_outbound_not_pending;
  unsigned int x :1 waiting_for_listener_accept;
  unsigned int x :1 new_flow_is_control;
  unsigned int x :1 prohibit_joining;
  unsigned int x :1 should_destroy;
  unsigned int x :1 timer_enabled;
  unsigned int x :1 input_acknowledged;
  unsigned int x :1 reads_suspended;
  unsigned int x :1 failed_to_get_output;
  unsigned int x :1 needs_output_available;
  unsigned int x :1 needs_finalize_output;
  unsigned int x :1 ignore_future_path_changes;
  unsigned int x :1 wait_for_early_data;
  unsigned int x :1 previous_should_fallback;
  unsigned int x :1 previous_fallback_is_weak;
  unsigned int x :1 reporting_all_done;
  unsigned int x :1 suppress_logging;
  unsigned int x :1 tearing_down;
  char log_str[84];
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (struct nw_protocol { unsigned char x0[16] struct nw_protocol_identifier * x1; struct nw_protocol_callbacks * x2; struct nw_protocol * x3; void * x4; struct nw_protocol * x5; void * x6; } *)getProtocolStructure;
@end

#endif /* NWConcrete_nw_protocol_instance_h */
