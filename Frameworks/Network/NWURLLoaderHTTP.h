//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3762.60.29.0.0
//
#ifndef NWURLLoaderHTTP_h
#define NWURLLoaderHTTP_h
@import Foundation;

#include "NWConcrete_nw_connection.h"
#include "NWURLLoader-Protocol.h"
#include "NWURLLoaderCache.h"
#include "NWURLLoaderClient-Protocol.h"
#include "NWURLSessionRequestBodyProvider-Protocol.h"
#include "NWURLSessionTaskConfiguration.h"
#include "OS_nw_content_context-Protocol.h"

@class NSCachedURLResponse, NSError, NSString, NSURLRequest;
@protocol OS_dispatch_queue, OS_sec_trust;

@interface NWURLLoaderHTTP : NSObject<NWURLLoader> {
  /* instance variables */
  BOOL _ready;
  BOOL _pendingCompletion;
  BOOL _cancelled;
  BOOL _allowCaching;
  BOOL _loadingFromCache;
  BOOL _revalidateCachedResponse;
  BOOL _dataDelivered;
  BOOL _isResponseMixed;
  NSURLRequest *_request;
  long long _bodyKnownSize;
  NWURLSessionTaskConfiguration *_configuration;
  NSObject<NWURLLoaderClient> *_client;
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<NWURLSessionRequestBodyProvider> *_requestBodyProvider;
  NWConcrete_nw_connection *_connection;
  NSObject<OS_nw_content_context> *_requestContext;
  NSObject<OS_nw_content_context> *_nextRequestContext;
  NSError *_pendingError;
  NWURLLoaderCache *_cache;
  NSCachedURLResponse *_cachedResponse;
  id /* block */ _responseCompletionHandler;
}

@property (readonly, nonatomic) NSObject<OS_sec_trust> *peerTrust;
@property (readonly, nonatomic) BOOL allowsWrite;
@property (readonly, nonatomic) NWConcrete_nw_connection *underlyingConnection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)start:(id /* block */)start;
- (void)stop;
- (void)updateClient:(id)client;
- (void)readResponse:(id /* block */)response;
- (void)readDataOfMinimumIncompleteLength:(unsigned long long)length maximumLength:(unsigned long long)length completionHandler:(id /* block */)handler;
- (void)writeData:(id)data complete:(BOOL)complete completionHandler:(id /* block */)handler;
- (void)responseIsMixed;
@end

#endif /* NWURLLoaderHTTP_h */
