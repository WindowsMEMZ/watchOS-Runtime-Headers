//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3762.60.29.0.0
//
#ifndef NWConcrete_nw_endpoint_h
#define NWConcrete_nw_endpoint_h
@import Foundation;

#include "NWConcrete_nw_endpoint.h"
#include "OS_nw_context-Protocol.h"
#include "OS_nw_endpoint-Protocol.h"
#include "OS_nw_interface-Protocol.h"
#include "OS_nw_protocol_instance_registrar-Protocol.h"
#include "OS_nw_txt_record-Protocol.h"

@class NSArray, NSString;
@protocol OS_dispatch_data, OS_nw_array, OS_xpc_object, {nw_endpoint_alterative_s="chain"{?="tqe_next"^{nw_endpoint_alterative_s}"tqe_prev"^^{nw_endpoint_alterative_s}}"endpoint"@"NWConcrete_nw_endpoint""applicable_protocol"@"NSObject<OS_nw_protocol_definition>"};

@interface NWConcrete_nw_endpoint : NSObject<OS_nw_endpoint> {
  /* instance variables */
  NSObject<OS_nw_context> *context;
  NSObject<OS_nw_interface> *interface;
  int interface_type;
  unsigned char agent_identifier[16];
  NSArray *public_keys;
  NSString *ns_description;
  NSString *ns_redacted_description;
  char * redacted_description;
  char * known_tracker_name;
  char * tracker_owner;
  char * device_id;
  NWConcrete_nw_endpoint *parent_endpoint;
  NSObject<OS_nw_array> *cname_array;
  struct nw_endpoint_alterative_s { struct { struct nw_endpoint_alterative_s *tqe_next; struct nw_endpoint_alterative_s * *tqe_prev; } chain; NWConcrete_nw_endpoint *endpoint; NSObject<OS_nw_protocol_definition> *applicable_protocol; } first_alternative;
  struct { struct nw_endpoint_alterative_s *tqh_first; struct nw_endpoint_alterative_s * *tqh_last; } alternative_list;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } endpoint_lock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } description_lock;
  NSObject<OS_nw_txt_record> *txt_record;
  NSObject<OS_xpc_object> *signature;
  struct nw_hash_table * associations;
  NSObject<OS_nw_protocol_instance_registrar> *registrar;
  NSObject<OS_nw_array> *endpoint_edges;
  unsigned short alternate_port;
  unsigned char selected_key;
  unsigned int x :1 is_local_domain;
  unsigned int x :1 parent_is_proxy;
  unsigned int x :1 is_registered;
  unsigned int x :1 description_used;
  unsigned int x :1 redacted_description_used;
  unsigned int x :1 do_not_redact_description;
  unsigned int x :1 approved_app_domain;
  unsigned int x :1 can_block_request;
}

@property (readonly, nonatomic) unsigned int type;
@property (readonly, nonatomic) const char * domainForPolicy;
@property (readonly, nonatomic) const char * hostname;
@property (readonly, nonatomic) unsigned short port;
@property (retain, nonatomic) NSObject<OS_dispatch_data> *echConfig;
@property (nonatomic) unsigned short priority;
@property (nonatomic) unsigned short weight;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)copyDictionary;
- (char *)createDescription:(BOOL)description;
- (id)redactedDescription;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToEndpoint:(id)endpoint matchFlags:(unsigned char)flags;
- (id)copyEndpoint;
- (unsigned long long)getHash;
- (id)copyWithZone:(struct _NSZone *)zone;
@end

#endif /* NWConcrete_nw_endpoint_h */
