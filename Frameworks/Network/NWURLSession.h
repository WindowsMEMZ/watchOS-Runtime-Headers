//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3762.60.29.0.0
//
#ifndef NWURLSession_h
#define NWURLSession_h
@import Foundation;

#include "NSURLSessionDelegate-Protocol.h"
#include "NWURLSessionDelegateWrapper.h"
#include "OS_nw_authentication_credential_storage-Protocol.h"
#include "OS_nw_context-Protocol.h"
#include "OS_nw_http_alt_svc_storage-Protocol.h"
#include "OS_nw_http_cookie_storage-Protocol.h"

@class NSHashTable, NSMutableSet, NSOperationQueue, NSString, NSURLSessionConfiguration;
@protocol OS_dispatch_queue;

@interface NWURLSession : NSObject {
  /* instance variables */
  unsigned char uuid[16];
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock;
  BOOL _invalidated;
  NSObject<OS_nw_http_cookie_storage> *_HTTPCookieStorage;
  NSObject<OS_nw_authentication_credential_storage> *_URLCredentialStorage;
  NSObject<OS_nw_http_alt_svc_storage> *_altSvcStorage;
  NSURLSessionConfiguration *_internalConfiguration;
  unsigned long long _nextTaskIdentifier;
  NSHashTable *_weakUnresumedTasks;
  NSMutableSet *_runningTasks;
  NSObject<OS_dispatch_queue> *_queue;
  NWURLSessionDelegateWrapper *_delegateWrapper;
  NSObject<OS_nw_context> *_context;
}

@property (readonly, nonatomic) NSOperationQueue *delegateQueue;
@property (readonly, nonatomic) NSObject<NSURLSessionDelegate> *delegate;
@property (readonly, copy, nonatomic) NSURLSessionConfiguration *configuration;
@property (copy) NSString *sessionDescription;
@property (readonly, nonatomic) NSObject<OS_nw_context> *_networkContext;

/* class methods */
+ (void)initialize;
+ (void)_strictTrustEvaluate:(id)evaluate queue:(id)queue completionHandler:(id /* block */)handler;
+ (void)_disableAppSSO;

/* instance methods */
- (BOOL)isKindOfClass:(Class)class;
- (id)initWithConfiguration:(id)configuration delegate:(id)delegate delegateQueue:(id)queue;
- (void)finishTasksAndInvalidate;
- (void)invalidateAndCancel;
- (void)resetWithCompletionHandler:(id /* block */)handler;
- (void)flushWithCompletionHandler:(id /* block */)handler;
- (void)getTasksWithCompletionHandler:(id /* block */)handler;
- (void)getAllTasksWithCompletionHandler:(id /* block */)handler;
- (id)dataTaskWithRequest:(id)request;
- (id)dataTaskWithURL:(id)url;
- (id)uploadTaskWithRequest:(id)request fromFile:(id)file;
- (id)uploadTaskWithRequest:(id)request fromData:(id)data;
- (id)uploadTaskWithStreamedRequest:(id)request;
- (id)downloadTaskWithRequest:(id)request;
- (id)downloadTaskWithURL:(id)url;
- (id)downloadTaskWithResumeData:(id)data;
- (id)streamTaskWithHostName:(id)name port:(long long)port;
- (id)streamTaskWithNetService:(id)service;
- (id)webSocketTaskWithURL:(id)url;
- (id)webSocketTaskWithURL:(id)url protocols:(id)protocols;
- (id)webSocketTaskWithRequest:(id)request;
- (id)dataTaskWithRequest:(id)request completionHandler:(id /* block */)handler;
- (id)dataTaskWithURL:(id)url completionHandler:(id /* block */)handler;
- (id)uploadTaskWithRequest:(id)request fromFile:(id)file completionHandler:(id /* block */)handler;
- (id)uploadTaskWithRequest:(id)request fromData:(id)data completionHandler:(id /* block */)handler;
- (id)downloadTaskWithRequest:(id)request completionHandler:(id /* block */)handler;
- (id)downloadTaskWithURL:(id)url completionHandler:(id /* block */)handler;
- (id)downloadTaskWithResumeData:(id)data completionHandler:(id /* block */)handler;
- (id)_dataTaskWithRequest:(id)request delegate:(id)delegate;
- (id)_dataTaskWithURL:(id)url delegate:(id)delegate;
- (id)_dataTaskWithRequest:(id)request delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_dataTaskWithURL:(id)url delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_uploadTaskWithRequest:(id)request fromFile:(id)file delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_uploadTaskWithRequest:(id)request fromData:(id)data delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_downloadTaskWithRequest:(id)request delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_downloadTaskWithURL:(id)url delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_downloadTaskWithResumeData:(id)data delegate:(id)delegate completionHandler:(id /* block */)handler;
@end

#endif /* NWURLSession_h */
