//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3762.60.29.0.0
//
#ifndef NWConcrete_nw_listener_h
#define NWConcrete_nw_listener_h
@import Foundation;

#include "NWConcrete_nw_connection.h"
#include "NWConcrete_nw_listener.h"
#include "OS_nw_advertise_descriptor-Protocol.h"
#include "OS_nw_context-Protocol.h"
#include "OS_nw_endpoint-Protocol.h"
#include "OS_nw_error-Protocol.h"
#include "OS_nw_group_descriptor-Protocol.h"
#include "OS_nw_listener-Protocol.h"
#include "OS_nw_parameters-Protocol.h"
#include "OS_nw_path-Protocol.h"
#include "OS_nw_path_evaluator-Protocol.h"
#include "nw_listener_inbox_delegate-Protocol.h"

@class NSArray, NSString;
@protocol OS_dispatch_queue, OS_nw_array, OS_xpc_object;

@interface NWConcrete_nw_listener : NSObject<nw_listener_inbox_delegate, OS_nw_listener> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock;
  NSObject<OS_nw_parameters> *parameters;
  NSObject<OS_nw_context> *context;
  NSObject<OS_nw_group_descriptor> *multicast_descriptor;
  unsigned short id_value;
  char id_str[6];
  NWConcrete_nw_connection *join_connection;
  char * launchd_key;
  NSObject<OS_dispatch_queue> *client_queue;
  unsigned int client_qos_class;
  id /* block */ event_handler;
  id /* block */ new_connection_handler;
  id /* block */ new_connection_group_handler;
  unsigned int new_connection_limit;
  id /* block */ new_packet_handler;
  id /* block */ advertised_endpoint_changed_handler;
  int state;
  NSObject<OS_nw_error> *last_error;
  NSObject<OS_nw_array> *inboxes;
  NSObject<OS_nw_array> *flow_registrations;
  NSObject<OS_nw_path_evaluator> *evaluator;
  NSObject<OS_nw_path> *path;
  NSObject<OS_xpc_object> *inactive_agents;
  NSObject<OS_xpc_object> *inactive_agent_dictionaries;
  NSObject<OS_xpc_object> *triggered_agents;
  NSObject<OS_nw_parameters> *current_derived_parameters;
  NSArray *authorized_keys;
  NSObject<OS_nw_array> *ids_info;
  char * device_id;
  unsigned short awdl_use_count;
  void * advertise_new_connection_timer;
  NWConcrete_nw_listener *internally_retained_object;
  NSObject<OS_nw_advertise_descriptor> *advertise_descriptor;
  NSArray *advertisers;
  NSObject<OS_nw_endpoint> *advertised_endpoint;
  NSObject<OS_nw_endpoint> *local_endpoint;
  unsigned int defer_socket;
  unsigned short port;
  unsigned int x :1 cancelling;
  unsigned int x :1 reported_state;
  unsigned int x :1 allow_new_connection_inline;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (BOOL)canHandleNewConnection:(id)connection;
- (void)handleInbound:(id)inbound addProtocolInbox:(BOOL)inbox;
- (void)handleInboundPacket:(const char *)packet length:(unsigned short)length from:(id)from to:(id)to interface:(id)interface socket:(id)socket;
- (void)handleInboxFailed:(id)failed error:(id)error;
- (void)handleInboxCancelComplete:(id)complete;
- (void)updateParametersForNewConnection:(id)connection;
- (id)getIDSInformation;
- (char *)getPeerDeviceID;
- (void)dealloc;
@end

#endif /* NWConcrete_nw_listener_h */
