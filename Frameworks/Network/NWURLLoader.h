//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3762.60.29.0.0
//
#ifndef NWURLLoader_h
#define NWURLLoader_h
@import Foundation;

#include "NSURLProtocolClient-Protocol.h"
#include "NWURLLoader-Protocol.h"
#include "NWURLLoaderClient-Protocol.h"
#include "NWURLSessionReadRequest.h"
#include "NWURLSessionTaskConfiguration.h"
#include "OS_nw_connection-Protocol.h"

@class NSError, NSString, NSURLCache, NSURLProtocol, NSURLRequest, NSURLResponse;
@protocol OS_dispatch_data, OS_dispatch_queue, OS_sec_trust;

@interface NWURLLoader : NSObject<NWURLLoader, NSURLProtocolClient> {
  /* instance variables */
  BOOL _complete;
  NSURLRequest *_request;
  NWURLSessionTaskConfiguration *_configuration;
  NSObject<NWURLLoaderClient> *_client;
  NSObject<OS_dispatch_queue> *_queue;
  Class _protocolClass;
  NSURLCache *_cache;
  NSURLProtocol *_protocol;
  unsigned long long _cacheStoragePolicy;
  NSObject<OS_dispatch_data> *_dataToCache;
  unsigned long long _maxItemSizeToCache;
  id /* block */ _awaitingResponse;
  NSURLResponse *_response;
  NWURLSessionReadRequest *_readRequest;
  NSError *_error;
}

@property (readonly, nonatomic) NSObject<OS_sec_trust> *peerTrust;
@property (readonly, nonatomic) BOOL allowsWrite;
@property (readonly, nonatomic) NSObject<OS_nw_connection> *underlyingConnection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)start:(id /* block */)start;
- (void)stop;
- (void)updateClient:(id)client;
- (void)readResponse:(id /* block */)response;
- (void)readDataOfMinimumIncompleteLength:(unsigned long long)length maximumLength:(unsigned long long)length completionHandler:(id /* block */)handler;
- (void)writeData:(id)data complete:(BOOL)complete completionHandler:(id /* block */)handler;
- (void)responseIsMixed;
- (void)URLProtocol:(id)urlprotocol wasRedirectedToRequest:(id)request redirectResponse:(id)response;
- (void)URLProtocol:(id)urlprotocol cachedResponseIsValid:(id)valid;
- (void)URLProtocol:(id)urlprotocol didReceiveResponse:(id)response cacheStoragePolicy:(unsigned long long)policy;
- (void)URLProtocol:(id)urlprotocol didLoadData:(id)data;
- (void)URLProtocolDidFinishLoading:(id)loading;
- (void)URLProtocol:(id)urlprotocol didFailWithError:(id)error;
- (void)URLProtocol:(id)urlprotocol didReceiveAuthenticationChallenge:(id)challenge;
- (void)URLProtocol:(id)urlprotocol didCancelAuthenticationChallenge:(id)challenge;
@end

#endif /* NWURLLoader_h */
