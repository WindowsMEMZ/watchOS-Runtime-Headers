//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3762.60.29.0.0
//
#ifndef NWConcrete_nw_endpoint_flow_h
#define NWConcrete_nw_endpoint_flow_h
@import Foundation;

#include "NWConcrete_nw_endpoint_flow.h"
#include "NWConcrete_nw_endpoint_handler.h"
#include "OS_nw_endpoint-Protocol.h"
#include "OS_nw_endpoint_flow-Protocol.h"
#include "OS_nw_error-Protocol.h"
#include "OS_nw_fd_wrapper-Protocol.h"
#include "OS_nw_path-Protocol.h"
#include "OS_nw_path_flow_registration-Protocol.h"
#include "OS_nw_protocol_definition-Protocol.h"
#include "OS_nw_read_request-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue, OS_nw_array, OS_nw_channel, OS_xpc_object, {nw_flow_protocol="protocol"{nw_protocol="flow_id"[16C]"identifier"^{nw_protocol_identifier}"callbacks"^{nw_protocol_callbacks}"output_handler"^{nw_protocol}"handle"^v"default_input_handler"^{nw_protocol}"output_handler_context"^v}"listen_protocol"{nw_listen_protocol="callbacks"^{nw_listen_protocol_callbacks}"protocol_handler"^{nw_protocol}"protocol_handler_context"^v"handle"^v}"replay_protocol"{nw_protocol="flow_id"[16C]"identifier"^{nw_protocol_identifier}"callbacks"^{nw_protocol_callbacks}"output_handler"^{nw_protocol}"handle"^v"default_input_handler"^{nw_protocol}"output_handler_context"^v}"handler"@"NWConcrete_nw_endpoint_handler""retained_flow"@"NWConcrete_nw_endpoint_flow""parameters"@"NSObject<OS_nw_parameters>""context"@"NSObject<OS_nw_context>""write_requests"@"NSObject<OS_nw_write_request>""initial_write_requests"@"NSObject<OS_nw_write_request>""cloned_initial_write_requests"@"NSObject<OS_nw_write_request>""read_requests"@"NSObject<OS_nw_read_request>""last_output_context"@"NSObject<OS_nw_content_context>""metadata"@"NSObject<OS_nw_protocol_metadata>""input_metadata"@"NSObject<OS_nw_protocol_metadata>""output_context"@"NSObject<OS_nw_content_context>""input_contexts"@"NSObject<OS_nw_dictionary>""single_input_context"@"NSObject<OS_nw_content_context>""pending_input_frames"{nw_frame_array_s="tqh_first"^{nw_frame}"tqh_last"^^{nw_frame}}"candidate_output_handlers"^{nw_hash_table}"fast_open_frames"{nw_frame_array_s="tqh_first"^{nw_frame}"tqh_last"^^{nw_frame}}"final_read_list"@"NSObject<OS_nw_array>""last_error"@"NSObject<OS_nw_error>""fast_open_frame_finalized_count"I"initialized"b1"last_output_context_pending"b1"servicing_reads"b1"input_finished"b1"waiting_for_initial_read"b1"deferred_final_read"b1"delivered_final_read"b1"flow_unregistered"b1"flow_disconnected"b1"waiting_for_connected"b1"in_fast_open"b1"unused"b5"__pad"[2C]};

@interface NWConcrete_nw_endpoint_flow : NSObject<OS_nw_endpoint_flow> {
  /* instance variables */
  NSObject<OS_nw_path> *connected_path;
  NSObject<OS_nw_path> *flow_path;
  NWConcrete_nw_endpoint_flow *internally_retained_object;
  unsigned int x :1 is_root_flow_handler;
  unsigned int x :1 is_leaf_flow_handler;
  unsigned int x :1 is_empty_root;
  unsigned int x :1 initialized_protocol_callbacks;
  unsigned int x :1 started;
  unsigned int x :1 rebuild_stack;
  unsigned int x :1 setup_protocols;
  unsigned int x :1 started_protocols;
  unsigned int x :1 did_join_protocols;
  unsigned int x :1 is_viable;
  unsigned int x :1 is_connected;
  unsigned int x :1 has_connected;
  unsigned int x :1 initial_payload_sent;
  unsigned int x :1 assigned_initial_writes;
  unsigned int x :1 is_channel;
  unsigned int x :1 is_multipath;
  unsigned int x :1 multipath_nat64_query_outstanding;
  unsigned int x :1 custom_protocols_only;
  unsigned int x :1 is_flow_divert;
  unsigned int x :1 multilayer_packet_logging;
  unsigned int x :1 has_progress_target;
  unsigned int x :1 path_is_direct;
  unsigned int x :1 should_ignore_path_result;
  unsigned int x :1 reported_do_not_reuse;
  unsigned int x :1 in_setup_protocols;
  unsigned int x :1 connected_child_handles_requests;
  unsigned int x :1 connected_child_failed;
  unsigned int x :1 should_start_child;
  unsigned int x :1 delay_start_child;
  unsigned int x :1 cloned;
  unsigned int x :1 did_add_proxy;
  unsigned int x :1 guard_fd;
  NWConcrete_nw_endpoint_flow *clone_from_flow;
  struct nw_protocol_identifier { char x[32] name; int level; int mapping; } protocol_identifier;
  struct nw_protocol_callbacks { undefined *add_input_handler; undefined *remove_input_handler; undefined *replace_input_handler; undefined *connect; undefined *disconnect; undefined *connected; undefined *disconnected; undefined *error; undefined *input_available; undefined *output_available; undefined *get_input_frames; undefined *get_output_frames; undefined *finalize_output_frames; undefined *link_state; undefined *get_parameters; undefined *get_path; undefined *get_local_endpoint; undefined *get_remote_endpoint; undefined *register_notification; undefined *unregister_notification; undefined *notify; undefined *updated_path; undefined *supports_external_data; undefined *input_finished; undefined *output_finished; undefined *get_output_local_endpoint; undefined *get_output_interface; undefined *waiting_for_output; undefined *copy_info; undefined *add_listen_handler; undefined *remove_listen_handler; undefined *get_message_properties; undefined *reset; undefined *input_flush; } protocol_callbacks;
  struct nw_listen_protocol_callbacks { undefined *new_flow; undefined *disconnected; } listen_callbacks;
  struct nw_flow_protocol { struct nw_protocol { unsigned char x[16] flow_id; struct nw_protocol_identifier *identifier; struct nw_protocol_callbacks *callbacks; struct nw_protocol *output_handler; void *handle; struct nw_protocol *default_input_handler; void *output_handler_context; } protocol; struct nw_listen_protocol { struct nw_listen_protocol_callbacks *callbacks; struct nw_protocol *protocol_handler; void *protocol_handler_context; void *handle; } listen_protocol; struct nw_protocol { unsigned char x[16] flow_id; struct nw_protocol_identifier *identifier; struct nw_protocol_callbacks *callbacks; struct nw_protocol *output_handler; void *handle; struct nw_protocol *default_input_handler; void *output_handler_context; } replay_protocol; NWConcrete_nw_endpoint_handler *handler; NWConcrete_nw_endpoint_flow *retained_flow; NSObject<OS_nw_parameters> *parameters; NSObject<OS_nw_context> *context; NSObject<OS_nw_write_request> *write_requests; NSObject<OS_nw_write_request> *initial_write_requests; NSObject<OS_nw_write_request> *cloned_initial_write_requests; NSObject<OS_nw_read_request> *read_requests; NSObject<OS_nw_content_context> *last_output_context; NSObject<OS_nw_protocol_metadata> *metadata; NSObject<OS_nw_protocol_metadata> *input_metadata; NSObject<OS_nw_content_context> *output_context; NSObject<OS_nw_dictionary> *input_contexts; NSObject<OS_nw_content_context> *single_input_context; struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame * *tqh_last; } pending_input_frames; struct nw_hash_table *candidate_output_handlers; struct nw_frame_array_s { struct nw_frame *tqh_first; struct nw_frame * *tqh_last; } fast_open_frames; NSObject<OS_nw_array> *final_read_list; NSObject<OS_nw_error> *last_error; unsigned int fast_open_frame_finalized_count; unsigned int x :1 initialized; unsigned int x :1 last_output_context_pending; unsigned int x :1 servicing_reads; unsigned int x :1 input_finished; unsigned int x :1 waiting_for_initial_read; unsigned int x :1 deferred_final_read; unsigned int x :1 delivered_final_read; unsigned int x :1 flow_unregistered; unsigned int x :1 flow_disconnected; unsigned int x :1 waiting_for_connected; unsigned int x :1 in_fast_open; unsigned int x :5 unused; unsigned char x[2] __pad; } shared_protocol;
  NSObject<OS_nw_read_request> *new_flow_read_requests;
  struct nw_protocol { unsigned char x0[16] struct nw_protocol_identifier * x1; struct nw_protocol_callbacks * x2; struct nw_protocol * x3; void * x4; struct nw_protocol * x5; void * x6; } * transport_protocol;
  struct nw_protocol { unsigned char x0[16] struct nw_protocol_identifier * x1; struct nw_protocol_callbacks * x2; struct nw_protocol * x3; void * x4; struct nw_protocol * x5; void * x6; } * joined_protocol;
  struct nw_protocol { unsigned char x0[16] struct nw_protocol_identifier * x1; struct nw_protocol_callbacks * x2; struct nw_protocol * x3; void * x4; struct nw_protocol * x5; void * x6; } * proxy_protocol;
  struct nw_protocol { unsigned char x0[16] struct nw_protocol_identifier * x1; struct nw_protocol_callbacks * x2; struct nw_protocol * x3; void * x4; struct nw_protocol * x5; void * x6; } * bottom_protocol;
  struct nw_protocol_identifier { char x0[32] int x1; int x2; } * ip_protocol_identifier;
  NSObject<OS_nw_protocol_definition> *multiplexed_message_definition;
  struct nw_protocol { unsigned char x0[16] struct nw_protocol_identifier * x1; struct nw_protocol_callbacks * x2; struct nw_protocol * x3; void * x4; struct nw_protocol * x5; void * x6; } * multiplexed_message_protocol;
  struct tcp_info { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16; unsigned int x17; int x18; unsigned int x19; unsigned long long x20; unsigned long long x21; unsigned long long x22; unsigned long long x23; unsigned long long x24; unsigned long long x25; unsigned long long x26; unsigned long long x27; unsigned long long x28; unsigned char x29; unsigned char x30; unsigned short x31; unsigned long long x32; unsigned long long x33; unsigned long long x34; unsigned long long x35; unsigned long long x36; unsigned long long x37; unsigned long long x38; unsigned long long x39; unsigned long long x40; unsigned long long x41; unsigned long long x42; unsigned long long x43; struct tcp_conn_status { union { struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; } x0; unsigned int x1; } x0; } x44; unsigned int x45 :1; unsigned int x46 :1; unsigned int x47 :1; unsigned int x48 :1; unsigned int x49 :1; unsigned int x50 :1; unsigned int x51 :1; unsigned int x52 :1; unsigned int x53 :1; unsigned int x54 :1; unsigned int x55 :1; unsigned int x56 :1; unsigned int x57 :1; unsigned int x58 :1; unsigned int x59 :1; unsigned int x60 :1; unsigned int x61 :1; unsigned int x62 :1; unsigned int x63 :1; unsigned int x64 :1; unsigned int x65 :1; unsigned int x66 :1; unsigned int x67 :1; unsigned int x68 :1; unsigned int x69 :1; unsigned int x70 :1; unsigned int x71 :1; unsigned int x72 :1; unsigned int x73; unsigned int x74; unsigned int x75; unsigned int x76; unsigned int x77; unsigned int x78; unsigned int x79; unsigned int x80; unsigned int x81; unsigned long long x82; unsigned int x83; unsigned int x84; unsigned int x85; unsigned long long x86; unsigned long long x87; unsigned long long x88; unsigned long long x89; unsigned long long x90; unsigned long long x91; } * tcp_info;
  struct tcp_connection_info { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; unsigned int x16 :1; unsigned int x17 :1; unsigned int x18 :1; unsigned int x19 :1; unsigned int x20 :1; unsigned int x21 :1; unsigned int x22 :1; unsigned int x23 :1; unsigned int x24 :1; unsigned int x25 :1; unsigned int x26 :1; unsigned int x27 :1; unsigned int x28 :1; unsigned int x29 :1; unsigned int x30 :1; unsigned int x31 :17; unsigned long long x32; unsigned long long x33; unsigned long long x34; unsigned long long x35; unsigned long long x36; unsigned long long x37; unsigned long long x38; } * tcp_connection_info;
  struct nw_data_transfer_snapshot { unsigned long long x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; unsigned long long x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; unsigned long long x18; unsigned long long x19; unsigned long long x20; unsigned long long x21; unsigned long long x22; } * data_transfer_snapshot;
  unsigned long long snapshot_length;
  unsigned int snapshot_count;
  NSObject<OS_nw_path_flow_registration> *flow_registration;
  NSObject<OS_dispatch_queue> *client_queue;
  id /* block */ read_close_handler;
  id /* block */ write_close_handler;
  struct nw_hash_table * multiplexed_flow_table;
  NSObject<OS_nw_error> *last_error;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } lock;
  NSObject<OS_nw_fd_wrapper> *connected_fd_wrapper;
  unsigned int pending_write_bytes;
  int pre_connected_fd;
  NSObject<OS_nw_channel> *channel;
  struct nw_protocol { unsigned char x0[16] struct nw_protocol_identifier * x1; struct nw_protocol_callbacks * x2; struct nw_protocol * x3; void * x4; struct nw_protocol * x5; void * x6; } * socket_protocol;
  struct _DNSServiceRef_t * sleep_proxy_ref;
  NWConcrete_nw_endpoint_handler *child_endpoint_handler;
  NWConcrete_nw_endpoint_handler *connected_endpoint_handler;
  NSObject<OS_nw_array> *candidate_endpoint_handlers;
  NSObject<OS_xpc_object> *flow_divert_token;
  NSObject<OS_nw_endpoint> *flow_divert_endpoint;
  NSObject<OS_nw_endpoint> *saved_original_endpoint;
  unsigned short protocol_log_id_num;
  unsigned int x :1 keepalive_event_enabled;
  unsigned long long first_keepalive_time;
  unsigned int keepalive_count;
  unsigned int configured_keepalive_count;
  unsigned int configured_keepalive_interval;
  unsigned int restart_count;
  unsigned int adaptive_read_count;
  unsigned int adaptive_write_count;
  id /* block */ adaptive_read_event_handler;
  id /* block */ adaptive_write_event_handler;
  id /* block */ keepalive_event_handler;
  id /* block */ metadata_changed_event_handler;
  NSObject<OS_nw_array> *connected_metadata;
  NSObject<OS_nw_array> *connection_wide_metadata;
  unsigned long long sent_application_byte_count;
  unsigned long long received_application_byte_count;
  unsigned char connection_uuid[16];
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)startWithHandler:(id)handler;
- (void)cancelWithHandler:(id)handler forced:(BOOL)forced;
- (void)updatePathWithHandler:(id)handler;
- (BOOL)applyWithHandler:(id)handler toChildren:(id /* block */)children;
@end

#endif /* NWConcrete_nw_endpoint_flow_h */
