//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSOrderedSet_h
#define NSOrderedSet_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSFastEnumeration-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@interface NSOrderedSet : NSObject<NSCopying, NSMutableCopying, NSSecureCoding, NSFastEnumeration>

@property (readonly) unsigned long long count;

/* class methods */
+ (id)allocWithZone:(struct _NSZone *)zone;
+ (id)newOrderedSetWithObjects:(const id *)objects count:(unsigned long long)count;
+ (id)orderedSetWithObjects:(const id *)objects count:(unsigned long long)count;
+ (id)orderedSetWithObject:(id)object;
+ (id)orderedSet;
+ (id)orderedSetWithObjects:(id)objects;
+ (id)orderedSetWithArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range copyItems:(BOOL)items;
+ (id)orderedSetWithArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (id)orderedSetWithArray:(id)array copyItems:(BOOL)items;
+ (id)orderedSetWithArray:(id)array;
+ (id)orderedSetWithOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range copyItems:(BOOL)items;
+ (id)orderedSetWithOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (id)orderedSetWithOrderedSet:(id)set copyItems:(BOOL)items;
+ (id)orderedSetWithOrderedSet:(id)set;
+ (id)orderedSetWithSet:(id)set copyItems:(BOOL)items;
+ (id)orderedSetWithSet:(id)set;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (unsigned long long)indexOfObject:(id)object;
- (id)objectAtIndex:(unsigned long long)index;
- (BOOL)isNSOrderedSet__;
- (id)allObjects;
- (BOOL)containsObject:(id)object inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (BOOL)containsObject:(id)object;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
- (unsigned long long)countForObject:(id)object inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (unsigned long long)countForObject:(id)object;
- (void)enumerateObjectsAtIndexes:(id)indexes options:(unsigned long long)options usingBlock:(id /* block */)block;
- (void)enumerateObjectsWithOptions:(unsigned long long)options usingBlock:(id /* block */)block;
- (void)enumerateObjectsUsingBlock:(id /* block */)block;
- (id)firstObject;
- (void)getObjects:(id *)objects range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)getObjects:(id *)objects;
- (unsigned long long)indexOfObject:(id)object inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (unsigned long long)indexOfObject:(id)object inSortedRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range options:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (unsigned long long)indexOfObjectAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (unsigned long long)indexOfObjectWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (unsigned long long)indexOfObjectPassingTest:(id /* block */)test;
- (id)indexesOfObjectsAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (id)indexesOfObjectsWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (id)indexesOfObjectsPassingTest:(id /* block */)test;
- (BOOL)intersectsOrderedSet:(id)set;
- (BOOL)intersectsSet:(id)set;
- (BOOL)isSubsetOfOrderedSet:(id)set;
- (BOOL)isSubsetOfSet:(id)set;
- (id)lastObject;
- (id)objectAtIndexedSubscript:(unsigned long long)subscript;
- (id)objectAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (id)objectWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (id)objectPassingTest:(id /* block */)test;
- (id)objectsAtIndexes:(id)indexes;
- (id)objectsAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (id)objectsWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (id)objectsPassingTest:(id /* block */)test;
- (id)objectEnumerator;
- (id)reverseObjectEnumerator;
- (id)reversedOrderedSet;
- (id)sortedArrayFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range options:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (id)sortedArrayWithOptions:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (id)sortedArrayUsingComparator:(id /* block */)comparator;
- (id)array;
- (id)set;
- (id)descriptionWithLocale:(id)locale indent:(unsigned long long)indent;
- (id)descriptionWithLocale:(id)locale;
- (id)description;
- (unsigned long long)hash;
- (BOOL)isEqualToOrderedSet:(id)set;
- (BOOL)isEqual:(id)equal;
- (id)initWithObjects:(const id *)objects count:(unsigned long long)count;
- (id)initWithArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range copyItems:(BOOL)items;
- (id)initWithArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)initWithArray:(id)array copyItems:(BOOL)items;
- (id)initWithArray:(id)array;
- (id)initWithObject:(id)object;
- (id)initWithObjects:(id)objects;
- (id)initWithOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range copyItems:(BOOL)items;
- (id)initWithOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)initWithOrderedSet:(id)set copyItems:(BOOL)items;
- (id)initWithOrderedSet:(id)set;
- (id)initWithSet:(id)set copyItems:(BOOL)items;
- (id)initWithSet:(id)set;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
@end

#endif /* NSOrderedSet_h */
