//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef CFPDSource_h
#define CFPDSource_h
@import Foundation;

#include "CFPDDataBuffer.h"
#include "CFPrefsDaemon.h"

@class BOOL *;
@protocol OS_os_transaction, OS_xpc_object;

@interface CFPDSource : NSObject {
  /* instance variables */
  CFPrefsDaemon *_cfprefsd;
  CFPDDataBuffer *_plist;
  NSObject<OS_xpc_object> *_pendingChangesQueue;
  unsigned long long _pendingChangesSize;
  struct __CFString * _userName;
  struct __CFString * _domain;
  char * _actualPath;
  char * _fileName;
  struct __CFSet * _observingConnections;
  NSObject<OS_os_transaction> *_dirtyTransaction;
  struct __CFString * _uncanonicalizedPathCache;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _uncanonicalizedPathCacheLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _observingConnectionsLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _writeLock;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  unsigned int _plistFileOwner;
  unsigned int _lastEuid;
  unsigned int _lastEgid;
  int _fileProtectionClass;
  int _parentFD;
  int _cachedPlistFD;
  short _generationShmemIndex;
  BOOL _byHost;
  BOOL _managed;
  BOOL _managedUsesContainer;
  BOOL _watchingParentDirectory;
  unsigned int x :1 _handlingRequest;
  unsigned int x :1 _dirty;
  unsigned int x :1 _neverCache;
  unsigned int x :1 _checkedForNonPrefsPlist;
  unsigned int x :1 _restrictedReadability;
  unsigned int x :1 _waitingForDeviceUnlock;
  unsigned int x :1 _disableBackup;
  unsigned int x :1 _plistFileOwnerReadable;
  unsigned int x :1 _plistFileWorldReadable;
  unsigned int x :1 _actualPathRedirectedByTerminalSymlink;
}

/* instance methods */
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)cacheFileInfo;
- (int)cacheFileInfoForWriting:(BOOL)writing euid:(unsigned int)euid egid:(unsigned int)egid didCreate:(BOOL *)create;
- (struct __CFString *)copyUncanonicalizedPath;
- (void)setUncanonicalizedPathCached:(BOOL)cached;
- (id)initWithDomain:(struct __CFString *)domain userName:(struct __CFString *)name byHost:(BOOL)host managed:(BOOL)managed shmemIndex:(short)index daemon:(id)daemon;
- (BOOL)managed;
- (void)setManagedPreferencesUseContainer:(BOOL)container;
- (struct __CFString *)domain;
- (struct __CFString *)user;
- (struct __CFString *)container;
- (struct __CFString *)cloudConfigurationPath;
- (void)respondToFileWrittenToBehindOurBack;
- (BOOL)byHost;
- (id)description;
- (short)shmemIndex;
- (void)updateShmemEntry;
- (void)setDirty:(BOOL)dirty;
- (id /* block */)createDiskWrite;
- (void)handleWritingResult:(struct __CFDictionary *)result;
- (void)finishedNonRequestWriteWithResult:(struct __CFDictionary *)result;
- (void)syncWriteToDiskAndFlushCacheForReason:(struct __CFString *)reason;
- (void)syncWriteToDisk;
- (id)copyPropertyListWithoutDrainingPendingChangesValidatingPlist:(BOOL)plist andReturnFileUID:(unsigned int *)uid andMode:(unsigned short *)mode;
- (id)copyPropertyListValidatingPlist:(BOOL)plist;
- (void)asyncNotifyObserversOfWriteFromConnection:(id)connection message:(id)message;
- (void)observingConnectionWasInvalidated:(id)invalidated;
- (void)drainPendingChanges;
- (BOOL)enqueueNewKey:(id)key value:(id)value encoding:(int)encoding inBatch:(BOOL)batch fromMessage:(id)message;
- (struct __CFString *)debugDump;
- (void)clearCacheForReason:(struct __CFString *)reason;
- (void)lock;
- (void)unlock;
- (void)lockedAsync:(id /* block */)async;
- (void)lockedSync:(id /* block */)sync;
- (int)validateMessage:(id)message withNewKey:(id)key newValue:(id)value plistIsAvailableToRead:(BOOL)read containerPath:(const char *)path fileUID:(unsigned int)uid mode:(unsigned short)mode diagnosticMessage:(const char * *)message;
- (id)acceptMessage:(id)message;
- (void)processEndOfMessageIntendingToRemoveSource:(BOOL *)source replacingWithTombstone:(id *)tombstone;
- (void)cleanUpAfterAcceptingMessage:(id)message;
- (void)dealloc;
@end

#endif /* CFPDSource_h */
