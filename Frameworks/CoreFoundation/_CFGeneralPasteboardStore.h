//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef _CFGeneralPasteboardStore_h
#define _CFGeneralPasteboardStore_h
@import Foundation;

#include "_CFPasteboardStore.h"
#include "NSXPCListenerDelegate-Protocol.h"
#include "UAPasteboardClientProtocol-Protocol.h"
#include "_CFRemotePasteboardCache.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface _CFGeneralPasteboardStore : _CFPasteboardStore<NSXPCListenerDelegate, UAPasteboardClientProtocol> {
  /* instance variables */
  long long _localOnlyGeneration;
  _CFRemotePasteboardCache *_remotePasteboardCache;
  NSObject<OS_dispatch_queue> *_remotePasteboardNotificationQueue;
  unsigned long long _lastAccessTimestamp;
  unsigned long long _lastRemoteAvailableTimestamp;
  unsigned long long _timeout;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)generalPasteboard;

/* instance methods */
- (id)_initWithName:(struct __CFString *)name;
- (void)handleMakeGenerationLocal:(id)local;
- (void)handleNotifyHasEntries:(id)entries;
- (void)handleRegisterEntries:(id)entries;
- (void)handlePasteNotification;
- (void)setTimeout:(unsigned long long)timeout;
- (void)handleRefreshCache:(id)cache;
- (void)handleRequestData:(id)data;
- (void)_onqueue_notifyRemoteGenerationBecameAvailable:(unsigned char)available;
- (void)notifyRemoteGenerationBecameAvailable:(unsigned char)available;
- (long long)_onqueue_nextGenerationCount;
- (id)_onqueue_cacheForGeneration:(long long)generation;
- (void)_onqueue_handleNewEntries:(struct __CFArray *)entries forMessage:(id)message shouldInvalidateClientMetadata:(BOOL *)metadata;
- (void)dealloc;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)remotePasteboardAvailable:(BOOL)available;
- (void)pasteboardWillBeFetched:(id /* block */)fetched;
@end

#endif /* _CFGeneralPasteboardStore_h */
