//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef CFPrefsPlistSource_h
#define CFPrefsPlistSource_h
@import Foundation;

#include "CFPrefsSource.h"

@interface CFPrefsPlistSource : CFPrefsSource {
  /* instance variables */
  struct __CFString * userIdentifier;
  struct __CFString * domainIdentifier;
  struct __CFString * container;
  atomic struct __CFDictionary * _locallySetDict;
  atomic char * accessPath;
  atomic BOOL _isByHost;
  atomic BOOL _volatile;
  atomic BOOL _readonly;
  atomic BOOL _avoidsDaemonCache;
  atomic BOOL _restrictedAccess;
  atomic BOOL _checkedInvalidHome;
  atomic BOOL _lastWriteFailed;
  atomic BOOL _observing;
  atomic BOOL _byteCountLimitExceeded;
  atomic BOOL _directMode;
  atomic BOOL _disableBackup;
  atomic int _fileProtectionClass;
}

/* instance methods */
- (struct __CFString *)userIdentifier;
- (struct __CFString *)domainIdentifier;
- (struct __CFString *)container;
- (BOOL)isByHost;
- (id)initWithDomain:(struct __CFString *)domain user:(struct __CFString *)user byHost:(BOOL)host containerPath:(struct __CFString *)path containingPreferences:(id)preferences;
- (void)setBackupDisabled:(BOOL)disabled;
- (void)setFileProtectionClass:(int)class;
- (void)setAccessRestricted:(BOOL)restricted;
- (void)setDaemonCacheEnabled:(BOOL)enabled;
- (void *)alreadylocked_copyValueForKey:(struct __CFString *)key;
- (void *)copyValueForKey:(struct __CFString *)key;
- (struct __CFArray *)alreadylocked_copyKeyList;
- (struct __CFDictionary *)alreadylocked_copyDictionary;
- (void)alreadylocked_setPrecopiedValues:(const void * *)values forKeys:(const struct __CFString * *)keys count:(long long)count from:(id)from;
- (id)createSynchronizeMessage;
- (BOOL)isVolatile;
- (void)transitionIntoDirectModeIfNeededWithRetryBlock:(id /* block */)block;
- (BOOL)isDirectModeEnabled;
- (id)createRequestNewContentMessageForDaemon:(int)daemon;
- (void)handleReply:(id)reply toRequestNewDataMessage:(id)message onConnection:(id)connection retryCount:(int)count error:(BOOL *)error;
- (void)alreadylocked_clearCache;
- (BOOL)synchronize;
- (long long)alreadylocked_generationCount;
- (long long)generationCount;
- (int)alreadylocked_updateObservingRemoteChanges;
- (id)alreadylocked_createObserverUpdateMessageWithOperation:(int)operation forRole:(int *)role;
- (void)dealloc;
@end

#endif /* CFPrefsPlistSource_h */
