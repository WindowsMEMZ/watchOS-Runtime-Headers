//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSMutableArray_h
#define NSMutableArray_h
@import Foundation;

#include "NSArray.h"

@interface NSMutableArray : NSArray
/* class methods */
+ (id)arrayWithCapacity:(unsigned long long)capacity;

/* instance methods */
- (void)insertObject:(id)object atIndex:(unsigned long long)index;
- (void)removeObjectAtIndex:(unsigned long long)index;
- (void)replaceObjectAtIndex:(unsigned long long)index withObject:(id)object;
- (void)_mutate;
- (void)addObject:(id)object;
- (void)addObjects:(const id *)objects count:(unsigned long long)count;
- (void)addObjectsFromArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)addObjectsFromArray:(id)array;
- (void)addObjectsFromOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)addObjectsFromOrderedSet:(id)set;
- (void)addObjectsFromSet:(id)set;
- (void)exchangeObjectAtIndex:(unsigned long long)index withObjectAtIndex:(unsigned long long)index;
- (void)insertObjects:(const id *)objects count:(unsigned long long)count atIndex:(unsigned long long)index;
- (void)insertObjectsFromArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range atIndex:(unsigned long long)index;
- (void)insertObjectsFromArray:(id)array atIndex:(unsigned long long)index;
- (void)insertObjectsFromOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range atIndex:(unsigned long long)index;
- (void)insertObjectsFromOrderedSet:(id)set atIndex:(unsigned long long)index;
- (void)insertObjectsFromSet:(id)set atIndex:(unsigned long long)index;
- (void)insertObjects:(id)objects atIndexes:(id)indexes;
- (void)moveObjectsAtIndexes:(id)indexes toIndex:(unsigned long long)index;
- (void)removeAllObjects;
- (void)removeFirstObject;
- (void)removeLastObject;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeObject:(id)object inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeObject:(id)object;
- (void)removeObjectIdenticalTo:(id)to inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeObjectIdenticalTo:(id)to;
- (void)removeObjectsAtIndexes:(id)indexes;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range inArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range inArray:(id)array;
- (void)removeObjectsInArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeObjectsInArray:(id)array;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range inOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range inOrderedSet:(id)set;
- (void)removeObjectsInOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeObjectsInOrderedSet:(id)set;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range inSet:(id)set;
- (void)removeObjectsInSet:(id)set;
- (void)removeObjectsAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (void)removeObjectsWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (void)removeObjectsPassingTest:(id /* block */)test;
- (void)replaceObject:(id)object inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)replaceObject:(id)object;
- (void)replaceObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withObjects:(const id *)objects count:(unsigned long long)count;
- (void)replaceObjectsAtIndexes:(id)indexes withObjects:(id)objects;
- (void)replaceObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withObjectsFromArray:(id)array range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)replaceObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withObjectsFromArray:(id)array;
- (void)replaceObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withObjectsFromOrderedSet:(id)set range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)replaceObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withObjectsFromOrderedSet:(id)set;
- (void)replaceObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range withObjectsFromSet:(id)set;
- (void)setObject:(id)object atIndex:(unsigned long long)index;
- (void)setObject:(id)object atIndexedSubscript:(unsigned long long)subscript;
- (void)setArray:(id)array;
- (id)sortedArrayFromRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range options:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (void)setOrderedSet:(id)set;
- (void)setSet:(id)set;
- (void)sortRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range options:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (void)sortWithOptions:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (void)sortUsingComparator:(id /* block */)comparator;
- (void)sortUsingFunction:(undefined *)function context:(void *)context;
- (void)sortUsingFunction:(undefined *)function context:(void *)context range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)sortUsingSelector:(SEL)selector;
- (id)initWithCapacity:(unsigned long long)capacity;
- (id)initWithObjects:(const id *)objects count:(unsigned long long)count;
- (id)arrayByAddingObjectsFromArray:(id)array;
@end

#endif /* NSMutableArray_h */
