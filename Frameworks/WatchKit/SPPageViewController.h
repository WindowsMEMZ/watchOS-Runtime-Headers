//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.2.0.0
//
#ifndef SPPageViewController_h
#define SPPageViewController_h
@import Foundation;

#include "UIViewController.h"
#include "SPInterfaceViewControllerDelegate-Protocol.h"
#include "SPInterfaceViewControllerPreloadDelegate-Protocol.h"
#include "SPPageCompatibility-Protocol.h"
#include "SPPageViewControllerDelegate-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSMutableSet, NSString, PUICPageIndicatorView, PUICPagedScrollViewNotchProvider, PUICStatusBarCubicTitleView, UIScrollView;

@interface SPPageViewController : UIViewController<UIScrollViewDelegate, SPInterfaceViewControllerPreloadDelegate, SPPageCompatibility>

@property (retain, nonatomic) UIScrollView *scrollView;
@property (nonatomic) BOOL vertical;
@property (nonatomic) double lastVerticalModeContentOffsetYForTransforms;
@property (nonatomic) long long lastVerticalModePageTitleUpdated;
@property (nonatomic) BOOL hasAppeared;
@property (copy, nonatomic) id /* block */ didAppearCompletion;
@property (readonly, nonatomic) PUICStatusBarCubicTitleView *verticalModeCubicTitleView;
@property (nonatomic) BOOL needsContentOffsetUpdate;
@property (retain, nonatomic) NSMutableSet *controllersActivatedButNotLoaded;
@property (retain, nonatomic) NSMutableArray *pageVCsToPreload;
@property (nonatomic) double topContentInset;
@property (nonatomic) double bottomContentInset;
@property (retain, nonatomic) PUICPagedScrollViewNotchProvider *notchProvider;
@property (weak, nonatomic) NSObject<SPInterfaceViewControllerDelegate> *vcdelegate;
@property (weak, nonatomic) NSObject<SPPageViewControllerDelegate> *pageVCDelegate;
@property (copy, nonatomic) NSArray *viewControllers;
@property (copy, nonatomic) NSArray *pageContextIDs;
@property (readonly, nonatomic) PUICPageIndicatorView *pageControl;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initForModalPresentation;
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (void)dealloc;
- (double)pageControlDisplayHeight;
- (BOOL)shouldAutomaticallyForwardAppearanceMethods;
- (void)viewDidLoad;
- (void)replaceViewController:(id)controller withViewController:(id)controller;
- (void)_setupViewController:(id)controller;
- (struct CGPoint { double x0; double x1; })_contentsOffsetForPage:(long long)page;
- (long long)_indexForContentsOffset;
- (void)viewDidLayoutSubviews;
- (void)setCurrentViewControllerAtIndex:(long long)index animated:(BOOL)animated;
- (long long)currentViewControllerIndex;
- (void)updateTitleForVisiblePage;
- (void)updateCurrentPage;
- (void)updateVisiblePages;
- (void)updatePagingScrollTransforms;
- (id)topScrollViewForViewController:(id)controller;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (BOOL)prefersStatusBarHidden;
- (void)setNeedsStatusBarAppearanceUpdate;
- (void)viewWillAppear:(BOOL)appear;
- (void)_handleViewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)_handleViewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)willMoveToParentViewController:(id)controller;
- (void)didMoveToParentViewController:(id)controller;
- (void)_applicationDidBecomeActive:(id)active;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (void)scrollViewDidScrollToTop:(id)top;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)_scrollViewDidScroll;
- (void)didReceiveMemoryWarning;
- (void)_tryToUnloadFurthestPreloadedPages;
- (void)_unloadFurthestPreloadedPages;
- (id)framesAndControllersForPageViews;
- (void)setupPagesPreloading;
- (void)setTitle:(id)title;
- (void)interfaceViewControllerDidActivate:(id)activate;
- (void)interfaceViewControllerDidLoad:(id)load;
- (BOOL)isVertical;
@end

#endif /* SPPageViewController_h */
