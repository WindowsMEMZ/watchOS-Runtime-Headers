//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.2.0.0
//
#ifndef SPApplicationDelegate_h
#define SPApplicationDelegate_h
@import Foundation;

#include "AVAudioRecorderViewControllerDelegate-Protocol.h"
#include "NPKAddPassesViewControllerDelegate-Protocol.h"
#include "PUICActionSheetControllerDelegate-Protocol.h"
#include "PUICSnapshotDelegate-Protocol.h"
#include "SPExtensionConnection.h"
#include "SPExtensionConnectionDelegate-Protocol.h"
#include "SPHostingViewControllerDelegate-Protocol.h"
#include "SPInterfaceViewControllerDelegate-Protocol.h"
#include "SPMediaPlayerViewController.h"
#include "SPMediaPlayerViewControllerDelegate-Protocol.h"
#include "SPPageViewControllerDelegate-Protocol.h"
#include "SPViewController.h"
#include "SPViewControllerDelegate-Protocol.h"
#include "UIApplicationDelegate-Protocol.h"
#include "UINavigationControllerDelegate-Protocol.h"
#include "UNUserNotificationCenterDelegate-Protocol.h"

@class AVAudioRecorderViewController, BOOL *, CSLSActivatingUIAssertion, NPKAddPassesViewController, NSDictionary, NSMutableDictionary, NSString, NSTimer, UIColor, UIView, UIViewController, UIWindow;
@protocol OS_dispatch_source, OS_os_transaction, UIViewController<SPPageCompatibility;

@interface SPApplicationDelegate : NSObject<SPInterfaceViewControllerDelegate, SPHostingViewControllerDelegate, SPExtensionConnectionDelegate, PUICActionSheetControllerDelegate, NPKAddPassesViewControllerDelegate, SPMediaPlayerViewControllerDelegate, AVAudioRecorderViewControllerDelegate, PUICSnapshotDelegate, UNUserNotificationCenterDelegate, SPPageViewControllerDelegate, UINavigationControllerDelegate, SPViewControllerDelegate, UIApplicationDelegate>

@property (retain, nonatomic) NSMutableDictionary *pendingBSActions;
@property (weak, nonatomic) SPViewController *pendingBSRefreshActionViewController;
@property (nonatomic) BOOL pendingBSRefreshPrevDeferTransitions;
@property (weak, nonatomic) SPViewController *pendingBSSnapshotActionViewController;
@property (nonatomic) BOOL pendingBSSnapshotPrevDeferTransitions;
@property (copy, nonatomic) id /* block */ pendingBSSnapshotCallback;
@property (weak, nonatomic) SPViewController *pendingBSURLSessionActionViewController;
@property (nonatomic) BOOL pendingBSURLSessionPrevDeferTransitions;
@property (copy, nonatomic) id /* block */ pendingBSURLSessionCallback;
@property (retain, nonatomic) SPMediaPlayerViewController *mediaPlayerViewController;
@property (copy, nonatomic) NSString *mediaPlayerViewControllerClientIdentifier;
@property (retain, nonatomic) NSTimer *mediaPlayerViewControllerBacklightAssertionTimer;
@property (retain, nonatomic) AVAudioRecorderViewController *audioRecorderViewController;
@property (copy, nonatomic) NSString *audioRecorderViewControllerClientIdentifier;
@property (retain, nonatomic) NSTimer *audioRecorderViewControllerBacklightAssertionTimer;
@property (retain, nonatomic) NPKAddPassesViewController *addPassesViewController;
@property (nonatomic) BOOL launchedWithOptions;
@property (nonatomic) BOOL launchedFromNotification;
@property (nonatomic) double busyDisplayTime;
@property (retain, nonatomic) UIView *busyView;
@property (retain, nonatomic) NSMutableDictionary *stickySessionIDs;
@property (nonatomic) BOOL launchedByXcode;
@property (copy, nonatomic) id /* block */ didBecomeActiveCallback;
@property (nonatomic) BOOL inSuspendedLaunch;
@property (nonatomic) BOOL didLaunchSuspended;
@property BOOL hasReceivedDidFinishLaunching;
@property (nonatomic) BOOL launchedSuspendedNotInDock;
@property (nonatomic) BOOL rootViewControllerHasLoaded;
@property (retain, nonatomic) NSObject<OS_os_transaction> *appActiveTransaction;
@property (retain, nonatomic) CSLSActivatingUIAssertion *activatingUIAssertion;
@property (retain, nonatomic) NSObject<OS_dispatch_source> *activatingAssertionTimer;
@property (nonatomic) BOOL waitingForHandleActivityReply;
@property (nonatomic) BOOL waitingForHandleActivityViewControllerActivation;
@property (copy, nonatomic) id /* block */ alertSheetCancelAction;
@property (retain, nonatomic) NSDictionary *interfaceDescription;
@property (retain) SPExtensionConnection *extensionConnection;
@property (retain, nonatomic) UIColor *applicationColor;
@property (copy, nonatomic) NSString *stringsFileName;
@property (retain, nonatomic) UIViewController<SPPageCompatibility> *pageViewController;
@property BOOL hasReceivedNonClockKitEvent;
@property (retain, nonatomic) UIViewController *effectiveRootViewController;
@property (weak, nonatomic) SPViewController *initialViewController;
@property (retain, nonatomic) UIWindow *window;
@property (nonatomic) BOOL displayingFirstUnlockScreen;
@property (readonly, nonatomic) BOOL holdingActivatingAssertion;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)_runTimingWithOptions:(id)options;
- (void)_getIntegerValue:(long long *)value forKey:(id)key fromDictionary:(id)dictionary;
- (void)_getDoubleValue:(double *)value forKey:(id)key fromDictionary:(id)dictionary;
- (void)_getBoolValue:(BOOL *)value forKey:(id)key fromDictionary:(id)dictionary;
- (void)_doneTiming;
- (double)_computeAverageTotalTime;
- (double)_computeAverageIDSTime;
- (double)_computeMinTotalTime;
- (double)_computeMaxTotalTime;
- (void)_Marco;
- (void)_PoloSetValue:(id)value forKey:(id)key property:(id)property;
- (void)runTimingWithOptions:(id)options;
- (void)applicationWillSuspendUnderLock;
- (void)applicationWillSuspend:(id)suspend;
- (void)applicationWillEnterForeground:(id)foreground;
- (void)applicationDidEnterBackground:(id)background;
- (BOOL)application:(id)application willFinishLaunchingWithOptions:(id)options;
- (void)application:(id)application didFinishLaunchingSuspendedWithOptions:(id)options;
- (BOOL)application:(id)application didFinishLaunchingWithOptions:(id)options;
- (void)_terminateWK1App:(id)app;
- (id)_accentColorFromApplicationBundle;
- (BOOL)application:(id)application _didFinishLaunchingWithOptions:(id)options;
- (id)createViewControllerWithInterfaceDescription:(id)description initializationContextID:(id)id;
- (BOOL)_animateViewControllerPresentations;
- (void)applicationDidBecomeActive:(id)active;
- (void)applicationWillResignActive:(id)active;
- (void)_exitApplicationNicely;
- (id)primaryApplicationColor;
- (BOOL)application:(id)application openURL:(id)url options:(id)options;
- (void)appBeginWorkout:(id)workout;
- (void)appRecoverWorkout;
- (void)appAudioLaunch;
- (void)appHandleNSUserActivity:(id)activity;
- (void)application:(id)application handleIntent:(id)intent completionHandler:(id /* block */)handler;
- (id)application:(id)application handlerForIntent:(id)intent;
- (BOOL)application:(id)application continueUserActivity:(id)activity restorationHandler:(id /* block */)handler;
- (void)_handleNotificationResponse:(id)response actionItemID:(id)id isFGAction:(BOOL)fgaction annotation:(id)annotation completionHandler:(id /* block */)handler;
- (void)application:(id)application didRegisterForRemoteNotificationsWithDeviceToken:(id)token;
- (void)application:(id)application didFailToRegisterForRemoteNotificationsWithError:(id)error;
- (void)application:(id)application didReceiveRemoteNotification:(id)notification fetchCompletionHandler:(id /* block */)handler;
- (id)application:(id)application configurationForConnectingSceneSession:(id)session options:(id)options;
- (void)application:(id)application didDiscardSceneSessions:(id)sessions;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller setValue:(id)value forKey:(id)key property:(id)property;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller pushViewController:(id)controller initializationContextID:(id)id;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller pushInterfaceController:(id)controller initializationContextID:(id)id willPush:(id /* block */)push;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller pushInterfaceControllerClass:(Class)class willPush:(id /* block */)push;
- (void)_extensionConnection:(id)connection interfaceViewController:(id)controller pushViewController:(id)controller willPush:(id /* block */)push;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller setUnderlyingUIHostingController:(id)controller;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller pushPagingScrollTableRow:(long long)row seguesByRowName:(id)name rowNamesAndContextIDs:(id)ids;
- (void)extensionConnection:(id)connection interfaceViewControllerPopViewController:(id)controller;
- (void)extensionConnection:(id)connection interfaceViewControllerPopToRootViewController:(id)controller completion:(id /* block */)completion;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller scrollToObject:(id)object atScrollPosition:(id)position animated:(id)animated;
- (void)extensionConnection:(id)connection interfaceViewControllerBecomeCurrentPageViewController:(id)controller;
- (void)extensionConnection:(id)connection reloadRootInterfaceViewControllersWithNames:(id)names initializationContextIDs:(id)ids pageIndex:(id)index verticalPaging:(id)paging;
- (void)extensionConnection:(id)connection insertRootInterfaceViewControllerWithNames:(id)names atIndexes:(id)indexes initializationContextIDs:(id)ids;
- (void)extensionConnection:(id)connection moveRootInterfaceViewControllerAtIndex:(long long)index toIndex:(long long)index;
- (void)extensionConnection:(id)connection removeRootInterfaceViewControllerAtIndexes:(id)indexes;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller presentViewController:(id)controller info:(id)info initializationContextID:(id)id;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller presentInterfaceControllerClass:(Class)class willPresent:(id /* block */)present didDismiss:(id /* block */)dismiss;
- (BOOL)_interfaceDescriptionContainsOnlyTable:(id)table;
- (void)addPassesViewControllerDidFinish:(id)finish withAddPassData:(id)data;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller presentViewControllers:(id)controllers initializationContextIDs:(id)ids;
- (void)extensionConnection:(id)connection interfaceViewControllerDismissViewController:(id)controller;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller setupDynamicInterfaceObject:(id)object completion:(id /* block */)completion;
- (void)extensionConnection:(id)connection interfaceViewController:(id)controller removeDynamicInterfaceObject:(id)object;
- (void)extensionConnection:(id)connection didReceiveUserActivityDict:(id)dict;
- (void)extensionConnection:(id)connection didReceiveUserActivity:(id)activity;
- (void)extensionConnection:(id)connection openSystemURL:(id)url;
- (void)extensionConnection:(id)connection handleActivityReply:(id)reply;
- (void)installGestureRecognizersForInterfaceViewController:(id)controller;
- (void)updateGestureRecognizerForInterfaceViewController:(id)controller gestureReplyData:(id)data;
- (void)updateCrownSequencerForInterfaceViewController:(id)controller crownReplyData:(id)data;
- (void)extensionDidTerminate:(id)terminate;
- (void)gizmoDaemonDidTerminate:(id)terminate;
- (void)extensionGotUnknownControllerID:(id)id;
- (void)extensionConnectionApplicationBeginBackgroundUIUpdate:(id)uiupdate;
- (void)extensionConnectionApplicationDidEndSuspendedLaunch:(id)launch;
- (void)extensionConnection:(id)connection receivedPPTTestAction:(id)action;
- (void)viewController:(id)controller createWKInterfaceControllerClass:(id)class properties:(id)properties contextID:(id)id creationCompletion:(id /* block */)completion;
- (void)viewControllerDidRelease:(id)release;
- (void)viewControllerWillActivate:(id)activate;
- (void)interfaceViewControllerDidActivate:(id)activate;
- (void)viewControllerDidDeactivate:(id)deactivate;
- (void)viewControllerDidAppear:(id)appear;
- (void)viewControllerWillDisappear:(id)disappear;
- (void)viewController:(id)controller tappedActionWithUUID:(id)uuid;
- (void)interfaceDidScrollToTop:(id)top;
- (void)interfaceOffsetDidScrollToTop:(id)top;
- (void)interfaceOffsetDidScrollToBottom:(id)bottom;
- (void)interfaceContentSafeAreaInsets:(id)insets withValue:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })value;
- (void)interfaceContentSystemMinimumLayoutMargins:(id)margins withValue:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })value;
- (void)interfaceDidEndScrollingAnimation:(id)animation;
- (void)interfaceViewControllerPurgeAndRecreate:(id)recreate;
- (void)viewControllerDidDisappearAfterModalPresentation:(id)presentation;
- (void)viewControllerDidAppearAfterModalDismissal:(id)dismissal;
- (void)appWithRootInterfaceViewController:(id)controller performActionWithItemID:(id)id forNotificationID:(id)id userInfo:(id)info completionHandler:(id /* block */)handler;
- (void)viewController:(id)controller sendAction:(id)action withValue:(id)value actionTarget:(id)target;
- (void)interfaceViewController:(id)controller setValue:(id)value forKey:(id)key;
- (id)interfaceControllerForViewController:(id)controller;
- (void)xpcInterfaceViewController:(id)controller gestureData:(id)data;
- (void)viewController:(id)controller crownData:(id)data;
- (void)mediaPlayerViewController:(id)controller didPlayToEnd:(BOOL)end endTime:(double)time error:(id)error;
- (void)mediaPlayerViewControllerRequestsBacklightAssertionCreate:(id)create;
- (void)mediaPlayerViewControllerRequestsBacklightAssertionRelease:(id)release;
- (void)fireMediaPlayerViewControllerBacklightAssertionTimer:(id)timer;
- (void)audioRecorderViewControllerDidCancel:(id)cancel;
- (void)audioRecorderViewControllerDidFinish:(id)finish;
- (void)audioRecorderViewController:(id)controller didFailWithError:(id)error;
- (void)audioRecorderViewControllerRequestsBacklightAssertionCreate:(id)create;
- (void)audioRecorderViewControllerRequestsBacklightAssertionRelease:(id)release;
- (void)fireAudioRecorderViewControllerBacklightAssertionTimer:(id)timer;
- (id)actionItemsForHostingViewController:(id)controller;
- (id)underlyingUIHostingControllerForHostingViewController:(id)controller;
- (void)_beginHandleActivityAssertion:(BOOL)assertion;
- (void)_endHandleActivityAssertion;
- (void)_releaseActivityAssertion;
- (void)_showBusyIndicator;
- (void)_showBusyScreen;
- (void)_clearBusy;
- (void)_startActivatingAssertionTimer;
- (void)_cancelActivatingAssertionTimer;
- (id)prepareTaskKeysForActions:(id)actions outUUIDs:(id)uuids outLowBudget:(BOOL *)budget;
- (id)visibleViewControllerID;
- (void)application:(id)application handleEventsForBackgroundURLSession:(id)urlsession completionHandler:(id /* block */)handler;
- (void)prepareForSnapshotWithReason:(unsigned long long)reason userInfo:(id)info completion:(id /* block */)completion;
- (void)handleWatchActions:(id)actions completion:(id /* block */)completion;
- (void)didReceiveNonClockKitEvent;
- (void)rootViewControllerDidLoad;
- (void)didReceiveSceneRestorationActivity:(id)activity;
- (void)didFinishHandlingBackgroundSnapshotTask:(BOOL)task glanceableUI:(BOOL)ui staleDate:(id)date userInfoUUID:(id)uuid barTaskUUID:(id)uuid completion:(id /* block */)completion;
- (void)_didFinishHandlingBackgroundSnapshotTask:(BOOL)task glanceableUI:(BOOL)ui staleDate:(id)date userInfoUUID:(id)uuid barTaskUUID:(id)uuid completion:(id /* block */)completion;
- (void)didFinishHandlingBackgroundTask:(id)task refreshSnapshot:(BOOL)snapshot barTaskUUID:(id)uuid completion:(id /* block */)completion;
- (void)updateAppStateInactiveIfRunningInDock:(BOOL)dock;
- (void)_updateAppState:(long long)state;
- (void)userNotificationCenter:(id)center willPresentNotification:(id)notification withCompletionHandler:(id /* block */)handler;
- (void)userNotificationCenter:(id)center didReceiveNotificationResponse:(id)response withCompletionHandler:(id /* block */)handler;
- (void)pageViewControllerWillGoAway:(id)away;
- (void)_coordinateTransitionToViewController:(id)controller inNavigationController:(id)controller animated:(BOOL)animated;
- (void)navigationController:(id)controller willShowViewController:(id)controller animated:(BOOL)animated;
- (void)viewControllerDidUpdateFullScreen:(id)screen;
- (BOOL)runTest:(id)test options:(id)options;
- (id)extendLaunchTest;
- (BOOL)isWaitingForHandleActivityReply;
- (BOOL)isWaitingForHandleActivityViewControllerActivation;
@end

#endif /* SPApplicationDelegate_h */
