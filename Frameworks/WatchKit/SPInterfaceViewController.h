//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.2.0.0
//
#ifndef SPInterfaceViewController_h
#define SPInterfaceViewController_h
@import Foundation;

#include "SPViewController.h"
#include "SPActivatingView.h"
#include "SPActivatingViewDelegate-Protocol.h"
#include "SPAutoPlayManager.h"
#include "SPIBContainerView.h"
#include "SPIBOuterScrollView.h"
#include "SPInterfaceDelegate-Protocol.h"
#include "SPInterfaceGroupView.h"
#include "SPInterfaceViewControllerDelegate-Protocol.h"
#include "SPInterfaceViewControllerPreloadDelegate-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"

@class NSArray, NSDate, NSMutableArray, NSString, NSURL, PUICButton, PUICDeepScrollViewNotchProvider, UIColor, UIImage, UIImageView, UILabel;

@interface SPInterfaceViewController : SPViewController<SPActivatingViewDelegate, UIScrollViewDelegate, SPInterfaceDelegate> {
  /* instance variables */
  NSArray *_respondersForCrownInputFocus;
}

@property (retain, nonatomic) SPInterfaceGroupView *rootGroupView;
@property (nonatomic) BOOL fullBoundsEnabled;
@property (retain, nonatomic) NSString *UUID;
@property (retain, @dynamic, nonatomic) NSArray *properties;
@property (copy, nonatomic) NSString *bundleID;
@property (nonatomic) long long overrideSemanticContentAttribute;
@property (@dynamic, nonatomic) BOOL fullScreenModeEnabled;
@property (@dynamic, nonatomic) BOOL containsNowPlayingView;
@property (retain, nonatomic) NSMutableArray *interfaceItemValueCache;
@property (retain, nonatomic) SPActivatingView *activatingView;
@property (nonatomic) BOOL hasLoaded;
@property (nonatomic) BOOL displaysLoadingIndicator;
@property (retain, nonatomic) NSDate *lastUpdatedDate;
@property (nonatomic) BOOL isActivating;
@property BOOL preloading;
@property BOOL alwaysBounceScrollView;
@property (retain, nonatomic) UIImageView *simulatorNotificationSash;
@property (retain, nonatomic) PUICButton *simulatorNotificationDismissButton;
@property (retain, nonatomic) SPIBOuterScrollView *simulatorNotificationScrollView;
@property (retain, nonatomic) UILabel *simulatorNotificationTimeLabel;
@property (weak, nonatomic) SPIBContainerView *ibContainerView;
@property (nonatomic) BOOL isInInterfaceBuilder;
@property (nonatomic) BOOL firstLayout;
@property (retain, nonatomic) NSMutableArray *gestureRecognizers;
@property (retain, nonatomic) SPAutoPlayManager *autoplayManager;
@property (retain, nonatomic) PUICDeepScrollViewNotchProvider *notchProvider;
@property (weak, @dynamic, nonatomic) NSObject<SPInterfaceViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<SPInterfaceViewControllerPreloadDelegate> *vcPreloadDelegate;
@property (nonatomic) BOOL isNotificationLinkedOnOrAfterGlory;
@property (nonatomic) BOOL isNotificationLinkedOnOrAfterWatchOS10;
@property (nonatomic) BOOL isGlanceInIB;
@property (nonatomic) BOOL isVerticalPage;
@property (retain, nonatomic) NSArray *simulatorNotificationButtonsInfo;
@property (retain, nonatomic) UIImage *simulatorNotificationAppIcon;
@property (retain, nonatomic) NSString *simulatorNotificationAppName;
@property (retain, nonatomic) UIColor *customNotificationSashColor;
@property (retain, nonatomic) UIColor *customNotificationTitleColor;
@property (copy, nonatomic) NSString *staticNotificationAlertLabelText;
@property (copy, nonatomic) NSString *staticNotificationTitleLabelText;
@property (copy, nonatomic) NSString *staticNotificationSubtitleLabelText;
@property (copy, nonatomic) NSURL *staticNotificationAttachmentURL;
@property (nonatomic) long long staticNotificationAttachmentType;
@property (nonatomic) BOOL customNotificationWantsHeaderBlur;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentFrame;
@property (nonatomic) BOOL classicMode;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } contentFrameInsets;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (void)updateStaticValues;

/* instance methods */
- (id)initWithInterfaceDescription:(id)description bundle:(id)bundle stringsFileName:(id)name isNotification:(BOOL)notification;
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (id)initWithCoder:(id)coder;
- (void)dealloc;
- (long long)puic_statusBarPlacement;
- (id)_puic_statusBarPlacementOverrideWithView:(id)view;
- (void)didRecieveContentSizeDidChangeNotification:(id)notification;
- (id)notificationSashContentView;
- (struct CGSize { double x0; double x1; })sizeThatFitsFromRootGroupView:(struct CGSize { double x0; double x1; })view;
- (void)setStaticNotificationAttachmentURL:(id)url ofType:(long long)type completion:(id /* block */)completion;
- (void)createSimulatorNotificationButtonsInView:(id)view;
- (BOOL)prefersStatusBarHidden;
- (BOOL)canProvideActionController;
- (id)_scrollView;
- (id)_rootView;
- (void)loadView;
- (BOOL)_interfaceDescriptionContainsNowPlayingControl:(id)control;
- (BOOL)_interfaceDescriptionContainsOnlyTable:(id)table;
- (id)_enforceOnlyNowPlayingControlInThisControllerIterfaceDescription:(id)description;
- (void)_loadRemoteNowPlayingViewController;
- (BOOL)allowsFullScreenMode;
- (void)controllerDidUpdateFullScreenMode;
- (BOOL)traverseHierarchyForSpriteOrScene:(id)scene;
- (void)viewDidLoad;
- (BOOL)preloadInterface;
- (void)applicationWillResignActive;
- (void)applicationDidBecomeActive;
- (void)_preloadInterface;
- (void)_finishedPreloading;
- (void)_cancelPreloading;
- (void)_preloadingCanceled;
- (void)controllerDidAppear;
- (void)controllerWillActivate;
- (void)performBlockWhenDoneLoading:(id /* block */)loading;
- (void)_showLoadingView;
- (void)_hideLoadingView;
- (void)cleanupActivatingView;
- (void)_interfaceDidActivate;
- (void)_glanceUpdated;
- (void)_applicationWillEnterForeground:(id)foreground;
- (void)viewWillAppear:(BOOL)appear;
- (BOOL)_requiresVerticalScrolling;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)willMoveToParentViewController:(id)controller;
- (void)didMoveToParentViewController:(id)controller;
- (void)viewWillLayoutSubviews;
- (void)viewDidLayoutSubviews;
- (void)prepareInterfaceForIB;
- (void)updateIBDismissButtonFrame;
- (void)setInterfaceValue:(id)value forKey:(id)key property:(id)property;
- (void)purgeAndRecreate;
- (id)checkView:(id)view forCompanionProperty:(id)property;
- (void)action:(id)action value:(id)value;
- (void)performAction:(id)action withValue:(id)value;
- (void)setValue:(id)value forKey:(id)key;
- (void)interfaceGroupViewDidAdjustHeight:(id)height;
- (void)activatingViewWillShow:(id)show;
- (void)activatingViewDidHide:(id)hide;
- (id)parentViewForActivatingView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForActivatingView:(id)view;
- (long long)activatingViewLoadingMode;
- (id)appNameForActivatingView:(id)view;
- (id)lastUpdatedDateForActivatingView:(id)view;
- (id)_getActivatingView;
- (id)_appName;
- (BOOL)_lastUpdatedDateExceedsMinimum;
- (void)_dismissCompanionLockedScreen;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewDidScrollToTop:(id)top;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (void)updateInterfaceContentSafeAreaInsets;
- (void)updateInterfaceContentSystemMinimumLayoutMargins;
- (void)updateFullBounds;
- (void)_storeGestureRecognizerData:(id)data;
- (id)_lookupGestureRecognizerData:(id)data;
- (id)_lookupGestureRecognizerDataByIdentifier:(id)identifier;
- (void)installGestureRecognizersForViewController;
- (void)_recursivelyInstallGesturesForGroupView:(id)view;
- (void)_installGestureRecognizersForGroupView:(id)view;
- (id)_addGestureRecognizer:(id)recognizer gestureRecognizersDesc:(id)desc;
- (id)_createTapRecognizerWithDesc:(id)desc;
- (id)_createLongPressRecognizerWithDesc:(id)desc;
- (id)_createSwipeRecognizerWithDesc:(id)desc;
- (id)_createPanRecognizerWithDesc:(id)desc;
- (id)_specificDataFromTapRecognizer:(id)recognizer;
- (id)_specificDataFromLongPressRecognizer:(id)recognizer;
- (id)_specificDataFromSwipeRecognizer:(id)recognizer;
- (id)_specificDataFromPanRecognizer:(id)recognizer;
- (void)_tapGestureHandler:(id)handler;
- (void)_longPressGestureHandler:(id)handler;
- (void)_panGestureHandler:(id)handler;
- (void)_swipeGestureHandler:(id)handler;
- (void)updateGestureRecognizerWithData:(id)data;
- (void)_updateBaseGestureRecognizer:(id)recognizer gestureReplyData:(id)data;
- (void)_updateTapGestureRecognizer:(id)recognizer gestureReplyData:(id)data;
- (void)_updatePanGestureRecognizer:(id)recognizer gestureReplyData:(id)data;
- (void)_updateLongPressGestureRecognizer:(id)recognizer gestureReplyData:(id)data;
- (void)_updateSwipeGestureRecognizer:(id)recognizer gestureReplyData:(id)data;
- (void)_sendGestureData:(id)data task:(id)task specificData:(id)data;
- (BOOL)isPreloading;
@end

#endif /* SPInterfaceViewController_h */
