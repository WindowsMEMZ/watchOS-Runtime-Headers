//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2000.2.2.0.0
//
#ifndef SPExtensionRemoteProtocol_Protocol_h
#define SPExtensionRemoteProtocol_Protocol_h
@import Foundation;

@protocol SPExtensionRemoteProtocol <NSObject>
/* instance methods */
- (void)interfaceViewController:(id)controller crownData:(id)data;
- (void)interfaceViewController:(id)controller gestureData:(id)data;
- (void)receiveDataFromApplication:(id)application fromIdentifier:(id)identifier;
- (void)receivePlist:(id)plist fromIdentifier:(id)identifier;
- (void)appRecoverAnyExtendedRuntimeSession:(BOOL)session;
- (void)appHandleWatchTasks:(id)tasks taskUUIDs:(id)uuids reasonForSnapshot:(unsigned long long)snapshot visibleVCID:(id)vcid barTaskUUID:(id)uuid clientIdentifier:(id)identifier lowBudget:(BOOL)budget;
- (void)appBackgroundTasksWillExpireWithUUID:(id)uuid completionHandler:(id /* block */)handler;
- (void)didActivateDataConnection:(id)connection;
- (void)willDeactivateDataConnection:(id)connection;
- (void)didRegisterForRemoteNotificationsWithDeviceToken:(id)token clientIdentifier:(id)identifier;
- (void)didFailToRegisterForRemoteNotificationsWithError:(id)error clientIdentifier:(id)identifier;
- (void)didReceiveRemoteNotification:(id)notification clientIdentifier:(id)identifier fetchCompletionHandler:(id /* block */)handler;
- (void)createViewController:(id)controller className:(id)name properties:(id)properties contextID:(id)id info:(id)info gestureDescriptions:(id)descriptions clientIdentifier:(id)identifier interfaceControllerCreationCompletion:(id /* block */)completion;
- (void)releaseViewController:(id)controller clientIdentifier:(id)identifier;
- (void)activateViewController:(id)controller clientIdentifier:(id)identifier;
- (void)deactivateViewController:(id)controller clientIdentifier:(id)identifier;
- (void)didAppearViewController:(id)controller clientIdentifier:(id)identifier;
- (void)willDisappearViewController:(id)controller clientIdentifier:(id)identifier;
- (void)didDisappearAfterModalPresentationViewController:(id)controller clientIdentifier:(id)identifier;
- (void)didAppearAfterModalDismissalViewController:(id)controller clientIdentifier:(id)identifier;
- (void)receiveNavigationReply:(id)reply clientIdentifier:(id)identifier;
- (void)rootInterfaceController:(id)controller performActionWithItemID:(id)id forNotificationID:(id)id userInfo:(id)info clientIdentifier:(id)identifier completionHandler:(id /* block */)handler;
- (void)receiveNativeComplicationRequest:(id)request completion:(id /* block */)completion;
- (void)requestNotificationViewServiceForHost:(id)host hostID:(id)id clientIdentifier:(id)identifier bulletinUniqueID:(id)id classicMode:(BOOL)mode completion:(id /* block */)completion;
- (void)requestNotificationInterfaceDescriptionForCategory:(id)category hostID:(id)id clientIdentifier:(id)identifier bulletinUniqueID:(id)id classicMode:(BOOL)mode completion:(id /* block */)completion;
- (void)receiveAdditionalNotificationViewController:(id)controller notification:(id)notification;
- (void)interfaceDidScrollToTop:(id)top clientIdentifier:(id)identifier;
- (void)interfaceOffsetDidScrollToTop:(id)top clientIdentifier:(id)identifier;
- (void)interfaceOffsetDidScrollToBottom:(id)bottom clientIdentifier:(id)identifier;
- (void)interfaceContentSafeAreaInsets:(id)insets withValue:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })value;
- (void)interfaceContentSystemMinimumLayoutMargins:(id)margins withValue:(struct NSDirectionalEdgeInsets { double x0; double x1; double x2; double x3; })value;
- (void)interfaceDidEndScrollingAnimation:(id)animation clientIdentifier:(id)identifier;
- (void)runTest:(id)test options:(id)options clientIdentifier:(id)identifier;
- (id)extendLaunchTest;
- (void)exchangeAccessibilityPortInformation:(id)information replyHandler:(id /* block */)handler;
- (void)tearDownAccessibilityPortIfNecessaryWithCompletionHandler:(id /* block */)handler;
- (id)actionItemsForInterfaceController:(id)controller;
- (id)underlyingUIHostingControllerForInterfaceController:(id)controller;
- (BOOL)isWKHostingControllerClass:(id)class;
- (id)interfaceControllerForIdentifier:(id)identifier;
@end

#endif /* SPExtensionRemoteProtocol_Protocol_h */
