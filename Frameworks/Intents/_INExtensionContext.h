//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2201.0.2.0.0
//
#ifndef _INExtensionContext_h
#define _INExtensionContext_h
@import Foundation;

#include "NSExtensionContext.h"
#include "INExtensionContextHosting-Protocol.h"
#include "INIntentDelivering-Protocol.h"
#include "INIntentDeliveringDelegate-Protocol.h"
#include "INIntentHandlerProvidingPrivate-Protocol.h"
#include "_INExtensionContextVending-Protocol.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface _INExtensionContext : NSExtensionContext<INIntentDeliveringDelegate, _INExtensionContextVending, INExtensionContextHosting> {
  /* instance variables */
  BOOL _isPrivateExtension;
  id _handlerForIntent;
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<INIntentDelivering> *_intentDeliverer;
  NSObject<INIntentHandlerProvidingPrivate> *_extensionHandler;
}

@property (readonly, nonatomic) NSObject<INIntentHandlerProvidingPrivate> *_extensionHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)_extensionAuxiliaryHostProtocol;
+ (id)_extensionAuxiliaryVendorProtocol;

/* instance methods */
- (id)initWithInputItems:(id)items privateIntentHandlerProvider:(id)provider;
- (id)initWithInputItems:(id)items extension:(id)extension;
- (id)initWithInputItems:(id)items listenerEndpoint:(id)endpoint contextUUID:(id)uuid;
- (void)_commonInit;
- (id)_intentDelivererForIntent:(id)intent;
- (void)getIntentParameterOptions:(id)options forIntent:(id)intent searchTerm:(id)term completionBlock:(id /* block */)block;
- (void)getIntentParameterDefaultValue:(id)value forIntent:(id)intent completionBlock:(id /* block */)block;
- (void)resolveIntentSlots:(id)slots forIntent:(id)intent completionBlock:(id /* block */)block;
- (void)resolveIntentSlot:(id)slot forIntent:(id)intent completionBlock:(id /* block */)block;
- (void)confirmIntent:(id)intent withCompletion:(id /* block */)completion;
- (void)handleIntent:(id)intent withCompletion:(id /* block */)completion;
- (void)startSendingUpdatesForIntent:(id)intent toObserver:(id)observer;
- (void)stopSendingUpdatesForIntent:(id)intent;
- (void)intentDeliverer:(id)deliverer deliverIntent:(id)intent withBlock:(id /* block */)block;
- (void)beginTransactionWithIntentIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)completeTransactionWithIntentIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)cancelTransactionDueToTimeoutWithIntentIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)_validateExtension;
- (void)_beginTransactionWithIntentIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)_completeTransactionWithIntentIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)_cancelTransactionDueToTimeoutWithIntentIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)confirmationResponseForIntent:(id)intent completion:(id /* block */)completion;
- (void)handleIntent:(id)intent completion:(id /* block */)completion;
- (void)handleIntent:(id)intent completionHandler:(id /* block */)handler;
- (void)completeTransaction;
- (void)cancelTransactionDueToTimeout;
- (void)getIntentParameterOptions:(id)options forIntent:(id)intent completionBlock:(id /* block */)block;
@end

#endif /* _INExtensionContext_h */
