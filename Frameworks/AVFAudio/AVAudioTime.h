//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 629.3.4.0.0
//
#ifndef AVAudioTime_h
#define AVAudioTime_h
@import Foundation;

@interface AVAudioTime : NSObject {
  /* instance variables */
  struct AudioTimeStamp { double mSampleTime; unsigned long long mHostTime; double mRateScalar; unsigned long long mWordClockTime; struct SMPTETime { short mSubframes; short mSubframeDivisor; unsigned int mCounter; unsigned int mType; unsigned int mFlags; short mHours; short mMinutes; short mSeconds; short mFrames; } mSMPTETime; unsigned int mFlags; unsigned int mReserved; } _ats;
  void * _reserved;
}

@property (readonly, nonatomic) BOOL hostTimeValid;
@property (readonly, nonatomic) unsigned long long hostTime;
@property (readonly, nonatomic) BOOL sampleTimeValid;
@property (readonly, nonatomic) long long sampleTime;
@property (readonly, nonatomic) double sampleRate;
@property (readonly, nonatomic) struct AudioTimeStamp { double x0; unsigned long long x1; double x2; unsigned long long x3; struct SMPTETime { short x0; short x1; unsigned int x2; unsigned int x3; unsigned int x4; short x5; short x6; short x7; short x8; } x4; unsigned int x5; unsigned int x6; } audioTimeStamp;

/* class methods */
+ (id)timeWithHostTime:(unsigned long long)time;
+ (id)timeWithSampleTime:(long long)time atRate:(double)rate;
+ (id)timeWithHostTime:(unsigned long long)time sampleTime:(long long)time atRate:(double)rate;
+ (id)timeWithAudioTimeStamp:(const struct AudioTimeStamp { double x0; unsigned long long x1; double x2; unsigned long long x3; struct SMPTETime { short x0; short x1; unsigned int x2; unsigned int x3; unsigned int x4; short x5; short x6; short x7; short x8; } x4; unsigned int x5; unsigned int x6; } *)stamp sampleRate:(double)rate;
+ (unsigned long long)hostTimeForSeconds:(double)seconds;
+ (double)secondsForHostTime:(unsigned long long)time;

/* instance methods */
- (id)init;
- (id)initWithHostTime:(unsigned long long)time;
- (id)initWithSampleTime:(long long)time atRate:(double)rate;
- (id)initWithHostTime:(unsigned long long)time sampleTime:(long long)time atRate:(double)rate;
- (BOOL)isHostTimeValid;
- (BOOL)isSampleTimeValid;
- (id)extrapolateTimeFromAnchor:(id)anchor;
- (id)initWithAudioTimeStamp:(const struct AudioTimeStamp { double x0; unsigned long long x1; double x2; unsigned long long x3; struct SMPTETime { short x0; short x1; unsigned int x2; unsigned int x3; unsigned int x4; short x5; short x6; short x7; short x8; } x4; unsigned int x5; unsigned int x6; } *)stamp sampleRate:(double)rate;
- (id)description;
@end

#endif /* AVAudioTime_h */
