//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 629.3.4.0.0
//
#ifndef AVVCMetricsManager_h
#define AVVCMetricsManager_h
@import Foundation;

@class NSMutableDictionary;

@interface AVVCMetricsManager : NSObject {
  /* instance variables */
  BOOL mProfileAVVC;
}

@property (retain) NSMutableDictionary *publicMetrics;
@property (retain) NSMutableDictionary *avvcProfilingInfoDictionary;
@property (nonatomic) unsigned long long voiceTriggerStartHostTime;
@property (nonatomic) unsigned long long callToStartRecordHostTime;

/* class methods */
+ (void *)getLock;
+ (void)createSharedManager;
+ (void)destroySharedManager;
+ (id)sharedManager;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)retrieveMetrics;
- (id)getStringDate:(id)date;
- (void)resetProfileMetrics;
- (id)retrieveProfileMetrics;
- (BOOL)measureElapseTimeForMetric:(id)metric block:(id /* block */)block;
- (int)setAudioIssueDetectorFormat:(struct CAStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })format numFrames:(unsigned int)frames;
- (int)audioIssueDetectorAnalyzeBuffer:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x10; unsigned int x1; void * x2; } x[1] })buffer numFrames:(unsigned int)frames timeStamp:(const struct AudioTimeStamp { double x0; unsigned long long x1; double x2; unsigned long long x3; struct SMPTETime { short x0; short x1; unsigned int x2; unsigned int x3; unsigned int x4; short x5; short x6; short x7; short x8; } x4; unsigned int x5; unsigned int x6; } *)stamp shouldAnalyze:(BOOL)analyze;
- (int)resetAudioIssueDetector;
- (int)setADAMFormat:(struct CAStreamBasicDescription { double x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7; unsigned int x8; })adamformat numFrames:(unsigned int)frames;
- (int)adamAnalyzeBuffer:(struct AudioBufferList { unsigned int x0; struct AudioBuffer { unsigned int x10; unsigned int x1; void * x2; } x[1] })buffer numFrames:(unsigned int)frames timeStamp:(const struct AudioTimeStamp { double x0; unsigned long long x1; double x2; unsigned long long x3; struct SMPTETime { short x0; short x1; unsigned int x2; unsigned int x3; unsigned int x4; short x5; short x6; short x7; short x8; } x4; unsigned int x5; unsigned int x6; } *)stamp shouldAnalyze:(BOOL)analyze;
- (int)resetADAM;
- (void)logProfileMetrics:(id)metrics;
@end

#endif /* AVVCMetricsManager_h */
