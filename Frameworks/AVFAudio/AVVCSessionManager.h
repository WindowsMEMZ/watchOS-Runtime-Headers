//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 629.3.4.0.0
//
#ifndef AVVCSessionManager_h
#define AVVCSessionManager_h
@import Foundation;

@class AVAudioSession, NSString;

@interface AVVCSessionManager : NSObject {
  /* instance variables */
  BOOL mShouldDuckOthers;
  BOOL mIsMiniDuckingEnabled;
  BOOL mShouldEnableMiniDucking;
  BOOL mShouldDisableMiniDucking;
  BOOL mSessionNeedsVolumeControl;
  BOOL mSessionNeedsRoutingControl;
  BOOL mSessionOutputIsWirelessSplitter;
  BOOL mIsOtherAudioPlaying;
  BOOL mRouteHasDoAPSupport;
  BOOL mOutputSupportsSWVolume;
  BOOL mDeviceIsIOSAccessory;
  BOOL mDeviceIsOlderWatch;
  unsigned int mSessionActivationOptions;
  struct recursive_mutex { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } __m_; } mSessionManagerLock;
  unsigned long long mPreviousHardwareControlFlags;
  long long mPreviousActivationMode;
  NSString *mPreviousSessionCategory;
  NSString *mPreviousSessionMode;
  unsigned long long mPreviousSessionCategoryOptions;
  int mPreviousIOBufferFrameSize;
}

@property (retain, nonatomic) AVAudioSession *audioSession;
@property (nonatomic) int sessionState;
@property (readonly, nonatomic) BOOL isPrimary;
@property (nonatomic) BOOL clientRequestsRecording;
@property (nonatomic) float deviceGain;
@property (retain, nonatomic) NSString *playbackRoute;
@property (nonatomic) BOOL forceGetSessionProperties;
@property (readonly, nonatomic) double inputLatency;
@property (readonly, nonatomic) double outputLatency;
@property (readonly, nonatomic) double inputSafetyOffset;
@property (readonly, nonatomic) double outputSafetyOffset;
@property (readonly, nonatomic) double outputVolume;
@property (readonly) long long reporterID;

/* instance methods */
- (id)initWithSession:(id)session;
- (void)dealloc;
- (int)setupOneTimeSessionSettingsForClient:(long long)client;
- (int)setSessionActivationContext:(id)context;
- (void)shouldEnableMiniDucking:(BOOL)ducking withOptions:(unsigned long long)options;
- (BOOL)isMiniDuckingEnabled;
- (void)getHypotheticalRouteAndUpdateStates;
- (int)setSessionCategoryModeOptionsForActivationMode:(long long)mode withOptions:(unsigned long long)options;
- (int)setSessionAudioHWControlFlagsForActivationMode:(long long)mode withOptions:(unsigned long long)options;
- (int)setSessionSampleRateForActivationMode:(long long)mode;
- (int)setSessionBufferSize:(int)size;
- (void)changeDuckOthersOption:(BOOL)option;
- (BOOL)setDuckOthers:(id)others mixWithOthers:(id)others error:(id *)error;
- (BOOL)setDuckingFadeOutDuration:(id)duration fadeInDuration:(id)duration error:(id *)error;
- (BOOL)isSessionOutputInWirelessSplitterMode;
- (unsigned int)getSessionActivationOptions;
- (void)setSessionActivationOptions:(unsigned int)options;
- (int)enableSmartRoutingConsideration:(BOOL)consideration;
- (BOOL)isAirplayOneOfTheOutputRoutes:(id)routes;
- (BOOL)activateAudioSessionWithPrewarm:(BOOL)prewarm error:(id *)error;
- (BOOL)deactivateAudioSessionWithOptions:(unsigned int)options error:(id *)error;
- (void)setSessionStateWithoutLock:(int)lock;
- (BOOL)isSessionActive;
- (BOOL)getClientRequestsRecording;
- (float)getDeviceGain;
- (id)getPlaybackRoute;
- (BOOL)getForceGetSessionProperties;
- (BOOL)setEnableBTTriangleMode:(BOOL)mode error:(id *)error;
- (double)speechDetectionDeviceSampleRate;
- (BOOL)setCategory:(id)category mode:(id)mode options:(unsigned long long)options error:(id *)error;
- (BOOL)setCategory:(id)category mode:(id)mode routeSharingPolicy:(unsigned long long)policy options:(unsigned long long)options error:(id *)error;
- (BOOL)clearInputPreferences:(id *)preferences;
- (BOOL)isSessionInSiriCategoryModeAndOptions:(unsigned int)options;
- (BOOL)isSessionInSiriCategory;
- (BOOL)setAudioHardwareControlFlags:(unsigned long long)flags error:(id *)error;
- (BOOL)setIAmTheAssistant:(BOOL)assistant error:(id *)error;
- (BOOL)setPreferredSampleRate:(double)rate error:(id *)error;
- (id)currentRoute;
- (id)sessionCurrentOutputRoutes;
- (id)sessionCurrentInputRoutes;
- (unsigned long long)siriInputSource;
- (id)siriRemoteInputIdentifier;
- (BOOL)getSiriInputSource:(unsigned long long *)source withIdentifier:(id *)identifier;
- (BOOL)setActivationContext:(id)context error:(id *)error;
- (BOOL)setActive:(BOOL)active withOptions:(unsigned long long)options error:(id *)error;
- (unsigned int)getOpaqueSessionID;
- (id)getActiveSessionDisplayIDsAsString;
- (void)setupSessionNotifications:(id)notifications;
- (void)removeSessionNotifications:(id)notifications;
- (BOOL)setRecordingFromRemoteInput:(BOOL)input error:(id *)error;
- (long long)inputNumberOfChannels;
- (BOOL)setDuckToLevelDB:(id)db error:(id *)error;
- (BOOL)setDuckToLevelScalar:(id)scalar error:(id *)error;
- (BOOL)isSWVolumeSupportedOnPickedRoute;
- (BOOL)isInputAvailable;
- (BOOL)setMicrophoneAttribution:(BOOL)attribution error:(id *)error;
@end

#endif /* AVVCSessionManager_h */
