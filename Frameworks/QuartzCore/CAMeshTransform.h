//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1110.5.0.0.0
//
#ifndef CAMeshTransform_h
#define CAMeshTransform_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSString;

@interface CAMeshTransform : NSObject<NSSecureCoding, NSCopying, NSMutableCopying> {
  /* instance variables */
  void * _impl;
  unsigned long long _normalization;
}

@property (readonly) unsigned long long vertexCount;
@property (readonly) unsigned long long faceCount;
@property (readonly, copy) NSString *depthNormalization;
@property (readonly) int subdivisionSteps;
@property (readonly) BOOL replicatesEdges;

/* class methods */
+ (id)meshTransformWithVertexCount:(unsigned long long)count vertices:(const struct CAMeshVertex { struct CGPoint { double x0; double x1; } x0; struct CAPoint3D { double x0; double x1; double x2; } x1; } *)vertices faceCount:(unsigned long long)count faces:(const struct CAMeshFace { unsigned int x0[4] float x1[4] } *)faces depthNormalization:(id)normalization;
+ (BOOL)supportsSecureCoding;
+ (void)CAMLParserStartElement:(id)element;
+ (void)CAMLParserEndElement:(id)element content:(id)content;

/* instance methods */
- (void)dealloc;
- (id)init;
- (id)_init;
- (id)initWithVertexCount:(unsigned long long)count vertices:(const struct CAMeshVertex { struct CGPoint { double x0; double x1; } x0; struct CAPoint3D { double x0; double x1; double x2; } x1; } *)vertices faceCount:(unsigned long long)count faces:(const struct CAMeshFace { unsigned int x0[4] float x1[4] } *)faces depthNormalization:(id)normalization;
- (id)_initWithMeshTransform:(id)transform;
- (struct CAMeshVertex { struct CGPoint { double x0; double x1; } x0; struct CAPoint3D { double x0; double x1; double x2; } x1; })vertexAtIndex:(unsigned long long)index;
- (struct CAMeshFace { unsigned int x0[4] float x1[4] })faceAtIndex:(unsigned long long)index;
- (struct Object { undefined * * x0; struct Atomic { struct { int x0; } x0; } x1; unsigned int x2 :8; unsigned int x3 :24; } *)CA_copyRenderValue;
- (unsigned long long)CA_numericValueCount;
- (unsigned long long)CA_copyNumericValue:(double *)value;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (BOOL)_constructWithData:(id)data;
- (id)_data;
- (id)_subdivideToDepth:(long long)depth;
- (id)subdividedMesh:(int)mesh;
- (id)inverseMesh;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCAMLWriter:(id)camlwriter;
- (id)CA_interpolateValue:(id)value byFraction:(float)fraction;
- (id)CA_interpolateValues:(id)values;
- (double)CA_distanceToValue:(id)value;
- (id)meshTransformForLayer:(id)layer;
@end

#endif /* CAMeshTransform_h */
