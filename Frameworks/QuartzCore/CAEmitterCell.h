//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1110.5.0.0.0
//
#ifndef CAEmitterCell_h
#define CAEmitterCell_h
@import Foundation;

#include "CAMediaTiming-Protocol.h"
#include "CAPropertyInfo-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSDictionary, NSString;

@interface CAEmitterCell : NSObject<NSCopying, CAPropertyInfo, NSSecureCoding, CAMediaTiming> {
  /* instance variables */
  void * _attr[2];
  void * _state;
  unsigned int _flags;
}

@property (copy) NSString *particleType;
@property double orientationLatitude;
@property double orientationLongitude;
@property double orientationRange;
@property double rotation;
@property double rotationRange;
@property float mass;
@property float massRange;
@property (copy) NSString *contentsFrameMode;
@property unsigned int contentsFrameCount;
@property unsigned int contentsFramesPerRow;
@property float contentsFramesPerSecond;
@property (copy) NSArray *emitterBehaviors;
@property (copy) NSString *name;
@property BOOL enabled;
@property float birthRate;
@property float lifetime;
@property float lifetimeRange;
@property double emissionLatitude;
@property double emissionLongitude;
@property double emissionRange;
@property double velocity;
@property double velocityRange;
@property double xAcceleration;
@property double yAcceleration;
@property double zAcceleration;
@property double scale;
@property double scaleRange;
@property double scaleSpeed;
@property double spin;
@property double spinRange;
@property struct CGColor * color;
@property float redRange;
@property float greenRange;
@property float blueRange;
@property float alphaRange;
@property float redSpeed;
@property float greenSpeed;
@property float blueSpeed;
@property float alphaSpeed;
@property (retain) id contents;
@property struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } contentsRect;
@property double contentsScale;
@property (copy) NSString *minificationFilter;
@property (copy) NSString *magnificationFilter;
@property float minificationFilterBias;
@property (copy) NSArray *emitterCells;
@property (copy) NSDictionary *style;
@property double beginTime;
@property double duration;
@property float speed;
@property double timeOffset;
@property float repeatCount;
@property double repeatDuration;
@property BOOL autoreverses;
@property (copy) NSString *fillMode;

/* class methods */
+ (id)properties;
+ (id)emitterCell;
+ (id)defaultValueForKey:(id)key;
+ (BOOL)supportsSecureCoding;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (BOOL)CA_automaticallyNotifiesObservers:(Class)observers;
+ (void)CAMLParserStartElement:(id)element;

/* instance methods */
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)dealloc;
- (void)CA_prepareRenderValue;
- (struct Object { undefined * * x0; struct Atomic { struct { int x0; } x0; } x1; unsigned int x2 :8; unsigned int x3 :24; } *)CA_copyRenderValue;
- (BOOL)shouldArchiveValueForKey:(id)key;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)valueForKey:(id)key;
- (void)setValue:(id)value forKey:(id)key;
- (id)valueForUndefinedKey:(id)key;
- (void)setValue:(id)value forUndefinedKey:(id)key;
- (id)valueForKeyPath:(id)path;
- (void)setValue:(id)value forKeyPath:(id)path;
- (void)didChangeValueForKey:(id)key;
- (id)debugDescription;
- (void)CAMLParser:(id)camlparser setValue:(id)value forKey:(id)key;
- (void)encodeWithCAMLWriter:(id)camlwriter;
- (id)CAMLTypeForKey:(id)key;
- (BOOL)CAMLTypeSupportedForKey:(id)key;
- (BOOL)CA_validateValue:(id)value forKey:(id)key;
- (BOOL)isEnabled;
@end

#endif /* CAEmitterCell_h */
