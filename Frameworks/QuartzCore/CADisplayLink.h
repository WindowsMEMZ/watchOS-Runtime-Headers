//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1110.5.0.0.0
//
#ifndef CADisplayLink_h
#define CADisplayLink_h
@import Foundation;

#include "CADisplay.h"

@interface CADisplayLink : NSObject {
  /* instance variables */
  void * _impl;
}

@property (readonly, nonatomic) CADisplay *display;
@property (retain, nonatomic) id userInfo;
@property (nonatomic) long long priority;
@property (readonly, nonatomic) double maximumRefreshRate;
@property (readonly, nonatomic) double heartbeatRate;
@property (readonly, nonatomic) long long minimumFrameDuration;
@property (readonly, nonatomic) long long actualFramesPerSecond;
@property unsigned int highFrameRateReason;
@property (readonly, nonatomic) double timestamp;
@property (readonly, nonatomic) double duration;
@property (readonly, nonatomic) double targetTimestamp;
@property (nonatomic) BOOL paused;
@property (nonatomic) long long frameInterval;
@property (nonatomic) long long preferredFramesPerSecond;
@property (nonatomic) struct CAFrameRateRange { float x0; float x1; float x2; } preferredFrameRateRange;

/* class methods */
+ (void)dispatchDeferredDisplayLink:(unsigned long long)link;
+ (void)notifyDisplayChange:(unsigned long long)change;
+ (id)displayLinkWithDisplay:(id)display target:(id)target selector:(SEL)selector;
+ (long long)willFireInfoVersion;
+ (BOOL)supportsExpectedWakeupBeforeCommitDeadline;
+ (double)expectedWakeupBeforeCommitDeadline:(double)deadline;
+ (void)setWillFireHandler:(id /* block */)handler;
+ (void)dispatchDeferredDisplayLinks;
+ (void)dispatchDeferredDisplayLinksWithDisplayId:(unsigned int)id;
+ (id)displayLinkWithTarget:(id)target selector:(SEL)selector;

/* instance methods */
- (void)setHighFrameRateReasons:(const unsigned int *)reasons count:(unsigned long long)count;
- (id)_initWithDisplayLinkItem:(void *)item;
- (void)dealloc;
- (void)addToRunLoop:(id)loop forMode:(id)mode;
- (void)removeFromRunLoop:(id)loop forMode:(id)mode;
- (BOOL)isPaused;
- (void)invalidate;
@end

#endif /* CADisplayLink_h */
