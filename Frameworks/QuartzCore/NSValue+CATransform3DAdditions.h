//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1110.5.0.0.0
//
#ifndef NSValue_CATransform3DAdditions_h
#define NSValue_CATransform3DAdditions_h
@import Foundation;

@interface NSValue (CATransform3DAdditions)
/* class methods */
+ (id)valueWithCACornerRadii:(struct CACornerRadii { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; struct CGSize { double x0; double x1; } x2; struct CGSize { double x0; double x1; } x3; })radii;
+ (id)valueWithCAPoint3D:(struct CAPoint3D { double x0; double x1; double x2; })d;
+ (id)valueWithCAColorMatrix:(struct CAColorMatrix { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; })matrix;
+ (id)valueWithCATransform3D:(struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })d;

/* instance methods */
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })CA_CGAffineTransformValue;
- (id)CAMLType;
- (void)encodeWithCAMLWriter:(id)camlwriter;
- (struct CACornerRadii { struct CGSize { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; struct CGSize { double x0; double x1; } x2; struct CGSize { double x0; double x1; } x3; })CACornerRadiiValue;
- (id)CA_addValue:(id)value multipliedBy:(int)by;
- (id)CA_interpolateValue:(id)value byFraction:(float)fraction;
- (id)CA_interpolateValues:(id)values;
- (id)CA_roundToIntegerFromValue:(id)value;
- (double)CA_distanceToValue:(id)value;
- (struct CAPoint3D { double x0; double x1; double x2; })CAPoint3DValue;
- (struct CAColorMatrix { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; float x17; float x18; float x19; })CAColorMatrixValue;
- (struct Object { undefined * * x0; struct Atomic { struct { int x0; } x0; } x1; unsigned int x2 :8; unsigned int x3 :24; } *)CA_copyRenderValue;
- (unsigned long long)CA_numericValueCount;
- (unsigned long long)CA_copyNumericValue:(double *)value;
- (struct CATransform3D { double x0; double x1; double x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; double x13; double x14; double x15; })CATransform3DValue;
@end

#endif /* NSValue_CATransform3DAdditions_h */
