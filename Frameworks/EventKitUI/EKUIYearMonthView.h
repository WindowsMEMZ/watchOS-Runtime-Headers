//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKUIYearMonthView_h
#define EKUIYearMonthView_h
@import Foundation;

#include "UIView.h"
#include "EKUIOverlayCalendarSignificantDatesProvider.h"

@class EKCalendarDate, NSCalendar, NSSet, NSString, UIColor, UIFont, UIView;

@interface EKUIYearMonthView : UIView {
  /* instance variables */
  EKCalendarDate *_endCalendarDate;
  NSString *_monthString;
  long long _firstDayIndex;
  long long _todayIndex;
  NSSet *_firstOfOverlayMonthIndices;
  NSSet *_firstOfOverlayYearIndices;
  UIView *_hidingView;
  UIView *_previewContainerView;
}

@property (readonly, nonatomic) double xInset;
@property (readonly, nonatomic) double yInset;
@property (readonly, nonatomic) double headerXAdjust;
@property (readonly, nonatomic) double headerFontMaxSize;
@property (readonly, nonatomic) double headerFontMinSize;
@property (readonly, nonatomic) UIFont *headerFont;
@property (readonly, nonatomic) double headerFontKerning;
@property (readonly, nonatomic) UIFont *dayNumberFont;
@property (readonly, nonatomic) UIFont *todayNumberFont;
@property (readonly, nonatomic) double todayNumberKerning;
@property (readonly, nonatomic) double dayTextSize;
@property (readonly, nonatomic) double todayTextSize;
@property (readonly, nonatomic) double circleSize;
@property (readonly, nonatomic) double circleSizeForDoubleDigit;
@property (readonly, nonatomic) double daysXAdjustLeft;
@property (readonly, nonatomic) double daysYAdjustTop;
@property (readonly, nonatomic) double xSpacing;
@property (readonly, nonatomic) double ySpacing;
@property (readonly, nonatomic) BOOL showWeekDayInitials;
@property (readonly, nonatomic) double weekDayInitialsAdjustLeft;
@property (readonly, nonatomic) double weekDayInitialsAdjustTop;
@property (readonly, nonatomic) BOOL showMonthName;
@property (readonly, nonatomic) BOOL vibrant;
@property (readonly, nonatomic) double circleFrameXAdjustment;
@property (readonly, nonatomic) double circleFrameYAdjustment;
@property (readonly, nonatomic) double todayTextYAdjustment;
@property (readonly, nonatomic) double dayNumberKerning;
@property (readonly, nonatomic) BOOL computeCircleFrameWithoutAdjustments;
@property (readonly, nonatomic) double roundedRectCornerRadius;
@property (readonly, nonatomic) NSString *dayColorKey;
@property (readonly, nonatomic) UIColor *dayColor;
@property (readonly, nonatomic) UIFont *weekDayInitialsFont;
@property (readonly, nonatomic) NSCalendar *calendar;
@property (readonly, nonatomic) long long daysInWeek;
@property (retain, nonatomic) EKCalendarDate *calendarDate;
@property (retain, nonatomic) EKUIOverlayCalendarSignificantDatesProvider *overlaySignificantDatesProvider;

/* class methods */
+ (double)heightForInterfaceOrientation:(long long)orientation windowSize:(struct CGSize { double x0; double x1; })size heightSizeClass:(long long)class;
+ (id)_defaultTextColor;

/* instance methods */
- (id)initWithCalendarDate:(id)date calendar:(id)calendar;
- (id)description;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)tintColorDidChange;
- (BOOL)pointIsAboveMonthNameBaseline:(struct CGPoint { double x0; double x1; })baseline;
- (void)updateToday;
- (BOOL)containsCalendarDate:(id)date;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForGridOfDays:(BOOL)days;
- (struct CGPoint { double x0; double x1; })headerOrigin;
- (void)_getTodayNumberTextFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)frame circleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)frame;
- (void)_getMetricsForDayIndex:(long long)index textFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)frame circleFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)frame;
- (id)_todayAttributes;
- (void)pulseTodayCircle;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForTodayHighlight;
- (id)monthString;
- (BOOL)_shouldUseRoundedRectInsteadOfCircle;
- (void)localeChanged;
- (struct CGSize { double x0; double x1; })roundedRectSizeForDayNumberString:(id)string;
- (BOOL)shouldAddPreciseInteractivity;
- (id)calendarDateForPoint:(struct CGPoint { double x0; double x1; })point;
- (long long)_dayIndexForPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_setUpInteraction;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_monthNameFrame;
- (BOOL)_pointIntersectsMonthName:(struct CGPoint { double x0; double x1; })name;
- (void)_adjustHidingViewToFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)_containerForPreview;
- (struct CGPoint { double x0; double x1; })_monthNameOriginPoint;
- (void)_reloadCachedValues;
- (void)_updateFirstOfMonthAndYearIndices;
- (void)overlaySignificantDatesChangedInRange:(id)range;
- (void)_updateToday;
- (BOOL)isCurrentMonth;
- (void)_drawMonthName:(id)name atPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_imageForMonthName:(id)name;
- (double)minHeaderFontSizeUsed;
- (void)_warmImageCache;
- (id)monthNameForDate:(id)date;
- (void)_drawWeekDayInitialsAtPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_weekDayInitialsImage;
- (void)_drawMonthDays:(long long)days size:(struct CGSize { double x0; double x1; })size underlineThickness:(double)thickness atPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_imageForMonthDays:(long long)days size:(struct CGSize { double x0; double x1; })size underlineThickness:(double)thickness;
- (void)_drawDayNumber:(id)number size:(struct CGSize { double x0; double x1; })size underlineThickness:(double)thickness atPoint:(struct CGPoint { double x0; double x1; })point;
- (id)_imageForDayNumber:(id)number size:(struct CGSize { double x0; double x1; })size underlineThickness:(double)thickness;
- (id)_imageForDayNumber:(id)number size:(struct CGSize { double x0; double x1; })size underlineThickness:(double)thickness forPreview:(BOOL)preview;
@end

#endif /* EKUIYearMonthView_h */
