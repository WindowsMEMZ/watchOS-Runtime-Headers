//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKDayGridView_h
#define EKDayGridView_h
@import Foundation;

#include "UIView.h"
#include "EKCurrentTimeMarkerView.h"
#include "EKCurrentTimeMarkerViewUpdating-Protocol.h"
#include "EKUITintColorUpdateDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, UIColor, UIImageView, UIView, UIVisualEffect;

@interface EKDayGridView : UIView<EKUITintColorUpdateDelegate, EKCurrentTimeMarkerViewUpdating> {
  /* instance variables */
  unsigned int x :1 _leftBorder;
  unsigned int x :1 _rightBorder;
  long long _orientation;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _lastBounds;
  UIColor *_backgroundColor;
  UIView *_leftBorderView;
  NSMutableArray *_middleBorderViews;
  UIView *_rightBorderView;
  NSMutableArray *_gridPatternViews;
  unsigned long long _daysToDisplay;
  UIImageView *_timeDot;
  UIView *_highlightedDayBackground;
  UIView *_fadingHighlightedDayBackground;
  UIView *_gridContainerView;
  NSMutableDictionary *_gridParentViews;
  double _cachedWidthForOffMainThreadWork;
  long long _sizeClass;
  BOOL _needsLayoutInWindow;
}

@property (nonatomic) BOOL showsLeftBorder;
@property (nonatomic) BOOL showsRightBorder;
@property (nonatomic) BOOL rightBorderInsetsOccurrences;
@property (nonatomic) BOOL showsTimeLine;
@property (nonatomic) BOOL showsTimeMarker;
@property (nonatomic) BOOL animatesTimeMarker;
@property (nonatomic) long long timeMarkerDotDay;
@property (nonatomic) double fixedDayWidth;
@property (nonatomic) double eventHorizontalInset;
@property (nonatomic) double hoursToPadTop;
@property (nonatomic) double hoursToPadBottom;
@property (nonatomic) BOOL selected;
@property (retain, nonatomic) UIColor *lineColor;
@property (nonatomic) BOOL usesVibrantGridDrawing;
@property (nonatomic) long long highlightedDayIndex;
@property (readonly, nonatomic) EKCurrentTimeMarkerView *timeMarker;
@property (readonly, nonatomic) double timeWidth;
@property (readonly, nonatomic) double timeInset;
@property (readonly, nonatomic) double topPadding;
@property (readonly, nonatomic) double hourHeight;
@property (readonly, nonatomic) double widthForOccurrences;
@property (retain, nonatomic) UIVisualEffect *gridVisualEffect;
@property (retain, nonatomic) UIView *occurrenceContainerView;
@property (nonatomic) double gridHeightScale;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)cachedBackgroundImageForKey:(id)key;
+ (void)cacheBackgroundImage:(id)image forKey:(id)key;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame sizeClass:(long long)class backgroundColor:(id)color opaque:(BOOL)opaque numberOfDaysToDisplay:(unsigned long long)display;
- (long long)_sizeClass;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)didMoveToWindow;
- (void)setOrientation:(long long)orientation;
- (double)bottomPadding;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)updateHourHeight;
- (void)updateMarkerPosition;
- (id)timeDotImage;
- (void)_updateTimeMarker;
- (void)tintColorDidChange;
- (void)viewTintColorDidChangeForView:(id)view toColor:(id)color;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForStartSeconds:(long long)seconds endSeconds:(long long)seconds;
- (double)positionOfSecond:(long long)second;
- (int)secondAtPosition:(double)position;
- (BOOL)isSelected;
- (double)_dayWidth;
- (void)_layoutHighlight;
- (void)layoutSubviews;
- (id)_generateGridImage;
@end

#endif /* EKDayGridView_h */
