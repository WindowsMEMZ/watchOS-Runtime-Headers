//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKUIAvailabilityViewController_h
#define EKUIAvailabilityViewController_h
@import Foundation;

#include "EKEditItemViewController.h"
#include "EKUIAvailabilityFreeSpanView.h"
#include "EKUIAvailabilityParticipantList.h"
#include "EKUIAvailabilityTimelineView.h"
#include "EKUIAvailabilityTitleContainerView.h"
#include "EKUIResizingDateLabel.h"
#include "UIScrollViewDelegate-Protocol.h"

@class EKEvent, NSArray, NSDate, NSLayoutConstraint, NSMutableArray, NSOperationQueue, NSString, UIBarButtonItem, UIButton, UILabel, UIScrollView, UIView, _UINavigationBarPalette;

@interface EKUIAvailabilityViewController : EKEditItemViewController<UIScrollViewDelegate>

@property (retain) EKEvent *event;
@property (retain, nonatomic) EKUIAvailabilityParticipantList *participantList;
@property (retain, nonatomic) NSMutableArray *participantAvailabilityViews;
@property (retain, nonatomic) NSMutableArray *freeSpanViews;
@property (retain, nonatomic) NSArray *participants;
@property (retain) NSDate *currentStartDate;
@property (retain) UIView *containerView;
@property (retain) UILabel *unavailableLabel;
@property (retain) EKUIAvailabilityTitleContainerView *titleContainer;
@property (retain) UIView *largeDateNavContainer;
@property (retain) UIView *dateNavContainer;
@property (retain) EKUIResizingDateLabel *weekdayLabel;
@property (retain) EKUIResizingDateLabel *largeWeekdayLabel;
@property (retain) UIButton *previousButton;
@property (retain) UIButton *nextButton;
@property (retain) UIView *participantDivider;
@property (retain) UIBarButtonItem *topNextTime;
@property (retain) UIBarButtonItem *bottomNextTime;
@property (retain) UIBarButtonItem *topSpacer;
@property (retain) UIBarButtonItem *topSpinner;
@property (retain) UIBarButtonItem *bottomSpinner;
@property (retain) UIBarButtonItem *doneButton;
@property BOOL searchingForNextAvailableTime;
@property BOOL fetchingData;
@property BOOL compact;
@property (retain) UIScrollView *scrollView;
@property (retain) EKUIAvailabilityTimelineView *timelineView;
@property (retain) EKUIAvailabilityFreeSpanView *eventTime;
@property double availableWidth;
@property double pinchStartWidth;
@property double pinchStartRatio;
@property double rowHeight;
@property (retain) NSMutableArray *hourLines;
@property (retain) NSLayoutConstraint *participantWidthConstraint;
@property (retain) NSLayoutConstraint *timelineHeightConstraint;
@property (retain) NSLayoutConstraint *largeNavLeadingConstraint;
@property (retain) NSMutableArray *titleConstraints;
@property (retain, nonatomic) NSOperationQueue *availabilityRequestsQueue;
@property (retain) _UINavigationBarPalette *palette;
@property (copy) id /* block */ saveBlock;
@property BOOL fromDetail;
@property BOOL isAttendeeProposeTime;
@property (retain) NSDate *modifiedStartDate;
@property (retain) NSDate *modifiedEndDate;
@property (retain) NSArray *busyParticipants;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)presentAvailabilityViewControllerForEvent:(id)event fromViewController:(id)controller editDelegate:(id)delegate;
+ (id)nextTimeString;
+ (id)cancelNextTimeString;
+ (double)defaultTimelineHeight;

/* instance methods */
- (id)initWithEvent:(id)event;
- (id)initWithEvent:(id)event isAttendeeProposeTime:(BOOL)time proposedStartDate:(id)date proposedEndDate:(id)date;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)viewWillLayoutSubviews;
- (void)sizeWillBeCompact:(BOOL)compact;
- (void)configureNavBarAndToolBar;
- (void)cancelTapped:(id)tapped;
- (void)nextDayTapped:(id)tapped;
- (void)previousDayTapped:(id)tapped;
- (void)nextAvailableTimeTapped:(id)tapped;
- (void)doneTapped:(id)tapped;
- (double)timelineWidth;
- (void)loadView;
- (void)viewDidLoad;
- (void)configureUnavailableStateForEvent;
- (void)setAvailabilityPanelAvailable:(BOOL)available unavailableMessage:(id)message;
- (void)updateForContentCategory;
- (void)contentCategorySizeChanged:(id)changed;
- (void)configureParticipants;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidLayoutSubviews;
- (void)layout;
- (void)setDate:(id)date;
- (void)clearFreeSpanViews;
- (void)fetchAvailability;
- (BOOL)span:(id)span overlapsWithDate:(id)date;
- (id)dedupSpans:(id)spans;
- (id)mergeSpan:(id)span intoSpans:(id)spans;
- (void)findPossibleEventRanges;
- (void)findNextFreeSpan;
- (void)singleTap:(id)tap;
- (void)viewPinched:(id)pinched;
- (BOOL)span:(id)span overlapsWithStartDate:(id)date endDate:(id)date;
- (BOOL)updateCurrentEventAtTime:(id)time;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frameForFreeSpanViewAtStart:(id)start endDate:(id)date duration:(double)duration;
- (id)eventFreeSpanAtStart:(id)start endDate:(id)date isFreeSpan:(BOOL)span;
- (double)convertDateIntoOffset:(id)offset;
- (void)scrollViewDidScroll:(id)scroll;
@end

#endif /* EKUIAvailabilityViewController_h */
