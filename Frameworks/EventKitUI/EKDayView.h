//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKDayView_h
#define EKDayView_h
@import Foundation;

#include "UIView.h"
#include "EKDayAllDayView.h"
#include "EKDayAllDayViewDelegate-Protocol.h"
#include "EKDayTimeView.h"
#include "EKDayTimeViewDelegate-Protocol.h"
#include "EKDayViewContent.h"
#include "EKDayViewContentDelegate-Protocol.h"
#include "EKDayViewDataSource-Protocol.h"
#include "EKDayViewDelegate-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"

@class BOOL *, EKEvent, NSArray, NSCalendar, NSDateComponents, NSString, NSTimer, UIColor, UIImageView, UIPinchGestureRecognizer, UIScrollView, UITapGestureRecognizer, UIView, UIVisualEffect;
@protocol OS_dispatch_queue;

@interface EKDayView : UIView<UIScrollViewDelegate, EKDayAllDayViewDelegate, EKDayViewContentDelegate, EKDayTimeViewDelegate> {
  /* instance variables */
  double _nextDSTTransition;
  BOOL _scrollbarShowsInside;
  BOOL _scrollingToOccurrence;
  BOOL _settingDate;
  BOOL _userScrolling;
  BOOL _scrollToOccurrencesOnNextReload;
  UIImageView *_topVerticalGridExtension;
  UIImageView *_bottomVerticalGridExtension;
  UIView *_bottomLine;
  NSArray *_existingTimedOcurrences;
  struct CGSize { double width; double height; } _scrolledToFirstVisibleSecondForSize;
  UIScrollView *_scroller;
  NSTimer *_timeMarkerTimer;
  struct CGPoint { double x; double y; } _lastPinchDistance;
  struct CGPoint { double x; double y; } _lastPinchPoint1;
  double _lastPinchScale;
  BOOL _pinching;
  UIPinchGestureRecognizer *_pinchGestureRecognizer;
  UITapGestureRecognizer *_doubleTapGestureRecognizer;
  long long _targetSizeClass;
  BOOL _layoutWhenJoiningViewHierarchy;
  NSObject<OS_dispatch_queue> *_reloadQueue;
}

@property (weak, nonatomic) NSObject<EKDayViewDelegate> *delegate;
@property (weak, nonatomic) NSObject<EKDayViewDataSource> *dataSource;
@property (copy, nonatomic) NSDateComponents *displayDate;
@property (copy, nonatomic) NSCalendar *calendar;
@property (readonly, nonatomic) double dayStart;
@property (readonly, nonatomic) double dayEnd;
@property (nonatomic) int firstVisibleSecond;
@property (nonatomic) BOOL allowsOccurrenceSelection;
@property (nonatomic) BOOL alignsMidnightToTop;
@property (nonatomic) BOOL showOnlyAllDayArea;
@property (nonatomic) double additionalLeftPadding;
@property (readonly, nonatomic) double scrollBarOffset;
@property (readonly, nonatomic) NSArray *occurrenceViews;
@property (nonatomic) double topYBoundaryForOccurrenceText;
@property (readonly, nonatomic) NSArray *allOccurrenceViews;
@property (retain, nonatomic) EKEvent *dimmedOccurrence;
@property (readonly, nonatomic) EKDayAllDayView *allDayView;
@property (readonly, nonatomic) EKDayViewContent *dayContent;
@property (readonly, nonatomic) EKDayTimeView *timeView;
@property (readonly, nonatomic) double leftContentInset;
@property (nonatomic) double topContentInset;
@property (nonatomic) double bottomContentInset;
@property (nonatomic) BOOL isNowVisible;
@property (nonatomic) BOOL scrollEventsInToViewIgnoresVisibility;
@property (nonatomic) BOOL shouldEverShowTimeIndicators;
@property (nonatomic) BOOL animatesTimeMarker;
@property (nonatomic) BOOL showsTimeLine;
@property (nonatomic) BOOL showsTimeMarker;
@property (nonatomic) BOOL showsTimeLabel;
@property (nonatomic) BOOL eventsFillGrid;
@property (nonatomic) BOOL showsLeftBorder;
@property (nonatomic) BOOL allowsScrolling;
@property (nonatomic) BOOL sizeTimeViewUsingOnlyHourText;
@property (nonatomic) int outlineStyle;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } hoursToRender;
@property (retain, nonatomic) UIColor *timeViewTextColor;
@property (retain, nonatomic) UIColor *gridLineColor;
@property (retain, nonatomic) UIColor *occurrenceTitleColor;
@property (retain, nonatomic) UIColor *occurrenceTimeColor;
@property (retain, nonatomic) UIColor *occurrenceLocationColor;
@property (retain, nonatomic) UIColor *occurrenceTextBackgroundColor;
@property (nonatomic) BOOL usesVibrantGridDrawing;
@property (nonatomic) BOOL allowPinchingHourHeights;
@property (nonatomic) double todayScrollSecondBuffer;
@property (retain, nonatomic) UIVisualEffect *gridVisualEffect;
@property (retain, nonatomic) UIVisualEffect *timeViewVisualEffect;
@property (nonatomic) long long orientation;
@property (nonatomic) double scrollAnimationDurationOverride;
@property (nonatomic) double hourScale;
@property (readonly, nonatomic) double scrollOffset;
@property (nonatomic) struct CGPoint { double x0; double x1; } normalizedContentOffset;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame sizeClass:(long long)class orientation:(long long)orientation displayDate:(id)date backgroundColor:(id)color opaque:(BOOL)opaque scrollbarShowsInside:(BOOL)inside rightClickDelegate:(id)delegate;
- (void)_localeChanged;
- (void)willMoveToSuperview:(id)superview;
- (void)willMoveToWindow:(id)window;
- (void)removeFromSuperview;
- (void)setOpaque:(BOOL)opaque;
- (void)setBackgroundColor:(id)color;
- (void)layoutSubviews;
- (void)dealloc;
- (void)adjustFrameToSpanToMidnightFromStartDate:(id)date;
- (void)stopScrolling;
- (long long)_sizeClass;
- (void)_adjustForDateOrCalendarChange;
- (void)_startMarkerTimer;
- (void)_invalidateMarkerTimer;
- (void)updateMarkerPosition;
- (void)setTimeZone:(id)zone;
- (void)adjustForSignificantTimeChange;
- (BOOL)_isTimeMarkerFullyUnobstructed;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })currentTimeRectInView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })currentTimeRectInView:(id)view requireThumb:(BOOL)thumb;
- (id)verticalScrollView;
- (void)scrollToEvent:(id)event animated:(BOOL)animated completionBlock:(id /* block */)block;
- (void)_scrollToSecond:(int)second animated:(BOOL)animated whenFinished:(id /* block */)finished;
- (void)_scrollToSecond:(int)second offset:(double)offset animated:(BOOL)animated whenFinished:(id /* block */)finished;
- (void)scrollToDate:(id)date animated:(BOOL)animated whenFinished:(id /* block */)finished;
- (void)scrollToDate:(id)date offset:(double)offset animated:(BOOL)animated whenFinished:(id /* block */)finished;
- (void)scrollToNowAnimated:(BOOL)animated whenFinished:(id /* block */)finished;
- (void)dayContentView:(id)view atPoint:(struct CGPoint { double x0; double x1; })point;
- (id)allDayViewRequestsCurrentDisplayDate:(id)date;
- (id)presentationControllerForEditMenu;
- (id)selectedEventsForEditMenu;
- (void)attemptDisplayReviewPrompt;
- (void)bringEventToFront:(id)front;
- (void)insertViewForEvent:(id)event belowViewForOtherEvent:(id)event;
- (double)_verticalOffset;
- (double)_positionOfSecond:(int)second;
- (int)_secondAtPosition:(double)position;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_scrollerRect;
- (void)_clearVerticalGridExtensionImageCache;
- (id)_generateVerticalGridExtensionImage;
- (BOOL)eventOccursOnThisDay:(id)day;
- (id)occurrenceViewForEvent:(id)event;
- (double)yPositionPerhapsMatchingAllDayOccurrence:(id)occurrence;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForEvent:(id)event;
- (void)selectEvent:(id)event;
- (id)selectedEvent;
- (BOOL)containsOccurrences;
- (void)_notifyDelegateOfFinishedScrollingToOccurrence;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)_scrollViewWillBeginDragging:(id)dragging;
- (void)scrollViewDidScroll:(id)scroll;
- (void)firstVisibleSecondChanged;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (void)_updateContentForSizeCategoryChange:(id)change;
- (void)_createAllDayViewWithSizeClass:(long long)class rightClickDelegate:(id)delegate;
- (void)_disposeAllDayView;
- (void)scrollEventsIntoViewAnimated:(BOOL)animated;
- (void)setScrollerYInset:(double)yinset keepingYPointVisible:(double)visible;
- (void)relayoutExistingTimedOccurrences;
- (void)reloadData;
- (void)reloadDataSynchronously;
- (void)loadData:(BOOL)data withCompletion:(id /* block */)completion;
- (void)resetOccurrenceViewColors;
- (void)allDayView:(id)view didSelectEvent:(id)event userInitiated:(BOOL)initiated;
- (void)allDayViewDidLayoutSubviews:(id)subviews;
- (BOOL)allDayViewContentShouldDrawSynchronously:(id)synchronously;
- (void)dayViewContent:(id)content didCreateOccurrenceViews:(id)views;
- (void)dayViewContent:(id)content didSelectEvent:(id)event userInitiated:(BOOL)initiated;
- (void)dayViewContent:(id)content didTapInEmptySpaceOnDay:(double)day;
- (void)dayViewContent:(id)content didTapPinnedOccurrence:(id)occurrence;
- (void)dayViewContentDidCompleteAsyncLoadAndLayout:(id)layout;
- (BOOL)dayViewContentShouldDrawSynchronously:(id)synchronously;
- (BOOL)_viewContentShouldDrawSynchronously;
- (void)_timeViewTapped:(id)tapped;
- (id)dayViewContent:(id)content selectedCopyViewForOccurrenceView:(id)view;
- (void)_doubleTap:(id)tap;
- (struct CGPoint { double x0; double x1; })_pinchDistanceForGestureRecognizer:(id)recognizer;
- (double)minimumHourScale;
- (double)maximumHourScale;
- (double)scaledHourHeight;
- (void)_dayViewPinched:(id)pinched;
- (id)occurrenceViewAtPoint:(struct CGPoint { double x0; double x1; })point;
- (double)dateAtPoint:(struct CGPoint { double x0; double x1; })point isAllDay:(BOOL *)day;
- (BOOL)_showingAllDaySection;
- (double)dateAtPoint:(struct CGPoint { double x0; double x1; })point isAllDay:(BOOL *)day requireAllDayRegionInsistence:(BOOL)insistence;
- (double)_adjustSecondForwardForDSTHole:(double)dsthole;
- (double)_adjustSecondBackwardForDSTHole:(double)dsthole;
- (struct CGPoint { double x0; double x1; })pointAtDate:(double)date isAllDay:(BOOL)day;
- (double)_scrollRate;
- (double)_scrollZoneTop;
- (BOOL)scrollTowardPoint:(struct CGPoint { double x0; double x1; })point;
- (double)allDayRegionHeight;
- (void)highlightHour:(double)hour;
- (double)highlightedHour;
- (void)setAllDayLabelHighlighted:(BOOL)highlighted;
- (BOOL)isAllDayLabelHighlighted;
- (void)addViewToScroller:(id)scroller isAllDay:(BOOL)day;
- (void)configureOccurrenceViewForGestureController:(id)controller;
@end

#endif /* EKDayView_h */
