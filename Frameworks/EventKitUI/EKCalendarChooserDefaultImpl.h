//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKCalendarChooserDefaultImpl_h
#define EKCalendarChooserDefaultImpl_h
@import Foundation;

#include "UIViewController.h"
#include "EKAbstractCalendarEditor.h"
#include "EKAccountRefresherDelegate-Protocol.h"
#include "EKCalendarChooserDelegate-Protocol.h"
#include "EKCalendarChooserImpl-Protocol.h"
#include "EKCalendarChooserTableView.h"
#include "EKCalendarEditorDelegate-Protocol.h"
#include "EKUIFocusBannerTableViewCell.h"
#include "EKUIFocusBannerTableViewCellDelegate-Protocol.h"
#include "EKUITableViewCell.h"
#include "UINavigationControllerDelegate-Protocol.h"

@class EKAccountRefresher, EKCalendar, EKEvent, EKEventStore, EKSource, NSArray, NSIndexPath, NSMutableDictionary, NSMutableSet, NSSet, NSString, UIBarButtonItem, UIRefreshControl, _UIAccessDeniedView;
@protocol EKStyleProvider, EKUIViewControllerNavigationDelegate;

@interface EKCalendarChooserDefaultImpl : UIViewController<EKAccountRefresherDelegate, EKCalendarEditorDelegate, EKUIFocusBannerTableViewCellDelegate, UINavigationControllerDelegate, EKCalendarChooserImpl> {
  /* instance variables */
  EKAccountRefresher *_currentAccountRefresher;
  NSMutableDictionary *_accountErrorAnalyticsState;
  NSArray *_delegateSources;
  BOOL _showDelegateCalendarsCell;
  NSSet *_currentKnownCalendarIds;
  long long _displayStyle;
  EKUITableViewCell *_showDeclinedEventsCell;
  EKUIFocusBannerTableViewCell *_focusBannerCell;
  UIBarButtonItem *_addCalendarButton;
  BOOL _updatingHeaderHeight;
  BOOL _viewDidAppear;
  long long _style;
}

@property (nonatomic) long long selectionStyle;
@property (nonatomic) unsigned long long entityType;
@property (nonatomic) long long lastAuthorizationStatus;
@property (nonatomic) BOOL shouldOverrideAuthorizationStatus;
@property (retain, nonatomic) EKEvent *event;
@property (retain, nonatomic) EKCalendarChooserTableView *tableView;
@property (retain, nonatomic) UIBarButtonItem *showAllButton;
@property (retain, nonatomic) NSArray *groups;
@property (retain, nonatomic) NSArray *focusHiddenGroups;
@property (retain, nonatomic) NSArray *allGroups;
@property (nonatomic) long long numCalendarsHiddenByFocus;
@property (retain, nonatomic) NSIndexPath *checkedRow;
@property (weak, nonatomic) NSObject<EKStyleProvider> *styleProvider;
@property (nonatomic) struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; unsigned int x13 :1; } flags;
@property (retain, nonatomic) NSMutableSet *selectedCalendarSet;
@property (retain, nonatomic) _UIAccessDeniedView *accessDeniedView;
@property (retain, nonatomic) EKAbstractCalendarEditor *presentedEditor;
@property (nonatomic) BOOL canShowIdentityChooser;
@property (nonatomic) BOOL canShowDelegateSetupCell;
@property (retain, nonatomic) UIRefreshControl *refreshControl;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (weak, nonatomic) NSObject<EKCalendarChooserDelegate> *delegate;
@property (nonatomic) BOOL showsDoneButton;
@property (nonatomic) BOOL showsCancelButton;
@property (copy, nonatomic) NSSet *selectedCalendars;
@property (weak, nonatomic) NSObject<EKUIViewControllerNavigationDelegate> *navigationDelegate;
@property (retain, nonatomic) EKSource *limitedToSource;
@property (nonatomic) BOOL showDetailAccessories;
@property (nonatomic) BOOL allowsRotation;
@property (nonatomic) long long chooserMode;
@property (nonatomic) BOOL disableCalendarsUnselectedByFocus;
@property (nonatomic) BOOL allowsPullToRefresh;
@property (retain, nonatomic) EKCalendar *selectedCalendar;
@property (nonatomic) BOOL showsDeclinedEventsSetting;
@property (nonatomic) int explanatoryTextMode;
@property (nonatomic) BOOL showAccountStatus;
@property (nonatomic) BOOL onlyShowUnmanagedAccounts;
@property (readonly, nonatomic) BOOL allSelected;
@property (readonly, nonatomic) EKEventStore *eventStore;
@property (nonatomic) BOOL showsRefreshButton;
@property (nonatomic) BOOL disableCalendarEditing;

/* class methods */
+ (id)showAllString;
+ (id)hideAllString;
+ (id)delegatesString;
+ (BOOL)groups:(id)groups differStructurallyFromGroups:(id)groups;
+ (id)_subscribedLocalizedString;

/* instance methods */
- (id)initWithSelectionStyle:(long long)style displayStyle:(long long)style entityType:(unsigned long long)type forEvent:(id)event eventStore:(id)store limitedToSource:(id)source showIdentityChooser:(BOOL)chooser showDelegateSetupCell:(BOOL)cell showAccountStatus:(BOOL)status;
- (id)initWithSelectionStyle:(long long)style displayStyle:(long long)style entityType:(unsigned long long)type eventStore:(id)store;
- (id)initWithSelectionStyle:(long long)style displayStyle:(long long)style eventStore:(id)store;
- (void)dealloc;
- (void)loadView;
- (void)willMoveToParentViewController:(id)controller;
- (void)resetBackgroundColor;
- (void)traitCollectionDidChange:(id)change;
- (BOOL)hasAccountThatCanCreateCalendars;
- (void)selectAllCalendars;
- (void)showAllButtonPressed;
- (void)_selectAllCalendarsAndNotify:(BOOL)notify;
- (void)openAddRegularCalendarWithTitle:(id)title;
- (void)addCalendarButtonPressed:(id)pressed;
- (void)showAddSubscribedCalendarWithURL:(id)url;
- (void)addSubscribedCalendarButtonPressed:(id)pressed prefillURL:(id)url;
- (void)addHolidayCalendarButtonPressed:(id)pressed;
- (void)_commonAddCalendarButtonPressed:(id)pressed;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)_updateViewControllerTitle;
- (id)_contactForSource:(id)source;
- (id)_preferredAddressFromOwnerAddresses:(id)addresses;
- (BOOL)_shouldShowAddHolidayCalendarMenuItem;
- (void)_layoutNavToolbarControls;
- (void)viewDidAppear:(BOOL)appear;
- (id)_viewModeTitle;
- (id)_tableHeaderView;
- (void)viewDidLayoutSubviews;
- (struct CGSize { double x0; double x1; })preferredContentSize;
- (void)setShowAll:(BOOL)all;
- (unsigned long long)supportedInterfaceOrientations;
- (void)focusModeConfigurationChanged;
- (void)_showDeclinedEventsChanged:(id)changed;
- (void)setShowsWritableCalendarsOnly:(BOOL)only;
- (BOOL)showsWritableCalendarsOnly;
- (void)cancel:(id)cancel;
- (void)done:(id)done;
- (void)refresh:(id)refresh;
- (void)_pulledToRefresh:(id)refresh;
- (void)_finishRefreshing;
- (void)accountRefreshFinished:(id)finished;
- (BOOL)_calendarAvailableForEditing:(id)editing;
- (id)_calendarInfoForCalendar:(id)calendar;
- (id)_saveSelection;
- (void)_restoreSelection:(id)selection calendarsForSelectedSource:(id)source allCalendars:(id)calendars;
- (void)setShouldOverrideAuthorizationStatus:(BOOL)status withRemoteUIStatus:(long long)uistatus displayStyle:(long long)style;
- (void)_updateDelegateSources;
- (void)_updateShowDelegateCalendarsCell;
- (void)_eventStoreChangedExternally;
- (void)_eventStoreChanged:(id)changed;
- (void)_updateAccessDeniedViewWithNewStatus:(long long)status;
- (void)_ignoredErrorsChanged;
- (id)_calendarSetToCalendarIdSet:(id)set;
- (id)_currentKnownCalendarIds;
- (void)_updateCurrentKnownCalendarIds;
- (id)_filterCalendars:(id)calendars;
- (void)_ensureWritableCalendarExists;
- (id)_calendarsForSelectedSource;
- (id)_allCalendars;
- (id)_loadCalendars;
- (BOOL)_applySelection;
- (BOOL)_isCalendarEnabled:(id)enabled;
- (id)_statusTextForGroup:(id)group;
- (id)_toggleButtonTitleForGroup:(id)group;
- (void)_reloadCalendars;
- (void)_reloadCalendarsForcingTableViewReload:(BOOL)reload;
- (void)_updatePossiblyChangedIndexPaths:(id)paths possiblyChangedSectionIndices:(id)indices forGroups:(id)groups withFirstSection:(long long)section changedObjectIDSet:(id)idset footersChanged:(BOOL)changed reloadEverything:(BOOL)everything;
- (void)_setCalendars:(id)calendars changedObjectsHint:(id)hint forceTableViewReload:(BOOL)reload;
- (void)setSelectedCalendarsAndNotify:(id)notify;
- (void)_setSelectedCalendars:(id)calendars notify:(BOOL)notify;
- (id)_indexPathForCalendar:(id)calendar;
- (id)centeredCalendar;
- (void)centerOnCalendar:(id)calendar;
- (void)centerOnCalendar:(id)calendar animated:(BOOL)animated;
- (id)displayedEditor;
- (void)redisplayEditor:(id)editor completion:(id /* block */)completion;
- (void)_presentEditor:(id)editor withIndexPath:(id)path barButtonItem:(id)item permittedArrowDirections:(unsigned long long)directions animated:(BOOL)animated completion:(id /* block */)completion;
- (void)presentationControllerDidDismiss:(id)dismiss;
- (long long)_accountErrorActionIndexForGroup:(id)group;
- (long long)_calendarRowOffsetForGroup:(id)group;
- (long long)_tableSectionRowToDelegateSourceIndex:(long long)index;
- (long long)_tableSectionRow:(long long)row toCalendarIndexInGroup:(id)group;
- (BOOL)_tableShouldDisplayAccountErrorActionCellForGroup:(id)group;
- (BOOL)_shouldShowGroupNameInSection:(long long)section;
- (BOOL)_shouldShowDeclinedEventsSection;
- (BOOL)_isDeclinedEventsSwitchSection:(long long)section;
- (BOOL)_isDelegateCalendarsCellSection:(long long)section;
- (BOOL)_shouldShowDelegateCalendarsCellSection;
- (BOOL)_shouldShowFocusBanner;
- (long long)_focusBannerSection;
- (BOOL)_isFocusBannerSection:(long long)section;
- (BOOL)_shouldShowIdentityChooser;
- (long long)_identityChooserSection;
- (BOOL)_isIdentityChooserSection:(long long)section;
- (id)sourceForSelectedIdentity;
- (long long)_groupsOffset;
- (id)_groupForSection:(long long)section;
- (long long)numberOfSectionsInTableView:(id)view;
- (long long)tableView:(id)view numberOfRowsInSection:(long long)section;
- (id)tableView:(id)view viewForHeaderInSection:(long long)section;
- (id)tableView:(id)view titleForFooterInSection:(long long)section;
- (double)tableView:(id)view heightForHeaderInSection:(long long)section;
- (double)tableView:(id)view heightForFooterInSection:(long long)section;
- (double)tableView:(id)view heightForRowAtIndexPath:(id)path;
- (void)updateDeclinedEventsCell:(BOOL)cell;
- (void)declinedEventsChanged;
- (void)tableView:(id)view willDisplayCell:(id)cell forRowAtIndexPath:(id)path;
- (id)_cellIdentifierWithSubtitle:(BOOL)subtitle imageAccessoryView:(BOOL)view;
- (id)_contactNameForSharee:(id)sharee;
- (id)tableView:(id)view cellForRowAtIndexPath:(id)path;
- (void)identityChanged:(id)changed;
- (void)_delegateSelectionDidChange:(BOOL)change;
- (int)_numSelectedGroups;
- (void)groupShowAllTapped:(id)tapped;
- (void)groupHeaderChangedHeight:(id)height;
- (void)_selectGroup:(id)group selected:(BOOL)selected;
- (void)_selectCalendar:(id)calendar selected:(BOOL)selected;
- (void)_selectAllCalendarsAndStores:(BOOL)stores;
- (BOOL)tableView:(id)view canEditRowAtIndexPath:(id)path;
- (id)tableView:(id)view willSelectRowAtIndexPath:(id)path;
- (void)tableView:(id)view didDeselectRowAtIndexPath:(id)path;
- (void)tableView:(id)view didSelectRowAtIndexPath:(id)path;
- (void)_userDidSelectCalendar:(id)calendar selected:(BOOL)selected withIndexPath:(id)path;
- (void)tableView:(id)view accessoryButtonTappedForRowWithIndexPath:(id)path;
- (void)_promptForDisablingFilterByFocusSelectingCalendar:(id)calendar withIndexPath:(id)path;
- (double)marginForTableView:(id)view;
- (void)presentAccountErrorAlertForGroup:(id)group;
- (void)_sendAnalyticsEvent:(unsigned long long)event forGroup:(id)group;
- (void)calendarEditor:(id)editor didCompleteWithAction:(int)action;
- (void)_calendarEditorDidCompleteWithAction:(int)action createdCalendar:(id)calendar;
- (void)focusBannerTableViewCellToggled:(id)toggled;
- (void)setToolbarItems:(id)items;
- (id)toolbarItems;
- (void)setToolbarItems:(id)items animated:(BOOL)animated;
- (id)navigationItem;
- (id)_ekCalendarChooser;
- (id)navigationController;
@end

#endif /* EKCalendarChooserDefaultImpl_h */
