//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKDayTimeView_h
#define EKDayTimeView_h
@import Foundation;

#include "UIView.h"
#include "EKCurrentTimeMarkerView.h"
#include "EKCurrentTimeMarkerViewUpdating-Protocol.h"
#include "EKDayTimeViewDelegate-Protocol.h"
#include "EKUITintColorUpdateDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSString, UIColor, UIView, UIVisualEffect;

@interface EKDayTimeView : UIView<EKCurrentTimeMarkerViewUpdating, EKUITintColorUpdateDelegate> {
  /* instance variables */
  NSMutableArray *_contentViews;
  NSMutableDictionary *_visualEffectViews;
  unsigned int x :1 _leftBorder;
  unsigned int x :1 _rightBorder;
  long long _orientation;
  long long _targetSizeClass;
  UIView *_timeMarkerExtension;
  double _timeWidth;
}

@property (nonatomic) BOOL showsLeftBorder;
@property (nonatomic) BOOL showsRightBorder;
@property (nonatomic) BOOL showsTimeMarker;
@property (nonatomic) BOOL showsTimeMarkerExtension;
@property (nonatomic) BOOL usesLightText;
@property (nonatomic) double highlightedHour;
@property (nonatomic) double hoursToPad;
@property (retain, nonatomic) UIColor *timeColor;
@property (readonly, nonatomic) EKCurrentTimeMarkerView *timeMarker;
@property (retain, nonatomic) UIVisualEffect *visualEffect;
@property (nonatomic) struct _NSRange { unsigned long long x0; unsigned long long x1; } hoursToRender;
@property (nonatomic) double hourHeightScale;
@property (readonly, nonatomic) double hourHeight;
@property (readonly, nonatomic) double defaultHeight;
@property (weak, nonatomic) NSObject<EKDayTimeViewDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_invalidateCachedValues;
+ (void)_registerForInvalidation;
+ (void)_invalidateWidth;
+ (double)_dynamicFontSizeForOrientation:(long long)orientation;
+ (id)_normalFontForOrientation:(long long)orientation;
+ (id)_boldFontForOrientation:(long long)orientation;
+ (id)_hourFontForOrientation:(long long)orientation;
+ (id)_noonLocalizedString;
+ (double)_noonLocalizedWidthForOrientation:(long long)orientation;
+ (void)_calculateWidthForSizeClass:(long long)class orientation:(long long)orientation excludeCurrentTime:(BOOL)time;
+ (double)_timeTextWidthForSizeClass:(long long)class orientation:(long long)orientation;
+ (void)_setWidth:(double)width forOrientation:(long long)orientation sizeClass:(long long)class excludeCurrentTime:(BOOL)time;
+ (double)_widthForOrientation:(long long)orientation sizeClass:(long long)class excludeCurrentTime:(BOOL)time;
+ (double)verticalPadding;
+ (void)setVerticalPadding:(double)padding;
+ (double)timeInsetForSizeClass:(long long)class orientation:(long long)orientation;
+ (double)_timeVerticalInsetForOrientation:(long long)orientation inViewHierarchy:(id)hierarchy;
+ (double)timeWidthForOrientation:(long long)orientation inViewHierarchy:(id)hierarchy;
+ (double)hourWidthForSizeClass:(long long)class orientation:(long long)orientation;
+ (double)hourHeightForSizeClass:(long long)class orientation:(long long)orientation;
+ (double)_hourFontSize;
+ (double)defaultHeightForSizeClass:(long long)class orientation:(long long)orientation;
+ (double)defaultHeightForSizeClass:(long long)class orientation:(long long)orientation withHourScale:(double)scale;
+ (double)defaultHourScale;
+ (id)unscaledAllDayLabelFont;
+ (id)allDayLabelFont;
+ (id)allDayLabelBoldFont;
+ (double)heightOfHourTextForHour:(long long)hour orientation:(long long)orientation;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame sizeClass:(long long)class;
- (void)dealloc;
- (void)setNeedsDisplay;
- (void)didMoveToWindow;
- (void)_localeChanged;
- (void)_fontSizeChanged;
- (void)_sizeClassChanged;
- (long long)_sizeClass;
- (double)topPadding;
- (void)_invalidateTimeWidth;
- (double)_timeWidth;
- (double)scaledHourHeight;
- (void)updateHourHeight;
- (void)setOpaque:(BOOL)opaque;
- (void)setOrientation:(long long)orientation;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)layoutFrames;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forContentView:(id)view withHourRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setSemanticContentAttribute:(long long)attribute;
- (void)updateMarkerPosition;
- (void)layoutSubviews;
- (double)_positionOfSecond:(int)second;
- (void)tintColorDidChange;
- (void)viewTintColorDidChangeForView:(id)view toColor:(id)color;
@end

#endif /* EKDayTimeView_h */
