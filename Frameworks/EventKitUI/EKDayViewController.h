//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKDayViewController_h
#define EKDayViewController_h
@import Foundation;

#include "UIViewController.h"
#include "BlockableScrollViewDelegate-Protocol.h"
#include "CUIKPasteboardManagerCopyDelegate-Protocol.h"
#include "CUIKPasteboardManagerCutDelegate-Protocol.h"
#include "CUIKPasteboardManagerPasteDelegate-Protocol.h"
#include "EKDayOccurrenceView.h"
#include "EKDayOccurrenceViewDelegate-Protocol.h"
#include "EKDayView.h"
#include "EKDayViewDataSource-Protocol.h"
#include "EKDayViewDelegate-Protocol.h"
#include "EKDayViewWithGutters.h"
#include "EKEventEditViewController.h"
#include "EKEventGestureController.h"
#include "EKEventGestureControllerDelegate-Protocol.h"
#include "EKUIRightClickEmptySpaceInteractionDelegate-Protocol.h"
#include "ScrollSpringFactory.h"
#include "UIScrollViewDelegate-Protocol.h"

@class CUIKOccurrencesCollection, NSArray, NSCalendar, NSDateComponents, NSString, NSTimer, UIScrollView, UIView;
@protocol EKDayViewControllerDataSource, EKDayViewControllerDelegate, OS_dispatch_queue;

@interface EKDayViewController : UIViewController<BlockableScrollViewDelegate, EKDayOccurrenceViewDelegate, CUIKPasteboardManagerCutDelegate, CUIKPasteboardManagerCopyDelegate, EKUIRightClickEmptySpaceInteractionDelegate, EKDayViewDataSource, EKDayViewDelegate, EKEventGestureControllerDelegate, CUIKPasteboardManagerPasteDelegate, UIScrollViewDelegate> {
  /* instance variables */
  UIView *_clipView;
  UIScrollView *_horizontalScrollingView;
  EKDayView *_previousDay;
  EKDayView *_currentDay;
  EKDayView *_nextDay;
  EKDayOccurrenceView *_proposedTimeView;
  EKDayViewWithGutters *_previousDayWithGutter;
  EKDayViewWithGutters *_currentDayWithGutter;
  EKDayViewWithGutters *_nextDayWithGutter;
  unsigned int x :1 _scrollViewAnimating;
  unsigned int x :1 _hasPendingNextDate;
  unsigned int x :1 _hasPendingPreviousDate;
  unsigned int x :1 _decelerating;
  unsigned int x :1 _settingDateFromScrolling;
  CUIKOccurrencesCollection *_occurrences;
  CUIKOccurrencesCollection *_previousDayOccurrences;
  CUIKOccurrencesCollection *_nextDayOccurrences;
  EKEventGestureController *_eventGestureController;
  ScrollSpringFactory *_decelerationSpringFactory;
  NSDateComponents *_originalDisplayDate;
  double _dayStart;
  double _dayEnd;
  BOOL _needsReload;
  BOOL _shouldScrollToNowOnViewWillAppear;
  BOOL _instigatedDateChange;
  BOOL _viewAppeared;
  BOOL _adjustingForDeceleration;
  BOOL _fingerDown;
  BOOL _requiresFullDayRelayout;
  int _springAnimatedDecelerationsInProgress;
  int _sizeTransitionsInProgress;
  BOOL _correctAfterScroll;
  NSDateComponents *_targetDateComponents;
  BOOL _needToCompleteScrollingAnimation;
  BOOL _needToCompleteDeceleration;
  NSObject<OS_dispatch_queue> *_reloadQueue;
  NSObject<OS_dispatch_queue> *_protectionQueue;
  long long _targetSizeClass;
}

@property (copy, nonatomic) NSDateComponents *pendingNextDate;
@property (copy, nonatomic) NSDateComponents *pendingPreviousDate;
@property (retain, nonatomic) NSTimer *showNowTimer;
@property (nonatomic) BOOL transitionedToSameDay;
@property (weak, nonatomic) NSObject<EKDayViewControllerDelegate> *delegate;
@property (weak, nonatomic) NSObject<EKDayViewControllerDataSource> *dataSource;
@property (copy, nonatomic) NSDateComponents *displayDate;
@property (copy, nonatomic) NSCalendar *calendar;
@property (nonatomic) BOOL showsBanner;
@property (nonatomic) BOOL allowsDaySwitching;
@property (nonatomic) BOOL allowsSelection;
@property (nonatomic) BOOL alwaysAnimate;
@property (nonatomic) BOOL disableGestureDayChange;
@property (nonatomic) BOOL disableNotifyDateChangeDuringTracking;
@property (nonatomic) BOOL animateAllDayAreaHeight;
@property (nonatomic) BOOL shouldAutoscrollAfterAppearance;
@property (nonatomic) BOOL notifyWhenTapOtherEventDuringDragging;
@property (nonatomic) BOOL preloadExtraDays;
@property (nonatomic) double gutterWidth;
@property (retain, nonatomic) UIView *gestureOccurrenceSuperview;
@property (readonly, nonatomic) UIView *effectiveEventGestureSuperview;
@property (retain, nonatomic) EKEventEditViewController *currentEditor;
@property (readonly, nonatomic) EKDayView *currentDayView;
@property (nonatomic) int startingFirstVisibleSecond;
@property (readonly, nonatomic) UIView *currentAllDayView;
@property (readonly, nonatomic) NSArray *currentDayContentGridViewSubviews;
@property (readonly, nonatomic) BOOL currentDayContainsOccurrences;
@property (nonatomic) BOOL shouldLogVisibleEvents;
@property (nonatomic) BOOL scrollEventsInToViewIgnoresVisibility;
@property (nonatomic) struct CGPoint { double x0; double x1; } normalizedContentOffset;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)_shouldForwardViewWillTransitionToSize;

/* instance methods */
- (id)init;
- (id)initWithTargetSizeClass:(long long)class;
- (void)dealloc;
- (void)loadView;
- (void)viewDidLoad;
- (void)scrollDayViewAppropriatelyWithAnimation:(BOOL)animation;
- (void)_scrollDayViewAfterRelayoutDays;
- (void)traitCollectionDidChange:(id)change;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame gutterWidth:(double)width;
- (unsigned long long)firstVisibleSecond;
- (void)layoutContainerView:(id)view;
- (id)occurrenceViewForEvent:(id)event;
- (id)occurrenceViewForEvent:(id)event includeNextAndPreviousDays:(BOOL)days;
- (id)gestureController;
- (BOOL)_isCalendarDate:(id)date sameDayAsComponents:(id)components;
- (id)preferredEventToSelectOnDate:(id)date;
- (long long)_effectiveInterfaceOrientationForSize:(struct CGSize { double x0; double x1; })size;
- (BOOL)canBecomeFirstResponder;
- (id)_eventsForCutOrCopy;
- (void)copy:(id)copy;
- (void)cut:(id)cut;
- (void)paste:(id)paste;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (void)dayView:(id)view didSelectEvent:(id)event userInitiated:(BOOL)initiated;
- (void)dayView:(id)view didCreateOccurrenceViews:(id)views;
- (void)dayView:(id)view didScaleDayViewWithScale:(double)scale;
- (void)dayView:(id)view isPinchingDayViewWithScale:(double)scale;
- (void)dayViewDidCompleteAsyncLoadAndLayout:(id)layout;
- (id)dayView:(id)view selectedCopyViewForOccurrence:(id)occurrence;
- (BOOL)dayViewShouldDrawSynchronously:(id)synchronously;
- (id)presentationControllerForEditMenu;
- (id)selectedEventsForEditMenu;
- (void)_setDisplayDateInternal:(id)internal;
- (void)_setNextAndPreviousFirstVisibleSecondToCurrent;
- (void)dayView:(id)view firstVisibleSecondChanged:(unsigned long long)changed;
- (void)_setDisplayDate:(id)date forRepeat:(BOOL)repeat;
- (void)_setDisplayDate:(id)date forRepeat:(BOOL)repeat animate:(BOOL)animate;
- (void)setTimeZone:(id)zone;
- (void)scrollToNow:(BOOL)now;
- (BOOL)_shouldScrollToNow;
- (BOOL)_canScrollToNow;
- (BOOL)_isCurrentDayToday;
- (void)scrollEventIntoView:(id)view animated:(BOOL)animated;
- (void)scrollEventsIntoViewAnimated:(BOOL)animated;
- (void)bringEventToFront:(id)front;
- (void)insertViewForEvent:(id)event belowViewForOtherEvent:(id)event;
- (void)editorDidSaveEvent:(id)event;
- (void)editorDidDeleteEvent:(id)event;
- (void)editorDidCancelEditingEvent:(id)event;
- (id)eventsForStartDate:(id)date endDate:(id)date;
- (id)_eventsForDay:(id)day;
- (void)setNeedsReload;
- (void)reloadDataIfNeeded;
- (BOOL)_delegateRespondsToDisplayedOccurrencesChangedMethod;
- (void)_performDisplayedOccurrencesChangedDelegateMethodWithTrigger:(int)trigger;
- (void)reloadData;
- (void)reloadDataForOccurrenceChangeWithGeneration:(int)generation;
- (void)loadData:(BOOL)data withTrigger:(int)trigger withCompletion:(id /* block */)completion;
- (void)loadDataBetweenStart:(id)start end:(id)end withTrigger:(int)trigger generation:(int)generation completionForCurrentDayReload:(id /* block */)reload;
- (void)significantTimeChangeOccurred;
- (void)dayView:(id)view didUpdateScrollPosition:(struct CGPoint { double x0; double x1; })position;
- (id)_occurrencesForDayView:(id)view;
- (id)dayView:(id)view eventsForStartDate:(id)date endDate:(id)date;
- (void)_localeChanged:(id)changed;
- (void)_showWeekNumbersPreferenceChanged:(id)changed;
- (id)_createGutterDayViewWithDayView:(id)view;
- (void)_highlightEvent:(id)event dayViewDate:(double)date isAllDay:(BOOL)day;
- (void)dayViewDidTapEmptySpace:(id)space onDate:(id)date;
- (id)_eventGestureSuperview;
- (id)touchTrackingViewForEventGestureController:(id)controller;
- (id)occurrenceViewSuperviewForEventGestureController:(id)controller;
- (double)horizontalOffsetForPagingForEventGestureController:(id)controller;
- (id)createOccurrenceViewForEventGestures;
- (id)createOccurrenceViewForEventGestureController:(id)controller;
- (void)updateFrameForProposedTimeView;
- (void)eventGestureController:(id)controller adjustDraggingView:(id)view forAllDay:(BOOL)day;
- (id)createEventForEventGestureController:(id)controller;
- (void)showTimelineHighlightForTime:(id)time;
- (void)hideTimelineHighlight;
- (double)eventGestureController:(id)controller yPositionPerhapsMatchingAllDayOccurrence:(id)occurrence atPoint:(struct CGPoint { double x0; double x1; })point;
- (void)eventGestureController:(id)controller addViewToScroller:(id)scroller isAllDay:(BOOL)day;
- (id)eventGestureController:(id)controller occurrenceViewAtPoint:(struct CGPoint { double x0; double x1; })point;
- (id)eventGestureController:(id)controller occurrenceViewForOccurrence:(id)occurrence;
- (BOOL)eventGestureController:(id)controller isAllDayAtPoint:(struct CGPoint { double x0; double x1; })point requireInsistence:(BOOL)insistence;
- (double)eventGestureController:(id)controller dateAtPoint:(struct CGPoint { double x0; double x1; })point;
- (struct CGPoint { double x0; double x1; })pointAtDate:(double)date isAllDay:(BOOL)day;
- (struct CGPoint { double x0; double x1; })eventGestureController:(id)controller pointAtDate:(double)date isAllDay:(BOOL)day;
- (double)eventGestureController:(id)controller widthForOccurrenceViewOfDays:(unsigned long long)days;
- (double)eventGestureController:(id)controller heightForOccurrenceViewOfDuration:(double)duration;
- (double)eventGestureController:(id)controller heightForAllDayOccurrenceView:(id)view;
- (double)timedRegionOriginForEventGestureController:(id)controller;
- (id)currentPresentationController;
- (void)eventGestureController:(id)controller requestsPresentationOfViewController:(id)controller;
- (void)eventGestureController:(id)controller requestsShowEvent:(id)event;
- (BOOL)eventGestureControllerShouldAllowLongPress:(id)press;
- (void)eventGestureController:(id)controller didSetUpAtDate:(double)date isAllDay:(BOOL)day;
- (void)eventGestureController:(id)controller didMoveToDate:(double)date isAllDay:(BOOL)day;
- (BOOL)eventGestureController:(id)controller didCommitOccurrence:(id)occurrence toDate:(double)date isAllDay:(BOOL)day span:(long long)span;
- (void)eventGestureController:(id)controller didCancelEditingOccurrence:(id)occurrence fadedOut:(BOOL)out;
- (void)eventGestureControllerDidEndDragSession:(id)session;
- (void)eventGestureController:(id)controller didSingleTapOccurrence:(id)occurrence shouldExtendSelection:(BOOL)selection;
- (BOOL)didScrollWhenEventGestureController:(id)controller scrollTimerFiredToMoveLeft:(BOOL)left right:(BOOL)right vertically:(BOOL)vertically towardPoint:(struct CGPoint { double x0; double x1; })point;
- (id)editorForEventGestureController:(id)controller;
- (void)externallyEndedGestureDragging;
- (void)validateInterfaceOrientationWithFutureOrientation:(long long)orientation;
- (BOOL)eventEditorPopoverActiveWhileDraggingForEventGestureController:(id)controller;
- (BOOL)_shouldEndGestureEditingOnTap;
- (void)cleanUpAfterGestureFailureForEventGestureController:(id)controller;
- (void)_relayoutDays;
- (void)_notifyDelegateOfSelectedDateChange;
- (void)_relayoutDaysDuringScrolling;
- (BOOL)_isResizing;
- (void)_relayoutDaysDuringScrollingAndPerformDayChanges:(BOOL)changes;
- (void)_setDayView:(id)view toDate:(id)date;
- (id)horizontalScrollView;
- (id)verticalScrollView;
- (BOOL)_isViewInVisibleRect:(id)rect;
- (void)scrollViewDidScroll:(id)scroll;
- (void)_updateAllDayAreaHeight;
- (double)_weightedAllDayHeightForView:(id)view visibleRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)scrollViewWillBeginDecelerating:(id)decelerating;
- (void)_completeDecelerationIfNeeded;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)_scrollViewDidEndDecelerating:(id)decelerating;
- (void)_showNowAfterScrollViewDidEndDecelerating:(id)decelerating;
- (double)_showNowDelay;
- (BOOL)_canShowNowAfterScrollViewDidEndDecelerating:(id)decelerating;
- (void)_showNowTimerFired:(id)fired;
- (void)_cleanUpTargetDateComponents;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (void)_scrollToNowOnScrollViewDidEndScrollingAnimation:(id)animation;
- (BOOL)_shouldRespondToApplicationDidBecomeActiveStateChange;
- (void)_didRespondToApplicationDidBecomeActiveStateChange;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)dayView:(id)view scrollViewWillBeginDragging:(id)dragging;
- (void)_stopShowNowTimer;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (BOOL)blockableScrollViewShouldAllowScrolling;
- (void)blockableScrollViewDidChangeFrameSize;
- (void)viewDidLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (void)viewDidMoveToWindow:(id)window shouldAppearOrDisappear:(BOOL)disappear;
- (void)applicationDidBecomeActive;
- (void)applicationWillResignActive;
- (void)_setHorizontalContentOffsetUsingSpringAnimation:(struct CGPoint { double x0; double x1; })animation;
- (void)_completeScrollingAnimationIfNeeded;
- (void)_cutAnimationTailAfterDelayForDecelerationFromUserInput;
- (void)_cutAnimationTailAfterDelayForScrollAnimationFromExternalSource;
- (void)_cancelAllLongTailCuttingCallbacks;
- (void)__cutLongCallbackTailForDecelerationFromUserInput;
- (void)__cutLongTailCallbackForScrollAnimationFromExternalSource;
- (id)editorForPasteboardManager:(id)manager;
- (void)pasteboardManager:(id)manager presentAlert:(id)alert;
- (void)pasteboardManager:(id)manager beginEditingEvent:(id)event;
- (void)pasteboardManager:(id)manager didFinishPasteWithResult:(unsigned long long)result willOpenEditor:(BOOL)editor;
- (void)_logUserStateDiagnostics:(id)diagnostics;
- (unsigned long long)_dateModeForAllDay:(BOOL)day;
- (BOOL)interaction:(id)interaction shouldShowMenuAtPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (BOOL)interaction:(id)interaction canPasteEventAtPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (BOOL)interaction:(id)interaction canCreateEventAtPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (void)interaction:(id)interaction createEventAtPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (void)interaction:(id)interaction pasteEventAtPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (id)interaction:(id)interaction titleForPasteActionAtPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (id)interaction:(id)interaction subtitleForPasteActionAtPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (void)dayOccurrenceViewSelected:(id)selected source:(unsigned long long)source;
- (void)attemptDisplayReviewPrompt;
@end

#endif /* EKDayViewController_h */
