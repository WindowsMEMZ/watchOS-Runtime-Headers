//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKDayViewContent_h
#define EKDayViewContent_h
@import Foundation;

#include "UIView.h"
#include "CUIKSingleDayTimelineLayoutScreenUtils-Protocol.h"
#include "EKDayGridView.h"
#include "EKDayOccurrenceViewDelegate-Protocol.h"
#include "EKDayViewContentDelegate-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"

@class EKCalendarDate, EKEvent, NSCalendar, NSMutableArray, NSString, NSTimeZone, UIColor, UITraitCollection, UIView;

@interface EKDayViewContent : UIView<CUIKSingleDayTimelineLayoutScreenUtils, EKDayOccurrenceViewDelegate, UIGestureRecognizerDelegate> {
  /* instance variables */
  EKDayGridView *_grid;
  UIView *_saturdayDarkeningView;
  UIView *_sundayDarkeningView;
  unsigned long long _daysToDisplay;
  NSMutableArray *_lastLayoutWidthForDay;
  BOOL _loadingOccurrences;
  BOOL _putSelectionOnTop;
  BOOL _hasCustomOccurrencePadding;
  NSMutableArray *_dayStarts;
  NSMutableArray *_itemsForPreloadByDay;
  NSMutableArray *_itemsForPreloadByDayByEndDate;
  NSMutableArray *_itemsByDay;
  NSMutableArray *_itemsByDayByEndDate;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _latestVisibleRect;
  double * _visiblePinnedStackHeightAbove;
  double * _visiblePinnedStackHeightBelow;
  NSMutableArray *_geometryDelegates;
  NSMutableArray *_reusableViews;
  BOOL _dataLoaded;
  long long _sizeClass;
  BOOL _shouldLayoutInReverse;
  BOOL _shouldAnimateLayout;
  NSMutableArray *_temporaryViewCacheByDay;
  long long _saveTemporaryViewsEntryCount;
}

@property (retain, nonatomic) UITraitCollection *stagedTraitCollection;
@property (readonly, nonatomic) EKCalendarDate *startDate;
@property (readonly, nonatomic) EKCalendarDate *endDate;
@property (copy, nonatomic) NSCalendar *calendar;
@property (copy, nonatomic) NSTimeZone *timeZone;
@property (weak, nonatomic) NSObject<EKDayViewContentDelegate> *delegate;
@property (nonatomic) BOOL offscreenOccurrencePinningEnabled;
@property (nonatomic) BOOL allowsOccurrenceSelection;
@property (nonatomic) BOOL showsLeftBorder;
@property (nonatomic) BOOL eventsFillGrid;
@property (nonatomic) BOOL usesSmallText;
@property (nonatomic) BOOL darkensWeekends;
@property (nonatomic) BOOL reduceLayoutProcessingForAnimation;
@property (nonatomic) double fixedDayWidth;
@property (retain, nonatomic) UIColor *occurrenceTitleColor;
@property (retain, nonatomic) UIColor *occurrenceTimeColor;
@property (retain, nonatomic) UIColor *occurrenceLocationColor;
@property (retain, nonatomic) UIColor *occurrenceTextBackgroundColor;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } occurrencePadding;
@property (readonly, nonatomic) double firstEventSecond;
@property (retain, nonatomic) EKEvent *selectedEvent;
@property (retain, nonatomic) EKEvent *dimmedOccurrence;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame sizeClass:(long long)class orientation:(long long)orientation backgroundColor:(id)color opaque:(BOOL)opaque numberOfDaysToDisplay:(unsigned long long)display;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame sizeClass:(long long)class orientation:(long long)orientation;
- (void)dealloc;
- (void)setOrientation:(long long)orientation;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)traitCollectionDidChange:(id)change;
- (id)visibleItemsByDay;
- (id)itemsForPreloadByDay;
- (id)allVisibleItems;
- (void)selectEvent:(id)event;
- (void)setHoursToPadTop:(double)top;
- (void)_computeDayStartsAndEnds;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insetsForInterfaceLayout:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })layout;
- (void)setStartDateWithDateComponents:(id)components;
- (void)rectBecameVisible:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })visible;
- (id)occurrenceViews;
- (void)dayOccurrenceViewSelected:(id)selected source:(unsigned long long)source;
- (id)presentationControllerForEditMenu;
- (id)selectedEventsForEditMenu;
- (id)selectedCopyViewForDayOccurrenceView:(id)view;
- (void)attemptDisplayReviewPrompt;
- (id)grid;
- (void)setViewsDimmed:(BOOL)dimmed forEvent:(id)event;
- (struct CGPoint { double x0; double x1; })pointForDate:(double)date;
- (id)occurrenceViewForEvent:(id)event onDate:(double)date;
- (id)occurrenceViewForEvent:(id)event;
- (double)_dayWidth;
- (double)dateForPoint:(struct CGPoint { double x0; double x1; })point;
- (void)setNeedsLayout;
- (void)layoutSubviews;
- (void)_layoutDaysIfVisible;
- (BOOL)_layoutDayIfNeeded:(long long)needed isLoadingAsync:(BOOL)async;
- (void)_layoutDay:(unsigned long long)day isLoadingAsync:(BOOL)async;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_dayRangeForEventWithStartDate:(id)date endDate:(id)date;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })_dayRangeForEvent:(id)event useProposedTime:(BOOL)time;
- (id)dayStarts;
- (id)lastDisplayedSecond;
- (void)configureOccurrenceViewForGestureController:(id)controller;
- (void)_configureOccurrenceViewMarginAndPadding:(id)padding;
- (unsigned long long)_dayIndexForAllIndex:(unsigned long long)index;
- (void)applyLoadedOccurrenceBatchStartingAtIndex:(long long)index batchSize:(long long)size fromArray:(id)array withStartDate:(id)date animated:(BOOL)animated reverse:(BOOL)reverse completion:(id /* block */)completion;
- (void)movePreloadedItemsToVisible;
- (void)applyLoadedOccurrencesWithBatching:(BOOL)batching animated:(BOOL)animated reverse:(BOOL)reverse completion:(id /* block */)completion;
- (void)applyContentItem:(id)item toView:(id)view;
- (void)prepareForReuseIsReload:(BOOL)reload;
- (void)loadOccurrences:(id)occurrences;
- (void)loadAndLayoutOccurrences:(id)occurrences reverse:(BOOL)reverse;
- (void)setOccurrences:(id)occurrences;
- (void)saveTemporaryViews;
- (void)clearTemporaryViews;
- (BOOL)_doOffscreenOccurrences;
- (void)_adjustViewsForPinning;
- (BOOL)eventsIntersectRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (BOOL)_getBottomPinRegion:(double *)region dayIndex:(unsigned long long *)index forPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
- (void)_tapRecognized:(id)recognized;
- (double)RoundToScreenScale:(double)scale;
@end

#endif /* EKDayViewContent_h */
