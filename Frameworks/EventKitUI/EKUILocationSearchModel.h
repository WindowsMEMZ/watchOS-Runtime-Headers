//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKUILocationSearchModel_h
#define EKUILocationSearchModel_h
@import Foundation;

#include "CLLocationManagerDelegate-Protocol.h"
#include "EKStructuredLocationWithImage.h"
#include "EKUILocationSearchModelDelegate-Protocol.h"
#include "MKSearchCompleterDelegate-Protocol.h"

@class CLGeocoder, CLInUseAssertion, CLLocation, CLLocationManager, CNContactStore, CRSearchQuery, EKEventStore, EKOccurrenceCacheLocationSearch, EKStructuredLocation, MKLocalSearch, MKLocalSearchCompleter, NSArray, NSCharacterSet, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString;
@protocol CNCancelable, GEOMapServiceCompletionTicket, OS_dispatch_queue;

@interface EKUILocationSearchModel : NSObject<CLLocationManagerDelegate, MKSearchCompleterDelegate> {
  /* instance variables */
  CLLocationManager *_locationManager;
  CLInUseAssertion *_locationAssertion;
  MKLocalSearchCompleter *_completer;
  CLLocation *_currentImpreciseLocation;
  CLGeocoder *_geocoder;
  MKLocalSearch *_localSearch;
  CNContactStore *_contactStore;
  NSObject<CNCancelable> *_contactsSearchToken;
  NSObject<OS_dispatch_queue> *_recentsQueue;
  NSObject<OS_dispatch_queue> *_eventsQueue;
  NSObject<OS_dispatch_queue> *_customConferenceQueue;
  EKEventStore *_eventStore;
  EKOccurrenceCacheLocationSearch *_eventsSearch;
  CRSearchQuery *_currentRecentsSearch;
  NSCharacterSet *_whitespaceAndNewlineCharacterSet;
  NSObject<OS_dispatch_queue> *_conferenceRoomProcessingQueue;
  NSOperationQueue *_conferenceRoomOperationQueue;
  NSMutableArray *_mutableConferenceRoomSearchResults;
  NSMutableDictionary *_conferenceRoomAddressesToConferenceRooms;
  NSMutableArray *_allPossibleVirtualConferenceRooms;
}

@property (retain, nonatomic) EKStructuredLocation *currentLocation;
@property (nonatomic) unsigned long long supportedSearchTypes;
@property (readonly, nonatomic) EKStructuredLocationWithImage *locationFromMapsURL;
@property (readonly, nonatomic) NSArray *mapCompletionSearchResults;
@property (readonly, nonatomic) NSArray *contactsSearchResults;
@property (readonly, nonatomic) NSArray *recentsSearchResults;
@property (readonly, nonatomic) NSArray *frequentsSearchResults;
@property (readonly, nonatomic) NSArray *eventsSearchResults;
@property (readonly, nonatomic) NSArray *textualSearchResults;
@property (readonly, nonatomic) NSArray *conferenceRoomSearchResults;
@property (readonly, nonatomic) NSArray *virtualConferenceRoomSearchResults;
@property (readonly, nonatomic) NSArray *virtualConferenceCustomSearchResults;
@property (weak, nonatomic) NSObject<EKUILocationSearchModelDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSObject<GEOMapServiceCompletionTicket> *lastTicket;

/* class methods */
+ (void)initialize;
+ (id)_dataDetector;
+ (id)_linksInSource:(id)source;
+ (id)URLsFromSource:(id)source;

/* instance methods */
- (id)initWithEventStore:(id)store;
- (void)dealloc;
- (void)getCurrentLocation;
- (void)stopUpdatingLocation;
- (void)locationManager:(id)manager didFailWithError:(id)error;
- (void)locationManager:(id)manager didUpdateLocations:(id)locations;
- (void)resetContactsSearchResults;
- (void)resetEventsSearchResults;
- (void)resetConferenceRoomSearchResults;
- (void)resetRecentsSearchResults;
- (void)resetSearchResults:(BOOL)results;
- (void)cancelSearch;
- (void)beginSearchForTerm:(id)term;
- (unsigned long long)dedupeResults;
- (void)completerDidUpdateResults:(id)results finished:(BOOL)finished;
- (void)completerDidFail:(id)fail error:(id)error;
- (void)updateContacts:(id)contacts;
- (void)_updateContactsSearchWithResults:(id)results forToken:(id)token;
- (void)updateRecents:(id)recents;
- (id)_imageForMapHandle:(id)handle;
- (id)_imageForAttributes:(id)attributes;
- (void)searchFrequentLocations:(id)locations;
- (id)splitEventLocations:(id)locations;
- (void)updateEventLocations:(id)locations;
- (void)searchConferenceRooms:(id)rooms;
- (void)_processDirectorySearchResultSet:(id)set forOperation:(id)operation;
- (void)_addDiscoveredConferenceRooms:(id)rooms;
- (id)availabilityRequestForConferenceRooms:(id)rooms duringEvent:(id)event resultsBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (void)updateConferenceRoomAvailability:(id)availability duringEvent:(id)event completionBlock:(id /* block */)block;
- (void)_handleAvailabilityResults:(id)results forOperation:(id)operation;
- (void)_addLocationToRecents:(id)recents addressString:(id)string mapItem:(id)item;
- (void)addConferenceRoomToRecents:(id)recents fromSource:(id)source;
- (BOOL)removeRecentLocation:(id)location;
- (void)selectMapSearchCompletion:(id)completion;
- (void)selectLocation:(id)location;
- (void)selectCurrentLocation;
- (void)_updateVirtualConferenceCustomOptions:(id)options;
- (void)selectVirtualConferenceRoomType:(id)type;
- (void)updateVirtualConferenceRoomOptions:(id)options;
- (void)_updateAllPossibleVirtualConferenceResultsWithRoomTypes:(id)types;
- (void)_updateVirtualConferenceOptions:(id)options;
- (void)_updateMapURL:(id)url;
@end

#endif /* EKUILocationSearchModel_h */
