//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1454.2.1.0.0
//
#ifndef EKSubscribedCalendarEditor_h
#define EKSubscribedCalendarEditor_h
@import Foundation;

#include "EKAbstractCalendarEditor.h"
#include "DAESubscribedCalendarDownloadDelegate-Protocol.h"
#include "EKCalendarCancelValidationEditItem.h"
#include "EKCalendarColorEditItem.h"
#include "EKCalendarSubscriptionSpamCheckEditItem.h"
#include "EKCalendarSubscriptionSpamCheckEditItemDelegate-Protocol.h"
#include "EKCalendarSubscriptionURLEditItem.h"
#include "EKCalendarSubscriptionURLEditItemDelegate-Protocol.h"
#include "EKCalendarValidateEditItem.h"
#include "EKSubscribedCalendarDescriptionHeader.h"

@class CUIKSubscribedCalendarManager, DAESubscribedCalendarSummary, EKSource, NSString, NSURL;

@interface EKSubscribedCalendarEditor : EKAbstractCalendarEditor<DAESubscribedCalendarDownloadDelegate, EKCalendarSubscriptionURLEditItemDelegate, EKCalendarSubscriptionSpamCheckEditItemDelegate> {
  /* instance variables */
  EKSource *_limitedToSource;
  EKSubscribedCalendarDescriptionHeader *_tableViewHeader;
  NSString *_username;
  NSString *_password;
  BOOL _insecureConnectionOffered;
  BOOL _insecureConnectionApproved;
  BOOL _holidayCalendarMode;
  NSString *_preloadTitle;
  EKCalendarColorEditItem *_colorEditItem;
  EKCalendarSubscriptionURLEditItem *_urlItem;
  EKCalendarValidateEditItem *_validateItem;
  EKCalendarCancelValidationEditItem *_cancelValidationItem;
  EKCalendarSubscriptionSpamCheckEditItem *_spamCheckItem;
  id _previewDownloadToken;
  DAESubscribedCalendarSummary *_previewSummary;
  CUIKSubscribedCalendarManager *_subCalManager;
  BOOL _allowTableHeaderLayouts;
}

@property (nonatomic) unsigned long long state;
@property (retain, nonatomic) NSURL *prefillURL;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)createNewCalendarForEntityType:(unsigned long long)type inEventStore:(id)store;

/* instance methods */
- (id)initWithCalendar:(id)calendar eventStore:(id)store entityType:(unsigned long long)type limitedToSource:(id)source;
- (void)setHolidayCalendarModeWithTitle:(id)title;
- (void)loadView;
- (id)rightButton;
- (void)viewDidAppear:(BOOL)appear;
- (BOOL)_needToShowPrivacyNotice;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)_setTableHeaderViewForState;
- (void)_updateTableHeaderLayout;
- (BOOL)_shouldShowDeleteButton;
- (void)traitEnvironment:(id)environment didChangeTraitCollection:(id)collection;
- (void)contentSizeCategoryDidChangeNotification:(id)notification;
- (id)loadEditItems;
- (id)_editItemsForState:(unsigned long long)state;
- (void)cancel:(id)cancel;
- (void)willSaveCalendar:(id)calendar;
- (void)didSaveCalendar:(id)calendar;
- (void)_unsubscribeFromCalendar;
- (void)_unsubscribeFromCalendarAndReportJunk;
- (void)_unsubscribeTapped:(id)tapped;
- (void)_validateURL:(id)url;
- (void)_validateUserEnteredURL;
- (void)_validateURL;
- (void)_promptToContinueUsingInsecureConnection;
- (void)_kickoffPreviewDataFetch:(id)fetch;
- (void)_cancelInFlightPreviewDataFetch;
- (void)calendarItemStartedEditing:(id)editing;
- (void)viewWillLayoutSubviews;
- (struct CGSize { double x0; double x1; })calculatePreferredContentSize;
- (void)subscribedCalendarDidFinishLoading:(id)loading;
- (void)subscribedCalendarFailedWithError:(id)error;
- (void)subscribedCalendarProgressedTo:(long long)to totalBytes:(long long)bytes;
- (void)subscribedCalendarRequiresPassword:(id)password withContinuation:(id /* block */)continuation;
- (void)_startSpamCheckingURLString:(id)urlstring;
- (void)URLEditItemDidChangeURLString:(id)urlstring;
- (void)calendarSubscriptionSpamCheckEditItem:(id)item didDetermineThatURL:(id)url isSpam:(BOOL)spam;
- (void)_updateCancelButtonVisibilityForSpamStatus:(BOOL)status;
- (void)_showPrivacyNotice;
- (void)_allowButtonTapped;
- (void)_denyButtonTapped;
@end

#endif /* EKSubscribedCalendarEditor_h */
