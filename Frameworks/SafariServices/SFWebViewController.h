//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef SFWebViewController_h
#define SFWebViewController_h
@import Foundation;

#include "UIViewController.h"
#include "SFContentBlockerManager.h"
#include "SFDialogControllerDelegate-Protocol.h"
#include "SFDialogPresenting-Protocol.h"
#include "SFDialogViewControllerPresenting-Protocol.h"
#include "SFFormAutoFillControllerDelegate-Protocol.h"
#include "SFWebViewControllerDelegate-Protocol.h"
#include "WKNavigationDelegatePrivate-Protocol.h"
#include "WKUIDelegatePrivate-Protocol.h"
#include "_SFFormAutoFillController.h"
#include "_SFWebViewDelegate-Protocol.h"
#include "_WKInputDelegate-Protocol.h"

@class NSString, SFDialogController, WBSPermissionDialogThrottler, WKWebView, WKWebViewConfiguration;

@interface SFWebViewController : UIViewController<SFFormAutoFillControllerDelegate, WKNavigationDelegatePrivate, WKUIDelegatePrivate, SFDialogControllerDelegate, SFDialogViewControllerPresenting, _SFWebViewDelegate, _WKInputDelegate, SFDialogPresenting> {
  /* instance variables */
  _SFFormAutoFillController *_autoFillController;
  BOOL _didFirstLayout;
  BOOL _didFinishDocumentLoad;
  BOOL _shouldSuppressDialogsThatBlockWebProcess;
  WBSPermissionDialogThrottler *_permissionDialogThrottler;
  SFContentBlockerManager *_contentBlockerManager;
}

@property (readonly, nonatomic) WKWebView *webView;
@property (weak, nonatomic) NSObject<SFWebViewControllerDelegate> *delegate;
@property (nonatomic) BOOL loading;
@property (readonly, nonatomic) BOOL didFirstVisuallyNonEmptyLayout;
@property (readonly, nonatomic) WKWebViewConfiguration *webViewConfiguration;
@property (readonly, nonatomic) SFDialogController *dialogController;
@property (readonly, nonatomic) _SFAuthenticationContext *autoFillAuthenticationContext;
@property (readonly, nonatomic) BOOL didFirstPaint;
@property (readonly, nonatomic) BOOL hasFocusedInputFieldOnCurrentPage;
@property (readonly, nonatomic) BOOL hasFormControlInteraction;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithWebViewConfiguration:(id)configuration contentBlockerManager:(id)manager;
- (void)loadView;
- (void)presentViewController:(id)controller animated:(BOOL)animated completion:(id /* block */)completion;
- (id)_presentingViewControllerForWebView:(id)view;
- (void)dealloc;
- (void)invalidate;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)willActivateWebViewController;
- (void)willBeginUserInitiatedNavigation;
- (void)reloadContentBlockers;
- (void)webView:(id)view didStartProvisionalNavigation:(id)navigation;
- (void)webView:(id)view didReceiveServerRedirectForProvisionalNavigation:(id)navigation;
- (void)_webView:(id)view willPerformClientRedirectToURL:(id)url delay:(double)delay;
- (void)_webViewDidCancelClientRedirect:(id)redirect;
- (void)webView:(id)view didCommitNavigation:(id)navigation;
- (void)_webView:(id)view navigation:(id)navigation didSameDocumentNavigation:(long long)navigation;
- (void)_webView:(id)view authenticationChallenge:(id)challenge shouldAllowLegacyTLS:(id /* block */)tls;
- (void)_webView:(id)view didNegotiateModernTLSForURL:(id)url;
- (void)_webView:(id)view decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)policy forExtension:(id)extension completionHandler:(id /* block */)handler;
- (void)_webViewWillEndNavigationGesture:(id)gesture withNavigationToBackForwardListItem:(id)item;
- (void)_webViewDidEndNavigationGesture:(id)gesture withNavigationToBackForwardListItem:(id)item;
- (void)webView:(id)view didFinishNavigation:(id)navigation;
- (void)webView:(id)view decidePolicyForNavigationAction:(id)action preferences:(id)preferences decisionHandler:(id /* block */)handler;
- (void)webView:(id)view decidePolicyForNavigationResponse:(id)response decisionHandler:(id /* block */)handler;
- (void)webView:(id)view didFailProvisionalNavigation:(id)navigation withError:(id)error;
- (void)webView:(id)view didFailNavigation:(id)navigation withError:(id)error;
- (void)_webView:(id)view renderingProgressDidChange:(unsigned long long)change;
- (void)_webView:(id)view navigationDidFinishDocumentLoad:(id)load;
- (void)_webViewWebProcessDidCrash:(id)crash;
- (void)webView:(id)view didReceiveAuthenticationChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)_webView:(id)view didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)name uti:(id)uti;
- (void)_webView:(id)view didFinishLoadForQuickLookDocumentInMainFrame:(id)frame;
- (BOOL)formAutoFillControllerCanPrefillForm:(id)form;
- (id)formAutoFillControllerURLForFormAutoFill:(id)fill;
- (BOOL)formAutoFillControllerShouldDisableStreamlinedLogin:(id)login;
- (id)currentSavedAccountContextForFormAutoFillController:(id)controller;
- (void)formAutoFillControllerGetAuthenticationForAutoFill:(id)fill completion:(id /* block */)completion;
- (BOOL)formAutoFillControllerShouldShowIconsInPasswordPicker:(id)picker;
- (void)performPageLevelAutoFill;
- (void)formAutoFillControllerDidFocusSensitiveFormField:(id)field;
- (void)_webView:(id)view didPresentFocusedElementViewController:(id)controller;
- (void)_webView:(id)view willStartInputSession:(id)session;
- (void)_webView:(id)view didStartInputSession:(id)session;
- (void)_webViewDidShowSafeBrowsingWarning:(id)warning;
- (double)_webView:(id)view focusedElementContextViewHeightForFittingSize:(struct CGSize { double x0; double x1; })size inputSession:(id)session;
- (id)_webView:(id)view focusedElementContextViewForInputSession:(id)session;
- (long long)_webView:(id)view decidePolicyForFocusedElement:(id)element;
- (void)_webView:(id)view willSubmitFormValues:(id)values userObject:(id)object submissionHandler:(id /* block */)handler;
- (void)_webView:(id)view accessoryViewCustomButtonTappedInFormInputSession:(id)session;
- (void)_webView:(id)view insertTextSuggestion:(id)suggestion inInputSession:(id)session;
- (void)webView:(id)view runJavaScriptAlertPanelWithMessage:(id)message initiatedByFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)webView:(id)view runJavaScriptConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)webView:(id)view runJavaScriptTextInputPanelWithPrompt:(id)prompt defaultText:(id)text initiatedByFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)_webView:(id)view requestStorageAccessPanelForDomain:(id)domain underCurrentDomain:(id)domain completionHandler:(id /* block */)handler;
- (void)webViewDidClose:(id)close;
- (void)_webView:(id)view createWebViewWithConfiguration:(id)configuration forNavigationAction:(id)action windowFeatures:(id)features completionHandler:(id /* block */)handler;
- (BOOL)_webView:(id)view shouldIncludeAppLinkActionsForElement:(id)element;
- (void)_webView:(id)view printFrame:(id)frame;
- (void)_webViewDidEnterFullscreen:(id)fullscreen;
- (void)_webViewDidExitFullscreen:(id)fullscreen;
- (void)_webView:(id)view didChangeSafeAreaShouldAffectObscuredInsets:(BOOL)insets;
- (void)_webView:(id)view requestUserMediaAuthorizationForDevices:(unsigned long long)devices url:(id)url mainFrameURL:(id)url decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view checkUserMediaPermissionForURL:(id)url mainFrameURL:(id)url frameIdentifier:(unsigned long long)identifier decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view mediaCaptureStateDidChange:(unsigned long long)change;
- (void)_webView:(id)view queryPermission:(id)permission forOrigin:(id)origin completionHandler:(id /* block */)handler;
- (BOOL)_webView:(id)view fileUploadPanelContentIsManagedWithInitiatingFrame:(id)frame;
- (void)_webView:(id)view updatedAppBadge:(id)badge fromSecurityOrigin:(id)origin;
- (long long)dialogController:(id)controller presentationPolicyForDialog:(id)dialog;
- (void)dialogController:(id)controller willPresentDialog:(id)dialog;
- (void)presentDialog:(id)dialog sender:(id)sender;
- (id)permissionDialogThrottler;
- (void)dialogController:(id)controller presentViewController:(id)controller withAdditionalAnimations:(id /* block */)animations;
- (void)dialogController:(id)controller dismissViewController:(id)controller withAdditionalAnimations:(id /* block */)animations;
- (void)sfWebViewDidChangeSafeAreaInsets:(id)insets;
- (void)sfWebViewDidBecomeFirstResponder:(id)responder;
- (void)sfWebViewDidStartFormControlInteraction:(id)interaction;
- (void)sfWebViewDidEndFormControlInteraction:(id)interaction;
- (id)sfWebView:(id)view didStartDownload:(id)download;
- (BOOL)sfWebViewCanPromptForAccountSecurityRecommendation;
- (BOOL)isLoading;
@end

#endif /* SFWebViewController_h */
