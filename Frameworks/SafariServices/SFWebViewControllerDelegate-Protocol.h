//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef SFWebViewControllerDelegate_Protocol_h
#define SFWebViewControllerDelegate_Protocol_h
@import Foundation;

@protocol SFWebViewControllerDelegate <NSObject>
/* instance methods */
- (void)webViewController:(id)controller didStartProvisionalNavigation:(id)navigation;
- (void)webViewController:(id)controller didReceiveServerRedirectForProvisionalNavigation:(id)navigation;
- (void)webViewController:(id)controller willPerformClientRedirectToURL:(id)url withDelay:(double)delay;
- (void)webViewControllerDidCancelClientRedirect:(id)redirect;
- (void)webViewController:(id)controller didCommitNavigation:(id)navigation;
- (void)webViewController:(id)controller didFinishNavigation:(id)navigation;
- (void)webViewController:(id)controller didFinishDocumentLoadForNavigation:(id)navigation;
- (void)webViewControllerDidChangeLoadingState:(id)state;
- (void)webViewControllerDidChangeEstimatedProgress:(id)progress;
- (void)webViewController:(id)controller didFailNavigation:(id)navigation withError:(id)error;
- (void)webViewControllerDidFirstVisuallyNonEmptyLayout:(id)layout;
- (void)webViewController:(id)controller decidePolicyForNavigationAction:(id)action decisionHandler:(id /* block */)handler;
- (void)webViewController:(id)controller decidePolicyForNavigationResponse:(id)response decisionHandler:(id /* block */)handler;
- (void)webViewController:(id)controller didFailProvisionalNavigation:(id)navigation withError:(id)error;
- (void)webViewControllerDidChangeURL:(id)url;
- (void)webViewController:(id)controller didSameDocumentNavigation:(id)navigation ofType:(long long)type;
- (void)webViewController:(id)controller willEndNavigationGestureToBackForwardListItem:(id)item;
- (void)webViewController:(id)controller didEndNavigationGestureToBackForwardListItem:(id)item;
- (void)webViewController:(id)controller createWebViewWithConfiguration:(id)configuration forNavigationAction:(id)action completionHandler:(id /* block */)handler;
- (void)webViewController:(id)controller didStartLoadForQuickLookDocumentInMainFrameWithFileName:(id)name uti:(id)uti;
- (void)webViewController:(id)controller didFinishLoadForQuickLookDocumentInMainFrame:(id)frame;
- (void)webViewController:(id)controller webViewDidClose:(id)close;
- (void)webViewControllerWebProcessDidCrash:(id)crash;
- (void)webViewControllerWebProcessDidBecomeResponsive:(id)responsive;
- (void)webViewControllerWebProcessDidBecomeUnresponsive:(id)unresponsive;
- (void)webViewControllerDidChangeHasOnlySecureContent:(id)content;
- (void)webViewController:(id)controller didReceiveAuthenticationChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)webViewControllerWillPresentJavaScriptDialog:(id)dialog;
- (id)presentingViewControllerForWebViewController:(id)controller;
- (void)webViewController:(id)controller printFrame:(id)frame;
- (void)webViewControllerDidChangeSafeAreaInsets:(id)insets;
- (void)webViewControllerDidChangeSafeAreaShouldAffectObscuredInsets:(id)insets;
- (long long)browserPersonaForWebViewController:(id)controller;
- (long long)webViewController:(id)controller presentationPolicyForDialog:(id)dialog;
- (void)webViewController:(id)controller didChangeFullScreen:(BOOL)screen;
- (void)webViewController:(id)controller mediaCaptureStateDidChange:(unsigned long long)change;
- (void)webViewControllerUpdateNavigationBar:(id)bar;
- (id)webViewController:(id)controller didStartDownload:(id)download;
@optional
/* instance methods */
- (void)webViewControllerDidShowSafeBrowsingWarning:(id)warning;
- (void)webViewController:(id)controller authenticationChallenge:(id)challenge shouldAllowLegacyTLS:(id /* block */)tls;
- (void)authenticationChallengeDidNegotiateModernTLS:(id)tls;
- (void)webViewControllerDidFirstPaint:(id)paint;
- (void)webViewController:(id)controller decidePolicyForSOAuthorizationLoadWithCurrentPolicy:(long long)policy forExtension:(id)extension completionHandler:(id /* block */)handler;
- (BOOL)webViewControllerCanPromptForAccountSecurityRecommendation:(id)recommendation;
- (void)webViewControllerDidUpdateThemeColor:(id)color;
- (void)webViewController:(id)controller updatedAppBadge:(id)badge fromSecurityOrigin:(id)origin;
@end

#endif /* SFWebViewControllerDelegate_Protocol_h */
