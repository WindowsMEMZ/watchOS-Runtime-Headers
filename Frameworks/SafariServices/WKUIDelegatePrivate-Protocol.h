//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKUIDelegatePrivate_Protocol_h
#define WKUIDelegatePrivate_Protocol_h
@import Foundation;

@protocol WKUIDelegatePrivate <WKUIDelegate>
@optional
/* instance methods */
- (void)_webView:(id)view decideDatabaseQuotaForSecurityOrigin:(id)origin currentQuota:(unsigned long long)quota currentOriginUsage:(unsigned long long)usage currentDatabaseUsage:(unsigned long long)usage expectedUsage:(unsigned long long)usage decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view decideDatabaseQuotaForSecurityOrigin:(id)origin databaseName:(id)name displayName:(id)name currentQuota:(unsigned long long)quota currentOriginUsage:(unsigned long long)usage currentDatabaseUsage:(unsigned long long)usage expectedUsage:(unsigned long long)usage decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view decideWebApplicationCacheQuotaForSecurityOrigin:(id)origin currentQuota:(unsigned long long)quota totalBytesNeeded:(unsigned long long)needed decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view printFrame:(id)frame;
- (void)_webView:(id)view printFrame:(id)frame pdfFirstPageSize:(struct CGSize { double x0; double x1; })size completionHandler:(id /* block */)handler;
- (void)_webViewClose:(id)close;
- (void)_webViewFullscreenMayReturnToInline:(id)inline;
- (void)_webViewDidEnterFullscreen:(id)fullscreen;
- (void)_webViewDidExitFullscreen:(id)fullscreen;
- (void)_webViewRequestPointerLock:(id)lock;
- (void)_webViewDidRequestPointerLock:(id)lock completionHandler:(id /* block */)handler;
- (void)_webViewDidShowSafeBrowsingWarning:(id)warning;
- (void)_webViewDidLosePointerLock:(id)lock;
- (void)_webView:(id)view hasVideoInPictureInPictureDidChange:(BOOL)change;
- (void)_webView:(id)view shouldAllowPDFAtURL:(id)url toOpenFromFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)_webView:(id)view imageOrMediaDocumentSizeChanged:(struct CGSize { double x0; double x1; })changed;
- (id)_dataDetectionContextForWebView:(id)view;
- (void)_webView:(id)view includeSensitiveMediaDeviceDetails:(id /* block */)details;
- (void)_webView:(id)view requestDisplayCapturePermissionForOrigin:(id)origin initiatedByFrame:(id)frame withSystemAudio:(BOOL)audio decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view requestUserMediaAuthorizationForDevices:(unsigned long long)devices url:(id)url mainFrameURL:(id)url decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view checkUserMediaPermissionForURL:(id)url mainFrameURL:(id)url frameIdentifier:(unsigned long long)identifier decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view mediaCaptureStateDidChange:(unsigned long long)change;
- (unsigned long long)_webView:(id)view dragDestinationActionMaskForDraggingInfo:(id)info;
- (void)_webView:(id)view createWebViewWithConfiguration:(id)configuration forNavigationAction:(id)action windowFeatures:(id)features completionHandler:(id /* block */)handler;
- (void)_webView:(id)view requestGeolocationPermissionForFrame:(id)frame decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view requestGeolocationPermissionForOrigin:(id)origin initiatedByFrame:(id)frame decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view queryPermission:(id)permission forOrigin:(id)origin completionHandler:(id /* block */)handler;
- (void)_webView:(id)view runBeforeUnloadConfirmPanelWithMessage:(id)message initiatedByFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)_webView:(id)view editorStateDidChange:(id)change;
- (void)_webView:(id)view didRemoveAttachment:(id)attachment;
- (void)_webView:(id)view didInsertAttachment:(id)attachment withSource:(id)source;
- (void)_webView:(id)view didInvalidateDataForAttachment:(id)attachment;
- (void)_webView:(id)view didResignInputElementStrongPasswordAppearanceWithUserInfo:(id)info;
- (void)_webView:(id)view requestStorageAccessPanelForDomain:(id)domain underCurrentDomain:(id)domain completionHandler:(id /* block */)handler;
- (void)_webView:(id)view didChangeFontAttributes:(id)attributes;
- (void)_webView:(id)view takeFocus:(long long)focus;
- (void)_webView:(id)view requestWebAuthenticationNoGestureForOrigin:(id)origin completionHandler:(id /* block */)handler;
- (void)_webView:(id)view runWebAuthenticationPanel:(id)panel initiatedByFrame:(id)frame completionHandler:(id /* block */)handler;
- (void)_webView:(id)view handleAutoplayEvent:(long long)event withFlags:(unsigned long long)flags;
- (void)_webView:(id)view willShareActivityItems:(id)items;
- (void)_webView:(id)view requestSpeechRecognitionPermissionForOrigin:(id)origin decisionHandler:(id /* block */)handler;
- (void)_webViewDidEnableInspectorBrowserDomain:(id)domain;
- (void)_webViewDidDisableInspectorBrowserDomain:(id)domain;
- (void)_webView:(id)view requestPermissionForXRSessionOrigin:(id)origin mode:(long long)mode grantedFeatures:(unsigned long long)features consentRequiredFeatures:(unsigned long long)features consentOptionalFeatures:(unsigned long long)features completionHandler:(id /* block */)handler;
- (void)_webView:(id)view requestPermissionForXRSessionOrigin:(id)origin mode:(long long)mode grantedFeatures:(unsigned long long)features consentRequiredFeatures:(unsigned long long)features consentOptionalFeatures:(unsigned long long)features requiredFeaturesRequested:(unsigned long long)requested optionalFeaturesRequested:(unsigned long long)requested completionHandler:(id /* block */)handler;
- (void)_webView:(id)view startXRSessionWithCompletionHandler:(id /* block */)handler;
- (void)_webView:(id)view requestNotificationPermissionForSecurityOrigin:(id)origin decisionHandler:(id /* block */)handler;
- (void)_webViewEndXRSession:(id)xrsession;
- (void)_webView:(id)view requestCookieConsentWithMoreInfoHandler:(id /* block */)handler decisionHandler:(id /* block */)handler;
- (void)_webView:(id)view updatedAppBadge:(id)badge fromSecurityOrigin:(id)origin;
- (void)_webView:(id)view updatedClientBadge:(id)badge fromSecurityOrigin:(id)origin;
- (BOOL)_webView:(id)view shouldIncludeAppLinkActionsForElement:(id)element;
- (id)_webView:(id)view actionsForElement:(id)element defaultActions:(id)actions;
- (void)_webView:(id)view didNotHandleTapAsClickAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_webViewStatusBarWasTapped:(id)tapped;
- (void)_webView:(id)view setShouldKeepScreenAwake:(BOOL)awake;
- (void)_webView:(id)view requestGeolocationAuthorizationForURL:(id)url frame:(id)frame decisionHandler:(id /* block */)handler;
- (BOOL)_webView:(id)view fileUploadPanelContentIsManagedWithInitiatingFrame:(id)frame;
- (id)_webView:(id)view previewViewControllerForURL:(id)url;
- (void)_webView:(id)view commitPreviewedViewController:(id)controller;
- (void)_webView:(id)view willPreviewImageWithURL:(id)url;
- (void)_webView:(id)view commitPreviewedImageWithURL:(id)url;
- (void)_webView:(id)view didDismissPreviewViewController:(id)controller committing:(BOOL)committing;
- (void)_webView:(id)view didDismissPreviewViewController:(id)controller;
- (BOOL)_webView:(id)view showCustomSheetForElement:(id)element;
- (void)_webView:(id)view alternateActionForURL:(id)url;
- (id)_attachmentListForWebView:(id)view;
- (id)_attachmentListForWebView:(id)view sourceIsManaged:(BOOL *)managed;
- (unsigned long long)_webView:(id)view indexIntoAttachmentListForElement:(id)element;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_webView:(id)view finalObscuredInsetsForScrollView:(id)view withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)offset;
- (id)_contextMenuHintPreviewContainerViewForWebView:(id)view;
- (id)_webView:(id)view previewViewControllerForURL:(id)url defaultActions:(id)actions elementInfo:(id)info;
- (id)_webView:(id)view previewViewControllerForAnimatedImageAtURL:(id)url defaultActions:(id)actions elementInfo:(id)info imageSize:(struct CGSize { double x0; double x1; })size;
- (id)_presentingViewControllerForWebView:(id)view;
- (void)_webView:(id)view getAlternateURLFromImage:(id)image completionHandler:(id /* block */)handler;
- (id)_webView:(id)view alternateURLFromImage:(id)image userInfo:(id *)info;
- (id)_webView:(id)view previewViewControllerForImage:(id)image alternateURL:(id)url defaultActions:(id)actions elementInfo:(id)info;
- (id)_webView:(id)view adjustedDataInteractionItemProviders:(id)providers;
- (id)_webView:(id)view adjustedDataInteractionItemProvidersForItemProvider:(id)provider representingObjects:(id)objects additionalData:(id)data;
- (BOOL)_webView:(id)view performDataInteractionOperationWithItemProviders:(id)providers;
- (void)_webView:(id)view dataInteraction:(id)interaction sessionWillBegin:(id)begin;
- (void)_webView:(id)view dataInteraction:(id)interaction session:(id)session didEndWithOperation:(unsigned long long)operation;
- (void)_webView:(id)view dataInteractionOperationWasHandled:(BOOL)handled forSession:(id)session itemProviders:(id)providers;
- (unsigned long long)_webView:(id)view willUpdateDataInteractionOperationToOperation:(unsigned long long)operation forSession:(id)session;
- (void)_webView:(id)view didChangeSafeAreaShouldAffectObscuredInsets:(BOOL)insets;
- (void)_webView:(id)view didPresentFocusedElementViewController:(id)controller;
- (void)_webView:(id)view didDismissFocusedElementViewController:(id)controller;
- (BOOL)_webView:(id)view gestureRecognizerCouldPinch:(id)pinch;
- (BOOL)_webViewCanBecomeFocused:(id)focused;
- (BOOL)_webView:(id)view touchEventsMustRequireGestureRecognizerToFail:(id)fail;
- (BOOL)_webView:(id)view gestureRecognizerCanBePreventedByTouchEvents:(id)events;
@end

#endif /* WKUIDelegatePrivate_Protocol_h */
