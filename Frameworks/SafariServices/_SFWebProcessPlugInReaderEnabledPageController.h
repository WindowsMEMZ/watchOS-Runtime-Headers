//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef _SFWebProcessPlugInReaderEnabledPageController_h
#define _SFWebProcessPlugInReaderEnabledPageController_h
@import Foundation;

#include "_SFWebProcessPlugInAutoFillPageController.h"
#include "SFReaderEventsListener-Protocol.h"
#include "SFReaderWebProcessControllerProtocol-Protocol.h"
#include "SFWebProcessPlugInPageExtensionController.h"
#include "_SFReaderWebProcessPlugInPageController.h"
#include "_SFWebProcessSharingLinkExtractor.h"

@class NSDictionary, NSString, NSTimer, _WKRemoteObjectInterface;
@protocol {unique_ptr<SafariServices::ReaderAvailabilityController, std::default_delete<SafariServices::ReaderAvailabilityController>>="__ptr_"{__compressed_pair<SafariServices::ReaderAvailabilityController *, std::default_delete<SafariServices::ReaderAvailabilityController>>="__value_"^{ReaderAvailabilityController}}};

@interface _SFWebProcessPlugInReaderEnabledPageController : _SFWebProcessPlugInAutoFillPageController<SFReaderWebProcessControllerProtocol> {
  /* instance variables */
  struct unique_ptr<SafariServices::ReaderAvailabilityController, std::default_delete<SafariServices::ReaderAvailabilityController>> { struct __compressed_pair<SafariServices::ReaderAvailabilityController *, std::default_delete<SafariServices::ReaderAvailabilityController>> { struct ReaderAvailabilityController *__value_; } __ptr_; } _readerAvailabilityController;
  _WKRemoteObjectInterface *_availabilityControllerInterface;
  NSObject<SFReaderEventsListener> *_readerActivityListenerProxy;
  NSDictionary *_initialScrollPositionAsDictionary;
  SFWebProcessPlugInPageExtensionController *_extensionController;
  _SFWebProcessSharingLinkExtractor *_sharingLinkExtractor;
  id _parserYieldToken;
  NSTimer *_relinquishParserYieldTokenTimer;
}

@property (retain, nonatomic) _SFReaderWebProcessPlugInPageController *readerPageController;
@property (copy, nonatomic) NSDictionary *initalArticleScrollPositionAsDictionary;
@property (nonatomic) long long cachedReaderTopScrollOffset;
@property (readonly, nonatomic) NSDictionary *initialReaderConfiguration;
@property (readonly, nonatomic) BOOL viewingReadingListArchive;
@property (readonly, nonatomic) BOOL readerHasBeenActivatedRecently;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithPlugIn:(id)in contextController:(id)controller;
- (void)willDestroyBrowserContextController:(id)controller;
- (void)articleContentDidChange;
- (void)didDetermineReaderAvailability:(id)availability;
- (void)_takeParserYieldTokenWithTimeLimit;
- (void)_relinquishParserYieldToken;
- (void)_setUpReaderActivityListenerProxy;
- (void)_setUpReaderControllerInterface;
- (void)_clearReaderControllerInterface;
- (void)_detectAvailabilityAfterDelay:(double)delay loadEvent:(int)event;
- (void)_detectReaderAvailabilityAfterSameDocumentNavigation;
- (struct OpaqueJSValue *)originalArticleFinder;
- (void)setReaderInitialTopScrollOffset:(long long)offset configuration:(id)configuration isViewingArchive:(BOOL)archive;
- (void)setConfiguration:(id)configuration;
- (void)activateFont:(id)font;
- (void)setReaderIsActive:(BOOL)active;
- (void)setArticleLocale:(id)locale;
- (void)didFinishPresentationUpdateAfterTransitioningToReader;
- (void)checkReaderAvailability;
- (void)prepareToTransitionToReader;
- (void)didCreateReaderPageContextHandle:(id)handle;
- (void)loadNewReaderArticle;
- (void)collectReadingListItemInfoWithBookmarkID:(id)id;
- (void)didSetReaderConfiguration:(id)configuration;
- (void)readerContentDidBecomeReadyWithArticleText:(id)text;
- (void)collectReaderContentForMail;
- (void)prepareReaderContentForPrinting;
- (void)collectArticleContent;
- (void)webProcessPlugInBrowserContextController:(id)controller didStartProvisionalLoadForFrame:(id)frame;
- (void)webProcessPlugInBrowserContextController:(id)controller globalObjectIsAvailableForFrame:(id)frame inScriptWorld:(id)world;
- (void)webProcessPlugInBrowserContextController:(id)controller willInjectUserScriptForFrame:(id)frame inScriptWorld:(id)world;
- (void)webProcessPlugInBrowserContextController:(id)controller didCommitLoadForFrame:(id)frame;
- (void)webProcessPlugInBrowserContextController:(id)controller didSameDocumentNavigation:(long long)navigation forFrame:(id)frame;
- (void)webProcessPlugInBrowserContextController:(id)controller didFinishDocumentLoadForFrame:(id)frame;
- (void)webProcessPlugInBrowserContextController:(id)controller didFinishLoadForFrame:(id)frame;
- (void)webProcessPlugInBrowserContextController:(id)controller renderingProgressDidChange:(unsigned long long)change;
- (BOOL)isViewingReadingListArchive;
@end

#endif /* _SFWebProcessPlugInReaderEnabledPageController_h */
