//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef _SFWebAppServiceViewController_h
#define _SFWebAppServiceViewController_h
@import Foundation;

#include "SFBrowserServiceViewController.h"
#include "SFMediaRecordingDocument-Protocol.h"
#include "SFWebAppServiceViewControllerProtocol-Protocol.h"
#include "_SFInjectedJavaScriptController.h"
#include "_SFWebClipMetadataFetcher.h"
#include "_WKWebsiteDataStoreDelegate-Protocol.h"

@class BKSApplicationStateMonitor, NSMutableArray, NSString, UIColor, UIView, UIWebClip, WBSApplicationManifestFetcher, WKProcessPool, WKWebsiteDataStore;

@interface _SFWebAppServiceViewController : SFBrowserServiceViewController<SFWebAppServiceViewControllerProtocol, _WKWebsiteDataStoreDelegate, SFMediaRecordingDocument> {
  /* instance variables */
  UIWebClip *_webClip;
  UIView *_statusBarBackgroundView;
  WKProcessPool *_processPool;
  WKWebsiteDataStore *_websiteDataStore;
  NSMutableArray *_fallbackURLs;
  BKSApplicationStateMonitor *_stateMonitor;
  unsigned int _hostState;
  unsigned long long _mediaStateIconBeforeSuspension;
  WBSApplicationManifestFetcher *_applicationManifestFetcher;
  _SFInjectedJavaScriptController *_activityJSController;
  _SFWebClipMetadataFetcher *_webClipMetadataFetcher;
  UIColor *_themeColor;
  BOOL _updatingThemeColor;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL canOverrideStatusBar;
@property (readonly, nonatomic) BOOL audioOnly;
@property (readonly, copy, nonatomic) NSString *URLString;

/* class methods */
+ (id)serviceViewControllers;
+ (id)_remoteViewControllerInterface;
+ (id)_exportedInterface;

/* instance methods */
- (BOOL)_clientIsWebApp;
- (void)dealloc;
- (void)clearWebViewAndWebsiteDataWithCompletion:(id /* block */)completion;
- (void)clearWebsiteDataWithWebClipIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)viewDidLoad;
- (long long)preferredStatusBarStyle;
- (void)setNeedsStatusBarAppearanceUpdate;
- (void)_hostApplicationDidEnterBackground;
- (void)webAppDidBecomeActive;
- (void)webAppWillResignActive;
- (void)webViewControllerDidChangeLoadingState:(id)state;
- (void)webViewControllerDidFirstVisuallyNonEmptyLayout:(id)layout;
- (void)webViewController:(id)controller decidePolicyForNavigationAction:(id)action decisionHandler:(id /* block */)handler;
- (BOOL)_isURLOutOfManifestScope:(id)scope;
- (BOOL)_isURLOutOfLegacyScope:(id)scope withLoginURLExempted:(BOOL)urlexempted;
- (BOOL)_isURLOutOfScope:(id)scope withLoginURLExempted:(BOOL)urlexempted;
- (void)webViewController:(id)controller didFailProvisionalNavigation:(id)navigation withError:(id)error;
- (void)webViewController:(id)controller didFinishNavigation:(id)navigation;
- (void)webViewControllerDidChangeURL:(id)url;
- (void)_updateDisplayMode;
- (void)webViewControllerDidUpdateThemeColor:(id)color;
- (BOOL)canPrint;
- (id)websiteDataStoreConfigurationWithWebClipIdentifier:(id)identifier;
- (id)createWebsiteDataStoreForWebClipIdentifier:(id)identifier;
- (id)websiteDataStore;
- (void)_setUpCookieStoragePolicyForDataStore:(id)store;
- (void)setupPreferences:(id)preferences;
- (id)webViewConfiguration;
- (void)_setCurrentWebViewController:(id)controller;
- (BOOL)_usesScrollToTopView;
- (id)processPool;
- (void)_initialLoadFinishedWithSuccess:(BOOL)success;
- (long long)_persona;
- (void)navigationBarDoneButtonWasTapped:(id)tapped;
- (void)loadWebAppWithIdentifier:(id)identifier;
- (void)_handleHostStateUpdate:(id)update;
- (id)_canonicalPageURL;
- (void)_loadWebClipPageURL:(id)url;
- (void)_loadNextFallbackURL;
- (void)setMediaStateIcon:(unsigned long long)icon;
- (void)muteMediaCapture;
- (void)statusBarIndicatorTappedWithCompletionHandler:(id /* block */)handler;
- (void)_fetchApplicationManifestIfNeeded;
- (void)_updateThemeColor;
@end

#endif /* _SFWebAppServiceViewController_h */
