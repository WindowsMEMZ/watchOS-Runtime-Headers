//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef SFPasswordPickerServiceViewController_h
#define SFPasswordPickerServiceViewController_h
@import Foundation;

#include "SFPasswordServiceViewController.h"
#include "SFAccountPickerViewController.h"
#include "SFPasswordPickerServiceViewControllerProtocol-Protocol.h"
#include "UIPresentationControllerDelegatePrivate-Protocol.h"
#include "_SFAuthenticationClient-Protocol.h"
#include "_SFAuthenticationContext.h"
#include "_SFAuthenticationContextDelegate-Protocol.h"

@class NSArray, NSString, NSURL, WBSGlobalFrameIdentifier, _ASIncomingCallObserver;

@interface SFPasswordPickerServiceViewController : SFPasswordServiceViewController<UIPresentationControllerDelegatePrivate, _SFAuthenticationClient, _SFAuthenticationContextDelegate, SFPasswordPickerServiceViewControllerProtocol> {
  /* instance variables */
  SFAccountPickerViewController *_accountPickerViewController;
  BOOL _presentInPopover;
  BOOL _hasAuthenticationForOtherPasswords;
  NSURL *_webViewURL;
  _SFAuthenticationContext *_context;
  NSString *_remoteAppID;
  NSString *_remoteLocalizedAppName;
  NSString *_remoteUnlocalizedAppName;
  NSArray *_externallyVerifiedAssociatedDomains;
  double _authenticationGracePeriod;
  WBSGlobalFrameIdentifier *_webFrameIdentifier;
  NSString *_credentialType;
  id /* block */ _presentCredentialsHandler;
  _ASIncomingCallObserver *_callObserver;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_remoteViewControllerInterface;
+ (id)_exportedInterface;

/* instance methods */
- (id)authenticationCustomUIProgressObserverForContext:(id)context;
- (id)authenticationMessageForContext:(id)context;
- (id)passcodePromptForContext:(id)context;
- (BOOL)displayMessageAsTitleForContext:(id)context;
- (BOOL)contextRequiresSessionBasedAuthentication:(id)authentication;
- (BOOL)contextShouldAllowPasscodeFallback:(id)fallback;
- (BOOL)contextShouldAllowMultipleBiometricFailures:(id)failures;
- (id)_context;
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)viewDidAppear:(BOOL)appear;
- (void)_dismiss;
- (void)_authenticateToViewOtherPasswordsWithCompletion:(id /* block */)completion;
- (void)presentationControllerDidDismiss:(id)dismiss;
- (void)authenticateToPresentInPopover:(BOOL)popover savedAccountContext:(id)context completion:(id /* block */)completion;
- (void)_fillCredential:(id)credential needsAuthentication:(BOOL)authentication;
- (void)_authenticateAndSetPresentCredentialsHandlerWithSavedAccountContext:(id)context completionHandler:(id /* block */)handler;
- (void)_sendCredentialToClientAndDismiss:(id)dismiss;
- (BOOL)_isClientEntitledToDirectlyReceiveCredentials;
- (void)setWebViewURL:(id)url;
- (void)setRemoteAppID:(id)id;
- (void)setRemoteLocalizedAppName:(id)name;
- (void)setRemoteUnlocalizedAppName:(id)name;
- (void)setExternallyVerifiedAndApprovedSharedWebCredentialsDomains:(id)domains;
- (void)setAuthenticationGracePeriod:(double)period;
- (void)setPageID:(id)id frameID:(id)id credentialType:(id)type;
@end

#endif /* SFPasswordPickerServiceViewController_h */
