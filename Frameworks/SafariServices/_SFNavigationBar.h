//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef _SFNavigationBar_h
#define _SFNavigationBar_h
@import Foundation;

#include "UIView.h"
#include "SFDismissButton.h"
#include "SFNavigationBarAccessoryButtonArrangement.h"
#include "SFNavigationBarItemObserver-Protocol.h"
#include "SFNavigationBarMetrics.h"
#include "SFToolbarContainer.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "_SFFluidProgressViewDelegate-Protocol.h"
#include "_SFNavigationBarCommon-Protocol.h"
#include "_SFNavigationBarDelegate-Protocol.h"
#include "_SFNavigationBarLabelsContainer.h"
#include "_SFNavigationBarTheme.h"
#include "_SFNavigationBarURLButton.h"
#include "_SFNavigationBarURLButtonDelegate-Protocol.h"
#include "_SFToolbar.h"
#include "_UIBasicAnimationFactory-Protocol.h"

@class NSArray, NSAttributedString, NSString, NSTimer, SFNavigationBarItem, SFNavigationBarToggleButton, SFURLLabel, UIBlurEffect, UIButton, UIImageView, UILabel, UITextField, UIView, UIVisualEffectView, _SFBarTheme, _SFDimmingButton, _SFFluidProgressView;
@protocol _SFPopoverSourceInfo;

@interface _SFNavigationBar : UIView<UIGestureRecognizerDelegate, _SFFluidProgressViewDelegate, _SFNavigationBarURLButtonDelegate, _UIBasicAnimationFactory, SFNavigationBarItemObserver, _SFNavigationBarCommon> {
  /* instance variables */
  UIButton *_compressedBarButton;
  UIView *_controlsContainer;
  _SFNavigationBarLabelsContainer *_labelsContainer;
  UIView *_labelScalingContainer;
  SFURLLabel *_URLLabel;
  UILabel *_expandedURLLabel;
  UILabel *_privateBrowsingLabel;
  UILabel *_availabilityLabel;
  UILabel *_securityAnnotationLabel;
  double _expandedURLWidth;
  double _expandedURLHeight;
  double _offsetOfURLInExpandedURL;
  UIView *_URLContainer;
  UIView *_URLContainerClipView;
  UIView *_fakeTextFieldSelectionView;
  double _fakeSelectionStartOffset;
  double _fakeSelectionEndOffset;
  UIButton *_fakeClearButton;
  BOOL _usesLiftedAppearance;
  _SFToolbar *_leadingToolbar;
  _SFToolbar *_trailingToolbar;
  SFToolbarContainer *_leadingToolbarContainer;
  SFToolbarContainer *_trailingToolbarContainer;
  struct CGSize { double width; double height; } _cachedSecurityAnnotationLabelFittingSize;
  UIView *_securityAnnotationContainer;
  BOOL _shouldAnimateURLMovement;
  SFNavigationBarMetrics *_barMetrics;
  BOOL _shouldHidePlaceholderURLItemsForPencilInput;
  UIImageView *_searchIndicator;
  UIImageView *_squishedSearchIndicator;
  UIView *_squishedURLAccessoryItemsContainer;
  NSArray *_URLAccessoryItems;
  _SFNavigationBarURLButton *_URLOutline;
  _SFFluidProgressView *_progressView;
  UIVisualEffectView *_backdrop;
  UIView *_separator;
  NSAttributedString *_attributedTextWhenExpanded;
  SFNavigationBarAccessoryButtonArrangement *_accessoryButtonArrangement;
  SFNavigationBarToggleButton *_formatToggleButton;
  _SFDimmingButton *_stopButton;
  _SFDimmingButton *_reloadButton;
  UIButton *_mediaStateMuteButton;
  long long _visibleTrailingButtonType;
  long long _formatButtonTapAction;
  UIButton *_cancelButton;
  double _cancelButtonIntrinsicWidth;
  NSTimer *_availabilityLabelHideTimer;
  id /* block */ _readerAvailabilityAnimationBlock;
  SFDismissButton *_dismissButton;
  unsigned long long _inputMode;
  BOOL _lockViewNeedsUpdate;
  UIVisualEffectView *_lockEffectView;
  UIVisualEffectView *_squishedLockEffectView;
  UIImageView *_squishedLockView;
  UIImageView *_lockView;
}

@property (retain, nonatomic) SFNavigationBarItem *item;
@property (nonatomic) BOOL usesNarrowLayout;
@property (nonatomic) BOOL unifiedFieldShowsProgressView;
@property (retain, nonatomic) _SFBarTheme *theme;
@property (readonly, nonatomic) _SFNavigationBarTheme *effectiveTheme;
@property (nonatomic) BOOL hasToolbar;
@property (nonatomic) BOOL controlsHidden;
@property (nonatomic) BOOL expanded;
@property (readonly, nonatomic) UITextField *textField;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } URLOutlineFrameInNavigationBarSpace;
@property (nonatomic) BOOL backdropGroupDisabled;
@property (copy, nonatomic) NSString *backdropGroupName;
@property (weak, nonatomic) NSObject<_SFNavigationBarDelegate> *delegate;
@property (readonly, nonatomic) double defaultHeight;
@property (readonly, nonatomic) double minimumHeight;
@property (readonly, nonatomic) double controlsAlpha;
@property (nonatomic) double contentUnderStatusBarHeight;
@property (nonatomic) BOOL suppressesBlur;
@property (nonatomic) BOOL usesFaintSeparator;
@property (readonly, nonatomic) double visualHeight;
@property (nonatomic) double maximumHeight;
@property (nonatomic) double minimumBackdropHeight;
@property (retain, nonatomic) UIView *inputAccessoryView;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } dismissButtonSize;
@property (readonly, nonatomic) double dismissButtonPadding;
@property (readonly, nonatomic) BOOL sendingBarMetricsChangeNotification;
@property (readonly, nonatomic) UIBlurEffect *backdropEffect;
@property (readonly, nonatomic) NSObject<_SFPopoverSourceInfo> *formatMenuButtonPopoverSourceInfo;
@property (readonly, nonatomic) NSObject<_SFPopoverSourceInfo> *reloadButtonPopoverSourceInfo;
@property (readonly, nonatomic) NSObject<_SFPopoverSourceInfo> *URLOutlinePopoverSourceInfo;
@property (readonly, copy, nonatomic) NSArray *popoverPassthroughViews;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (long long)_metricsCategory;
+ (double)estimatedDefaultHeightForStatusBarHeight:(double)height;
+ (double)estimatedMinimumHeightForStatusBarHeight:(double)height;
+ (double)separatorHeight;

/* instance methods */
- (void)setDismissButtonStyle:(long long)style animated:(BOOL)animated;
- (void)setDismissButtonHidden:(BOOL)hidden;
- (void)_barMetricTraitsDidChange;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame inputMode:(unsigned long long)mode;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (void)_reloadButtonPressed;
- (void)_stopButtonPressed;
- (void)_compressedBarTapped;
- (void)_URLTapped:(id)urltapped;
- (void)_formatToggleButtonTapped:(id)tapped;
- (void)_mediaStateMuteButtonTapped:(id)tapped;
- (void)_cancelButtonTapped:(id)tapped;
- (void)_dismissButtonTapped:(id)tapped;
- (double)_controlsAlpha;
- (void)tintColorDidChange;
- (void)fluidProgressViewWillShowProgress:(id)progress;
- (void)fluidProgressViewDidShowProgress:(id)progress;
- (void)layoutSubviews;
- (void)clearEphemeralUI;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (void)_updateText;
- (void)setExpanded:(BOOL)expanded completionHandler:(id /* block */)handler;
- (void)setExpanded:(BOOL)expanded textFieldSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)setExpanded:(BOOL)expanded textFieldSelectionRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range completionHandler:(id /* block */)handler;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })urlOutlineFrameRelativeToView:(id)view;
- (void)_updateShowsLockIcon;
- (void)_hideAvailabilityLabelNow;
- (void)_updateAvailabilityButtonVisibilityForType:(long long)type animated:(BOOL)animated showAvailabilityText:(BOOL)text adjustURLLabels:(BOOL)urllabels;
- (void)_updateSecurityWarningsVisibility;
- (id)_placeholderText;
- (id)textForNavigationBarURLButton:(id)urlbutton;
- (BOOL)navigationBarURLButton:(id)urlbutton shouldShowMenuForGestureWithRecognizer:(id)recognizer;
- (void)navigationBarURLButtonDidReceiveCopyCommand:(id)command;
- (void)navigationBarURLButtonDidReceivePasteCommand:(id)command;
- (BOOL)navigationBarURLButtonShouldCopy:(id)copy;
- (BOOL)navigationBarURLButtonShouldPaste:(id)paste;
- (id)textFieldForNavigationBarURLButton:(id)urlbutton;
- (void)navigationBarURLButtonDidRequestFocusForPencilInput:(id)input completionHandler:(id /* block */)handler;
- (void)navigationBarURLButtonBeginSuppressingPlaceholder:(id)placeholder;
- (void)navigationBarURLButtonEndSuppressingPlaceholder:(id)placeholder;
- (BOOL)textFieldIsEditableForNavigationBarURLButton:(id)urlbutton;
- (BOOL)navigationBarURLButton:(id)urlbutton canWriteAtLocation:(struct CGPoint { double x0; double x1; })location;
- (BOOL)navigationBarURLButtonIsUsingNarrowLayout:(id)layout;
- (id)_basicAnimationForView:(id)view withKeyPath:(id)path;
- (id)_timingFunctionForAnimation;
- (BOOL)canBecomeFirstResponder;
- (id)newTextField;
- (double)placeholderHorizontalInset;
- (void)setTextFieldPlaceHolderColor:(id)color;
- (void)animateSafariIconLinkFromPoint:(struct CGPoint { double x0; double x1; })point inView:(id)view;
- (void)animateLinkImage:(struct CGImage *)image fromRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect inView:(id)view toBarItem:(long long)item afterImageDisappearsBlock:(id /* block */)block afterDestinationLayerBouncesBlock:(id /* block */)block;
- (id)popoverSourceInfoForBarItem:(long long)item;
- (BOOL)containsBarItem:(long long)item;
- (void)navigationBarItemDidUpdateText:(id)text;
- (void)navigationBarItemDidUpdateShowsLockIcon:(id)icon;
- (void)navigationBarItemDidUpdateShowsSearchIndicator:(id)indicator;
- (void)navigationBarItemDidUpdateShowsStopReloadButtons:(id)buttons;
- (void)navigationBarItemDidUpdateStopReloadButtonShowsStop:(id)stop;
- (void)navigationBarItemDidUpdateFormatButtonSelected:(id)selected;
- (void)navigationBarItemDidUpdateOverrideBarStyleForSecurityWarning:(id)warning;
- (void)navigationBarItemDidUpdateShowsPageFormatButton:(id)button;
- (void)navigationBarItemDidUpdateShowsReaderButton:(id)button;
- (void)navigationBarItemDidUpdateMediaStateIcon:(id)icon;
- (void)navigationBarItemDidUpdateSecurityAnnotation:(id)annotation;
- (void)navigationBarItemDidUpdateCustomPlaceholderText:(id)text;
- (void)navigationBarItemDidUpdateTextHasEVCertificateTint:(id)tint;
- (void)navigationBarItemDidUpdateLockIconHasEVCertificateTint:(id)tint;
- (BOOL)areControlsHidden;
- (BOOL)isExpanded;
- (BOOL)isBackdropGroupDisabled;
- (BOOL)isSendingBarMetricsChangeNotification;
@end

#endif /* _SFNavigationBar_h */
