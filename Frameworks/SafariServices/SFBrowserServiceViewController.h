//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef SFBrowserServiceViewController_h
#define SFBrowserServiceViewController_h
@import Foundation;

#include "_SFBrowserContentViewController.h"
#include "ASSafariViewServiceHostWindowSceneProviding-Protocol.h"
#include "SFServiceViewControllerProtocol-Protocol.h"
#include "_SFActivityDelegate-Protocol.h"
#include "_SFLinkPreviewHeaderDelegate-Protocol.h"
#include "_SFSafariViewControllerPrewarmingRequestThrottler.h"
#include "_SFWebViewUsageMonitor.h"

@class NSDate, NSString, NSTimer, SFSystemAlert, WKProcessPool, WKWebsiteDataStore;

@interface SFBrowserServiceViewController : _SFBrowserContentViewController<_SFActivityDelegate, _SFLinkPreviewHeaderDelegate, SFServiceViewControllerProtocol, ASSafariViewServiceHostWindowSceneProviding> {
  /* instance variables */
  id /* block */ _activityViewControllerInfoFetchCompletionHandler;
  _SFWebViewUsageMonitor *_usageMonitor;
  NSDate *_lastHostApplicationSuspendDate;
  WKProcessPool *_processPool;
  WKWebsiteDataStore *_persistentDataStore;
  BOOL _canNotifyHostApplicationOfRedirects;
  BOOL _touchEventsShouldStopRedirectNotifications;
  BOOL _isExpectingClientRedirect;
  BOOL _hasBegunFirstNavigation;
  BOOL _hasConnectedToHostApplication;
  NSTimer *_redirectNotificationTimer;
  BOOL _hostApplicationIsForeground;
  _SFSafariViewControllerPrewarmingRequestThrottler *_prewarmingRequestThrottler;
  BOOL _isUsedForAuthentication;
}

@property (retain, nonatomic) SFSystemAlert *webAuthenticationDataSharingConfirmation;
@property (copy, nonatomic) NSString *hostApplicationCallbackURLScheme;
@property (nonatomic) BOOL _isUsedForAuthentication;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_remoteViewControllerInterface;
+ (id)_exportedInterface;
+ (id)hostWindowSceneIdentifierForServiceWindowSceneIdentifier:(id)identifier;
+ (void)setHostWindowSceneIdentifier:(id)identifier forServiceViewController:(id)controller;

/* instance methods */
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (void)dealloc;
- (void)_willAppearInRemoteViewController;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewDidDisappear:(BOOL)disappear;
- (void)setDisplayMode:(long long)mode;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)setPreferredBarTintColor:(id)color controlTintColor:(id)color;
- (id)processPoolConfiguration;
- (void)updateScrollViewIndicatorVerticalInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets horizontalInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (id)contentScrollViewForEdge:(unsigned long long)edge;
- (id)processPool;
- (void)loadURL:(id)url;
- (void)decideCookieSharingForURL:(id)url callbackURLScheme:(id)urlscheme;
- (void)startResolveRedirectionForURL:(id)url;
- (void)prepareForDisplayWithCompletionHandler:(id /* block */)handler;
- (void)requestPrewarmingWithTokens:(id)tokens;
- (void)invalidatePrewarmingTokenWithID:(unsigned long long)id;
- (void)_prewarmConnectionsToURLs:(id)urls;
- (void)clearWebsiteDataWithCompletionHandler:(id /* block */)handler;
- (void)setHostWindowSceneIdentifier:(id)identifier;
- (void)_didResolveDestinationURL:(id)url pendingAppLinkCheck:(BOOL)check;
- (void)openCurrentURLInSafariFromPreviewAction;
- (void)_openCurrentURLInSafari;
- (id)_safariWebDataStoreRootURL;
- (id)_sharedWebDataStoreRootURL;
- (id)_webDataStoreRootURL;
- (id)_websiteDataStoreURL;
- (id)_cookieStoreURL;
- (BOOL)_ensureWebsiteDataStoreURL:(id)url cookieStoreURL:(id)url;
- (id)websiteDataStoreConfiguration;
- (id)_createPersistentDataStoreWithConfiguration:(id)configuration;
- (void)_getSafariDataSharingModeWithCompletion:(id /* block */)completion;
- (void)didFetchCustomActivities:(id)activities excludedActivityTypes:(id)types;
- (void)_fetchActivityViewControllerInfoForURL:(id)url title:(id)title completion:(id /* block */)completion;
- (void)repostNotificationInViewService:(id)service;
- (void)setIsRunningTransitionAnimation:(BOOL)animation;
- (void)setDismissButtonStyle:(long long)style;
- (void)didDetectRemoteViewControllerViewIsHidden;
- (void)didDetectUserInteractionFromHostApp;
- (void)didRequestShowLinkPreviews:(BOOL)previews;
- (void)_dismiss;
- (void)_updateRemoteSwipeGestureState;
- (BOOL)_notifyInitialLoadDidFinish:(BOOL)finish;
- (BOOL)_redirectToHostAppWithExpectedCallbackSchemeIfPossible:(id)possible;
- (BOOL)_redirectToHostAppWithNavigationResult:(id)result options:(id)options;
- (BOOL)_willURLOpenHostApp:(id)app;
- (void)_didLoadWebView;
- (void)_hostApplicationWillEnterForeground;
- (void)_hostApplicationDidEnterBackground;
- (void)closeDatabasesOnBackgroundingOrDismissal;
- (id)_applicationPayloadForOpeningInSafari;
- (id)bundleIdentifierForProfileInstallation;
- (long long)_persona;
- (id)_hostAppBundleId;
- (BOOL)_shouldReloadImmediatelyAfterPageLoadError;
- (void)webViewController:(id)controller didReceiveServerRedirectForProvisionalNavigation:(id)navigation;
- (void)webViewControllerDidCancelClientRedirect:(id)redirect;
- (void)webViewController:(id)controller willPerformClientRedirectToURL:(id)url withDelay:(double)delay;
- (void)webViewController:(id)controller didStartProvisionalNavigation:(id)navigation;
- (void)webViewController:(id)controller didFinishDocumentLoadForNavigation:(id)navigation;
- (void)webViewController:(id)controller didChangeFullScreen:(BOOL)screen;
- (void)webViewControllerWebProcessDidCrash:(id)crash;
- (void)safariActivity:(id)activity didFinish:(BOOL)finish;
- (void)browserViewDidReceiveTouchEvent:(id)event;
- (void)linkPreviewHeader:(id)header didEnableLinkPreview:(BOOL)preview;
- (id)_hostApplicationBundleIdentifier;
- (id)_remoteViewControllerProxy;
- (id)_remoteViewControllerProxyWithErrorHandler:(id /* block */)handler;
- (int)_hostProcessIdentifier;
- (struct { unsigned int x0[8] })_hostAuditToken;
@end

#endif /* SFBrowserServiceViewController_h */
