//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef SFSafariViewController_h
#define SFSafariViewController_h
@import Foundation;

#include "UIViewController.h"
#include "SFBrowserRemoteViewController.h"
#include "SFBrowserRemoteViewControllerDelegate-Protocol.h"
#include "SFInteractiveDismissController.h"
#include "SFInteractiveDismissControllerDelegate-Protocol.h"
#include "SFQueueingServiceViewControllerProxyDelegate-Protocol.h"
#include "SFSafariLaunchPlaceholderView.h"
#include "SFSafariViewControllerConfiguration.h"
#include "SFSafariViewControllerDelegate-Protocol.h"
#include "_SFLinkPreviewHeaderDelegate-Protocol.h"
#include "_UIRemoteViewControllerContaining-Protocol.h"
#include "_UIViewBoundingPathChangeObserver-Protocol.h"

@class NSArray, NSMutableDictionary, NSNumber, NSString, NSURL, UIColor, UIView, _UIAsyncInvocation, _WKActivatedElementInfo;
@protocol SFQueueingServiceViewControllerProxy<SFServiceViewControllerProtocol;

@interface SFSafariViewController : UIViewController<SFBrowserRemoteViewControllerDelegate, SFInteractiveDismissControllerDelegate, SFQueueingServiceViewControllerProxyDelegate, _SFLinkPreviewHeaderDelegate, _UIRemoteViewControllerContaining, _UIViewBoundingPathChangeObserver> {
  /* instance variables */
  NSNumber *_adoptsPlatformConventions;
  BOOL _didHandlerURLExternally;
  BOOL _hasBeenDisplayedAtLeastOnce;
  SFSafariLaunchPlaceholderView *_launchPlaceholderView;
  BOOL _urlLikelyForAuthentication;
  BOOL _usesCompatibilityPlaceholder;
  SFBrowserRemoteViewController *_remoteViewController;
  _UIAsyncInvocation *_cancelViewServiceRequest;
  BOOL _remoteViewControllerHasBeenAdded;
  BOOL _hasNotifiedDelegateAboutInitialLoadCompleted;
  BOOL _hasRestartedViewService;
  NSArray *_customActivities;
  NSMutableDictionary *_activitiesMap;
  NSArray *_activityItemsForCustomActivities;
  BOOL _swipeGestureEnabled;
  SFInteractiveDismissController *_interactiveDismissController;
  long long _displayMode;
  BOOL _viewSizeIsTransitioning;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _verticalScrollIndicatorBaseInsets;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _horizontalScrollIndicatorBaseInsets;
  BOOL _didInitializeViewService;
  UIView *_nanoHeaderView;
  _WKActivatedElementInfo *_activatedElementInfo;
  NSArray *_previewActions;
}

@property (readonly, nonatomic) SFQueueingServiceViewControllerProxy<SFServiceViewControllerProtocol> *serviceProxy;
@property (readonly, nonatomic) NSURL *initialURL;
@property (nonatomic) BOOL defersAddingRemoteViewController;
@property (nonatomic) BOOL _showingLinkPreview;
@property (nonatomic) BOOL _showingLinkPreviewWithMinimalUI;
@property (retain, nonatomic) NSArray *_previewActions;
@property (retain, nonatomic) _WKActivatedElementInfo *_activatedElementInfo;
@property (weak, nonatomic) NSObject<SFSafariViewControllerDelegate> *delegate;
@property (readonly, copy, nonatomic) SFSafariViewControllerConfiguration *configuration;
@property (retain, nonatomic) UIColor *preferredBarTintColor;
@property (retain, nonatomic) UIColor *preferredControlTintColor;
@property (nonatomic) long long dismissButtonStyle;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) _UIRemoteViewController *_containedRemoteViewController;

/* class methods */
+ (BOOL)_preventsAppearanceProxyCustomization;
+ (BOOL)_supportsPrewarming;
+ (id)prewarmConnectionsToURLs:(id)urls;
+ (BOOL)_eligibleForPlatformConventions;

/* instance methods */
- (id)initWithURL:(id)url configuration:(id)configuration;
- (id)initWithURL:(id)url entersReaderIfAvailable:(BOOL)available;
- (id)initWithURL:(id)url;
- (id)initWithCoder:(id)coder;
- (id)initWithNibName:(id)name bundle:(id)bundle;
- (void)dealloc;
- (void)loadView;
- (void)viewWillAppear:(BOOL)appear;
- (void)viewDidAppear:(BOOL)appear;
- (void)viewWillDisappear:(BOOL)disappear;
- (void)setModalPresentationStyle:(long long)style;
- (void)setTransitioningDelegate:(id)delegate;
- (void)viewWillTransitionToSize:(struct CGSize { double x0; double x1; })size withTransitionCoordinator:(id)coordinator;
- (BOOL)prefersStatusBarHidden;
- (id)childViewControllerForStatusBarStyle;
- (void)_addRemoteViewControllerIfNeeded;
- (void)_setShowingLinkPreview:(BOOL)preview;
- (void)_setShowingLinkPreviewWithMinimalUI:(BOOL)ui;
- (id)previewActionItems;
- (void)_boundingPathMayHaveChangedForView:(id)view relativeToBoundsOriginOnly:(BOOL)only;
- (void)linkPreviewHeader:(id)header didEnableLinkPreview:(BOOL)preview;
- (void)remoteViewControllerDidLoadWebView:(id)view;
- (void)remoteViewControllerWillDismiss:(id)dismiss;
- (void)viewWillLayoutSubviews;
- (void)_restartServiceViewController;
- (void)remoteViewController:(id)controller viewServiceDidTerminateWithError:(id)error;
- (void)remoteViewController:(id)controller fetchActivityViewControllerInfoForURL:(id)url title:(id)title;
- (id)_fetchExcludedActivityTypesForURL:(id)url title:(id)title;
- (void)remoteViewController:(id)controller didFinishInitialLoad:(BOOL)load;
- (void)remoteViewController:(id)controller executeCustomActivityProxyID:(id)id;
- (void)remoteViewController:(id)controller setSwipeGestureEnabled:(BOOL)enabled;
- (void)remoteViewController:(id)controller hostApplicationOpenURL:(id)url;
- (void)remoteViewController:(id)controller initialLoadDidRedirectToURL:(id)url;
- (void)remoteViewController:(id)controller didDecideShouldShowLinkPreviews:(BOOL)previews;
- (void)remoteViewControllerWillOpenCurrentPageInBrowser:(id)browser;
- (void)_forwardNotificationToViewService:(id)service;
- (void)interactiveDismissControllerDidBegin:(id)begin;
- (void)interactiveDismissControllerDidEnd:(id)end;
- (void)interactiveDismissControllerDidCancel:(id)cancel;
- (void)serviceProxyWillQueueInvocation:(id)invocation;
- (void)_setActivatedElementInfo:(id)info;
- (void)_setPreviewActions:(id)actions;
@end

#endif /* SFSafariViewController_h */
