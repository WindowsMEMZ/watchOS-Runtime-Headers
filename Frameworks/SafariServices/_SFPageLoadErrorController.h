//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef _SFPageLoadErrorController_h
#define _SFPageLoadErrorController_h
@import Foundation;

#include "SFDialogPresenting-Protocol.h"
#include "WBSCertificateWarningPageHandler-Protocol.h"
#include "WBSCertificateWarningPagePresenter-Protocol.h"
#include "_SFPageLoadErrorControllerDelegate-Protocol.h"

@class NSString, NSTimer, NSURL, NSURLProtectionSpace, NSURLRequest, WBSCertificateWarningPageContext, WBSSecIdentitiesCache, WKWebView, _WKRemoteObjectInterface;

@interface _SFPageLoadErrorController : NSObject<WBSCertificateWarningPageHandler> {
  /* instance variables */
  BOOL _reloadAfterResume;
  WKWebView *_webView;
  NSTimer *_crashCountResetTimer;
  WBSSecIdentitiesCache *_secIdentitiesCache;
  struct __SecTrust * _certificateTrust;
  WBSCertificateWarningPageContext *_legacyTLSWarningPageContext;
  NSObject<WBSCertificateWarningPagePresenter> *_certificateWarningPagePresenterProxy;
  _WKRemoteObjectInterface *_certificateWarningPageHandlerInterface;
  BOOL _certificateWarningPageHandlerInterfaceInvalidated;
  id /* block */ _certificateRecoveryAttempter;
  NSURL *_certificateFailingURL;
  NSURL *_clickThroughURL;
}

@property (weak, nonatomic) NSObject<_SFPageLoadErrorControllerDelegate> *delegate;
@property (readonly, nonatomic) BOOL reloadingFailedRequest;
@property (readonly, nonatomic) NSURLRequest *failedRequest;
@property (readonly, nonatomic) unsigned long long crashesSinceLastSuccessfulLoad;
@property (weak, nonatomic) NSObject<SFDialogPresenting> *dialogPresenter;
@property (retain, nonatomic) NSURLProtectionSpace *protectionSpaceForInvalidCertificateBypass;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithWebView:(id)view;
- (void)dealloc;
- (void)invalidate;
- (void)_cacheSecIdentityIfNeeded:(struct __SecIdentity *)needed forIdentityDomain:(id)domain;
- (void)_setUpCertificateWarningPageHandlerInterface;
- (void)_clearCertificateWarningPageHandlerInterface;
- (void)_fetchSpecializedMessageForError:(id)error URL:(id)url completionHandler:(id /* block */)handler;
- (id)_errorMessageForNSURLErrorDomain:(id)domain url:(id)url;
- (id)_genericMessageForError:(id)error;
- (void)addDialog:(id)dialog;
- (void)addAlert:(id)alert;
- (void)_continueAfterCertificateAlertWithURL:(id)url trust:(struct __SecTrust *)trust recoveryAttempter:(id /* block */)attempter;
- (void)_continueWithoutCredentialsUsingAlertContext:(id)context;
- (void)performAction:(int)action forAlert:(id)alert;
- (void)addFormAlertWithTitle:(id)title decisionHandler:(id /* block */)handler;
- (void)addAlertWithTitle:(id)title bodyText:(id)text;
- (void)showErrorPageWithTitle:(id)title bodyText:(id)text learnMoreLink:(id)link forError:(id)error;
- (void)showErrorPageWithTitle:(id)title bodyText:(id)text forError:(id)error;
- (id)_certificateWarningPagePresenterProxy;
- (void)_loadCertificateWarningPageForContext:(id)context;
- (void)_handleCertificateError:(id)error forURL:(id)url isMainFrame:(BOOL)frame recoveryAttempter:(id /* block */)attempter completionHandler:(id /* block */)handler;
- (void)_reachabilityChanged:(id)changed;
- (void)_setFailedRequest:(id)request;
- (id)_titleForError:(id)error;
- (void)_handleFrameLoadError:(id)error forURL:(id)url recoveryAttempter:(id /* block */)attempter;
- (void)addDisallowedUseOfJavaScriptAlert;
- (void)addDisallowedFileURLAlert;
- (void)clearFailedRequest;
- (void)reloadAfterError;
- (void)handleFrameLoadError:(id)error;
- (void)handleSubframeCertificateError:(id)error;
- (void)handleLegacyTLSWithFailingURL:(id)url clickThroughURL:(id)url authenticationChallenge:(id)challenge;
- (void)handleClientCertificateAuthenticationChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)addInvalidURLAlert;
- (void)addInvalidProfileAlert;
- (void)addDownloadFailedAlertWithDescription:(id)description;
- (void)_showRepeatedWebProcessCrashError:(id)error URLString:(id)urlstring;
- (void)_resetCrashCount:(id)count;
- (void)clearCrashCountResetTimer;
- (void)_resetCrashCountSoon;
- (BOOL)updateCrashesAndShowCrashError:(id)error URLString:(id)urlstring;
- (void)scheduleResetCrashCount;
- (void)webViewDidCommitErrorPagePreview:(id)preview;
- (void)goBackButtonClicked;
- (void)visitInsecureWebsiteWithTemporaryBypass;
- (void)visitInsecureWebsite;
- (void)openClockSettings;
- (void)showCertificateInformation;
@end

#endif /* _SFPageLoadErrorController_h */
