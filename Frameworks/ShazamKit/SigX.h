//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 236.12.0.0.0
//
#ifndef SigX_h
#define SigX_h
@import Foundation;

@interface SigX : NSObject

@property (nonatomic) void * mySigX;
@property (copy, nonatomic) id /* block */ spectralOutputHandler;

/* class methods */
+ (struct basic_string<char, std::char_traits<char>, std::allocator<char>> { struct __compressed_pair<std::basic_string<char>::__rep, std::allocator<char>> { struct __rep { union { struct __long { char * x0; unsigned long long x1; unsigned int x2 :63; unsigned int x3 :1; } x0; struct __short { char x0[23] unsigned char x1[0] unsigned int x2 :7; unsigned int x3 :1; } x1; struct __raw { unsigned long long x0[3] } x2; } x0; } x0; } x0; })getVersion;

/* instance methods */
- (BOOL)flowBuffer:(id)buffer error:(id *)error;
- (BOOL)ConvertSystemError:(const struct system_error { undefined * * x0; struct __libcpp_refstring { char * x0; } x1; struct error_code { int x0; struct error_category * x1; } x2; } *)error toError:(id *)error;
- (BOOL)ConvertException:(const struct exception { undefined * * x0; } *)exception toError:(id *)error;
- (BOOL)FillUnknownError:(id *)error;
- (id)initWithSignatureType:(int)type sampleRate:(unsigned int)rate signatureOptions:(int)options error:(id *)error;
- (id)initWithSignatureType:(int)type sampleRate:(unsigned int)rate error:(id *)error;
- (BOOL)flowIntSamples:(const short *)samples sampleCount:(int)count error:(id *)error;
- (BOOL)flowFloatSamples:(float *)samples sampleCount:(int)count error:(id *)error;
- (BOOL)flowIntSamples:(short *)samples sampleCount:(int)count channels:(int)channels error:(id *)error;
- (BOOL)flowFloatSamples:(float *)samples sampleCount:(int)count channels:(int)channels error:(id *)error;
- (BOOL)resetWithError:(id *)error;
- (BOOL)getSignature:(void *)signature error:(id *)error;
- (void)dealloc;
- (BOOL)setRollingBufferSeconds:(float)seconds error:(id *)error;
- (void)enableSpectralOutputForNumberOfFrequencyBins:(int)bins callbackFrequency:(int)frequency completionHandler:(id /* block */)handler;
- (void)disableSpectralOutput;
@end

#endif /* SigX_h */
