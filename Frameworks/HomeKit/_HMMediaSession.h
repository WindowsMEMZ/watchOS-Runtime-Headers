//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef _HMMediaSession_h
#define _HMMediaSession_h
@import Foundation;

#include "HMAudioControl.h"
#include "HMFMessageReceiver-Protocol.h"
#include "HMObjectMerge-Protocol.h"
#include "_HMContext.h"
#include "_HMMediaSessionDelegate-Protocol.h"

@class NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface _HMMediaSession : NSObject<HMFMessageReceiver, HMObjectMerge> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (readonly, nonatomic) NSUUID *uuid;
@property (readonly, nonatomic) NSUUID *uniqueIdentifier;
@property (retain, nonatomic) NSUUID *messageTargetUUID;
@property (weak, nonatomic) NSObject<_HMMediaSessionDelegate> *delegate;
@property (readonly) long long playbackState;
@property (readonly) long long shuffleState;
@property (readonly) long long repeatState;
@property (readonly, copy) NSString *mediaUniqueIdentifier;
@property (readonly, nonatomic) NSString *routeUID;
@property (retain, nonatomic) _HMContext *context;
@property (readonly) HMAudioControl *audioControl;
@property (readonly) unsigned long long sleepWakeState;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithUUID:(id)uuid routeUID:(id)uid playbackState:(long long)state shuffleState:(long long)state repeatState:(long long)state audioControl:(id)control mediaUniqueIdentifier:(id)identifier sleepWakeState:(unsigned long long)state;
- (void)_registerNotificationHandlers;
- (id)messageDestination;
- (void)setPlaybackState:(long long)state completionHandler:(id /* block */)handler;
- (void)refreshPlaybackStateWithCompletionHandler:(id /* block */)handler;
- (void)_notifyDelegateOfUpdatedPlaybackState:(long long)state;
- (void)_notifyDelegateOfUpdatedMediaState;
- (void)_handleSessionPlaybackUpdated:(id)updated;
- (void)_updateMediaState:(id)state completion:(id /* block */)completion;
- (void)updatePlaybackState:(id)state;
- (void)updateMediaState:(id)state;
- (void)_notifyDelegateOfUpdatedRouteUID:(id)uid;
- (void)_handleSessionRouteUIDUpdated:(id)uidupdated;
- (BOOL)isEqual:(id)equal;
- (BOOL)mergeFromNewObject:(id)object;
@end

#endif /* _HMMediaSession_h */
