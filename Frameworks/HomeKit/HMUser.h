//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMUser_h
#define HMUser_h
@import Foundation;

#include "HMAnnounceUserSettings.h"
#include "HMAssistantAccessControl.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"
#include "HMHome.h"
#include "HMHomeAccessControl.h"
#include "HMMediaContentProfileAccessControl.h"
#include "HMObjectMerge-Protocol.h"
#include "HMPhotosPersonManager.h"
#include "HMPhotosPersonManagerSettings.h"
#include "HMSettings.h"
#include "HMSettingsContainer-Protocol.h"
#include "HMSettingsController.h"
#include "HMUserDelegatePrivate-Protocol.h"
#include "HMUserSettingsAdapter.h"
#include "NSSecureCoding-Protocol.h"
#include "_HMContext.h"

@class HMFPairingIdentity, IDSURI, NSDictionary, NSString, NSUUID;
@protocol OS_dispatch_queue;

@interface HMUser : NSObject<HMFLogging, HMFMessageReceiver, HMSettingsContainer, NSSecureCoding, HMObjectMerge> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSString *_senderCorrelationIdentifier;
}

@property (readonly) HMPhotosPersonManager *photosPersonManager;
@property (readonly, copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
@property (readonly, copy) HMPhotosPersonManagerSettings *personManagerSettings;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *userID;
@property (readonly, copy, nonatomic) IDSURI *userIDSURI;
@property (copy) HMFPairingIdentity *pairingIdentity;
@property (weak) NSObject<HMUserDelegatePrivate> *delegate;
@property (readonly) HMSettingsController *settingsController;
@property (readonly) HMSettingsController *privateSettingsController;
@property (retain) HMUserSettingsAdapter *privateSettingsAdapter;
@property (retain) HMUserSettingsAdapter *sharedSettingsAdapter;
@property (retain) HMAnnounceUserSettings *announceUserSettings;
@property BOOL needsiTunesMultiUserRepair;
@property (retain) NSDictionary *pendingPrivateSettings;
@property (retain) NSDictionary *pendingSharedSettings;
@property BOOL supportsSharedHomeHH2AutoMigration;
@property (retain, nonatomic) HMHomeAccessControl *homeAccessControl;
@property (copy) HMAssistantAccessControl *assistantAccessControl;
@property (copy) HMMediaContentProfileAccessControl *mediaContentProfileAccessControl;
@property (readonly, nonatomic) NSUUID *uuid;
@property (weak, nonatomic) HMHome *home;
@property (retain) _HMContext *context;
@property (nonatomic) BOOL currentUser;
@property (retain) HMPhotosPersonManager *photosPersonManager;
@property (copy) HMPhotosPersonManagerSettings *photosPersonManagerSettings;
@property (readonly, copy, nonatomic) NSUUID *uniqueIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly) HMSettings *settings;
@property (readonly) HMSettings *privateSettings;
@property (readonly) BOOL settingsInitialized;

/* class methods */
+ (id)logCategory;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)updatePersonManagerSettings:(id)settings completion:(id /* block */)completion;
- (void)configurePhotosPersonManagerWithSettings:(id)settings;
- (void)updatePhotosPersonManagerSettings:(id)settings completion:(id /* block */)completion;
- (id)init;
- (id)initWithUserID:(id)id name:(id)name uuid:(id)uuid home:(id)home;
- (id)initWithUserID:(id)id name:(id)name uuid:(id)uuid home:(id)home homeAccessControl:(id)control;
- (void)__configureWithContext:(id)context home:(id)home;
- (void)_unconfigureContext;
- (void)_unconfigure;
- (void)_registerNotificationHandlers;
- (void)updateHomeAccessControl:(BOOL)control remoteAccess:(BOOL)access announceAccess:(BOOL)access camerasAccess:(id)access;
- (void)_handleMultiUserStatusChangedNotification:(id)notification;
- (void)updateAssistantAccessControl:(id)control forHome:(id)home completionHandler:(id /* block */)handler;
- (void)_handleUpdatedAssistantAccessControl:(id)control;
- (void)updateAnnounceUserSettings:(id)settings forHome:(id)home completionHandler:(id /* block */)handler;
- (id)assistantAccessControlForHome:(id)home;
- (id)mediaContentProfileAccessControlForHome:(id)home;
- (void)updateMediaContentProfileAccessControl:(id)control forHome:(id)home completionHandler:(id /* block */)handler;
- (BOOL)isCurrentUser;
- (id)senderCorrelationIdentifier;
- (id)pendingAccessoryInvitations;
- (void)updatePresenceAuthorizationStatus:(unsigned long long)status completionHandler:(id /* block */)handler;
- (void)_updatePresenceAuthorizationStatus:(unsigned long long)status completionHandler:(id /* block */)handler;
- (void)pairingIdentityWithCompletionHandler:(id /* block */)handler;
- (void)fetchAllPairingIdentitiesWithCompletionHandler:(id /* block */)handler;
- (void)fetchShareLookupInfo:(id /* block */)info;
- (void)sendClientShareURL:(id)url shareToken:(id)token containerID:(id)id fromUser:(id)user completion:(id /* block */)completion;
- (void)sendClientShareRepairRequest:(id)request containerID:(id)id completion:(id /* block */)completion;
- (void)setNeedsiTunesMultiUserRepair:(BOOL)repair completion:(id /* block */)completion;
- (id)logIdentifier;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)mergeFromNewObject:(id)object;
- (void)_mergeUserPairingIdentityIfNecessary:(id)necessary withNewPairingIdentity:(id)identity;
- (void)createConfigureAndMergePrivateSettingsIfNecessary:(id)necessary withContext:(id)context;
- (void)createConfigureAndMergeSharedSettingsIfNecessary:(id)necessary withContext:(id)context;
- (void)createHH1SettingsControllerIfNecessary;
- (void)createHH1PrivateSettingsControllerIfNecessary;
- (id)messageDestination;
- (id)userSettingsForHome:(id)home;
@end

#endif /* HMUser_h */
