//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef _HMTimerTriggerBuilder_h
#define _HMTimerTriggerBuilder_h
@import Foundation;

#include "_HMEventOrTimerTriggerBuilder.h"
#include "HMActionSetBuilder.h"
#include "HMHome.h"
#include "HMTimerTriggerBuilderInternal-Protocol.h"
#include "HMTriggerPolicy.h"

@class NSArray, NSDate, NSDateComponents, NSString, NSTimeZone, NSUUID;

@interface _HMTimerTriggerBuilder : _HMEventOrTimerTriggerBuilder<HMTimerTriggerBuilderInternal>

@property (readonly, copy, nonatomic) NSDate *fireDateIfSet;
@property (copy, nonatomic) NSString *significantEvent;
@property (copy, nonatomic) NSDateComponents *significantEventOffset;
@property (nonatomic) unsigned long long recurrenceDays;
@property (copy, nonatomic) NSArray *recurrences;
@property (copy, nonatomic) NSDate *fireDate;
@property (copy, nonatomic) NSTimeZone *timeZone;
@property (copy, nonatomic) NSDateComponents *recurrence;
@property (copy, nonatomic) NSString *name;
@property (nonatomic) BOOL enabled;
@property (copy, nonatomic) NSArray *actionSets;
@property (retain, nonatomic) HMTriggerPolicy *policy;
@property (readonly, nonatomic) BOOL nameIsConfigured;
@property (readonly, nonatomic) HMActionSetBuilder *triggerOwnedActionSet;
@property (readonly, nonatomic) NSUUID *uniqueIdentifier;
@property (readonly, nonatomic) HMHome *home;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSString *configuredName;

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)recurrenceCalendar;
- (Class)class;
- (void)updateFireDate:(id)date completionHandler:(id /* block */)handler;
- (void)updateTimeZone:(id)zone completionHandler:(id /* block */)handler;
- (void)updateRecurrence:(id)recurrence completionHandler:(id /* block */)handler;
- (void)updateSignificantEvent:(id)event completionHandler:(id /* block */)handler;
- (void)_setSignificantEventOffset:(id)offset;
- (void)updateSignificantEventOffset:(id)offset completionHandler:(id /* block */)handler;
@end

#endif /* _HMTimerTriggerBuilder_h */
