//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMMediaSystem_h
#define HMMediaSystem_h
@import Foundation;

#include "HMAccessoryCategory.h"
#include "HMAccessorySettings.h"
#include "HMAccessorySettingsAdapter.h"
#include "HMAccessorySettingsAdapterDelegate-Protocol.h"
#include "HMAccessorySettingsContainer-Protocol.h"
#include "HMAccessorySettingsContainerInternal-Protocol.h"
#include "HMAccessorySettingsController.h"
#include "HMAccessorySettingsDataSource.h"
#include "HMApplicationData-Protocol.h"
#include "HMApplicationData.h"
#include "HMControllable-Protocol.h"
#include "HMFLogging-Protocol.h"
#include "HMFMessageReceiver-Protocol.h"
#include "HMHome.h"
#include "HMMediaDestination-Protocol.h"
#include "HMMediaDestination.h"
#include "HMMediaDestinationInternal-Protocol.h"
#include "HMMediaObject-Protocol.h"
#include "HMMediaSession.h"
#include "HMMutableArray.h"
#include "HMObjectMerge-Protocol.h"
#include "HMSymptomsHandler.h"
#include "NSSecureCoding-Protocol.h"
#include "_HMContext.h"

@class NSArray, NSString, NSUUID;
@protocol HMMediaSystemDelegate, OS_dispatch_queue;

@interface HMMediaSystem : NSObject<HMFLogging, HMFMessageReceiver, HMAccessorySettingsAdapterDelegate, HMControllable, HMMediaDestinationInternal, HMAccessorySettingsContainerInternal, HMObjectMerge, NSSecureCoding, HMAccessorySettingsContainer, HMApplicationData, HMMediaDestination, HMMediaObject> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
}

@property (retain, nonatomic) _HMContext *context;
@property (weak, nonatomic) HMHome *home;
@property (retain, nonatomic) HMAccessorySettingsDataSource *accessorySettingsDataSource;
@property (retain, nonatomic) HMAccessorySettingsController *accessorySettingsController;
@property (retain, nonatomic) HMAccessorySettingsAdapter *mediaSystemSettingsAdapter;
@property (readonly, nonatomic) NSUUID *uuid;
@property (retain, nonatomic) HMMutableArray *componentsArray;
@property (retain, nonatomic) HMApplicationData *applicationData;
@property (retain) HMMediaDestination *audioDestination;
@property (readonly, nonatomic) BOOL supportsMessagedHomepodSettings;
@property (weak) NSObject<HMMediaSystemDelegate> *delegate;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *configuredName;
@property (readonly, nonatomic) NSUUID *uniqueIdentifier;
@property (readonly, nonatomic) BOOL compatible;
@property (readonly, nonatomic) NSArray *components;
@property (readonly, nonatomic) HMAccessoryCategory *category;
@property (readonly, nonatomic) HMSymptomsHandler *symptomsHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSUUID *messageTargetUUID;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *messageReceiveQueue;
@property (readonly) BOOL controllable;
@property (readonly, copy) NSArray *audioDestinationMediaProfiles;
@property (readonly, copy) NSString *audioDestinationParentIdentifier;
@property (readonly, copy) NSUUID *audioDestinationGroupIdentifier;
@property (readonly, copy) NSString *audioDestinationIdentifier;
@property (readonly, copy) NSString *audioDestinationName;
@property (readonly) long long audioDestinationType;
@property (readonly) BOOL supportsAudioDestination;
@property (readonly) BOOL supportsAudioGroup;
@property (readonly, weak) NSUUID *containerUUID;
@property (readonly, weak) HMHome *containerHome;
@property (readonly, copy) HMMediaSession *mediaSession;
@property (readonly) HMAccessorySettings *settings;

/* class methods */
+ (id)mediaSystemWithDictionary:(id)dictionary home:(id)home;
+ (id)logCategory;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithHome:(id)home uuid:(id)uuid name:(id)name configuredName:(id)name compatible:(BOOL)compatible components:(id)components settings:(id)settings;
- (void)_unconfigureContext;
- (void)_unconfigure;
- (BOOL)isEqual:(id)equal;
- (void)__configureWithContext:(id)context home:(id)home;
- (void)postConfigure;
- (BOOL)configureSettingsAdaptorIfNeeded;
- (void)updateComponentsSettingsAdapterToSettingReflected;
- (void)_registerNotificationHandlers;
- (void)_updateAccessoryReference;
- (BOOL)isCompatible;
- (void)updateApplicationData:(id)data completionHandler:(id /* block */)handler;
- (void)_updateApplicationData:(id)data completionHandler:(id /* block */)handler;
- (void)_handleRootSettingsUpdated:(id)updated;
- (void)_handleSystemUpdatedNotification:(id)notification;
- (BOOL)isControllable;
- (BOOL)mergeFromNewObject:(id)object;
- (BOOL)mergeFromNewObject:(id)object isFromSerializedData:(BOOL)data;
- (BOOL)_mergeWithNewMediaSystem:(id)system isFromSerializedData:(BOOL)data;
- (BOOL)_mergeComponentsWithNewMediaSystem:(id)system;
- (BOOL)_mergeNameWithNewMediaSystem:(id)system;
- (BOOL)_mergeApplicationDataWithNewMediaSystem:(id)system;
- (BOOL)_mergeSettingsWithNewMediaSystem:(id)system;
- (BOOL)_mergeLegacySettingsWithNewMediaSystem:(id)system;
- (BOOL)mergeSupportsMessagedHomepodSettingsWithNewMediaSystem:(id)system;
- (BOOL)mergeAudioDestinationWithNewMediaSystem:(id)system;
- (void)updateMediaSession:(id)session forMediaProfile:(id)profile;
- (void)notifyDelegateOfUpdatedName:(id)name;
- (void)notifyDelegateOfUpdatedConfiguredName:(id)name;
- (void)notifyDelegateOfUpdatedComponents:(id)components;
- (void)notifyDelegateOfUpdatedApplicationData:(id)data;
- (void)notifyDelegateOfUpdatedSettings:(id)settings;
- (void)notifyDelegateOfUpdatedMediaSession:(id)session;
- (void)notifyDelegateOfUpdatedAudioDestination;
- (id)logIdentifier;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)callCompletionHandler:(id /* block */)handler;
- (void)callCompletionHandler:(id /* block */)handler error:(id)error;
- (void)updateAudioDestinationSupportedOptions:(unsigned long long)options completion:(id /* block */)completion;
- (void)adapter:(id)adapter didUpdateSettings:(id)settings;
- (void)adapter:(id)adapter didUpdateSettingKeyPaths:(id)paths;
- (void)adapter:(id)adapter didUpdatePreferredMediaUserUUIDString:(id)uuidstring selectionType:(unsigned long long)type;
- (void)updateSettingWithKeyPath:(id)path value:(id)value completionHandler:(id /* block */)handler;
- (id)targetAccessoryIdentifierBySerial;
@end

#endif /* HMMediaSystem_h */
