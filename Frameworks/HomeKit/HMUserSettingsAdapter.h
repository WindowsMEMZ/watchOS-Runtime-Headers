//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1092.3.10.0.0
//
#ifndef HMUserSettingsAdapter_h
#define HMUserSettingsAdapter_h
@import Foundation;

#include "HMFObject.h"
#include "HMFLogging-Protocol.h"
#include "HMSettingGroup.h"
#include "HMSettingManager-Protocol.h"
#include "HMSettings.h"
#include "HMSettingsOwner-Protocol.h"
#include "HMUser.h"
#include "_HMContext.h"

@class NSString;
@protocol HMSettingsDelegate;

@interface HMUserSettingsAdapter : HMFObject<HMSettingManager, HMSettingsOwner, HMFLogging>

@property (weak, nonatomic) HMUser *user;
@property (retain, nonatomic) _HMContext *context;
@property (retain) HMSettingGroup *rootGroup;
@property (nonatomic) long long type;
@property (nonatomic) BOOL didEverSentOutSettingsDidUpdate;
@property (readonly) HMSettings *settings;
@property (weak) NSObject<HMSettingsDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)privateSettingsSchema;
+ (id)sharedSettingsSchema;
+ (id)logCategory;

/* instance methods */
- (id)initWithUser:(id)user settingsType:(long long)type;
- (void)configureWithContext:(id)context;
- (void)createRootSettingGroup;
- (id)groupKeyArrayFromKeyPath:(id)path;
- (id)findOrAddUserSettingGroupWithKeyPath:(id)path;
- (id)appendKeyPath:(id)path withNextKey:(id)key;
- (id)createKeyPathArrayWithKeyPath:(id)path;
- (id)settingKeyFromKeyPath:(id)path;
- (void)updateValueForSetting:(id)setting value:(id)value completionHandler:(id /* block */)handler;
- (void)mergeWithDictionary:(id)dictionary;
- (BOOL)mergeUsingPreOrder:(id)order withDictionary:(id)dictionary;
- (void)_notifyDelegateDidUpdateKeyPath:(id)path;
- (void)_notifyDelegateSettingsDidUpdate;
@end

#endif /* HMUserSettingsAdapter_h */
