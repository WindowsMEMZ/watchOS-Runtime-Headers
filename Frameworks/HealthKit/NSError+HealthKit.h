//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef NSError_HealthKit_h
#define NSError_HealthKit_h
@import Foundation;

@interface NSError (HealthKit)
/* class methods */
+ (id)hk_OAuth2_error:(long long)oauth2_error;
+ (id)hk_OAuth2_error:(long long)oauth2_error underlyingError:(id)error;
+ (id)_hk_OAuth2_error:(long long)oauth2_error userInfo:(id)info underlyingError:(id)error;
+ (id)_hk_OAuth2_defaultDescriptionForErrorCode:(long long)code;
+ (id)hk_OAuth2_errorFromErrorValue:(id)value;
+ (id)hk_OAuth2_errorForRequest:(id)request response:(id)response data:(id)data;
+ (id)_hk_OAuth2_rawErrorForRequest:(id)request response:(id)response data:(id)data;
+ (id)_hk_OAuth2_errorForUnauthorizedStatusWithRequest:(id)request response:(id)response;
+ (id)_hk_OAuth2_errorForBadRequestStatusWithResponse:(id)response data:(id)data;
+ (id)_hk_OAuth2_errorFromResponseData:(id)data defaultError:(id)error parseError:(id *)error;
+ (id)hk_HTTPErrorRepresentingResponse:(id)response request:(id)request;
+ (id)hk_HTTPErrorWithHTTPStatusCode:(long long)code URLResponse:(id)urlresponse;
+ (id)hk_error:(long long)hk_error description:(id)description;
+ (id)hk_error:(long long)hk_error description:(id)description underlyingError:(id)error;
+ (id)hk_error:(long long)hk_error userInfo:(id)info;
+ (id)hk_error:(long long)hk_error format:(id)format;
+ (id)hk_error:(long long)hk_error class:(Class)class selector:(SEL)selector format:(id)format;
+ (id)hk_errorForInvalidArgument:(id)argument class:(Class)class selector:(SEL)selector;
+ (id)hk_errorForInvalidArgument:(id)argument class:(Class)class selector:(SEL)selector format:(id)format;
+ (id)hk_errorForNilArgument:(id)argument class:(Class)class selector:(SEL)selector;
+ (id)hk_healthDataUnavailableError;
+ (id)hk_databaseInaccessibleBeforeFirstUnlockError;
+ (id)hk_protectedDataInaccessibilityError;
+ (id)hk_featureUnavailableForProfileError;
+ (id)hk_invalidProfileError;
+ (id)hk_healthStoreUnavailableError;
+ (id)hk_databaseSchemaRolledBackError;
+ (id)hk_transactionInterruptedError;
+ (BOOL)hk_assignError:(id *)error code:(long long)code description:(id)description;
+ (BOOL)hk_assignError:(id *)error code:(long long)code description:(id)description underlyingError:(id)error;
+ (BOOL)hk_assignError:(id *)error code:(long long)code format:(id)format;
+ (BOOL)hk_assignError:(id *)error code:(long long)code userInfo:(id)info;
+ (BOOL)hk_assignError:(id *)error invalidArgument:(id)argument class:(Class)class selector:(SEL)selector;
+ (BOOL)hk_assignError:(id *)error nilArgument:(id)argument class:(Class)class selector:(SEL)selector;

/* instance methods */
- (BOOL)hk_OAuth2_isOAuth2Error;
- (BOOL)hk_OAuth2_isOAuth2ErrorWithCode:(long long)code;
- (BOOL)hk_OAuth2_isAccessDeniedError;
- (BOOL)hk_OAuth2_isBearerAuthenticationError;
- (id)_hk_OAuth2_errorByAddingItemsToUserInfo:(id)info;
- (BOOL)hk_isHealthKitError;
- (BOOL)hk_isHealthKitErrorWithCode:(long long)code;
- (BOOL)hk_isDatabaseAccessibilityError;
- (BOOL)hk_isDatabaseTransactionError;
- (BOOL)hk_isHealthStoreUnavailableError;
- (BOOL)hk_isDatabaseSchemaRolledBackError;
- (BOOL)hk_isDuplicateObjectError;
- (BOOL)hk_isObjectNotFoundError;
- (BOOL)hk_isTransactionInterruptedError;
- (BOOL)hk_isServiceDeviceNotFoundError;
- (BOOL)hk_isAuthorizationDeniedError;
- (BOOL)hk_isAuthorizationNotDeterminedError;
- (BOOL)hk_isInvalidArgumentError;
- (BOOL)hk_isInternalFailureError;
- (BOOL)hk_isFeatureDisabledError;
- (BOOL)hk_isRequiredAuthorizationError;
- (BOOL)hk_isStreamFailureError;
- (BOOL)hk_isTimeoutError;
- (BOOL)hk_isUserCanceledError;
- (BOOL)hk_isCocoaNoSuchFileError;
- (BOOL)hk_isCocoaFileExistsError;
- (BOOL)hk_isXPCConnectionError;
- (BOOL)hk_isXPCConnectionInterruptedError;
- (BOOL)hk_isOntologyConceptNotFoundError;
- (BOOL)hk_isHFDUnsupportedError;
- (BOOL)hk_isErrorInDomain:(id)domain code:(long long)code;
- (id)hk_underlyingErrorWithDomain:(id)domain;
- (id)hk_sanitizedError;
- (id)hk_sanitizedErrorForDomain:(id)domain;
- (id)hk_errorByAddingEntriesToUserInfo:(id)info;
@end

#endif /* NSError_HealthKit_h */
