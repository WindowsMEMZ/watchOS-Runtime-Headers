//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKHealthWrapEncryptor_h
#define HKHealthWrapEncryptor_h
@import Foundation;

#include "HKHealthWrapCodableMessageHeader.h"

@class NSMutableData, NSOutputStream, NSUUID;

@interface HKHealthWrapEncryptor : NSObject {
  /* instance variables */
  NSOutputStream *_outputStream;
  struct __SecCertificate * _certificate;
  unsigned int _algorithm;
  unsigned int _options;
  unsigned int _keySize;
  struct _CCCryptor * _cryptor;
  unsigned int _hmacAlgorithm;
  struct { unsigned int x[96] ctx; } _hmacContext;
  struct CC_SHA256state_st { unsigned int x[2] count; unsigned int x[8] hash; unsigned int x[16] wbuf; } _sha256Context;
  NSMutableData *_buffer;
  NSUUID *_studyUUID;
  NSUUID *_uuid;
  HKHealthWrapCodableMessageHeader *_header;
  BOOL _compressionEnabled;
  unsigned long long _encryptedBytesCount;
}

/* instance methods */
- (id)initWithOutputStream:(id)stream certificate:(struct __SecCertificate *)certificate algorithm:(unsigned int)algorithm options:(unsigned int)options keySize:(unsigned int)size uuid:(id)uuid studyUUID:(id)uuid compressionEnabled:(BOOL)enabled;
- (void)dealloc;
- (struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } *)_copyAndVerifyPublicKeyFromCertificate:(struct __SecCertificate *)certificate error:(id *)error;
- (id)_encryptData:(id)data withCertificate:(struct __SecCertificate *)certificate error:(id *)error;
- (BOOL)_updateHeaderWithKey:(id)key iv:(id)iv hmacKey:(id)key error:(id *)error;
- (BOOL)_startCryptorWithError:(id *)error;
- (BOOL)startWithError:(id *)error;
- (BOOL)_writeStream:(const char *)stream length:(unsigned long long)length hash:(BOOL)hash error:(id *)error;
- (BOOL)_appendEncryptedBytes:(const char *)bytes length:(unsigned long long)length error:(id *)error;
- (BOOL)_updateCryptorWithData:(id)data error:(id *)error;
- (BOOL)_finalizeCryptorWithError:(id *)error;
- (BOOL)appendData:(id)data error:(id *)error;
- (BOOL)finalizeWithError:(id *)error;
@end

#endif /* HKHealthWrapEncryptor_h */
