//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKSample_h
#define HKSample_h
@import Foundation;

#include "HKObject.h"
#include "HKSampleType.h"
#include "NSCopying-Protocol.h"
#include "_HKDateBounded-Protocol.h"

@class NSDate, NSString;

@interface HKSample : HKObject<NSCopying, _HKDateBounded>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) double startTimestamp;
@property (nonatomic) double endTimestamp;
@property (readonly, copy) HKSampleType *sampleType;
@property (readonly) NSDate *startDate;
@property (readonly) NSDate *endDate;
@property (readonly) BOOL hasUndeterminedDuration;

/* class methods */
+ (id)_newSampleWithType:(id)type startDate:(double)date endDate:(double)date device:(id)device metadata:(id)metadata config:(id /* block */)config;
+ (id)_newSampleFromDatesWithType:(id)type startDate:(id)date endDate:(id)date device:(id)device metadata:(id)metadata config:(id /* block */)config;
+ (id)_enumerateValidIntervalsWithStartDate:(id)date endDate:(id)date sampleType:(id)type block:(id /* block */)block;
+ (BOOL)supportsSecureCoding;
+ (BOOL)supportsEquivalence;

/* instance methods */
- (struct { long long x0; long long x1; })hk_dayIndexRangeWithCalendar:(id)calendar;
- (id)asJSONObject;
- (void)_enumerateTimePeriodsWithBlock:(id /* block */)block;
- (struct { long long x0; long long x1; })hk_morningIndexRangeWithCalendarWithCalendar:(id)calendar;
- (id)_init;
- (BOOL)_requiresPrivateEntitlementForQueries;
- (id)_timeZone;
- (id)_validateWithConfiguration:(struct HKObjectValidationConfiguration { unsigned long long x0; unsigned int x1; })configuration;
- (long long)_externalSyncObjectCode;
- (void)_setSampleType:(id)type;
- (void)_setType:(id)type;
- (void)_setStartDate:(id)date;
- (void)_setEndDate:(id)date;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (BOOL)isEquivalent:(id)equivalent;
- (id)valueForKey:(id)key;
- (double)_startTimestamp;
- (void)_setStartTimestamp:(double)timestamp;
- (double)_endTimestamp;
- (void)_setEndTimestamp:(double)timestamp;
@end

#endif /* HKSample_h */
