//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKProxyProvider_h
#define HKProxyProvider_h
@import Foundation;

#include "HKProxyProviderSource-Protocol.h"
#include "_HKXPCConnection.h"
#include "_HKXPCExportable-Protocol.h"

@class NSMutableArray, NSString, NSXPCInterface;
@protocol OS_dispatch_queue;

@interface HKProxyProvider : NSObject {
  /* instance variables */
  NSObject<HKProxyProviderSource> *_source;
  NSObject<HKProxyProviderSource> *_weakSource;
  _HKXPCConnection *_connection;
  NSString *_daemonLaunchNotificationName;
  NSXPCInterface *_exportedInterface;
  NSXPCInterface *_remoteInterface;
  long long _connectionGeneration;
  BOOL _invalidated;
  id /* block */ _lock_automaticProxyReconnectionHandler;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  int _notifyToken;
  NSMutableArray *_pendingFetchContinuations;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly, copy, nonatomic) NSString *serviceIdentifier;
@property (readonly, weak, nonatomic) NSObject<_HKXPCExportable> *exportedObject;
@property (copy) id /* block */ automaticProxyReconnectionHandler;
@property BOOL shouldRetryOnInterruption;

/* class methods */
+ (id)_relaunchQueue;

/* instance methods */
- (id)initWithSource:(id)source serviceIdentifier:(id)identifier exportedObject:(id)object exportedInterface:(id)interface remoteInterface:(id)interface;
- (void)dealloc;
- (void)invalidate;
- (id)description;
- (id)debugIdentifier;
- (void)referenceSourceWeakly;
- (id)_lock_sourceWithError:(id *)error;
- (void)_handleError:(id)error connectionGeneration:(long long)generation;
- (void)_resetConnectionWithGeneration:(long long)generation;
- (id)_fetchConnectionAndGeneration:(long long *)generation error:(id *)error;
- (void)_fetchEndpointAndConnectionWithContinuation:(id /* block */)continuation;
- (void)_lock_setUpConnectionWithEndpoint:(id)endpoint;
- (void)_lock_flushContinuationsWithConnection:(id)connection error:(id)error;
- (void)_fetchRetryingProxyWithErrorCount:(long long)count handler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)fetchProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)_fetchProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)getSynchronousProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)_getSynchronousProxyWithErrorCount:(long long)count handler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)_getSynchronousProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)_serverDidFinishLaunching;
- (id /* block */)clientQueueActionHandlerWithCompletion:(id /* block */)completion;
- (id /* block */)clientQueueObjectHandlerWithCompletion:(id /* block */)completion;
- (id /* block */)clientQueueDoubleObjectHandlerWithCompletion:(id /* block */)completion;
- (id /* block */)clientQueueProgressHandlerWithHandler:(id /* block */)handler;
- (id)proxyServiceEndpointFromSource:(id)source serviceIdentifier:(id)identifier error:(id *)error;
- (void)fetchProxyServiceEndpointFromSource:(id)source serviceIdentifier:(id)identifier endpointHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
@end

#endif /* HKProxyProvider_h */
