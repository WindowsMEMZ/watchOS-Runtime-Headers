//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKHealthStore_h
#define HKHealthStore_h
@import Foundation;

#include "HKAnalyticsHealthDataSource-Protocol.h"
#include "HKFeatureAvailabilityHealthDataSource-Protocol.h"
#include "HKHealthServicesManager.h"
#include "HKHealthStoreClientInterface-Protocol.h"
#include "HKHealthStoreIdentifier.h"
#include "HKHealthStoreServerInterface-Protocol.h"
#include "HKProfileIdentifier.h"
#include "HKProxyProviderSource-Protocol.h"
#include "HKQueryDelegate-Protocol.h"
#include "_HKAuthorizationPresentationController-Protocol.h"
#include "_HKObjectPickerPresentationController-Protocol.h"
#include "_HKRecalibrateEstimatesPresentationController-Protocol.h"
#include "_HKXPCConnection.h"
#include "_HKXPCExportable-Protocol.h"

@class NSBundle, NSMutableSet, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface HKHealthStore : NSObject<HKFeatureAvailabilityHealthDataSource, HKAnalyticsHealthDataSource, HKHealthStoreClientInterface, _HKXPCExportable, HKQueryDelegate, HKProxyProviderSource> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSObject<OS_dispatch_queue> *_connectionQueue;
  _HKXPCConnection *_healthdConnection;
  BOOL _isUsingSystemEndpoint;
  NSObject<HKHealthStoreServerInterface> *_serverProxy;
  NSObject<_HKAuthorizationPresentationController> *_authorizationPresentationController;
  NSObject<_HKObjectPickerPresentationController> *_objectPickerPresentationController;
  NSObject<_HKRecalibrateEstimatesPresentationController> *_recalibrateEstimatesPresentationController;
  id /* block */ _authorizationDelegateTransactionErrorHandler;
  BOOL _resumeRequired;
  BOOL _resumed;
  id /* block */ _mirroredSessionHandler;
}

@property (readonly, copy, nonatomic) NSString *firstName;
@property (readonly, nonatomic) HKProfileIdentifier *profileIdentifier;
@property (readonly, nonatomic) BOOL requiresWeakRetention;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) NSString *writeAuthorizationUsageDescriptionOverride;
@property (copy, nonatomic) NSString *readAuthorizationUsageDescriptionOverride;
@property (copy, nonatomic) NSString *clinicalReadAuthorizationUsageDescriptionOverride;
@property (copy, nonatomic) NSString *researchStudyUsageDescriptionOverride;
@property (copy, nonatomic) NSString *daemonLaunchDarwinNotificationName;
@property (readonly, nonatomic) HKHealthServicesManager *healthServicesManager;
@property (readonly, nonatomic) unsigned int applicationSDKVersion;
@property (weak, nonatomic) id _hkui_authorizationViewControllerPresenter;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *clientQueue;
@property (readonly, copy) NSSet *queries;
@property (copy, nonatomic) id /* block */ unitTest_handleExecuteQuery;
@property (readonly, copy) HKHealthStoreIdentifier *identifier;
@property (copy) HKProfileIdentifier *profileIdentifier;
@property (copy) NSString *sourceBundleIdentifier;
@property (retain) NSBundle *sourceBundle;
@property (copy) NSString *debugIdentifier;
@property BOOL canConnectToSystemMachService;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)isHealthDataAvailable;
+ (void)setRequireExplicitSystemMachServiceEnablement:(BOOL)enablement;
+ (BOOL)requireExplicitSystemMachServiceEnablement;
+ (BOOL)_applicationHasRunningWorkout;

/* instance methods */
- (void)_shouldGenerateDemoDataPreferenceIsSet:(id /* block */)set;
- (void)_fetchBoolDaemonPreferenceForKey:(id)key completion:(id /* block */)completion;
- (void)_safeFetchDaemonPreferenceForKey:(id)key expectedReturnClass:(Class)class completion:(id /* block */)completion;
- (void)_fetchDaemonPreferenceForKey:(id)key completion:(id /* block */)completion;
- (void)_setDaemonPreferenceValue:(id)value forKey:(id)key completion:(id /* block */)completion;
- (void)generateFakeDataForActivityType:(long long)type minutes:(double)minutes completion:(id /* block */)completion;
- (void)_activeWorkoutApplicationIdentifierWithCompletion:(id /* block */)completion;
- (void)_firstPartyWorkoutSnapshotWithCompletion:(id /* block */)completion;
- (void)_currentWorkoutSnapshotWithCompletion:(id /* block */)completion;
- (id)ageWithCurrentDate:(id)date error:(id *)error;
- (id)featureStatusProviderForIdentifier:(id)identifier;
- (id)featureAvailabilityProviderForIdentifier:(id)identifier;
- (id)isImproveHealthRecordsAllowedWithError:(id *)error;
- (id)featureAvailabilityProvidingForFeatureIdentifier:(id)identifier;
- (id)requirementSatisfactionOverridesDataSource;
- (id)watchLowPowerModeDataSource;
- (id)wristDetectionSettingManager;
- (void)forceCloudSyncWithOptions:(unsigned long long)options reason:(long long)reason completion:(id /* block */)completion;
- (void)forceCloudSyncWithOptions:(unsigned long long)options completion:(id /* block */)completion;
- (void)forceCloudSyncDataUploadForProfileWithCompletion:(id /* block */)completion;
- (void)fetchCloudSyncRequiredWithCompletion:(id /* block */)completion;
- (void)disableCloudSyncAndDeleteAllCloudDataWithCompletion:(id /* block */)completion;
- (void)profileIdentifierForNRDeviceUUID:(id)uuid completion:(id /* block */)completion;
- (void)startHealthServiceDiscovery:(id)discovery withHandler:(id /* block */)handler;
- (void)endHealthServiceDiscovery:(id)discovery;
- (void)startHealthServiceSession:(id)session withHandler:(id /* block */)handler;
- (void)endHealthServiceSession:(id)session;
- (void)registerPeripheralIdentifier:(id)identifier name:(id)name services:(id)services withCompletion:(id /* block */)completion;
- (void)unregisterPeripheralIdentifier:(id)identifier withCompletion:(id /* block */)completion;
- (void)healthServicePairingsWithHandler:(id /* block */)handler;
- (void)healthPeripheralsWithFilter:(unsigned long long)filter handler:(id /* block */)handler;
- (void)addHealthServicePairing:(id)pairing withCompletion:(id /* block */)completion;
- (void)removeHealthServicePairing:(id)pairing withCompletion:(id /* block */)completion;
- (id)init;
- (id)_initWithIdentifier:(id)identifier;
- (id)initWithIdentifier:(id)identifier;
- (id)initWithListenerEndpoint:(id)endpoint;
- (id)initWithListenerEndpoint:(id)endpoint debugIdentifier:(id)identifier;
- (void)_faultIfInnappropriateHost;
- (void)_connectionQueue_setUpWithEndpoint:(id)endpoint;
- (id)unitTest_replaceListenerEndpoint:(id)endpoint;
- (void)dealloc;
- (void)_setConfigurationPropertyUsingBlock:(id /* block */)block resumeRequired:(BOOL)required;
- (void)unitTest_setApplicationSDKVersion:(unsigned int)sdkversion;
- (id)_sourceBundleOrDefaultBundle;
- (void)resume;
- (void)_discardServerProxiesForServer:(id)server;
- (id)_lock_connectionWithError:(id *)error;
- (id /* block */)_wrappedErrorHandler:(id /* block */)handler proxy:(id)proxy;
- (id)healthStoreConfiguration;
- (void)_serverProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (id)_synchronousServerProxyWithErrorHandler:(id /* block */)handler;
- (void)fetchPluginServiceEndpointForIdentifier:(id)identifier endpointHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (id)pluginServiceEndpointForIdentifier:(id)identifier error:(id *)error;
- (void)fetchTaskServerEndpointForIdentifier:(id)identifier pluginURL:(id)url taskUUID:(id)uuid instanceUUID:(id)uuid configuration:(id)configuration endpointHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (id)taskServerEndpointForIdentifier:(id)identifier pluginURL:(id)url taskUUID:(id)uuid instanceUUID:(id)uuid configuration:(id)configuration error:(id *)error;
- (void)deleteAllSamplesWithTypes:(id)types sourceBundleIdentifier:(id)identifier options:(unsigned long long)options completion:(id /* block */)completion;
- (void)deleteObjectsWithUUIDs:(id)uuids options:(unsigned long long)options completion:(id /* block */)completion;
- (void)deleteClientSourceWithCompletion:(id /* block */)completion;
- (void)associateSampleUUIDs:(id)uuids withSampleUUID:(id)uuid completion:(id /* block */)completion;
- (void)saveObjects:(id)objects deleteObjects:(id)objects associations:(id)associations completion:(id /* block */)completion;
- (void)saveObjects:(id)objects associations:(id)associations completion:(id /* block */)completion;
- (void)recalibrateEstimatesForSampleType:(id)type atDate:(id)date completion:(id /* block */)completion;
- (void)clientRemote_presentRecalibrateEstimatesRequestWithRecord:(id)record completion:(id /* block */)completion;
- (long long)authorizationStatusForType:(id)type;
- (void)getRequestStatusForAuthorizationToShareTypes:(id)types readTypes:(id)types completion:(id /* block */)completion;
- (void)requestAuthorizationToShareTypes:(id)types readTypes:(id)types completion:(id /* block */)completion;
- (void)requestPerObjectReadAuthorizationForType:(id)type predicate:(id)predicate completion:(id /* block */)completion;
- (void)_validateAuthorizationRequestWithShareTypes:(id)types readTypes:(id)types;
- (void)requestAuthorizationToShareTypes:(id)types readTypes:(id)types shouldPrompt:(BOOL)prompt completion:(id /* block */)completion;
- (void)_validateAuthorizationRequiredTypes;
- (void)_validatePurposeStringsForSharingTypes:(id)types readingTypes:(id)types;
- (id)_clientWriteAuthorizationUsageDescription;
- (id)_clientReadAuthorizationUsageDescription;
- (id)_clientClinicalReadAuthorizationUsageDescription;
- (id)_researchStudyUsageDescription;
- (void)_validateClinicalHealthRecordsPurposeStringsForSharingTypes:(id)types readingTypes:(id)types;
- (void)_validateHealthDataPurposeStringsForSharingTypes:(id)types readingTypes:(id)types isResearchStudy:(BOOL)study;
- (void)handleAuthorizationForExtensionWithCompletion:(id /* block */)completion;
- (void)_throwIfAuthorizationDisallowedForSharing:(BOOL)sharing types:(id)types;
- (void)_throwIfClinicalTypesRequestedToShare:(id)share;
- (void)_throwIfParentTypeNotRequestedForSharing:(BOOL)sharing types:(id)types;
- (void)_throwIfPerObjectReadAuthorizationNotSupportedForType:(id)type;
- (void)_throwIfUsingIncorrectAuthorizationRequestType:(id)type;
- (void)beginAuthorizationDelegateTransactionWithSessionIdentifier:(id)identifier sourceHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)endAuthorizationDelegateTransactionWithSessionIdentifier:(id)identifier error:(id)error;
- (void)_clientQueue_invokeAuthorizationDelegateTransactionErrorHandlerWithError:(id)error;
- (id)_clinicalAuthorizationPresentationRequestForRecord:(id)record;
- (id)_healthDataAuthorizationPresentationRequestForRecord:(id)record;
- (void)clientRemote_presentAuthorizationWithRequestRecord:(id)record completion:(id /* block */)completion;
- (void)clientRemote_presentAuthorizationWithSession:(id)session completion:(id /* block */)completion;
- (id)earliestPermittedSampleDate;
- (void)saveObject:(id)object withCompletion:(id /* block */)completion;
- (void)saveObjects:(id)objects withCompletion:(id /* block */)completion;
- (void)_saveObjects:(id)objects atomically:(BOOL)atomically skipInsertionFilter:(BOOL)filter completion:(id /* block */)completion;
- (void)saveObjects:(id)objects skipInsertionFilter:(BOOL)filter completion:(id /* block */)completion;
- (void)_sendNextObjectBatch:(id)batch skipInsertionFilter:(BOOL)filter lastRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range server:(id)server transaction:(id)transaction completion:(id /* block */)completion;
- (void)deleteObject:(id)object withCompletion:(id /* block */)completion;
- (void)deleteObjects:(id)objects withCompletion:(id /* block */)completion;
- (void)_deleteObjects:(id)objects options:(unsigned long long)options completion:(id /* block */)completion;
- (void)deleteObjectsOfType:(id)type predicate:(id)predicate withCompletion:(id /* block */)completion;
- (void)deleteObject:(id)object options:(unsigned long long)options withCompletion:(id /* block */)completion;
- (void)deleteObjects:(id)objects options:(unsigned long long)options withCompletion:(id /* block */)completion;
- (void)deleteObjectsOfType:(id)type predicate:(id)predicate options:(unsigned long long)options withCompletion:(id /* block */)completion;
- (void)_addQuery:(id)query;
- (void)_removeQuery:(id)query;
- (void)executeQuery:(id)query;
- (void)executeQuery:(id)query activationHandler:(id /* block */)handler;
- (void)stopQuery:(id)query;
- (id)_queries;
- (id)dateOfBirthWithError:(id *)error;
- (id)dateOfBirthComponentsWithError:(id *)error;
- (BOOL)_setDateOfBirthComponents:(id)components error:(id *)error;
- (id)biologicalSexWithError:(id *)error;
- (BOOL)_setBiologicalSex:(long long)sex error:(id *)error;
- (id)bloodTypeWithError:(id *)error;
- (BOOL)_setBloodType:(long long)type error:(id *)error;
- (id)fitzpatrickSkinTypeWithError:(id *)error;
- (BOOL)_setFitzpatrickSkinType:(long long)type error:(id *)error;
- (id)wheelchairUseWithError:(id *)error;
- (BOOL)_setWheelchairUse:(long long)use error:(id *)error;
- (id)_cardioFitnessMedicationsUseWithError:(id *)error;
- (BOOL)_setCardioFitnessMedicationsUse:(unsigned long long)use error:(id *)error;
- (id)_bodyMassCharacteristicQuantityWithError:(id *)error;
- (BOOL)_setBodyMassCharacteristicQuantity:(id)quantity error:(id *)error;
- (id)_leanBodyMassCharacteristicQuantityWithError:(id *)error;
- (BOOL)_setLeanBodyMassCharacteristicQuantity:(id)quantity error:(id *)error;
- (id)_heightCharacteristicQuantityWithError:(id *)error;
- (BOOL)_setHeightCharacteristicQuantity:(id)quantity error:(id *)error;
- (id)_userEnteredMenstrualCycleLengthCharacteristicQuantityWithError:(id *)error;
- (BOOL)_setUserEnteredMenstrualCycleLengthCharacteristicQuantity:(id)quantity error:(id *)error;
- (id)_userEnteredMenstrualPeriodLengthCharacteristicQuantityWithError:(id *)error;
- (BOOL)_setUserEnteredMenstrualPeriodLengthCharacteristicQuantity:(id)quantity error:(id *)error;
- (id)activityMoveModeWithError:(id *)error;
- (id)_activityMoveModeWithError:(id *)error;
- (BOOL)_setActivityMoveMode:(long long)mode error:(id *)error;
- (id)_characteristicForDataType:(id)type error:(id *)error;
- (BOOL)_setCharacteristic:(id)characteristic forDataType:(id)type error:(id *)error;
- (id)_modificationDateForCharacteristicWithType:(id)type error:(id *)error;
- (BOOL)supportsHealthRecords;
- (BOOL)_supportsFeature:(unsigned long long)feature;
- (void)addSamples:(id)samples toWorkout:(id)workout completion:(id /* block */)completion;
- (void)_replaceWorkout:(id)workout withWorkout:(id)workout completion:(id /* block */)completion;
- (void)startWorkoutSession:(id)session;
- (void)endWorkoutSession:(id)session;
- (void)pauseWorkoutSession:(id)session;
- (void)resumeWorkoutSession:(id)session;
- (void)startWatchAppWithWorkoutConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)_startWatchAppWithWorkoutPlanData:(id)data processIdentifier:(int)identifier completion:(id /* block */)completion;
- (void)recoverActiveWorkoutSessionWithCompletion:(id /* block */)completion;
- (void)setWorkoutSessionMirroringStartHandler:(id /* block */)handler;
- (void)_setMirroredWorkoutSessionObserverStateToEnabled:(BOOL)enabled handler:(id /* block */)handler;
- (void)queryDidFinishExecuting:(id)executing;
- (void)closeTransactionForTypes:(id)types anchor:(id)anchor ackTime:(id)time query:(id)query;
- (void)_setBackgroundDeliveryFrequencyDataType:(id)type frequency:(long long)frequency withCompletion:(id /* block */)completion;
- (void)enableBackgroundDeliveryForType:(id)type frequency:(long long)frequency withCompletion:(id /* block */)completion;
- (void)disableBackgroundDeliveryForType:(id)type withCompletion:(id /* block */)completion;
- (void)disableAllBackgroundDeliveryWithCompletion:(id /* block */)completion;
- (void)_closeTransactionWithTypes:(id)types anchor:(id)anchor ackTime:(id)time;
- (void)preferredUnitsForQuantityTypes:(id)types completion:(id /* block */)completion;
- (void)preferredUnitsForQuantityTypes:(id)types version:(long long)version completion:(id /* block */)completion;
- (void)_setPreferredUnit:(id)unit forType:(id)type completion:(id /* block */)completion;
- (void)_removePreferredUnitForType:(id)type completion:(id /* block */)completion;
- (void)splitTotalEnergy:(id)energy startDate:(id)date endDate:(id)date resultsHandler:(id /* block */)handler;
- (id)remoteInterface;
- (id)exportedInterface;
- (void)connectionInvalidated;
- (void)connectionInterrupted;
- (void)_applicationWillResignActive:(id)active;
- (void)_applicationDidBecomeActive:(id)active;
- (id /* block */)_actionCompletionOnClientQueue:(id /* block */)queue;
- (id /* block */)_objectCompletionOnClientQueue:(id /* block */)queue;
- (BOOL)_prepareObjectsForSaving:(id)saving errorOut:(id *)out;
- (void)setHealthLiteValue:(id)value forKey:(id)key completion:(id /* block */)completion;
- (void)getHealthLiteValueForKey:(id)key completion:(id /* block */)completion;
- (void)setAllHealthDataAccessForSiri:(long long)siri completion:(id /* block */)completion;
- (void)getAllHealthDataAccessForSiriWithCompletion:(id /* block */)completion;
- (void)fetchServerURLForAssetType:(id)type completion:(id /* block */)completion;
- (void)setServerURL:(id)url forAssetType:(id)type completion:(id /* block */)completion;
- (void)clientRemote_unitPreferencesDidUpdate;
- (void)clientRemote_conceptIndexManagerDidBecomeQuiescentWithSamplesProcessedCount:(long long)count;
- (void)clientRemote_didCreateRemoteSessionWithConfiguration:(id)configuration;
- (void)fetchMedicalIDDataWithCompletion:(id /* block */)completion;
- (void)fetchMedicalIDDataCreateIfNecessary:(BOOL)necessary withCompletion:(id /* block */)completion;
- (void)fetchMedicalIDEmergencyContactsWithCompletion:(id /* block */)completion;
- (void)updateMedicalIDData:(id)iddata;
- (void)updateMedicalIDData:(id)iddata completion:(id /* block */)completion;
- (void)deleteMedicalIDData;
- (void)deleteMedicalIDDataWithCompletion:(id /* block */)completion;
- (void)dropEntitlement:(id)entitlement;
- (void)restoreEntitlement:(id)entitlement;
@end

#endif /* HKHealthStore_h */
