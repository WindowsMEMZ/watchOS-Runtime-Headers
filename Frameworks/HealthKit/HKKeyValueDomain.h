//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKKeyValueDomain_h
#define HKKeyValueDomain_h
@import Foundation;

#include "HKHealthStore.h"
#include "HKTaskServerProxyProvider.h"
#include "_HKXPCExportable-Protocol.h"

@class NSString, NSUUID;
@protocol HKObserverSet<HKKeyValueDomainObserver;

@interface HKKeyValueDomain : NSObject<_HKXPCExportable> {
  /* instance variables */
  NSUUID *_identifier;
  HKTaskServerProxyProvider *_proxyProvider;
  HKObserverSet<HKKeyValueDomainObserver> *_observers;
}

@property (readonly, nonatomic) long long category;
@property (readonly, copy, nonatomic) NSString *domainName;
@property (readonly, nonatomic) HKHealthStore *healthStore;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)healthAppDefaultsDomainWithHealthStore:(id)store;
+ (id)healthArticlesDefaultsDomainWithHealthStore:(id)store;
+ (id)safetyDefaultsDomainWithHealthStore:(id)store;
+ (id)safetyDefaultsLocalDomainWithHealthStore:(id)store;
+ (id)emergencyDefaultsDomainWithHealthStore:(id)store;
+ (id)heartRhythmDefaultsDomainWithHealthStore:(id)store;
+ (id)serverInterface;
+ (id)clientInterface;

/* instance methods */
- (id)hkhr_electrocardiogramRecordingFirstOnboardingCompletedDateWithError:(id *)error;
- (id)initWithCategory:(long long)category domainName:(id)name healthStore:(id)store;
- (void)invalidate;
- (BOOL)setNumber:(id)number forKey:(id)key error:(id *)error;
- (void)setNumber:(id)number forKey:(id)key completion:(id /* block */)completion;
- (BOOL)setData:(id)data forKey:(id)key error:(id *)error;
- (void)setData:(id)data forKey:(id)key completion:(id /* block */)completion;
- (BOOL)setDate:(id)date forKey:(id)key error:(id *)error;
- (void)setDate:(id)date forKey:(id)key completion:(id /* block */)completion;
- (BOOL)setString:(id)string forKey:(id)key error:(id *)error;
- (void)setString:(id)string forKey:(id)key completion:(id /* block */)completion;
- (BOOL)setPropertyListValue:(id)value forKey:(id)key error:(id *)error;
- (void)setPropertyListValue:(id)value forKey:(id)key completion:(id /* block */)completion;
- (void)setValuesWithDictionary:(id)dictionary completion:(id /* block */)completion;
- (void)removeValuesForKeys:(id)keys completion:(id /* block */)completion;
- (void)setValueForAllKeys:(id)keys completion:(id /* block */)completion;
- (id)numberForKey:(id)key error:(id *)error;
- (void)numberForKey:(id)key completion:(id /* block */)completion;
- (id)dataForKey:(id)key error:(id *)error;
- (void)dataForKey:(id)key completion:(id /* block */)completion;
- (id)dateForKey:(id)key error:(id *)error;
- (void)dateForKey:(id)key completion:(id /* block */)completion;
- (id)stringForKey:(id)key error:(id *)error;
- (void)stringForKey:(id)key completion:(id /* block */)completion;
- (id)propertyListValueForKey:(id)key error:(id *)error;
- (void)propertyListValueForKey:(id)key completion:(id /* block */)completion;
- (id)_dataFromPropertyListValue:(id)value error:(id *)error;
- (id)_propertyListValueFromData:(id)data error:(id *)error;
- (id)allValuesWithError:(id *)error;
- (void)allValuesWithCompletion:(id /* block */)completion;
- (void)startObservation:(id)observation;
- (void)unitTest_startObservation:(id)observation withCompletion:(id /* block */)completion;
- (void)_startObservation:(id)observation withCompletion:(id /* block */)completion;
- (void)stopObservation:(id)observation;
- (void)_registerFirstObserverWithCompletion:(id /* block */)completion;
- (void)_unregisterLastObserver;
- (void)_observeKeyValueDomainChanges:(BOOL)changes completion:(id /* block */)completion;
- (void)_handleAutomaticProxyReconnection;
- (BOOL)_synchronouslyRegisterToObserveKeyValueDomainChanges:(id *)changes;
- (void)clientRemote_didUpdate;
- (id)exportedInterface;
- (id)remoteInterface;
- (void)connectionInvalidated;
@end

#endif /* HKKeyValueDomain_h */
