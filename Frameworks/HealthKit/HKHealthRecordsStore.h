//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKHealthRecordsStore_h
#define HKHealthRecordsStore_h
@import Foundation;

#include "HKHealthRecordsStoreInterface-Protocol.h"
#include "HKHealthStore.h"
#include "HKObserverSet.h"
#include "HKTaskServerProxyProvider.h"
#include "_HKXPCExportable-Protocol.h"

@class NSString;

@interface HKHealthRecordsStore : NSObject<HKHealthRecordsStoreInterface, _HKXPCExportable> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _ivarLock;
  HKTaskServerProxyProvider *_proxyProvider;
  long long _lastKnownIngestionState;
}

@property (retain, nonatomic) HKObserverSet *ingestionStateChangeObservers;
@property (retain, nonatomic) HKObserverSet *chrSupportedStateChangeObservers;
@property (copy, nonatomic) id /* block */ unitTesting_didCallReestablishProxyConnectionIfObserversArePresent;
@property (readonly, nonatomic) HKHealthStore *healthStore;
@property (readonly, nonatomic) long long currentIngestionState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)taskIdentifier;

/* instance methods */
- (void)_hk_shouldPromptForOptInClinicalDataCollection:(id /* block */)collection;
- (id)initWithHealthStore:(id)store;
- (void)ingestHealthRecordsWithOptions:(unsigned long long)options reason:(id)reason accountIdentifiers:(id)identifiers completion:(id /* block */)completion;
- (void)ingestHealthRecordsWithFHIRDocumentHandle:(id)handle accountIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)ingestHealthRecordsWithFHIRDocumentHandle:(id)handle accountIdentifier:(id)identifier options:(unsigned long long)options completion:(id /* block */)completion;
- (void)resetHealthRecordsLastExtractedRowIDWithCompletion:(id /* block */)completion;
- (void)fetchRawSourceStringForHealthRecord:(id)record completion:(id /* block */)completion;
- (void)fetchExportedPropertiesForHealthRecord:(id)record completion:(id /* block */)completion;
- (void)fetchFHIRJSONDocumentWithAccountIdentifier:(id)identifier completion:(id /* block */)completion;
- (void)stringifyExtractionFailureReasonsForRecord:(id)record completion:(id /* block */)completion;
- (void)triggerClinicalOptInDataCollectionForReason:(long long)reason completion:(id /* block */)completion;
- (void)resetClinicalOptInDataCollectionAnchorsWithCompletion:(id /* block */)completion;
- (void)fetchClinicalOptInDataCollectionFilePathsWithCompletion:(id /* block */)completion;
- (void)triggerClinicalContentAnalyticsForReason:(long long)reason options:(unsigned long long)options completion:(id /* block */)completion;
- (void)triggerHealthCloudUploadWithCompletion:(id /* block */)completion;
- (void)resetClinicalContentAnalyticsAnchorsWithCompletion:(id /* block */)completion;
- (void)addIngestionStateListener:(id)listener;
- (void)removeIngestionStateListener:(id)listener;
- (void)fetchCurrentIngestionStateWithCompletion:(id /* block */)completion;
- (void)clientRemote_updateIngestionState:(long long)state;
- (void)addHealthRecordsSupportedChangeListener:(id)listener;
- (void)removeHealthRecordsSupportedChangeListener:(id)listener;
- (void)clientRemote_healthRecordsSupportedDidChangeTo:(BOOL)to;
- (void)registerAppSourceForClinicalUnlimitedAuthorizationModeConfirmation:(id)confirmation completion:(id /* block */)completion;
- (void)deregisterAppSourceFromClinicalUnlimitedAuthorizationModeConfirmation:(id)confirmation completion:(id /* block */)completion;
- (void)_fetchHealthRecordsPluginServerProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)_getSynchronousHealthRecordsPluginServerProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (id /* block */)_actionCompletionWithObjectOnClientQueue:(id /* block */)queue;
- (void)_establishProxyConnectionIfNoObserversArePresent;
- (void)_reestablishProxyConnectionIfObserversArePresentWithPluginServerProxy:(id)proxy;
- (void)_establishProxyConnection;
- (void)_executeCheapCallOnPluginServerProxy:(id)proxy;
- (id)exportedInterface;
- (id)remoteInterface;
- (void)connectionInvalidated;
@end

#endif /* HKHealthRecordsStore_h */
