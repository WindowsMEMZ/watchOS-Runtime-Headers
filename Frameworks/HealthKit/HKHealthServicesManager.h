//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4146.2.12.2.2
//
#ifndef HKHealthServicesManager_h
#define HKHealthServicesManager_h
@import Foundation;

#include "HKHealthServicesManagerClientInterface-Protocol.h"
#include "HKProxyProvider.h"
#include "_HKXPCExportable-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSString;

@interface HKHealthServicesManager : NSObject<_HKXPCExportable, HKHealthServicesManagerClientInterface> {
  /* instance variables */
  HKProxyProvider *_proxyProvider;
}

@property (retain, nonatomic) NSMutableDictionary *discoveries;
@property (retain, nonatomic) NSMutableSet *discoveriesEnded;
@property (retain, nonatomic) NSMutableDictionary *sessions;
@property (retain, nonatomic) NSMutableSet *sessionsEnded;
@property (copy, nonatomic) id /* block */ bluetoothStatusHandler;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)taskIdentifier;

/* instance methods */
- (id)initWithHealthStore:(id)store;
- (id)initWithWeakHealthStore:(id)store;
- (void)_fetchHealthServicesServerProxyWithHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)startBluetoothStatusUpdates:(id /* block */)updates;
- (void)endBluetoothStatusUpdates;
- (void)_fetchSupportedServiceIDsWithCompletion:(id /* block */)completion;
- (void)startHealthServiceDiscovery:(id)discovery withHandler:(id /* block */)handler;
- (id)startAllHealthServicesDiscoveryWithHandler:(id /* block */)handler;
- (void)_startHealthServiceExtendedDiscovery:(id)discovery withHandler:(id /* block */)handler;
- (void)endHealthServiceDiscovery:(id)discovery;
- (id)activeHealthServiceDiscoveries;
- (void)startHealthServiceSession:(id)session withHandler:(id /* block */)handler;
- (void)endHealthServiceSession:(id)session;
- (id)activeHealthServiceSessions;
- (void)healthServicePairingsWithHandler:(id /* block */)handler;
- (void)healthPeripheralsWithFilter:(unsigned long long)filter handler:(id /* block */)handler;
- (void)addHealthServicePairing:(id)pairing withCompletion:(id /* block */)completion;
- (void)removeHealthServicePairing:(id)pairing withCompletion:(id /* block */)completion;
- (void)registerPeripheralIdentifier:(id)identifier name:(id)name services:(id)services withCompletion:(id /* block */)completion;
- (void)unregisterPeripheralIdentifier:(id)identifier withCompletion:(id /* block */)completion;
- (void)getEnabledStatusForPeripheral:(id)peripheral withCompletion:(id /* block */)completion;
- (void)setEnabledStatus:(BOOL)status forPeripheral:(id)peripheral withCompletion:(id /* block */)completion;
- (void)getHealthServicePropertyNamesWithHandler:(id /* block */)handler;
- (void)getHealthServiceProperty:(id)property forSession:(id)session withHandler:(id /* block */)handler;
- (void)performHealthServiceOperation:(id)operation onSession:(id)session withParameters:(id)parameters completion:(id /* block */)completion;
- (void)_addEndedDiscovery:(id)discovery;
- (void)_addEndedSession:(id)session;
- (void)clientRemote_deliverBluetoothStatus:(long long)status withError:(id)error;
- (void)clientRemote_deliverDiscoveryHealthService:(id)service toClient:(unsigned long long)client finished:(BOOL)finished withError:(id)error;
- (void)clientRemote_deliverSessionHealthServiceStatus:(long long)status toClient:(unsigned long long)client finished:(BOOL)finished withError:(id)error;
- (void)clientRemote_deliverSessionCharacteristics:(id)characteristics forService:(id)service toClient:(unsigned long long)client withError:(id)error;
- (void)connectionInterrupted;
- (void)connectionInvalidated;
- (id)exportedInterface;
- (id)remoteInterface;
@end

#endif /* HKHealthServicesManager_h */
