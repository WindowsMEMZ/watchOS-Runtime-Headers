//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 956.0.0.0.0
//
#ifndef ACAccountCredential_h
#define ACAccountCredential_h
@import Foundation;

#include "ACAccount.h"
#include "ACProtobufCoding-Protocol.h"
#include "NSCoding-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDate, NSDictionary, NSMutableSet, NSSet, NSString;

@interface ACAccountCredential : NSObject<ACProtobufCoding, NSCoding, NSCopying, NSSecureCoding> {
  /* instance variables */
  NSDictionary *_credentialItems;
  ACAccount *_owningAccount;
}

@property (nonatomic) BOOL requiresTouchID;
@property (copy, nonatomic) NSString *token;
@property (copy, nonatomic) NSString *oauthTokenSecret;
@property (copy, nonatomic) NSString *password;
@property (copy, nonatomic) NSString *credentialType;
@property (readonly, nonatomic) NSSet *dirtyProperties;
@property (nonatomic) BOOL dirty;
@property (nonatomic) BOOL empty;
@property (copy, nonatomic) NSString *oauthTokenNoSync;
@property (copy, nonatomic) NSString *oauthRefreshToken;
@property (retain, nonatomic) NSDate *expiryDate;
@property (copy, nonatomic) NSString *findMyiPhoneToken;
@property (copy, nonatomic) NSString *mapsToken;
@property (copy, nonatomic) NSString *mdmServerToken;
@property (copy, nonatomic) NSString *hsaToken;
@property (copy, nonatomic) NSDate *tokenExpiryDate;
@property (copy, nonatomic) NSString *oauthToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)credentialWithOAuthToken:(id)token tokenSecret:(id)secret;
+ (id)credentialWithPassword:(id)password;
+ (id)allSupportedKeys;
+ (id)supportedKeysForAccountTypeIdentifier:(id)identifier credentialType:(id)type;
+ (id)nonPersistentKeysForAccountTypeIdentifier:(id)identifier credentialType:(id)type;
+ (id)credentialPolicyForAccountTypeIdentifier:(id)identifier key:(id)key clientID:(id)id;
+ (BOOL)credentialPolicyIsMixedForAccountTypeIdentifier:(id)identifier;
+ (id)additionalServiceSegmentForAccountTypeIdentifier:(id)identifier;

/* instance methods */
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithOAuth2Token:(id)token refreshToken:(id)token expiryDate:(id)date;
- (id)initWithOAuthToken:(id)token tokenSecret:(id)secret;
- (id)initWithPassword:(id)password;
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)_initWithProtobuf:(id)protobuf;
- (id)_initWithProtobufData:(id)data;
- (id)_encodeProtobuf;
- (id)_encodeProtobufData;
- (void)_setOwningAccount:(id)account;
- (BOOL)isDirty;
- (BOOL)isEmpty;
- (void)_markPropertyDirty:(id)dirty;
- (void)_clearDirtyProperties;
- (id)credentialItems;
- (id)keysForCredentialItems;
- (id)credentialItemForKey:(id)key;
- (void)setCredentialItem:(id)item forKey:(id)key;
@end

#endif /* ACAccountCredential_h */
