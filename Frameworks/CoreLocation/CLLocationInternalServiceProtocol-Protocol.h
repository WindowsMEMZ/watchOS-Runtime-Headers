//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CLLocationInternalServiceProtocol_Protocol_h
#define CLLocationInternalServiceProtocol_Protocol_h
@import Foundation;

@protocol CLLocationInternalServiceProtocol 
/* instance methods */
- (void)getTechnologiesInUseWithReplyBlock:(id /* block */)block;
- (void)getMicroLocationInternalVersionWithReplyBlock:(id /* block */)block;
- (void)getZaxisStatsWithReplyBlock:(id /* block */)block;
- (void)getGnssBandsInUseWithReplyBlock:(id /* block */)block;
- (void)getAppsUsingLocationWithReplyBlock:(id /* block */)block;
- (void)getActiveClientsUsingLocationWithReplyBlock:(id /* block */)block;
- (void)setLocationDefaultForKey:(id)key andValue:(id)value replyBlock:(id /* block */)block;
- (void)getLocationDefaultForKey:(id)key replyBlock:(id /* block */)block;
- (void)timeZoneForLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location replyBlock:(id /* block */)block;
- (void)setGestureServiceEnabled:(BOOL)enabled replyBlock:(id /* block */)block;
- (void)triggerExpiredAuthorizationPurgeWithReplyBlock:(id /* block */)block;
- (void)setTemporaryAuthorizationStatusForBundleId:(id)id orBundlePath:(id)path statusData:(id)data replyBlock:(id /* block */)block;
- (void)getTemporaryAuthorizationStatusForBundleId:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)modifyOrSetAuthorizationTime:(double)time forBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)performMigrationWithReplyBlock:(id /* block */)block;
- (void)shutdownDaemonWithReplyBlock:(id /* block */)block;
- (void)setAuthorizationStatus:(BOOL)status withCorrectiveCompensation:(int)compensation forBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)setPrivateMode:(BOOL)mode replyBlock:(id /* block */)block;
- (void)getPrivateMode:(id /* block */)mode;
- (void)setLocationServicesEnabled:(BOOL)enabled replyBlock:(id /* block */)block;
- (void)getLocationServicesEnabledWithReplyBlock:(id /* block */)block;
- (void)setAuthorizationPromptMapDisplayEnabled:(BOOL)enabled replyBlock:(id /* block */)block;
- (void)getAuthorizationPromptMapDisplayEnabledWithReplyBlock:(id /* block */)block;
- (void)getGestureServiceEnabledWithReplyBlock:(id /* block */)block;
- (void)pingDaemonWithReplyBlock:(id /* block */)block;
- (void)getAuthorizationStatusForBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)getAuthorizationStatusForAppWithAuditToken:(struct { unsigned int x0[8] })token replyBlock:(id /* block */)block;
- (void)getIncidentalUseModeForBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)getPrecisionPermissionForBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)displayStatisticsWithReplyBlock:(id /* block */)block;
- (void)dumpLogsWithDescription:(id)description replyBlock:(id /* block */)block;
- (void)copyLastLogWithReplyBlock:(id /* block */)block;
- (void)getMonitoredRegionsForBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)checkAndExerciseAuthorizationForBundleID:(id)id orBundlePath:(id)path services:(unsigned long long)services replyBlock:(id /* block */)block;
- (void)registerCircularInterestZoneWithId:(id)id latitude:(double)latitude longitude:(double)longitude radius:(double)radius serviceMaskOperator:(int)operator provenanceType:(int)type forBundleId:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)registerPhenolicInterestZoneWithId:(id)id phenolicLocation:(int)location serviceMaskOperator:(int)operator provenanceType:(int)type forBundleId:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)setRelevance:(BOOL)relevance forInterestZoneWithId:(id)id registeredForBundleId:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)deleteInterestZoneWithId:(id)id registeredForBundleId:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)getLocationForBundleID:(id)id orBundlePath:(id)path dynamicAccuracyReductionEnabled:(BOOL)enabled allowsAlteredAccessoryLocations:(BOOL)locations replyBlock:(id /* block */)block;
- (void)getGroundAltitudeForBundleID:(id)id orBundlePath:(id)path location:(id)location replyBlock:(id /* block */)block;
- (void)reportLocationUtilityEvent:(int)event atDate:(id)date withReplyBlock:(id /* block */)block;
- (void)resetClientForBundleId:(id)id orBundlePath:(id)path withReplyBlock:(id /* block */)block;
- (void)resetAllClientsWithReplyBlock:(id /* block */)block;
- (void)applyArchivedAuthorizationDecisions:(id)decisions withConfirmationToken:(id)token replyBlock:(id /* block */)block;
- (void)getArchivedAuthorizationDecisionsWithReplyBlock:(id /* block */)block;
- (void)setStatusBarIconEnabledForEntityClass:(unsigned int)class enabled:(BOOL)enabled replyBlock:(id /* block */)block;
- (void)getStatusBarIconEnabledForEntityClass:(unsigned int)class replyBlock:(id /* block */)block;
- (void)getStatusBarIconState:(id /* block */)state;
- (void)setMapMatchingRouteHint:(id)hint routingType:(int)type stepType:(int)type replyBlock:(id /* block */)block;
- (void)setTrackRunHint:(id)hint replyBlock:(id /* block */)block;
- (void)getAccessoryTypeBitSetWithReplyBlock:(id /* block */)block;
- (void)getAccessoryPASCDTransmissionStateWithReplyBlock:(id /* block */)block;
- (void)getOdometryBatchedLocationsWithReplyBlock:(id /* block */)block;
- (void)getPipelinedCacheWithReply:(id /* block */)reply;
- (void)setTemporaryAuthorizationGranted:(BOOL)granted forBundleID:(id)id orBundlePath:(id)path orAuditToken:(struct { unsigned int x0[8] })token byLocationButton:(BOOL)button voiceInteractionEnabled:(BOOL)enabled replyBlock:(id /* block */)block;
- (void)getGyroCalibrationDatabaseBiasFitAtTemperature:(float)temperature withReply:(id /* block */)reply;
- (void)getActivitiesWithReplyBlock:(id /* block */)block;
- (void)updatePillButtonChoiceForOutstandingPrompt:(int)prompt replyBlock:(id /* block */)block;
- (void)updatePromptedLatitude:(double)latitude longitude:(double)longitude replyBlock:(id /* block */)block;
- (void)setIncidentalUseMode:(int)mode forBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)setLocationButtonUseMode:(int)mode forBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)setAuthorizationStatusByType:(int)type withCorrectiveCompensation:(int)compensation andZoneIdentifier:(id)identifier andSubIdentityIdentifier:(id)identifier forBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)gyroCalibrationDatabaseSupportsMiniCalibrationWithReplyBlock:(id /* block */)block;
- (void)setBackgroundIndicatorEnabled:(BOOL)enabled forBundleID:(id)id orBundlePath:(id)path replyBlock:(id /* block */)block;
- (void)getOscarTimeSyncWithReplyBlock:(id /* block */)block;
- (void)notifyPassKitPayment:(id)payment transaction:(id)transaction info:(id)info;
- (void)notifyWeatherForecast:(id)forecast airQualityConditions:(id)conditions hourlyForecasts:(id)forecasts dailyForecasts:(id)forecasts latitude:(double)latitude longitude:(double)longitude;
@end

#endif /* CLLocationInternalServiceProtocol_Protocol_h */
