//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CLLocation_h
#define CLLocation_h
@import Foundation;

#include "CLFloor.h"
#include "CLLocationGnssOdometerInfo.h"
#include "CLLocationMatchInfo.h"
#include "CLLocationSourceInformation.h"
#include "CLLocationTrackRunInfo.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSData, NSDate, NSString;

@interface CLLocation : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  id _internal;
}

@property (readonly, nonatomic) CLLocationMatchInfo *matchInfo;
@property (readonly, nonatomic) _CLLocationGroundAltitude *_groundAltitude;
@property (readonly, nonatomic) _CLLocationFusionInfo *_fusionInfo;
@property (readonly, nonatomic) CLLocationGnssOdometerInfo *gnssOdometerInfo;
@property (readonly, nonatomic) CLLocationTrackRunInfo *trackRunInfo;
@property (readonly, nonatomic) struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; } clientLocation;
@property (readonly, nonatomic) NSString *iso6709Notation;
@property (readonly, nonatomic) int type;
@property (readonly, nonatomic) NSData *coarseMetaData;
@property (nonatomic) int referenceFrame;
@property (readonly, nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } rawCoordinate;
@property (readonly, nonatomic) double rawHorizontalAccuracy;
@property (readonly, nonatomic) double rawAltitude;
@property (readonly, nonatomic) double rawVerticalAccuracy;
@property (readonly, nonatomic) double rawCourse;
@property (readonly, nonatomic) double rawCourseAccuracy;
@property (readonly, nonatomic) double magneticDeclination;
@property (readonly, nonatomic) unsigned int integrity;
@property (readonly, nonatomic) double trustedTimestamp;
@property (readonly, nonatomic) BOOL isAltitudeWgs84Available;
@property (readonly, nonatomic) double altitudeWgs84;
@property (readonly, nonatomic) BOOL coordinateFused;
@property (readonly, nonatomic) BOOL coordinateFusedWithVL;
@property (readonly, nonatomic) int signalEnvironmentType;
@property (readonly, nonatomic) int positionContextState;
@property (readonly, nonatomic) double probabilityPositionContextStateIndoor;
@property (readonly, nonatomic) double probabilityPositionContextStateOutdoor;
@property (readonly, nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } coordinate;
@property (readonly, nonatomic) double altitude;
@property (readonly, nonatomic) double ellipsoidalAltitude;
@property (readonly, nonatomic) double horizontalAccuracy;
@property (readonly, nonatomic) double verticalAccuracy;
@property (readonly, nonatomic) double course;
@property (readonly, nonatomic) double courseAccuracy;
@property (readonly, nonatomic) double speed;
@property (readonly, nonatomic) double speedAccuracy;
@property (readonly, copy, nonatomic) NSDate *timestamp;
@property (readonly, copy, nonatomic) CLFloor *floor;
@property (readonly, nonatomic) CLLocationSourceInformation *sourceInformation;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info trustedTimestamp:(double)timestamp;
- (void)unmatch;
- (id)_initWithRTLocation:(id)rtlocation;
- (id)init;
- (id)initWithLatitude:(double)latitude longitude:(double)longitude;
- (id)_initWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate altitude:(double)altitude horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy course:(double)course courseAccuracy:(double)accuracy speed:(double)speed speedAccuracy:(double)accuracy timestamp:(id)timestamp floor:(int)floor type:(int)type sourceParams:(id)params referenceFrame:(int)frame;
- (id)initWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate altitude:(double)altitude horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy timestamp:(id)timestamp;
- (id)initWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate altitude:(double)altitude horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy course:(double)course speed:(double)speed timestamp:(id)timestamp;
- (id)initWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate altitude:(double)altitude horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy timestamp:(id)timestamp referenceFrame:(int)frame;
- (id)initWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate altitude:(double)altitude horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy course:(double)course courseAccuracy:(double)accuracy speed:(double)speed speedAccuracy:(double)accuracy timestamp:(id)timestamp;
- (id)initWithCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate altitude:(double)altitude horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy course:(double)course courseAccuracy:(double)accuracy speed:(double)speed speedAccuracy:(double)accuracy timestamp:(id)timestamp sourceInfo:(id)info;
- (id)initWithLatitude:(double)latitude longitude:(double)longitude altitude:(double)altitude speed:(double)speed course:(double)course horizontalAccuracy:(double)accuracy verticalAccuracy:(double)accuracy speedAccuracy:(double)accuracy courseAccuracy:(double)accuracy type:(int)type timestamp:(id)timestamp;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location coarseMetaData:(id)data;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location clientLocationPrivate:(struct { double x0; double x1; double x2; double x3; double x4; float x5; float x6; float x7; BOOL x8; int x9; struct { double x0; double x1; } x10; double x11; int x12; int x13; BOOL x14; struct { double x0; double x1; BOOL x2; BOOL x3; int x4; double x5; long long x6; double x7; double x8; double x9; } x15; struct { struct { int x0; double x1; double x2; double x3; double x4; double x5; struct { double x0; double x1; } x6; double x7; double x8; } x0; int x1; unsigned long long x2; int x3; int x4; int x5; int x6; double x7; BOOL x8; } x16; struct { double x0; double x1; } x17; int x18; float x19; struct { double x0; double x1; } x20; double x21; double x22; int x23; BOOL x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; BOOL x33; BOOL x34; struct { double x0; double x1; } x35; double x36; int x37; double x38; double x39; double x40; double x41; int x42; double x43; double x44; int x45; struct { unsigned int x0; } x46; struct { int x0; float x1; } x47; })private;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location clientLocationPrivate:(struct { double x0; double x1; double x2; double x3; double x4; float x5; float x6; float x7; BOOL x8; int x9; struct { double x0; double x1; } x10; double x11; int x12; int x13; BOOL x14; struct { double x0; double x1; BOOL x2; BOOL x3; int x4; double x5; long long x6; double x7; double x8; double x9; } x15; struct { struct { int x0; double x1; double x2; double x3; double x4; double x5; struct { double x0; double x1; } x6; double x7; double x8; } x0; int x1; unsigned long long x2; int x3; int x4; int x5; int x6; double x7; BOOL x8; } x16; struct { double x0; double x1; } x17; int x18; float x19; struct { double x0; double x1; } x20; double x21; double x22; int x23; BOOL x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; BOOL x33; BOOL x34; struct { double x0; double x1; } x35; double x36; int x37; double x38; double x39; double x40; double x41; int x42; double x43; double x44; int x45; struct { unsigned int x0; } x46; struct { int x0; float x1; } x47; })private coarseMetaData:(id)data;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)description;
- (id)shortDescription;
- (id)jsonObject;
- (BOOL)isCoordinateFused;
- (BOOL)isCoordinateFusedWithVL;
- (double)getDistanceFrom:(id)from;
- (double)distanceFromLocation:(id)location;
- (id)snapToResolution:(double)resolution;
- (id)propagateLocationToTime:(double)time;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info trustedTimestamp:(double)timestamp groundAltitude:(id)altitude;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info trustedTimestamp:(double)timestamp groundAltitude:(id)altitude fusionInfo:(id)info trackRunInfo:(id)info rawHorizontalAccuracy:(double)accuracy rawCourseAccuracy:(double)accuracy coarseMetaData:(id)data;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info trustedTimestamp:(double)timestamp groundAltitude:(id)altitude fusionInfo:(id)info trackRunInfo:(id)info rawHorizontalAccuracy:(double)accuracy rawAltitude:(double)altitude rawVerticalAccuracy:(double)accuracy rawCourseAccuracy:(double)accuracy positionContextStateType:(int)type probabilityPositionContextStateIndoor:(double)indoor probabilityPositionContextStateOutdoor:(double)outdoor gnssOdometerInfo:(id)info coarseMetaData:(id)data;
@end

#endif /* CLLocation_h */
