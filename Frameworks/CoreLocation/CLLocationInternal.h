//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CLLocationInternal_h
#define CLLocationInternal_h
@import Foundation;

#include "CLLocationGnssOdometerInfo.h"
#include "CLLocationMatchInfo.h"
#include "CLLocationTrackRunInfo.h"
#include "_CLLocationFusionInfo.h"
#include "_CLLocationGroundAltitude.h"

@class NSData;

@interface CLLocationInternal : NSObject {
  /* instance variables */
  struct { int padding1; int suitability; struct { double latitude; double longitude; } coordinate; double horizontalAccuracy; double altitude; double verticalAccuracy; double padding2; double padding3; double speed; double speedAccuracy; double course; double courseAccuracy; double timestamp; int confidence; double lifespan; int type; struct { double latitude; double longitude; } rawCoordinate; double rawCourse; int floor; unsigned int integrity; int referenceFrame; int rawReferenceFrame; int signalEnvironmentType; double ellipsoidalAltitude; BOOL fromSimulationController; } fLocation;
  CLLocationMatchInfo *fMatchInfo;
  _CLLocationGroundAltitude *fGroundAltitude;
  double fTrustedTimestamp;
  NSData *fCoarseMetaData;
  _CLLocationFusionInfo *fFusionInfo;
  CLLocationTrackRunInfo *fTrackRunInfo;
  double fRawHorizontalAccuracy;
  double fRawAltitude;
  double fRawVerticalAccuracy;
  double fRawCourseAccuracy;
  int fPositionContextState;
  double fProbabilityPositionContextStateIndoor;
  double fProbabilityPositionContextStateOutdoor;
  CLLocationGnssOdometerInfo *fGnssOdometerInfo;
}

/* instance methods */
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location coarseMetaData:(id)data;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location clientLocationPrivate:(struct { double x0; double x1; double x2; double x3; double x4; float x5; float x6; float x7; BOOL x8; int x9; struct { double x0; double x1; } x10; double x11; int x12; int x13; BOOL x14; struct { double x0; double x1; BOOL x2; BOOL x3; int x4; double x5; long long x6; double x7; double x8; double x9; } x15; struct { struct { int x0; double x1; double x2; double x3; double x4; double x5; struct { double x0; double x1; } x6; double x7; double x8; } x0; int x1; unsigned long long x2; int x3; int x4; int x5; int x6; double x7; BOOL x8; } x16; struct { double x0; double x1; } x17; int x18; float x19; struct { double x0; double x1; } x20; double x21; double x22; int x23; BOOL x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; BOOL x33; BOOL x34; struct { double x0; double x1; } x35; double x36; int x37; double x38; double x39; double x40; double x41; int x42; double x43; double x44; int x45; struct { unsigned int x0; } x46; struct { int x0; float x1; } x47; })private;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location clientLocationPrivate:(struct { double x0; double x1; double x2; double x3; double x4; float x5; float x6; float x7; BOOL x8; int x9; struct { double x0; double x1; } x10; double x11; int x12; int x13; BOOL x14; struct { double x0; double x1; BOOL x2; BOOL x3; int x4; double x5; long long x6; double x7; double x8; double x9; } x15; struct { struct { int x0; double x1; double x2; double x3; double x4; double x5; struct { double x0; double x1; } x6; double x7; double x8; } x0; int x1; unsigned long long x2; int x3; int x4; int x5; int x6; double x7; BOOL x8; } x16; struct { double x0; double x1; } x17; int x18; float x19; struct { double x0; double x1; } x20; double x21; double x22; int x23; BOOL x24; double x25; double x26; double x27; double x28; double x29; double x30; double x31; double x32; BOOL x33; BOOL x34; struct { double x0; double x1; } x35; double x36; int x37; double x38; double x39; double x40; double x41; int x42; double x43; double x44; int x45; struct { unsigned int x0; } x46; struct { int x0; float x1; } x47; })private coarseMetaData:(id)data;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info trustedTimestamp:(double)timestamp groundAltitude:(id)altitude;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info trustedTimestamp:(double)timestamp groundAltitude:(id)altitude fusionInfo:(id)info trackRunInfo:(id)info rawHorizontalAccuracy:(double)accuracy rawAltitude:(double)altitude rawVerticalAccuracy:(double)accuracy rawCourseAccuracy:(double)accuracy positionContextStateType:(int)type probabilityPositionContextStateIndoor:(double)indoor probabilityPositionContextStateOutdoor:(double)outdoor gnssOdometerInfo:(id)info;
- (id)initWithClientLocation:(struct { int x0; int x1; struct { double x0; double x1; } x2; double x3; double x4; double x5; double x6; double x7; double x8; double x9; double x10; double x11; double x12; int x13; double x14; int x15; struct { double x0; double x1; } x16; double x17; int x18; unsigned int x19; int x20; int x21; int x22; double x23; BOOL x24; })location matchInfo:(id)info trustedTimestamp:(double)timestamp groundAltitude:(id)altitude fusionInfo:(id)info trackRunInfo:(id)info rawHorizontalAccuracy:(double)accuracy rawAltitude:(double)altitude rawVerticalAccuracy:(double)accuracy rawCourseAccuracy:(double)accuracy positionContextStateType:(int)type probabilityPositionContextStateIndoor:(double)indoor probabilityPositionContextStateOutdoor:(double)outdoor gnssOdometerInfo:(id)info coarseMetaData:(id)data;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)dealloc;
@end

#endif /* CLLocationInternal_h */
