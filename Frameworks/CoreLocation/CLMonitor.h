//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2890.4.12.2.3
//
#ifndef CLMonitor_h
#define CLMonitor_h
@import Foundation;

#include "CLConditionLedger.h"
#include "CLIdentifiableClientProtocol-Protocol.h"
#include "CLLocationManager.h"

@class CLDispatchSilo, NSArray, NSData, NSString;

@interface CLMonitor : NSObject<CLIdentifiableClientProtocol> {
  /* instance variables */
  void * _locationdConnection;
  CLDispatchSilo *_silo;
  CLConditionLedger *_conditionLedger;
  id /* block */ _eventHandler;
}

@property (readonly, nonatomic) NSString *monitorName;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSArray *monitoredIdentifiers;
@property (retain, nonatomic) NSString *identityToken;
@property (retain, nonatomic) NSData *storageToken;
@property (retain, nonatomic) CLLocationManager *manager;
@property (nonatomic) id /* block */ weakClient;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_requestMonitorWithConfiguration:(id)configuration locationManager:(id)manager completion:(id /* block */)completion;
+ (void)requestWithConfiguration:(id)configuration locationManager:(id)manager completion:(id /* block */)completion;
+ (void)requestMonitorWithConfiguration:(id)configuration completion:(id /* block */)completion;
+ (id)sharedMonitorSet;
+ (BOOL)isMonitorNameInUse:(id)use;
+ (void)addMonitorName:(id)name;
+ (void)removeMonitorName:(id)name;

/* instance methods */
- (id)initWithLedgerName:(id)name path:(id)path onSilo:(id)silo authIdentity:(id)identity locationManager:(id)manager handler:(id /* block */)handler;
- (void)dealloc;
- (id)_getMonitoredIdentifiers;
- (id)_getMonitoringRecords;
- (void)setMonitoringEventHandler:(id /* block */)handler;
- (void)addConditionForMonitoring:(id)monitoring identifier:(id)identifier options:(unsigned long long)options assumedState:(unsigned long long)state;
- (void)addConditionForMonitoring:(id)monitoring identifier:(id)identifier assumedState:(unsigned long long)state;
- (void)addConstraintForMonitoring:(id)monitoring identifier:(id)identifier;
- (void)addConstraintForMonitoring:(id)monitoring identifier:(id)identifier assumedState:(unsigned long long)state;
- (void)_addConditionForMonitoring:(id)monitoring identifier:(id)identifier options:(unsigned long long)options assumedState:(unsigned long long)state;
- (void)addConditionForMonitoring:(id)monitoring identifier:(id)identifier;
- (void)removeConditionFromMonitoringWithIdentifier:(id)identifier;
- (void)removeConstraintFromMonitoringWithIdentifier:(id)identifier;
- (void)_removeConditionFromMonitoringWithIdentifier:(id)identifier;
- (void)updateEvent:(id)event forIdentifier:(id)identifier;
- (void)updateEventReceivedFromDaemon:(id)daemon;
- (id)monitoringRecordForIdentifier:(id)identifier;
- (void)manageConnection;
- (void)createConnection;
- (void)destroyConnection;
- (void)handleMessageMonitor:(struct shared_ptr<CLConnectionMessage> { struct CLConnectionMessage * x0; struct __shared_weak_count * x1; })monitor;
- (id)getMonitorConfiguration;
- (void)updateIdentityToken:(id)token withStorageToken:(id)token;
@end

#endif /* CLMonitor_h */
