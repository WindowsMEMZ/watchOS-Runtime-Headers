//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 161.0.0.0.0
//
#ifndef MTKTextureLoaderImageIO_h
#define MTKTextureLoaderImageIO_h
@import Foundation;

#include "MTKTextureLoaderData.h"

@class NSData;

@interface MTKTextureLoaderImageIO : MTKTextureLoaderData {
  /* instance variables */
  struct CGImageBlockSet * _blockSet;
  struct __CFData * _cfData;
  struct MTLPixelFormatInfo { char *name; unsigned int flags; unsigned long long castClass; union { struct MTLNormalPixelFormatInfo { unsigned long long pixelBytes; unsigned char componentCount; unsigned char alignment; unsigned long long pixelBytesRender; unsigned long long pixelBytesRenderMSAA; } normal; struct MTLCompressedPixelFormatInfo { unsigned long long blockBytes; unsigned long long blockWidth; unsigned long long blockHeight; unsigned long long blockDepth; } compressed; } type; } _pixelFormatInfo;
  unsigned long long _bytesPerRow;
  NSData *_imageData;
  BOOL _expandRGBToRGBA;
}

/* instance methods */
- (id)initWithData:(id)data options:(id)options error:(id *)error;
- (id)initWithCGImage:(struct CGImage *)cgimage options:(id)options error:(id *)error;
- (void)dealloc;
- (id)getDataForArrayElement:(unsigned long long)element face:(unsigned long long)face level:(unsigned long long)level depthPlane:(unsigned long long)plane bytesPerRow:(unsigned long long *)row bytesPerImage:(unsigned long long *)image;
- (BOOL)decodeCGImage:(struct CGImage *)cgimage options:(id)options;
- (BOOL)decodeCGImageImageProvider:(struct CGImage *)provider CGImageProvider:(struct CGImageProvider *)provider options:(id)options;
- (BOOL)decodeCGImageDataProvider:(struct CGImage *)provider options:(id)options;
- (BOOL)determineCGImageBlockFormatWithComponentType:(int)type alphaInfo:(unsigned int)info andPixelSizeBytes:(unsigned long long)bytes andColorSpace:(struct CGColorSpace *)space isOptimized:(BOOL)optimized options:(id)options;
@end

#endif /* MTKTextureLoaderImageIO_h */
