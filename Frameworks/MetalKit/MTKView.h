//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 161.0.0.0.0
//
#ifndef MTKView_h
#define MTKView_h
@import Foundation;

#include "UIView.h"
#include "CALayerDelegate-Protocol.h"
#include "CAMetalDrawable-Protocol.h"
#include "NSCoding-Protocol.h"

@class CADisplayLink, CAMetalLayer, MTLRenderPassDescriptor, NSString;
@protocol MTKViewDelegate, MTLDevice, MTLTexture, [8@"<MTLTexture>"];

@interface MTKView : UIView<NSCoding, CALayerDelegate> {
  /* instance variables */
  CAMetalLayer *_metalLayer;
  BOOL _sizeDirty;
  struct CGSize { double width; double height; } _drawableScaleFactor;
  BOOL _pausedOnBackgrounding;
  CADisplayLink *_displayLink;
  undefined * _drawRectSubIMP;
  BOOL _subClassOverridesDrawRect;
  BOOL _deviceReset;
  BOOL _doesNotifyOnRecommendedSizeUpdate;
  unsigned long long _depthStencilTextureUsage;
  unsigned long long _multisampleColorTextureUsage;
  unsigned long long _drawableAttachmentIndex;
  long long _nominalFramesPerSecond;
  long long _maxValidAttachmentIndex;
  unsigned long long _colorPixelFormats[8];
  <MTLTexture> * _multisampleColorTextures[8];
  <MTLTexture> * _colorTextures[8];
  MTKOffscreenDrawable * _offscreenSwapChain[3];
  unsigned long long _drawableIdx;
  int _renderAttachmentDirtyState;
  unsigned long long _terminateAfterFrame;
  unsigned long long _terminateAfterSeconds;
  unsigned long long _measureAfterFrame;
  unsigned long long _measureAfterSeconds;
  unsigned long long _dumpFrameAtFrame;
  unsigned long long _dumpFrameAtSeconds;
  NSString *_dumpPath;
  BOOL _dumpFirstFrame;
  BOOL _drawOffscreen;
  long long _forceOrientation;
  double _startTime;
  unsigned int _frameNum;
}

@property (weak, nonatomic) NSObject<MTKViewDelegate> *delegate;
@property (retain, nonatomic) NSObject<MTLDevice> *device;
@property (readonly, nonatomic) NSObject<CAMetalDrawable> *currentDrawable;
@property (nonatomic) BOOL framebufferOnly;
@property (nonatomic) unsigned long long depthStencilAttachmentTextureUsage;
@property (nonatomic) unsigned long long multisampleColorAttachmentTextureUsage;
@property (nonatomic) BOOL presentsWithTransaction;
@property (nonatomic) unsigned long long colorPixelFormat;
@property (nonatomic) unsigned long long depthStencilPixelFormat;
@property (nonatomic) unsigned long long depthStencilStorageMode;
@property (nonatomic) unsigned long long sampleCount;
@property (nonatomic) struct { double x0; double x1; double x2; double x3; } clearColor;
@property (nonatomic) double clearDepth;
@property (nonatomic) unsigned int clearStencil;
@property (readonly, nonatomic) NSObject<MTLTexture> *depthStencilTexture;
@property (readonly, nonatomic) NSObject<MTLTexture> *multisampleColorTexture;
@property (readonly, nonatomic) MTLRenderPassDescriptor *currentRenderPassDescriptor;
@property (nonatomic) long long preferredFramesPerSecond;
@property (nonatomic) BOOL enableSetNeedsDisplay;
@property (nonatomic) BOOL autoResizeDrawable;
@property (nonatomic) struct CGSize { double x0; double x1; } drawableSize;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } preferredDrawableSize;
@property (readonly) NSObject<MTLDevice> *preferredDevice;
@property (nonatomic) BOOL paused;
@property (nonatomic) struct CGColorSpace * colorspace;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (Class)layerClass;

/* instance methods */
- (void)__initCommon;
- (void)getEnvironmentSettings;
- (BOOL)exportToTargaAtLocation:(id)location width:(unsigned long long)width height:(unsigned long long)height size:(unsigned long long)size bytes:(void *)bytes;
- (double)startTime;
- (unsigned long long)drawNumber;
- (void)_dumpFramerate:(double)framerate withFilename:(id)filename;
- (void)_dumpFrameImageWithFilename:(id)filename;
- (void)setColorPixelFormat:(unsigned long long)format atIndex:(unsigned long long)index;
- (void)setDrawableAttachmentIndex:(unsigned long long)index;
- (unsigned long long)drawableAttachmentIndex;
- (void)createDepthStencilTexture;
- (const id *)multisampleColorTextures;
- (const id *)multisampleColorTexturesForceUpdate:(BOOL)update;
- (const id *)colorTextures;
- (const id *)colorTexturesForceUpdate:(BOOL)update;
- (long long)nominalFramesPerSecond;
- (void)setNominalFramesPerSecond:(long long)second;
- (long long)_calculateRefeshesPerSecond;
- (void)didMoveToWindow;
- (void)_createDisplayLinkForScreen:(id)screen;
- (void)_applicationWillEnterForeground:(id)foreground;
- (void)_applicationDidEnterBackground:(id)background;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame device:(id)device;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (void)releaseDrawables;
- (void)draw;
- (struct CGSize { double x0; double x1; })_pixelSizeFromPointSize:(struct CGSize { double x0; double x1; })size;
- (void)_updateToNativeScale;
- (void)displayLayer:(id)layer;
- (void)drawLayer:(id)layer inContext:(struct CGContext *)context;
- (BOOL)_canDrawContent;
- (BOOL)_controlsOwnScaleFactor;
- (void)_resizeDrawable;
- (void)_resizeMetalLayerDrawable;
- (void)setContentScaleFactor:(double)factor;
- (void)layoutSubviews;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setNilValueForKey:(id)key;
- (BOOL)isPaused;
@end

#endif /* MTKView_h */
