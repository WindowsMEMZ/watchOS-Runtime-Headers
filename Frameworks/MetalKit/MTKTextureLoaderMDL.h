//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 161.0.0.0.0
//
#ifndef MTKTextureLoaderMDL_h
#define MTKTextureLoaderMDL_h
@import Foundation;

#include "MTKTextureLoaderData.h"

@class MDLTexture;

@interface MTKTextureLoaderMDL : MTKTextureLoaderData {
  /* instance variables */
  MDLTexture *_texture;
  struct MTLPixelFormatInfo { char *name; unsigned int flags; unsigned long long castClass; union { struct MTLNormalPixelFormatInfo { unsigned long long pixelBytes; unsigned char componentCount; unsigned char alignment; unsigned long long pixelBytesRender; unsigned long long pixelBytesRenderMSAA; } normal; struct MTLCompressedPixelFormatInfo { unsigned long long blockBytes; unsigned long long blockWidth; unsigned long long blockHeight; unsigned long long blockDepth; } compressed; } type; } _pixelFormatInfo;
}

/* instance methods */
- (id)initWithMDLTexture:(id)mdltexture options:(id)options error:(id *)error;
- (void)dealloc;
- (BOOL)determineFormatFromChannelEncoding:(long long)encoding channelCount:(unsigned long long)count error:(id *)error;
- (id)getDataForArrayElement:(unsigned long long)element face:(unsigned long long)face level:(unsigned long long)level depthPlane:(unsigned long long)plane bytesPerRow:(unsigned long long *)row bytesPerImage:(unsigned long long *)image;
@end

#endif /* MTKTextureLoaderMDL_h */
