//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLNearestNeighborsSingleKdTreeIndex_h
#define MLNearestNeighborsSingleKdTreeIndex_h
@import Foundation;

#include "MLNearestNeighborsIndex-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "_KDNode.h"

@protocol {vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}}, {vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}};

@interface MLNearestNeighborsSingleKdTreeIndex : NSObject<MLNearestNeighborsIndex, NSSecureCoding> {
  /* instance variables */
  struct vector<float, std::allocator<float>> { float *__begin_; float *__end_; struct __compressed_pair<float *, std::allocator<float>> { float *__value_; } __end_cap_; } vData;
  struct vector<unsigned long, std::allocator<unsigned long>> { unsigned long long *__begin_; unsigned long long *__end_; struct __compressed_pair<unsigned long *, std::allocator<unsigned long>> { unsigned long long *__value_; } __end_cap_; } vIndices;
}

@property (nonatomic) unsigned long long numDimensions;
@property (nonatomic) unsigned long long leafSize;
@property (retain, nonatomic) _KDNode *root;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithDataset:(void *)dataset numberOfDimensions:(unsigned long long)dimensions leafSize:(unsigned long long)size error:(id *)error;
- (struct vector<std::pair<unsigned long, float>, std::allocator<std::pair<unsigned long, float>>> { void * x0; void * x1; struct __compressed_pair<std::pair<unsigned long, float> *, std::allocator<std::pair<unsigned long, float>>> { void * x0; } x2; })findNearestNeighbors:(unsigned long long)neighbors toQueryPoint:(const void *)point;
- (struct vector<std::pair<unsigned long, float>, std::allocator<std::pair<unsigned long, float>>> { void * x0; void * x1; struct __compressed_pair<std::pair<unsigned long, float> *, std::allocator<std::pair<unsigned long, float>>> { void * x0; } x2; })findNearestNeighbors:(unsigned long long)neighbors toIndex:(unsigned long long)index;
- (BOOL)updateWithData:(const void *)data error:(id *)error;
- (unsigned long long)dataPointCount;
- (id)constructTree;
- (id)constructTreeForPointsBoundedBy:(void *)by startingIndex:(unsigned long long)index count:(unsigned long long)count;
- (struct vector<std::pair<unsigned long, float>, std::allocator<std::pair<unsigned long, float>>> { void * x0; void * x1; struct __compressed_pair<std::pair<unsigned long, float> *, std::allocator<std::pair<unsigned long, float>>> { void * x0; } x2; })calculateDistancesForNodesBetweenLeft:(unsigned long long)left andRight:(unsigned long long)right toQueryPoint:(const void *)point;
- (void)findK:(unsigned long long)k nearestNeighbors:(void *)neighbors toQueryPoint:(const void *)point inTree:(id)tree;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* MLNearestNeighborsSingleKdTreeIndex_h */
