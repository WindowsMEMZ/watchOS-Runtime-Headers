//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLNeuralNetworkUpdateEngine_h
#define MLNeuralNetworkUpdateEngine_h
@import Foundation;

#include "MLNeuralNetworkV1Engine.h"
#include "MLModelConfiguration.h"
#include "MLModelDescription.h"
#include "MLModelMetadata.h"
#include "MLParameterContainer.h"
#include "MLShufflingBatchProvider.h"
#include "MLUpdatable-Protocol.h"
#include "MLUpdateProgressHandlers.h"

@class ETTaskDefinition, ETTaskState, NSDictionary, NSString;
@protocol OS_dispatch_queue;

@interface MLNeuralNetworkUpdateEngine : MLNeuralNetworkV1Engine<MLUpdatable>

@property (retain, nonatomic) MLUpdateProgressHandlers *progressHandlers;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *progressHandlersDispatchQueue;
@property (retain, nonatomic) NSDictionary *coreMLToEspressoParamsMap;
@property (retain, nonatomic) NSString *lossOutputName;
@property (retain, nonatomic) NSString *lossTargetName;
@property (nonatomic) BOOL continueWithUpdate;
@property (retain, nonatomic) MLShufflingBatchProvider *shuffableTrainingData;
@property (retain, nonatomic) MLParameterContainer *parameterContainer;
@property (retain, nonatomic) ETTaskState *snapshot;
@property (retain, nonatomic) ETTaskDefinition *task;
@property (readonly, nonatomic) NSDictionary *classLabelToIndexMap;
@property (readonly, nonatomic) MLModelDescription *modelDescription;
@property (readonly, nonatomic) MLModelConfiguration *configuration;
@property (readonly, nonatomic) BOOL supportsConcurrentSubmissions;
@property (readonly, nonatomic) unsigned long long predictionTypeForKTrace;
@property (readonly, nonatomic) BOOL recordsPredictionEvent;
@property (readonly, nonatomic) unsigned long long signpostID;
@property (readonly) MLModelMetadata *metadata;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)loadModelFromCompiledArchive:(void *)archive modelVersionInfo:(id)info compilerVersionInfo:(id)info configuration:(id)configuration error:(id *)error;
+ (id)createCoreMLToEspressoParamsMap;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)createEspressoTaskFrom:(id)from updateParameters:(void *)parameters lossInputName:(id)name lossTargetName:(id)name lossOutputName:(id)name updatableLayerNames:(id)names configuration:(id)configuration error:(id *)error;
- (void)loadLossInputName:(id *)name updatableLayerNames:(id *)names fromCompiledArchive:(void *)archive;
- (void)loadLossTargetName:(id *)name lossOutputName:(id *)name fromUpdateParameters:(void *)parameters;
- (id)initWithCompiledArchive:(void *)archive nnContainer:(id)container configuration:(id)configuration error:(id *)error;
- (id)predictionFromFeatures:(id)features options:(id)options error:(id *)error;
- (id)predictionFromFeatures:(id)features error:(id *)error;
- (id)predictionsFromBatch:(id)batch options:(id)options error:(id *)error;
- (id)predictionsFromBatch:(id)batch error:(id *)error;
- (id)stringForDataType:(unsigned long long)type;
- (BOOL)updateWeightsAndBiasesFromConfigParams:(id)params error:(id *)error;
- (BOOL)setWeightsOrBiasesForLayer:(id)layer layerType:(unsigned long long)type value:(id)value error:(id *)error;
- (void)setUpdateProgressHandlers:(id)handlers dispatchQueue:(id)queue;
- (void)updateModelWithData:(id)data;
- (id)updateParameters;
- (void)resumeUpdate;
- (void)cancelUpdate;
- (void)resumeUpdateWithParameters:(id)parameters;
- (BOOL)updateLearningRateWithTaskContext:(id)context isInCallBack:(BOOL)back error:(id *)error;
- (id)collectMetricsFromTaskContext:(id)context isInCallBack:(BOOL)back;
- (BOOL)writeToURL:(id)url error:(id *)error;
- (id)parameterValueForKey:(id)key error:(id *)error;
- (id)parameterValueForKey:(id)key;
- (id)paramsForLayer:(id)layer parameterType:(unsigned long long)type error:(id *)error;
- (id)weightsForLayer:(id)layer error:(id *)error;
- (id)biasForLayer:(id)layer error:(id *)error;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* MLNeuralNetworkUpdateEngine_h */
