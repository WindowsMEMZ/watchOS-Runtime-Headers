//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLTreeEnsembleXGBoostUpdateEngine_h
#define MLTreeEnsembleXGBoostUpdateEngine_h
@import Foundation;

#include "MLTreeEnsembleXGBoostClassifier.h"
#include "MLModelConfiguration.h"
#include "MLModelDescription.h"
#include "MLModelMetadata.h"
#include "MLParameterContainer.h"
#include "MLUpdatable-Protocol.h"
#include "MLUpdateProgressHandlers.h"

@class NSString;
@protocol OS_dispatch_queue, struct shared_ptr<Archiver::MMappedFile> { struct MMappedFile * x0; struct __shared_weak_count * x1; }, struct vector<long long, std::allocator<long long>> { long long * x0; long long * x1; struct __compressed_pair<long long *, std::allocator<long long>> { long long * x0; } x2; }, struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; }, struct vector<unsigned char, std::allocator<unsigned char>> { char * x0; char * x1; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char * x0; } x2; }, {shared_ptr<Archiver::MMappedFile>="__ptr_"^{MMappedFile}"__cntrl_"^{__shared_weak_count}}, {vector<long long, std::allocator<long long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long long *, std::allocator<long long>>="__value_"^q}}, {vector<std::string, std::allocator<std::string>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::string *, std::allocator<std::string>>="__value_"^v}}, {vector<unsigned char, std::allocator<unsigned char>>="__begin_"*"__end_"*"__end_cap_"{__compressed_pair<unsigned char *, std::allocator<unsigned char>>="__value_"*}};

@interface MLTreeEnsembleXGBoostUpdateEngine : MLTreeEnsembleXGBoostClassifier<MLUpdatable>

@property (retain, nonatomic) MLUpdateProgressHandlers *progressHandlers;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *progressHandlersDispatchQueue;
@property (nonatomic) BOOL continueWithUpdate;
@property (nonatomic) BOOL personalization;
@property (retain, nonatomic) MLParameterContainer *parameterContainer;
@property (nonatomic) struct vector<std::string, std::allocator<std::string>> { void * x0; void * x1; struct __compressed_pair<std::string *, std::allocator<std::string>> { void * x0; } x2; } classesByString;
@property (nonatomic) struct vector<long long, std::allocator<long long>> { long long * x0; long long * x1; struct __compressed_pair<long long *, std::allocator<long long>> { long long * x0; } x2; } classesByInt;
@property (nonatomic) unsigned long long numDimensions;
@property (nonatomic) struct shared_ptr<Archiver::MMappedFile> { struct MMappedFile * x0; struct __shared_weak_count * x1; } mmappedModel;
@property (nonatomic) struct vector<unsigned char, std::allocator<unsigned char>> { char * x0; char * x1; struct __compressed_pair<unsigned char *, std::allocator<unsigned char>> { char * x0; } x2; } cachedModel;
@property (readonly, nonatomic) MLModelDescription *modelDescription;
@property (readonly, nonatomic) MLModelConfiguration *configuration;
@property (readonly, nonatomic) BOOL supportsConcurrentSubmissions;
@property (readonly, nonatomic) unsigned long long predictionTypeForKTrace;
@property (readonly, nonatomic) BOOL recordsPredictionEvent;
@property (readonly, nonatomic) unsigned long long signpostID;
@property (readonly) MLModelMetadata *metadata;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)loadModelFromCompiledArchive:(void *)archive modelVersionInfo:(id)info compilerVersionInfo:(id)info configuration:(id)configuration error:(id *)error;

/* instance methods */
- (id)initWithCompiledArchive:(void *)archive configuration:(id)configuration error:(id *)error;
- (id)loadParameterDescriptionsAndContainerFromConfiguration:(id)configuration modelDescription:(id)description error:(id *)error;
- (id)updateParameters;
- (void)setUpdateProgressHandlers:(id)handlers dispatchQueue:(id)queue;
- (void)updateModelWithData:(id)data;
- (BOOL)setBoosterParameters:(void *)parameters error:(id *)error;
- (id)parameterValueForKey:(id)key;
- (id)parameterValueForKey:(id)key error:(id *)error;
- (void)resumeUpdate;
- (void)cancelUpdate;
- (void)resumeUpdateWithParameters:(id)parameters;
- (BOOL)writeToURL:(id)url error:(id *)error;
@end

#endif /* MLTreeEnsembleXGBoostUpdateEngine_h */
