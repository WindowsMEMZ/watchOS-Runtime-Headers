//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef _KDNode_h
#define _KDNode_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "_KDNode.h"

@protocol struct _KDBoundingBox { struct vector<_KDInterval, std::allocator<_KDInterval>> { struct _KDInterval * x0; struct _KDInterval * x1; struct __compressed_pair<_KDInterval *, std::allocator<_KDInterval>> { struct _KDInterval * x0; } x2; } x0; unsigned long long x1; }, {_KDBoundingBox="_intervals"{vector<_KDInterval, std::allocator<_KDInterval>>="__begin_"^{_KDInterval}"__end_"^{_KDInterval}"__end_cap_"{__compressed_pair<_KDInterval *, std::allocator<_KDInterval>>="__value_"^{_KDInterval}}}"_numDimensions"Q};

@interface _KDNode : NSObject<NSSecureCoding>

@property (nonatomic) unsigned long long splitDimension;
@property (nonatomic) unsigned long long splitIndex;
@property (nonatomic) float splitValue;
@property (nonatomic) unsigned long long startingIndex;
@property (nonatomic) unsigned long long count;
@property (retain, nonatomic) _KDNode *leftChild;
@property (retain, nonatomic) _KDNode *rightChild;
@property (nonatomic) struct _KDBoundingBox { struct vector<_KDInterval, std::allocator<_KDInterval>> { struct _KDInterval * x0; struct _KDInterval * x1; struct __compressed_pair<_KDInterval *, std::allocator<_KDInterval>> { struct _KDInterval * x0; } x2; } x0; unsigned long long x1; } boundingBox;
@property (nonatomic) BOOL isLeaf;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)findMin:(float *)min andMax:(float *)max alongDimension:(unsigned long long)dimension data:(const float *)data indices:(const unsigned long long *)indices numDimensions:(unsigned long long)dimensions;
- (void)partitionDataPoints:(const float *)points indices:(unsigned long long *)indices numDimensions:(unsigned long long)dimensions;
- (void)assignSplitsForData:(const float *)data indices:(unsigned long long *)indices numDimensions:(unsigned long long)dimensions;
- (void)print;
@end

#endif /* _KDNode_h */
