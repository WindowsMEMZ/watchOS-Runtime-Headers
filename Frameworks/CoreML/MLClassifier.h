//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLClassifier_h
#define MLClassifier_h
@import Foundation;

#include "MLModel.h"
#include "MLClassifier-Protocol.h"
#include "MLModelConfiguration.h"
#include "MLModelDescription.h"
#include "MLModelMetadata.h"

@class NSString;
@protocol OS_dispatch_queue;

@interface MLClassifier : MLModel<MLClassifier> {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _asyncClassifierQueueLock;
  BOOL _supportsAsyncClassification;
  NSObject<OS_dispatch_queue> *_asyncClassifierQueue;
}

@property (readonly, nonatomic) MLModelDescription *modelDescription;
@property (readonly, nonatomic) MLModelConfiguration *configuration;
@property (readonly, nonatomic) BOOL supportsConcurrentSubmissions;
@property (readonly, nonatomic) unsigned long long predictionTypeForKTrace;
@property (readonly, nonatomic) BOOL recordsPredictionEvent;
@property (readonly, nonatomic) unsigned long long signpostID;
@property (readonly) MLModelMetadata *metadata;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)predictionFromFeatures:(id)features classifier:(id)classifier options:(id)options error:(id *)error;

/* instance methods */
- (id)initDescriptionOnlyWithSpecification:(void *)specification configuration:(id)configuration error:(id *)error;
- (id)classifierResultFromOutputFeatures:(id)features error:(id *)error;
- (id)initWithDescription:(id)description configuration:(id)configuration error:(id *)error;
- (BOOL)_needsToEmulateAsyncClassificationUsingQueue:(id *)queue;
- (id)predictionFromFeatures:(id)features options:(id)options error:(id *)error;
- (void)predictionFromFeatures:(id)features options:(id)options completionHandler:(id /* block */)handler;
- (id)classLabels;
- (id)classify:(id)classify options:(id)options error:(id *)error;
@end

#endif /* MLClassifier_h */
