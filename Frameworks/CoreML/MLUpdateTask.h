//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLUpdateTask_h
#define MLUpdateTask_h
@import Foundation;

#include "MLTask.h"
#include "MLBatchProvider-Protocol.h"
#include "MLTaskStateTransitionDelegate-Protocol.h"
#include "MLUpdateProgressHandlers.h"

@class NSString, NSURL;
@protocol MLModel<MLUpdatable, OS_dispatch_queue;

@interface MLUpdateTask : MLTask<MLTaskStateTransitionDelegate>

@property (readonly, nonatomic) MLModel<MLUpdatable> *updatableModel;
@property (readonly, nonatomic) NSObject<MLBatchProvider> *trainingData;
@property (readonly, nonatomic) MLUpdateProgressHandlers *progressHandlers;
@property (nonatomic) BOOL updateHasStarted;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *updateQueue;
@property (readonly, nonatomic) NSURL *updatableModelURL;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)updateModelAtURL:(id)url trainingData:(id)data configuration:(id)configuration writeToURL:(id)url error:(id *)error;
+ (id)updateTaskForModelAtURL:(id)url trainingData:(id)data configuration:(id)configuration completionHandler:(id /* block */)handler error:(id *)error;
+ (id)updateTaskForModelAtURL:(id)url trainingData:(id)data completionHandler:(id /* block */)handler error:(id *)error;
+ (id)updateTaskForModelAtURL:(id)url trainingData:(id)data configuration:(id)configuration progressHandlers:(id)handlers error:(id *)error;
+ (id)updateTaskForModelAtURL:(id)url trainingData:(id)data progressHandlers:(id)handlers error:(id *)error;

/* instance methods */
- (id)initWithModelAtURL:(id)url trainingData:(id)data configuration:(id)configuration progressHandlers:(id)handlers error:(id *)error;
- (void)resumeWithParameters:(id)parameters;
- (void)_invokeProgressHandlerForContext:(id)context;
- (void)onCancellation;
- (void)onResumptionWithTaskContext:(id)context;
- (void)onSuspensionWithTaskContext:(id)context;
- (void)onCompletionWithTaskContext:(id)context;
- (void)onFailureWithTaskContext:(id)context;
- (id /* block */)_progressHandlerBlock;
- (id /* block */)_completionHandlerBlock;
@end

#endif /* MLUpdateTask_h */
