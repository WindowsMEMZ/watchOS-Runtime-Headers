//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLFeatureVectorizer_h
#define MLFeatureVectorizer_h
@import Foundation;

#include "MLModel.h"
#include "MLModelSpecificationLoader-Protocol.h"

@class NSArray, NSString;
@protocol {vector<std::pair<unsigned long, unsigned long>, std::allocator<std::pair<unsigned long, unsigned long>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<unsigned long, unsigned long> *, std::allocator<std::pair<unsigned long, unsigned long>>>="__value_"^v}};

@interface MLFeatureVectorizer : MLModel<MLModelSpecificationLoader> {
  /* instance variables */
  NSArray *_output_array_shape;
  struct vector<std::pair<unsigned long, unsigned long>, std::allocator<std::pair<unsigned long, unsigned long>>> { void *__begin_; void *__end_; struct __compressed_pair<std::pair<unsigned long, unsigned long> *, std::allocator<std::pair<unsigned long, unsigned long>>> { void *__value_; } __end_cap_; } index_mapping;
}

@property (readonly, nonatomic) NSArray *columnNameEncoding;
@property (readonly, nonatomic) NSArray *dimensionEncoding;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)loadModelFromSpecification:(void *)specification configuration:(id)configuration error:(id *)error;

/* instance methods */
- (id)initWith:(id)with dimensionEncoding:(id)encoding dataTransformerName:(id)name inputDescription:(id)description outputDescription:(id)description orderedInputFeatureNames:(id)names orderedOutputFeatureNames:(id)names configuration:(id)configuration;
- (id)predictionFromFeatures:(id)features options:(id)options error:(id *)error;
- (id)vectorizeOneHotEncoderDict:(id)dict index:(unsigned long long)index error:(id *)error;
@end

#endif /* MLFeatureVectorizer_h */
