//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLMultiArray_h
#define MLMultiArray_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"

@class NSArray;
@protocol {unique_ptr<StorageManager, std::default_delete<StorageManager>>="__ptr_"{__compressed_pair<StorageManager *, std::default_delete<StorageManager>>="__value_"^{StorageManager}}};

@interface MLMultiArray : NSObject<NSSecureCoding> {
  /* instance variables */
  struct unique_ptr<StorageManager, std::default_delete<StorageManager>> { struct __compressed_pair<StorageManager *, std::default_delete<StorageManager>> { struct StorageManager *__value_; } __ptr_; } _storageManager;
}

@property (readonly, nonatomic) const void * bytes;
@property (readonly, nonatomic) void * mutableBytes;
@property (readonly, nonatomic) unsigned long long numberOfBytesPerElement;
@property (readonly, nonatomic) BOOL contiguous;
@property (readonly, nonatomic) BOOL backingPixelBufferWasLocked;
@property (readonly, nonatomic) void * dataPointer;
@property (readonly, nonatomic) long long dataType;
@property (readonly, nonatomic) NSArray *shape;
@property (readonly, nonatomic) NSArray *strides;
@property (readonly, nonatomic) long long count;
@property (readonly, nonatomic) struct __CVBuffer * pixelBuffer;

/* class methods */
+ (struct __CVBuffer *)pixelBufferGray8FromMultiArrayHW:(id)hw error:(id *)error;
+ (struct __CVBuffer *)pixelBufferGray16HalfFromMultiArrayHW:(id)hw error:(id *)error;
+ (struct __CVBuffer *)pixelBufferBGRA8FromMultiArrayCHW:(id)chw channelOrderIsBGR:(BOOL)bgr error:(id *)error;
+ (BOOL)validateMultiArrays:(id)arrays forConcatenatingAlongAxis:(long long)axis normalizedAxis:(unsigned long long *)axis reason:(id *)reason;
+ (id)multiArrayByConcatenatingMultiArrays:(id)arrays alongAxis:(long long)axis dataType:(long long)type;
+ (id)_multiArrayByConcatenatingMultiArrays:(id)arrays alongAxis:(long long)axis dataType:(long long)type;
+ (id)doubleMultiArrayWithCopyOfMultiArray:(id)array;
+ (id)doubleVectorWithValues:(id)values;
+ (id)doubleMultiArrayWithShape:(id)shape valueArray:(id)array error:(id *)error;
+ (BOOL)getShapeOfArrayOfSameLengthArrays:(id)arrays numberOfRows:(unsigned long long *)rows numberOfColumns:(unsigned long long *)columns error:(id *)error;
+ (id)doubleMatrixWithValues:(id)values error:(id *)error;
+ (id)float32MatrixWithValues:(id)values error:(id *)error;
+ (BOOL)validateNestedArray:(id)array error:(id *)error;
+ (id)_shapeOfNestedArray:(id)array error:(id *)error;
+ (int)cppStorageOrder:(long long)order;
+ (id)multiArrayOwningBufferObjectOfPort:(struct e5rt_io_port *)port error:(id *)error;
+ (id)stringForDataType:(long long)type;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)debugQuickLookObject;
- (void)getContiguousFirstMajorFloat32BufferWithHandler:(id /* block */)handler;
- (BOOL)renderToOneComponent8PixelBuffer:(struct __CVBuffer *)buffer error:(id *)error;
- (BOOL)renderToOneComponent16HalfPixelBuffer:(struct __CVBuffer *)buffer error:(id *)error;
- (BOOL)renderTo32BGRAPixelBuffer:(struct __CVBuffer *)buffer channelOrderIsBGR:(BOOL)bgr error:(id *)error;
- (BOOL)renderToCVPixelBuffer:(struct __CVBuffer *)buffer channelOrderIsBGR:(BOOL)bgr error:(id *)error;
- (void *)multiArrayBuffer;
- (id)sliceAtOrigin:(id)origin shape:(id)shape squeeze:(BOOL)squeeze error:(id *)error;
- (id)squeeze;
- (id)squeezeDimensions:(id)dimensions error:(id *)error;
- (id)multiArrayViewExpandingDimensionsAtAxis:(long long)axis;
- (BOOL)fillWithNumber:(id)number;
- (BOOL)setRangeWithRawData:(id)data destIndex:(unsigned long long)index error:(id *)error;
- (id)numberArray;
- (BOOL)copyIntoMultiArray:(id)array error:(id *)error;
- (BOOL)vectorizeIntoMultiArray:(id)array storageOrder:(long long)order error:(id *)error;
- (id)initWithShape:(id)shape dataType:(long long)type storageOrder:(long long)order error:(id *)error;
- (id)initWithShape:(id)shape dataType:(long long)type storageOrder:(long long)order bufferAlignment:(unsigned long long)alignment;
- (id)initWithBytesNoCopy:(void *)copy shape:(id)shape dataType:(long long)type strides:(id)strides mutableShapedBufferProvider:(id /* block */)provider;
- (id)initWithArray:(id)array dataType:(long long)type;
- (id)initWithScalars:(id)scalars shape:(id)shape dataType:(long long)type;
- (BOOL)isContiguous;
- (BOOL)isContiguousInOrder:(long long)order;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToMultiArray:(id)array;
- (double *)doublePointer;
- (float *)float32Pointer;
- (void)getBytesWithHandler:(id /* block */)handler;
- (void)getMutableBytesWithHandler:(id /* block */)handler;
- (id)init;
- (id)initWithShape:(id)shape dataType:(long long)type error:(id *)error;
- (id)initWithBytesNoCopy:(void *)copy shape:(id)shape dataType:(long long)type strides:(id)strides deallocator:(id /* block */)deallocator mutableShapedBufferProvider:(id /* block */)provider error:(id *)error;
- (id)initWithDataPointer:(void *)pointer shape:(id)shape dataType:(long long)type strides:(id)strides deallocator:(id /* block */)deallocator error:(id *)error;
- (id)initWithMultiArrayBuffer:(struct shared_ptr<CoreML::MultiArrayBuffer> { struct MultiArrayBuffer * x0; struct __shared_weak_count * x1; })buffer;
- (id)initWithPixelBuffer:(struct __CVBuffer *)buffer shape:(id)shape;
- (id)numberAtOffset:(unsigned long long)offset;
- (void)setNumber:(id)number atOffset:(unsigned long long)offset;
- (id)objectAtIndexedSubscript:(long long)subscript;
- (void)setObject:(id)object atIndexedSubscript:(long long)subscript;
- (unsigned long long)offsetForKeyedSubscript:(id)subscript;
- (id)objectForKeyedSubscript:(id)subscript;
- (void)setObject:(id)object forKeyedSubscript:(id)subscript;
- (id)description;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* MLMultiArray_h */
