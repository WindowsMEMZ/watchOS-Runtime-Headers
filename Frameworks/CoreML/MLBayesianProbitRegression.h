//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLBayesianProbitRegression_h
#define MLBayesianProbitRegression_h
@import Foundation;

#include "MLRegressor.h"
#include "MLModelSpecificationLoader-Protocol.h"
#include "MLModelSpecificationSaver-Protocol.h"
#include "MLSupervisedOnlineUpdatable-Protocol.h"

@class BOOL *, NSString;
@protocol {shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression>="__ptr_"^{BayesianProbitRegression}"__cntrl_"^{__shared_weak_count}};

@interface MLBayesianProbitRegression : MLRegressor<MLSupervisedOnlineUpdatable, MLModelSpecificationLoader, MLModelSpecificationSaver> {
  /* instance variables */
  struct shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression> { struct BayesianProbitRegression *__ptr_; struct __shared_weak_count *__cntrl_; } _model;
  NSString *_regressionInputFeatureName;
  NSString *_optimismInputFeatureName;
  NSString *_meanOutputFeatureName;
  NSString *_varianceOutputFeatureName;
  NSString *_pessimisticProbabilityOutputFeatureName;
  NSString *_sampledProbabilityOutputFeatureName;
  NSString *_samplingScaleInputFeatureName;
  NSString *_samplingTruncationInputFeatureName;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)modelWithContentsOfURL:(id)url error:(id *)error;
+ (id)loadModelFromSpecification:(void *)specification configuration:(id)configuration error:(id *)error;
+ (BOOL)setFeatureName:(id *)name to:(id)to descriptions:(id)descriptions;
+ (BOOL)validateModelDescription:(id)description;

/* instance methods */
- (void *)saveModelToSpecification:(id *)specification;
- (BOOL)setInputFeatureName:(id *)name to:(id)to;
- (BOOL)setOutputFeatureName:(id *)name to:(id)to;
- (BOOL)setFeatureCount:(unsigned long long)count;
- (unsigned long long)FeatureCount;
- (id)initWithSpecification:(void *)specification configuration:(id)configuration error:(id *)error;
- (id)initWithDescription:(id)description numberOfFeatures:(long long)features priorMean:(id)mean regressionInputName:(id)name optimismInputName:(id)name samplingScaleInputName:(id)name samplingTruncationInputName:(id)name meanOutputName:(id)name varianceOutputName:(id)name pessimisticProbabilityOutputName:(id)name sampledProbabilityOutputName:(id)name;
- (id)initWithDescription:(id)description numberOfFeatures:(long long)features priorMean:(id)mean;
- (id)getArrayFeatureValue:(id)value;
- (struct shared_ptr<CoreML::BayesianProbitRegression::FeatureValues> { struct FeatureValues * x0; struct __shared_weak_count * x1; })getOneHotFeatureValues:(id)values error:(id *)error;
- (id)createRegressorResult:(struct Prediction { double x0; double x1; double x2; double x3; double x4; BOOL x5; } *)result;
- (double)getFeatureValue:(id)value forName:(id)name withType:(long long)type;
- (double)getOptimism:(id)optimism;
- (double)getSamplingScale:(id)scale;
- (double)getSamplingTruncation:(id)truncation;
- (id)regress:(id)regress options:(id)options error:(id *)error;
- (BOOL)convertOutputFeatureToPredictionValues:(id)values event:(BOOL *)event importance:(double *)importance error:(id *)error;
- (BOOL)updateModelFromFeatures:(id)features toTarget:(id)target options:(id)options error:(id *)error;
- (BOOL)updateModelFromFeatures:(id)features toTarget:(id)target error:(id *)error;
- (BOOL)isEqual:(id)equal;
- (struct shared_ptr<CoreML::BayesianProbitRegression::BayesianProbitRegression> { struct BayesianProbitRegression * x0; struct __shared_weak_count * x1; })model;
- (BOOL)isEqualToBopr:(id)bopr;
- (void)createCheckpoint;
- (void)resetToLastCheckpointBeforeDate:(id)date;
- (void)reset;
@end

#endif /* MLBayesianProbitRegression_h */
