//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1877.50.1.0.0
//
#ifndef MLLocalOutlierFactor_h
#define MLLocalOutlierFactor_h
@import Foundation;

#include "MLModel.h"
#include "MLNearestNeighborsIndex-Protocol.h"
#include "MLParameterContainer.h"

@protocol {vector<float, std::allocator<float>>="__begin_"^f"__end_"^f"__end_cap_"{__compressed_pair<float *, std::allocator<float>>="__value_"^f}};

@interface MLLocalOutlierFactor : MLModel {
  /* instance variables */
  NSObject<MLNearestNeighborsIndex> *_index;
  unsigned long long _numberOfDimensions;
  unsigned long long _numberOfNeighbors;
  struct vector<float, std::allocator<float>> { float *__begin_; float *__end_; struct __compressed_pair<float *, std::allocator<float>> { float *__value_; } __end_cap_; } _cachedKDistances;
  MLParameterContainer *_parameterContainer;
}

/* instance methods */
- (id)initWithKNearestNeighborsModelAtURL:(id)url configuration:(id)configuration error:(id *)error;
- (void)updateToValidDistance:(void *)distance;
- (struct vector<std::pair<unsigned long, float>, std::allocator<std::pair<unsigned long, float>>> { void * x0; void * x1; struct __compressed_pair<std::pair<unsigned long, float> *, std::allocator<std::pair<unsigned long, float>>> { void * x0; } x2; })findNearestNeighborsToQueryPoint:(const void *)point;
- (struct vector<std::pair<unsigned long, float>, std::allocator<std::pair<unsigned long, float>>> { void * x0; void * x1; struct __compressed_pair<std::pair<unsigned long, float> *, std::allocator<std::pair<unsigned long, float>>> { void * x0; } x2; })findNearestNeighborsToIndex:(unsigned long long)index;
- (float)kDistanceToIndex:(unsigned long long)index;
- (double)localReachabilityDensityOfNeighbors:(const void *)neighbors;
- (double)localReachabilityDensityForIndex:(unsigned long long)index;
- (double)localReachabilityDensityForQeuryPoint:(const void *)point;
- (double)computeLOFForQueryPoint:(id)point;
- (id)inputMultiArray:(id)array error:(id *)error;
- (id)predictionFromFeatures:(id)features options:(id)options error:(id *)error;
- (id)parameterValueForKey:(id)key error:(id *)error;
@end

#endif /* MLLocalOutlierFactor_h */
