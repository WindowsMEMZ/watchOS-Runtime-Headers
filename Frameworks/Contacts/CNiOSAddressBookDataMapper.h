//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3628.0.0.0.0
//
#ifndef CNiOSAddressBookDataMapper_h
#define CNiOSAddressBookDataMapper_h
@import Foundation;

#include "CNAuthorization.h"
#include "CNContactsEnvironment.h"
#include "CNContactsLogger-Protocol.h"
#include "CNiOSAddressBook.h"
#include "CNiOSAddressBookDataMapper-Protocol.h"

@class CNManagedAccountsCache, CNManagedConfiguration, NSString;

@interface CNiOSAddressBookDataMapper : NSObject<CNiOSAddressBookDataMapper> {
  /* instance variables */
  BOOL _shouldLogDeleteDetails;
  CNiOSAddressBook *_addressBook;
  CNContactsEnvironment *_environment;
  NSObject<CNContactsLogger> *_logger;
  CNManagedConfiguration *_managedConfiguration;
  CNManagedAccountsCache *_managedAccountsCache;
  CNAuthorization *_authorization;
  long long _contactIdentifierAuditMode;
}

@property (readonly) BOOL shouldLogContactsAccess;
@property (readonly) BOOL userMightHaveUnconfiguredPersistenceStack;
@property (retain, nonatomic) NSString *legacyTetheredSyncDeviceAnchor;
@property (retain, nonatomic) NSString *legacyTetheredSyncComputerAnchor;
@property (readonly, nonatomic) BOOL shouldLogPrivacyAccountingAccessEvents;
@property (readonly, nonatomic) BOOL shouldCaptureMetricsForQueries;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)contactBuffersDecoderForFetchRequest:(id)request;
+ (id)encodedPeopleFetcherForForFetchRequest:(id)request addressBook:(void *)book managedConfiguration:(id)configuration addressBookCompletionHandler:(id /* block */)handler cursorCompletionHandler:(id /* block */)handler environment:(id)environment identifierAuditMode:(long long)mode;

/* instance methods */
- (id)init;
- (id)initWithConfiguration:(id)configuration;
- (id)initWithConfiguration:(id)configuration addressBook:(id)book;
- (void)requestAccessForEntityType:(long long)type completionHandler:(id /* block */)handler;
- (BOOL)requestAccessForEntityType:(long long)type error:(id *)error;
- (id)authorizedKeysForContactKeys:(id)keys error:(id *)error;
- (id)identifierWithError:(id *)error;
- (int)saveSequenceCount;
- (id)unifiedContactCountWithError:(id *)error;
- (id)contactCountForFetchRequest:(id)request error:(id *)error;
- (id)sectionListOffsetsForSortOrder:(long long)order error:(id *)error;
- (BOOL)moveContacts:(id)contacts fromContainer:(id)container toContainer:(id)container error:(id *)error;
- (id)contactObservableForFetchRequest:(id)request;
- (BOOL)fetchContactsForFetchRequest:(id)request error:(id *)error batchHandler:(id /* block */)handler;
- (BOOL)fetchEncodedContactsForFetchRequest:(id)request error:(id *)error cancelationToken:(id)token batchHandler:(id /* block */)handler;
- (id)encodedContactsCursorForFetchRequest:(id)request cursorCleanupBlock:(id /* block */)block error:(id *)error;
- (BOOL)setMeContact:(id)contact error:(id *)error;
- (BOOL)setMeContact:(id)contact forContainer:(id)container error:(id *)error;
- (BOOL)setBestMeIfNeededForGivenName:(id)name familyName:(id)name email:(id)email error:(id *)error;
- (id)meContactIdentifiers:(id *)identifiers;
- (BOOL)executeSaveRequest:(id)request error:(id *)error;
- (BOOL)executeSaveRequest:(id)request response:(id *)response authorizationContext:(id)context error:(id *)error;
- (id)defaultContainerIdentifier;
- (id)containersMatchingPredicate:(id)predicate error:(id *)error;
- (id)serverSearchContainersMatchingPredicate:(id)predicate error:(id *)error;
- (id)policyForContainerWithIdentifier:(id)identifier error:(id *)error;
- (id)policyWithDescription:(id)description error:(id *)error;
- (id)usedLabelsForPropertyWithKey:(id)key error:(id *)error;
- (id)accountsMatchingPredicate:(id)predicate error:(id *)error;
- (id)groupsMatchingPredicate:(id)predicate error:(id *)error;
- (id)groupsWithIdentifiers:(id)identifiers error:(id *)error;
- (id)subgroupsOfGroupWithIdentifier:(id)identifier error:(id *)error;
- (id)executeFetchRequest:(id)request progressiveResults:(id /* block */)results completion:(id /* block */)completion;
- (id)contactWithUserActivityUserInfo:(id)info keysToFetch:(id)fetch;
- (id)userActivityUserInfoForContact:(id)contact;
- (id)descriptorForRequiredKeysForMatchingDictionary;
- (id)matchingDictionaryForContact:(id)contact;
- (id)contactIdentifierWithMatchingDictionary:(id)dictionary;
- (BOOL)registerChangeHistoryClientIdentifier:(id)identifier forContainerIdentifier:(id)identifier error:(id *)error;
- (BOOL)unregisterChangeHistoryClientIdentifier:(id)identifier forContainerIdentifier:(id)identifier error:(id *)error;
- (id)changeHistoryWithFetchRequest:(id)request error:(id *)error;
- (BOOL)executeChangeHistoryClearRequest:(id)request error:(id *)error;
- (id)currentHistoryToken;
- (id)currentHistoryAnchor;
- (BOOL)setDefaultAccountIdentifier:(id)identifier error:(id *)error;
- (BOOL)resetSortDataIfNeededWithError:(id *)error;
- (BOOL)hasMultipleGroupsOrAccounts;
- (BOOL)hasGroups;
@end

#endif /* CNiOSAddressBookDataMapper_h */
