//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3628.0.0.0.0
//
#ifndef CNContactImage_h
#define CNContactImage_h
@import Foundation;

#include "CNContactPoster.h"

@class CNVisualFingerprint, NSData, NSDate, NSString;

@interface CNContactImage : NSObject

@property (readonly, nonatomic) NSString *identifier;
@property (readonly, nonatomic) NSData *imageData;
@property (readonly, nonatomic) NSDate *lastUsedDate;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRect;
@property (nonatomic) long long source;
@property (retain, nonatomic) NSString *sourceIdentifier;
@property (retain, nonatomic) NSString *variant;
@property (retain, nonatomic) NSData *poseConfigurationData;
@property (retain, nonatomic) NSString *displayString;
@property (nonatomic) BOOL ignoredForRevert;
@property (retain, nonatomic) CNVisualFingerprint *visualFingerprint;
@property (retain, nonatomic) CNContactPoster *pairedPoster;

/* instance methods */
- (id)resizedContactImageForMeCardSharing;
- (id)resizedContactImageToMaxEdgeWidth:(unsigned long long)width;
- (id)initWithImageData:(id)data cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect lastUsedDate:(id)date;
- (id)initWithImageData:(id)data cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect lastUsedDate:(id)date source:(long long)source;
- (id)initWithIdentifier:(id)identifier imageData:(id)data cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect lastUsedDate:(id)date;
- (id)initWithIdentifier:(id)identifier imageData:(id)data lastUsedDate:(id)date cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect source:(long long)source sourceIdentifier:(id)identifier variant:(id)variant poseConfigurationData:(id)data displayString:(id)string ignoredForRevert:(BOOL)revert;
- (id)copyWithNewImageData:(id)data;
- (id)copyWithNewImageData:(id)data cropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
@end

#endif /* CNContactImage_h */
