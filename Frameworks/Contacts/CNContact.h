//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3628.0.0.0.0
//
#ifndef CNContact_h
#define CNContact_h
@import Foundation;

#include "CNActivityAlert.h"
#include "CNContact.h"
#include "CNContactAugmentation-Protocol.h"
#include "CNContactKeyVector.h"
#include "CNKeyDescriptor-Protocol.h"
#include "CNSensitiveContentConfiguration.h"
#include "CNSuggested-Protocol.h"
#include "CNWallpaper.h"
#include "CNWallpaperMetadata.h"
#include "NSCopying-Protocol.h"
#include "NSItemProviderReading-Protocol.h"
#include "NSItemProviderWriting-Protocol.h"
#include "NSMutableCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSData, NSDate, NSDateComponents, NSDictionary, NSSet, NSString, NSUUID, SGRecordId;

@interface CNContact : NSObject<NSItemProviderReading, NSItemProviderWriting, CNSuggested, CNContactAugmentation, NSCopying, NSMutableCopying, NSSecureCoding> {
  /* instance variables */
  unsigned long long _flags;
  NSString *_explicitDisplayName;
  CNContact *_snapshot;
  NSString *_ISOCountryCode;
  CNWallpaperMetadata *_wallpaperMetadata;
}

@property (readonly, copy) NSString *nameTitle;
@property (readonly, copy) NSString *firstName;
@property (readonly, copy) NSString *lastName;
@property (readonly, copy) NSString *maidenName;
@property (readonly, copy) NSString *phoneticFirstName;
@property (readonly, copy) NSString *phoneticLastName;
@property (readonly, copy) NSString *companyName;
@property (readonly, copy, nonatomic) NSArray *relatedNames;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSArray *writableTypeIdentifiersForItemProvider;
@property (readonly, nonatomic) BOOL hasSuggestedProperties;
@property (readonly, nonatomic) BOOL suggested;
@property (readonly, nonatomic) SGRecordId *suggestionRecordId;
@property (readonly, nonatomic) NSString *suggestionFoundInBundleId;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) BOOL suggestedMe;
@property (nonatomic, readonly) NSUUID *id;
@property (readonly, copy, nonatomic) NSString *internalIdentifier;
@property (readonly, copy, nonatomic) NSArray *calendarURIs;
@property (readonly, copy, nonatomic) NSString *cardDAVUID;
@property (readonly, copy, nonatomic) NSDictionary *activityAlerts;
@property (readonly, copy, nonatomic) NSString *storeIdentifier;
@property (readonly, copy, nonatomic) NSDictionary *storeInfo;
@property (readonly, copy, nonatomic) NSString *searchIndex;
@property (readonly, copy, nonatomic) NSString *accountIdentifier;
@property (readonly, nonatomic) NSObject<CNKeyDescriptor> *availableKeyDescriptor;
@property (readonly, nonatomic) NSSet *availableKeys;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } cropRect;
@property (readonly, copy, nonatomic) NSString *cropRectID;
@property (readonly, copy, nonatomic) NSData *cropRectHash;
@property (readonly, copy, nonatomic) CNActivityAlert *callAlert;
@property (readonly, copy, nonatomic) CNActivityAlert *textAlert;
@property (readonly, nonatomic) int iOSLegacyIdentifier;
@property (readonly, copy, nonatomic) NSString *externalURI;
@property (readonly, copy, nonatomic) NSString *externalIdentifier;
@property (readonly, copy, nonatomic) NSData *externalRepresentation;
@property (readonly, copy, nonatomic) NSString *externalModificationTag;
@property (readonly, copy, nonatomic) NSString *externalUUID;
@property (readonly, copy, nonatomic) NSString *externalImageURI;
@property (readonly, copy, nonatomic) NSString *fullName;
@property (readonly, copy, nonatomic) NSString *phoneticFullName;
@property (readonly, copy, nonatomic) NSString *linkIdentifier;
@property (readonly, copy, nonatomic) NSString *phonemeData;
@property (readonly, copy, nonatomic) NSString *sortingGivenName;
@property (readonly, copy, nonatomic) NSString *sortingFamilyName;
@property (readonly, copy, nonatomic) NSString *sectionForSortingByGivenName;
@property (readonly, copy, nonatomic) NSString *sectionForSortingByFamilyName;
@property (readonly, copy, nonatomic) NSString *phoneticCompanyName;
@property (readonly, copy, nonatomic) NSString *pronunciationGivenName;
@property (readonly, copy, nonatomic) NSString *pronunciationFamilyName;
@property (readonly, copy, nonatomic) NSArray *addressingGrammars;
@property (readonly, copy, nonatomic) NSArray *addressingGrammarsEncrypted;
@property (readonly, copy, nonatomic) NSArray *termsOfAddress;
@property (readonly, copy, nonatomic) NSDate *creationDate;
@property (readonly, copy, nonatomic) NSDate *modificationDate;
@property (readonly, nonatomic) long long displayNameOrder;
@property (readonly, copy, nonatomic) NSString *stringForIndexing;
@property (readonly, nonatomic) BOOL preferredForName;
@property (readonly, nonatomic) BOOL preferredForImage;
@property (readonly, copy, nonatomic) NSString *preferredLikenessSource;
@property (readonly, copy, nonatomic) NSString *preferredApplePersonaIdentifier;
@property (readonly, copy, nonatomic) NSString *preferredChannel;
@property (readonly, copy, nonatomic) NSString *downtimeWhitelist;
@property (readonly, copy, nonatomic) NSString *imageType;
@property (readonly, copy, nonatomic) NSData *imageHash;
@property (readonly, copy, nonatomic) NSData *memojiMetadata;
@property (readonly, copy, nonatomic) CNWallpaper *wallpaper;
@property (readonly, copy, nonatomic) NSData *watchWallpaperImageData;
@property (readonly, copy, nonatomic) NSString *wallpaperURI;
@property (readonly, nonatomic) long long sharedPhotoDisplayPreference;
@property (readonly, nonatomic) BOOL isUsingSharedPhoto;
@property (readonly, copy, nonatomic) NSData *imageBackgroundColorsData;
@property (readonly, copy, nonatomic) CNSensitiveContentConfiguration *sensitiveContentConfiguration;
@property (readonly, nonatomic) BOOL unified;
@property (readonly, nonatomic) BOOL hasBeenPersisted;
@property (readonly, copy, nonatomic) NSArray *linkedContacts;
@property (readonly, copy, nonatomic) NSArray *mainStoreLinkedContacts;
@property (readonly, copy, nonatomic) NSString *mapsData;
@property (readonly, copy, nonatomic) NSData *fullscreenImageData;
@property (readonly, copy, nonatomic) NSData *syncImageData;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, nonatomic) long long contactType;
@property (readonly, copy, nonatomic) NSString *namePrefix;
@property (readonly, copy, nonatomic) NSString *givenName;
@property (readonly, copy, nonatomic) NSString *middleName;
@property (readonly, copy, nonatomic) NSString *familyName;
@property (readonly, copy, nonatomic) NSString *previousFamilyName;
@property (readonly, copy, nonatomic) NSString *nameSuffix;
@property (readonly, copy, nonatomic) NSString *nickname;
@property (readonly, copy, nonatomic) NSString *organizationName;
@property (readonly, copy, nonatomic) NSString *departmentName;
@property (readonly, copy, nonatomic) NSString *jobTitle;
@property (readonly, copy, nonatomic) NSString *phoneticGivenName;
@property (readonly, copy, nonatomic) NSString *phoneticMiddleName;
@property (readonly, copy, nonatomic) NSString *phoneticFamilyName;
@property (readonly, copy, nonatomic) NSString *phoneticOrganizationName;
@property (readonly, copy, nonatomic) NSString *note;
@property (readonly, copy, nonatomic) NSData *imageData;
@property (readonly, copy, nonatomic) NSData *thumbnailImageData;
@property (readonly, nonatomic) BOOL imageDataAvailable;
@property (readonly, copy, nonatomic) NSArray *phoneNumbers;
@property (readonly, copy, nonatomic) NSArray *emailAddresses;
@property (readonly, copy, nonatomic) NSArray *postalAddresses;
@property (readonly, copy, nonatomic) NSArray *urlAddresses;
@property (readonly, copy, nonatomic) NSArray *contactRelations;
@property (readonly, copy, nonatomic) NSArray *socialProfiles;
@property (readonly, copy, nonatomic) NSArray *instantMessageAddresses;
@property (readonly, copy, nonatomic) NSDateComponents *birthday;
@property (readonly, copy, nonatomic) NSDateComponents *nonGregorianBirthday;
@property (readonly, copy, nonatomic) NSArray *dates;

/* class methods */
+ (id)predicateForSuggestionIdentifier:(unsigned long long)identifier;
+ (id)contactFromSuggestion:(id)suggestion;
+ (id)contactIdentifierFromSuggestionID:(id)id;
+ (id)suggestionIDFromContactIdentifier:(id)identifier;
+ (id)readableTypeIdentifiersForItemProvider;
+ (id)objectWithItemProviderData:(id)data typeIdentifier:(id)identifier error:(id *)error;
+ (BOOL)isContactUTIType:(id)utitype;
+ (BOOL)isVCardDataUTIType:(id)utitype;
+ (id)contactWithArchivedData:(id)data error:(id *)error;
+ (id)contactWithVCardData:(id)data error:(id *)error;
+ (id)writableTypeIdentifiersForItemProvider;
+ (id)contactFromPublicABPerson:(void *)abperson keysToFetch:(id)fetch;
+ (id)contactFromPublicABPerson:(void *)abperson keysToFetch:(id)fetch mutable:(BOOL)mutable;
+ (id)contactPropertyKeyFromPublicABPropertyID:(int)id;
+ (int)publicABPropertyIDFromContactPropertyKey:(id)key;
+ (id)contactFromPerson:(void *)person keysToFetch:(id)fetch;
+ (id)contactFromPerson:(void *)person keysToFetch:(id)fetch mutable:(BOOL)mutable;
+ (id)contactPropertyKeyFromABPropertyID:(int)id;
+ (int)abPropertyIDfromContactPropertyKey:(id)key;
+ (id)predicateForContactsMatchingName:(id)name options:(unsigned long long)options;
+ (id)predicateForContactsWithOrganizationName:(id)name;
+ (id)predicateForContactMatchingEmailAddress:(id)address;
+ (id)predicateForContactsMatchingEmailAddress:(id)address groupIdentifiers:(id)identifiers limitToOneResult:(BOOL)result;
+ (id)predicateForContactsMatchingPhoneNumber:(id)number prefixHint:(id)hint groupIdentifiers:(id)identifiers limitToOneResult:(BOOL)result;
+ (id)predicateForContactsMatchingHandleStrings:(id)strings;
+ (id)predicateForContactsMatchingHandleStrings:(id)strings inContainersWithIdentifiers:(id)identifiers;
+ (id)predicateForContactsMatchingPostalAddress:(id)address;
+ (id)predicateForContactsLinkedToContactWithIdentifier:(id)identifier;
+ (id)predicateForContactsLinkedToContact:(id)contact;
+ (id)predicateForContactsMatchingFullTextSearch:(id)search containerIdentifiers:(id)identifiers groupIdentifiers:(id)identifiers;
+ (id)predicateForContactMatchingMapString:(id)string;
+ (id)predicateForContactMatchingPhoneNumber:(id)number;
+ (id)predicateForContactsMatchingPhoneNumber:(id)number prefixHint:(id)hint;
+ (id)predicateForContactMatchingPhoneNumberWithDigits:(id)digits countryCode:(id)code;
+ (id)predicateForPreferredNameInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (id)predicateForPreferredNameInContainersWithIdentifiers:(id)identifiers groupsWithIdentifiers:(id)identifiers;
+ (id)predicateForContactsMatchingString:(id)string accountIdentifier:(id)identifier containerIdentifier:(id)identifier groupIdentifier:(id)identifier;
+ (id)predicateForContactMatchingURLString:(id)urlstring;
+ (id)predicateForContactMatchingLabeledValueIdentifier:(id)identifier;
+ (id)predicateForContactMatchingEKParticipantWithName:(id)name emailAddress:(id)address URL:(id)url predicateDescription:(id)description;
+ (id)predicateForLegacyIdentifier:(unsigned int)identifier;
+ (id)predicateForContactsMatchingSocialProfile:(id)profile;
+ (id)predicateForContactsMatchingInstantMessageAddress:(id)address;
+ (id)predicateForContactsMatchingPreferredChannel:(id)channel limitOne:(BOOL)one;
+ (id)predicateForContactsMatchingExternalUUIDs:(id)uuids;
+ (id)predicateForContactsWithNonUnifiedIdentifiers:(id)identifiers;
+ (id)predicateForFaultFulfillmentForLegacyIdentifier:(unsigned int)identifier identifier:(id)identifier;
+ (id)predicateForMeContact;
+ (id)predicateForAllContacts;
+ (id)predicateForContactsWithWallpaperMetadata;
+ (id)predicateForContactsWithIdentifiers:(id)identifiers;
+ (id)predicateForContactsInGroupWithIdentifier:(id)identifier;
+ (id)predicateForContactsMatchingName:(id)name;
+ (id)predicateForContactsInContainerWithIdentifier:(id)identifier;
+ (id)predicateForContactsMatchingEmailAddress:(id)address;
+ (id)predicateForContactsMatchingPhoneNumber:(id)number;
+ (id)os_log;
+ (id)alwaysFetchedKeys;
+ (id)localizedStringForKey:(id)key;
+ (id)identifierProvider;
+ (id)makeIdentifierString;
+ (id)makeIdentifier;
+ (id)contactWithIdentifier:(id)identifier;
+ (id)contactWithIdentifierOnly:(id)only;
+ (id)contact;
+ (id)contactWithDisplayName:(id)name emailOrPhoneNumber:(id)number;
+ (id)contactWithDisplayName:(id)name handleStrings:(id)strings;
+ (void)freezeIfInstancetypeIsImmutable:(id)immutable;
+ (id)_contactWithContact:(id)contact createNewInstance:(BOOL)instance propertyDescriptions:(id)descriptions;
+ (id)emptyContact;
+ (id)contactWithContact:(id)contact;
+ (id)newContactWithPropertyKeys:(id)keys withValuesFromContact:(id)contact;
+ (id)makeContactAndMergeValuesFromAvailableKeysInContact:(id)contact;
+ (BOOL)supportsSecureCoding;
+ (id)storeInfoFromCoder:(id)coder storeIdentifier:(id)identifier key:(id)key;
+ (id)descriptorForAllComparatorKeys;
+ (id)descriptorForAllImageDataKeys;
+ (id)descriptorForKeyDescriptors:(id)descriptors description:(id)description;
+ (id)descriptorWithKeyDescriptors:(id)descriptors description:(id)description;
+ (id /* block */)comparatorForNameSortOrder:(long long)order;
+ (id /* block */)preferredImageComparator;
+ (id)unifyContacts:(id)contacts;
+ (id)previewURLForContact:(id)contact;
+ (void)you_used_a_property_that_you_didnt_request_when_you_fetched_the_contact;

/* instance methods */
- (BOOL)isSuggested;
- (BOOL)isSuggestedMe;
- (id)copyWithCuratingAllSuggestions;
- (id)loadDataWithTypeIdentifier:(id)identifier forItemProviderCompletionHandler:(id /* block */)handler;
- (BOOL)overwritePublicABPerson:(void *)abperson;
- (BOOL)updateNewPublicABPerson:(void *)abperson inAddressBook:(void *)book;
- (void *)detachedPerson;
- (void *)detachedPersonWithError:(id *)error;
- (BOOL)overwritePerson:(void *)person;
- (BOOL)overwritePerson:(void *)person error:(id *)error;
- (id)explicitDisplayName;
- (BOOL)isPreferredForName;
- (BOOL)isPreferredForImage;
- (id)wallpaperMetadata;
- (id)init;
- (id)initWithIdentifier:(id)identifier;
- (id)initWithIdentifier:(id)identifier availableKeyDescriptor:(id)descriptor;
- (id)copyWithPropertyKeys:(id)keys;
- (id)copyWithDistinctIdentifier;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)copyWithSelfAsSnapshot;
- (id)copyWithCachedExternalData;
- (id)selfOrMutableCopy;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)assertKeyIsAvailable:(id)available;
- (void)assertKeysAreAvailable:(id)available;
- (id)keyVector;
- (BOOL)isUnified;
- (BOOL)isUnifiedWithContactWithIdentifier:(id)identifier;
- (BOOL)isUnifiedWithContactsWithIdentifiers:(id)identifiers;
- (id)allLinkedIdentifiers;
- (BOOL)isKeyAvailable:(id)available;
- (BOOL)areKeysAvailable:(id)available;
- (id)areKeysAvailable:(id)available useIgnorableKeys:(BOOL)keys findMissingKeys:(BOOL)keys;
- (id)linkedContactsFromStoreWithIdentifier:(id)identifier;
- (unsigned long long)flags;
- (BOOL)isImplicitAugmentation;
- (id)snapshot;
- (BOOL)hasChanges;
- (id)diffToSnapshotAndReturnError:(id *)error;
- (id)shortDebugDescription;
- (BOOL)isEqual:(id)equal;
- (BOOL)areAllAvailableKeysEqualToContact:(id)contact ignoringIdentifiers:(BOOL)identifiers;
- (BOOL)areAllPropertiesButContactIdentifierEqualToContact:(id)contact;
- (BOOL)isProperty:(id)property equalToOtherIgnoreIdentifiers:(id)identifiers;
- (BOOL)areAllPropertiesEqualToContactIgnoringIdentifiers:(id)identifiers;
- (BOOL)isEqualIgnoringIdentifiers:(id)identifiers;
- (id)linkedIdentifierMap;
@end

#endif /* CNContact_h */
