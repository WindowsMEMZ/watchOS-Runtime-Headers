//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3628.0.0.0.0
//
#ifndef CNPropertyDescription_h
#define CNPropertyDescription_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSString;

@interface CNPropertyDescription : NSObject<NSSecureCoding, NSCopying>

@property (readonly, nonatomic) SEL readSelector;
@property (readonly, nonatomic) SEL writeSelector;
@property (readonly, copy, nonatomic) NSString *key;
@property (readonly, nonatomic) BOOL isWritable;
@property (readonly, nonatomic) Class valueClass;
@property (readonly, nonatomic) BOOL isSingleValue;
@property (readonly, nonatomic) BOOL isMultiValue;
@property (readonly, nonatomic) BOOL isNonnull;
@property (readonly, copy, nonatomic) id /* block */ valueForKeyTransform;
@property (readonly, nonatomic) id nilValue;
@property (readonly, nonatomic) NSArray *equivalentLabelSets;

/* class methods */
+ (id)os_log;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (BOOL)abPropertyID:(int *)id;
- (void *)ABValueFromCNValue:(id)cnvalue;
- (id)CNValueFromABValue:(void *)abvalue;
- (BOOL)supportsABLazyLoading;
- (BOOL)setABValue:(void *)abvalue onABPerson:(void *)abperson error:(struct __CFError * *)error;
- (void *)ABValueForABPerson:(void *)abperson;
- (BOOL)setCNValue:(id)cnvalue onABPerson:(void *)abperson withDependentPropertiesContext:(id)context error:(id *)error;
- (void)copyFromABPerson:(void *)abperson toContact:(id)contact;
- (id)CNValueFromABBytes:(char *)abbytes length:(unsigned long long)length;
- (id)CNMutableValueForABMultivalue;
- (BOOL)applyABMultivalueValueBytes:(char *)bytes length:(unsigned long long)length identifier:(id)identifier legacyIdentifier:(int)identifier label:(id)label toCNMultivalueRepresentation:(id)representation;
- (BOOL)applyDictionary:(id)dictionary identifier:(id)identifier legacyIdentifier:(int)identifier label:(id)label toCNMultivalueRepresentation:(id)representation;
- (id)initWithKey:(id)key readSelector:(SEL)selector writeSelector:(SEL)selector;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqualIgnoringIdentifiersForContact:(id)contact other:(id)other;
- (id)unifiableLabelsForLabel:(id)label;
- (id)valueWithResetIdentifiers:(id)identifiers;
- (BOOL)isValue:(id)value equalToEmptyEquivalentOrValue:(id)value;
- (BOOL)canUnifyValue:(id)value withValue:(id)value;
- (BOOL)isValue:(id)value preferredToUnifiedValue:(id)value;
- (void)encodeUsingCoder:(id)coder contact:(id)contact;
- (void)decodeUsingCoder:(id)coder contact:(id)contact;
- (void)assertValueType:(id)type;
- (BOOL)isValidValue:(id)value error:(id *)error;
- (void)setCNValue:(id)cnvalue onContact:(id)contact;
- (id)CNValueForContact:(id)contact;
- (id)stringForIndexingForContact:(id)contact;
- (void)resetGuardianManagedValueOnContact:(id)contact;
@end

#endif /* CNPropertyDescription_h */
