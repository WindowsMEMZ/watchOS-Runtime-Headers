//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 3628.0.0.0.0
//
#ifndef CNXPCDataMapperService_Protocol_h
#define CNXPCDataMapperService_Protocol_h
@import Foundation;

@protocol CNXPCDataMapperService <NSObject>
/* instance methods */
- (void)configureServiceWithOptions:(id)options;
- (void)identifierWithReply:(id /* block */)reply;
- (void)unifiedContactCountWithReply:(id /* block */)reply;
- (void)contactCountForFetchRequest:(id)request withReply:(id /* block */)reply;
- (void)sectionListOffsetsForSortOrder:(long long)order reply:(id /* block */)reply;
- (void)contactsForFetchRequest:(id)request withMatchInfoReply:(id /* block */)reply;
- (void)encodedContactsAndCursorForFetchRequest:(id)request withReply:(id /* block */)reply;
- (void)progressiveContactsForFetchRequest:(id)request progressHandler:(id)handler reply:(id /* block */)reply;
- (void)meContactIdentifiersWithReply:(id /* block */)reply;
- (void)executeSaveRequest:(id)request withReply:(id /* block */)reply;
- (void)containersMatchingPredicate:(id)predicate withReply:(id /* block */)reply;
- (void)serverSearchContainersMatchingPredicate:(id)predicate withReply:(id /* block */)reply;
- (void)policyForContainerWithIdentifier:(id)identifier withReply:(id /* block */)reply;
- (void)accountsMatchingPredicate:(id)predicate withReply:(id /* block */)reply;
- (void)groupsMatchingPredicate:(id)predicate withReply:(id /* block */)reply;
- (void)subgroupsOfGroupWithIdentifier:(id)identifier withReply:(id /* block */)reply;
- (void)defaultContainerIdentifierWithReply:(id /* block */)reply;
- (void)setDefaultAccountIdentifier:(id)identifier withReply:(id /* block */)reply;
- (void)setMeContact:(id)contact withReply:(id /* block */)reply;
- (void)setMeContact:(id)contact forContainer:(id)container withReply:(id /* block */)reply;
- (void)setBestMeIfNeededForGivenName:(id)name familyName:(id)name email:(id)email withReply:(id /* block */)reply;
- (void)contactWithUserActivityUserInfo:(id)info keysToFetch:(id)fetch withReply:(id /* block */)reply;
- (void)userActivityForContact:(id)contact withReply:(id /* block */)reply;
- (void)registerChangeHistoryClientIdentifier:(id)identifier forContainerIdentifier:(id)identifier withReply:(id /* block */)reply;
- (void)unregisterChangeHistoryClientIdentifier:(id)identifier forContainerIdentifier:(id)identifier withReply:(id /* block */)reply;
- (void)changeHistoryWithFetchRequest:(id)request withReply:(id /* block */)reply;
- (void)executeChangeHistoryClearRequest:(id)request withReply:(id /* block */)reply;
- (void)currentHistoryTokenWithReply:(id /* block */)reply;
- (void)currentHistoryAnchorWithReply:(id /* block */)reply;
- (void)favoritesEntryDictionariesAtPath:(id)path withReply:(id /* block */)reply;
- (void)writeFavoritesPropertyListData:(id)data toPath:(id)path withReply:(id /* block */)reply;
- (void)reindexSearchableItemsWithIdentifiers:(id)identifiers withReply:(id /* block */)reply;
- (void)verifyIndexWithReply:(id /* block */)reply;
- (void)geminiResultForContact:(id)contact substituteDefaultForDangling:(BOOL)dangling withReply:(id /* block */)reply;
- (void)bestSenderIdentityForHandle:(id)handle withReply:(id /* block */)reply;
- (void)authorizedKeysForContactKeys:(id)keys withReply:(id /* block */)reply;
- (void)requestExtensionCommand:(id)command withReply:(id /* block */)reply;
- (void)getBackgroundColorOnImageData:(id)data bitmapFormat:(id)format withReply:(id /* block */)reply;
@end

#endif /* CNXPCDataMapperService_Protocol_h */
