//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1774.2.3.0.0
//
#ifndef CPFont_h
#define CPFont_h
@import Foundation;

#include "CPDisposable-Protocol.h"

@class NSString;

@interface CPFont : NSObject<CPDisposable> {
  /* instance variables */
  struct CGPDFFont * cgPDFFont;
  struct CGFont * cgFont;
  NSString *fontName;
  BOOL exactMatch;
  struct { double fontStretch; double fontWeight; unsigned int flags; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } fontBBox; double italicAngle; double ascent; double descent; double leading; double capHeight; double xHeight; double stemV; double stemH; double avgWidth; double maxWidth; double missingWidth; double spaceWidth; double underlinePosition; double underlineThickness; } descriptor;
  struct __CFDictionary * kernDictionary;
  double kernUnitsPerEm;
  BOOL isHorizontal;
  double defaultWidth;
  BOOL disposed;
}

/* instance methods */
- (id)matchingFontName;
- (void)getFontName;
- (void)loadExternalFontInfoFor:(id)for;
- (void)loadEmbeddedFontInfo;
- (id)initWith:(struct CGPDFDictionary *)with;
- (void)dispose;
- (void)finalize;
- (void)dealloc;
- (struct CGPDFFont *)cgPDFFont;
- (struct CGFont *)cgFont;
- (id)fontName;
- (BOOL)isSameFontAs:(id)as;
- (double)fontStretch;
- (double)fontWeight;
- (unsigned int)flags;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })fontBBox;
- (double)italicAngle;
- (double)ascent;
- (double)descent;
- (double)leading;
- (double)capHeight;
- (double)xHeight;
- (double)stemV;
- (double)stemH;
- (double)avgWidth;
- (double)maxWidth;
- (double)missingWidth;
- (double)spaceWidth;
- (double)underlinePosition;
- (double)underlineThickness;
- (BOOL)isHorizontal;
- (double)kernBetweenUnicode:(unsigned short)unicode andUnicode:(unsigned short)unicode;
- (BOOL)getGlyphs:(unsigned short *)glyphs forCodes:(const unsigned short *)codes count:(unsigned int)count;
- (void)uniCharsFor:(unsigned long long)for count:(unsigned long long *)count toArray:(unsigned short *)array maxChars:(unsigned int)chars;
@end

#endif /* CPFont_h */
