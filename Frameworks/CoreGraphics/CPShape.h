//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1774.2.3.0.0
//
#ifndef CPShape_h
#define CPShape_h
@import Foundation;

#include "CPGraphicObject.h"
#include "CPDisposable-Protocol.h"

@interface CPShape : CPGraphicObject<CPDisposable> {
  /* instance variables */
  long long mcid;
  unsigned int pdfObjectID;
  struct CGPath * path;
  BOOL isUprightRectangle;
  int windingRule;
  double lineWidth;
  double miterLimit;
  int lineCap;
  int lineJoin;
  struct CGColor * fillColor;
  struct CGColor * strokeColor;
  struct CGPDFObject * fillObject;
  struct CGPDFObject * strokeObject;
  struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } paintTransform;
  BOOL boundsComputed;
  BOOL renderedBoundsComputed;
}

/* instance methods */
- (id)initWithPDFShape:(struct CPPDFShape { struct CPPDFObject { struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x0; struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } x1; unsigned int x2; unsigned int x3; } x0; unsigned int x1; struct CPPDFStyle * x2; int x3; struct CGPath * x4; BOOL x5; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x6; struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; } x7; long long x8; } *)pdfshape;
- (id)init;
- (void)dispose;
- (void)finalize;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)recomputeBounds;
- (long long)mcid;
- (unsigned int)pdfObjectID;
- (void)setPdfObjectID:(unsigned int)id;
- (struct CGPath *)path;
- (void)setPath:(struct CGPath *)path;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })renderedBounds;
- (void)recomputeRenderedBounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })innerBounds;
- (BOOL)isUprightRectangle;
- (id)attributes;
- (void)accept:(id)accept;
- (long long)zOrder;
- (int)windingRule;
- (void)setWindingRule:(int)rule;
- (struct CGColor *)fillColor;
- (void)setFillColor:(struct CGColor *)color;
- (struct CGPDFObject *)fillObject;
- (void)setFillObject:(struct CGPDFObject *)object;
- (BOOL)hasFill;
- (struct CGColor *)strokeColor;
- (void)setStrokeColor:(struct CGColor *)color;
- (struct CGPDFObject *)strokeObject;
- (void)setStrokeObject:(struct CGPDFObject *)object;
- (BOOL)hasStroke;
- (double)lineWidth;
- (void)setLineWidth:(double)width;
- (double)miterLimit;
- (void)setMiterLimit:(double)limit;
- (int)lineCap;
- (void)setLineCap:(int)cap;
- (int)lineJoin;
- (void)setLineJoin:(int)join;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })paintTransform;
- (void)setPaintTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (BOOL)hasSamePathAs:(id)as;
- (BOOL)isStrokeFor:(id)for;
- (BOOL)isVisible;
- (BOOL)canCombineWith:(id)with;
- (void)addShape:(id)shape;
- (id)string;
- (void)makeLineFromVertex:(struct CGPoint { double x0; double x1; })vertex toVertex:(struct CGPoint { double x0; double x1; })vertex;
- (unsigned int)pathElementCount;
@end

#endif /* CPShape_h */
