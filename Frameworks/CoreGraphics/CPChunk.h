//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1774.2.3.0.0
//
#ifndef CPChunk_h
#define CPChunk_h
@import Foundation;

#include "CPObject.h"

@interface CPChunk : CPObject {
  /* instance variables */
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } bounds;
  BOOL shrinksWithChildren;
  BOOL dirtyBounds;
  unsigned int position;
  long long insertionOrder;
}

/* class methods */
+ (float)chooseReferenceFontSizeFrom:(float)from and:(float)and;

/* instance methods */
- (id)init;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copyAndSplitChildrenAtIndex:(unsigned int)index;
- (void)accept:(id)accept;
- (float)opticalLeading;
- (void)add:(id)add;
- (void)add:(id)add atIndex:(unsigned int)index;
- (void)addChildrenOf:(id)of;
- (void)remove:(id)remove;
- (void)removeAll;
- (id)newTakeChildren;
- (id)newTakeChildrenAmong:(id)among;
- (void)setChildren:(id)children;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })adjustToPointBoundary:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })boundary;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })renderedBounds;
- (id)describeBounds;
- (void)setAnchor:(struct CGPoint { double x0; double x1; })anchor;
- (struct CGPoint { double x0; double x1; })anchor;
- (float)clusterGapTo:(id)to;
- (float)advanceDeltaAfterSpace;
- (float)absoluteGapTo:(id)to;
- (float)referenceAdvanceWidth;
- (void)fitBoundsToChildren;
- (void)resizeWith:(id)with;
- (void)setInsertionOrder:(long long)order;
- (long long)insertionOrder;
- (void)sortUsingSelector:(SEL)selector;
- (long long)compareAnchorY:(id)y;
- (long long)compareCommonAnchorX:(id)x;
- (long long)compareAnchorX:(id)x;
- (long long)compareAnchorYDescending:(id)ydescending;
- (long long)compareX:(id)x;
- (long long)compareInsertionOrder:(id)order;
- (long long)compareZ:(id)z;
- (long long)compareZDescending:(id)zdescending;
- (long long)compareXBounds:(id)xbounds;
- (long long)compareLinearBounds:(id)bounds;
- (long long)compareY:(id)y;
- (long long)compareYBounds:(id)ybounds;
- (long long)compareTopDescending:(id)descending;
- (long long)compareYDescending:(id)ydescending;
- (long long)compareYDescendingX:(id)x;
- (long long)compareChunkPosition:(id)position;
- (double)left;
- (double)right;
- (double)center;
- (double)top;
- (double)bottom;
- (float)fontSize;
- (struct CGSize { double x0; double x1; })advance;
- (int)clusterLevelHint;
- (void)orderedInsert:(id)insert usingSelector:(SEL)selector;
- (BOOL)overlapsHorizontallyWith:(id)with;
- (BOOL)overlapsVerticallyWith:(id)with;
- (BOOL)geometricallyContains:(id)contains;
- (BOOL)boundsEqualsRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect accuracy:(double)accuracy;
- (BOOL)shrinksWithChildren;
- (void)setShrinksWithChildren:(BOOL)children;
- (BOOL)intersectsChild:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })child;
- (void)translateObjectYBy:(double)yby;
- (unsigned int)chunkPosition;
- (void)setChunkPosition:(unsigned int)position;
- (double)rotationAngle;
@end

#endif /* CPChunk_h */
