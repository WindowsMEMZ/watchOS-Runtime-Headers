//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1299.2.3.1.0
//
#ifndef LSRecord_h
#define LSRecord_h
@import Foundation;

#include "LSDetachable-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSDiscardableContent-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSData, NSURL, NSUUID;

@interface LSRecord : NSObject<LSDetachable, NSSecureCoding, NSCopying, NSDiscardableContent> {
  /* instance variables */
  void * _resolvedProperties;
  struct LSContext { _LSDatabase *db; } _context;
  unsigned int _unitID;
  unsigned int x :16 _tableID;
  unsigned int x :14 _discardableContentCounter;
  unsigned int x :1 _intentionallyInvalid;
  unsigned int x :1 _shared;
}

@property (readonly, nonatomic) NSURL *visualizerURL;
@property (readonly) NSUUID *databaseUUID;
@property (nonatomic) BOOL _shared;
@property (readonly, nonatomic) id compatibilityObject;
@property (readonly) NSData *persistentIdentifier;

/* class methods */
+ (id)_propertyClasses;
+ (void)resolveAllPropertiesOfRecords:(const id *)records count:(unsigned long long)count andDetachOnQueue:(id)queue;
+ (void)resolveAllPropertiesOfRecords:(id)records andDetachOnQueue:(id)queue;
+ (void)initialize;
+ (id)new;
+ (BOOL)hasDatabaseAccess;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (const void *)_resolvingMethods;
- (id)_propertyClassesForCoding;
- (id)_compatibilityObjectWithContext:(struct LSContext { id x0; } *)context tableID:(unsigned int)id unitID:(unsigned int)id unitBytes:(const void *)bytes;
- (id)_persistentIdentifierWithContext:(struct LSContext { id x0; } *)context tableID:(unsigned int)id unitID:(unsigned int)id unitBytes:(const void *)bytes;
- (id)_initWithContext:(struct LSContext { id x0; } *)context persistentIdentifierData:(const struct LSPersistentIdentifierData { unsigned char x0; unsigned char x1[3] unsigned int x2; unsigned int x3; unsigned char x4[16] char x5[0] } *)data length:(unsigned long long)length;
- (void)_detachFromContext:(struct LSContext { id x0; } *)context tableID:(unsigned int)id unitID:(unsigned int)id unitBytes:(const void *)bytes;
- (id)_replacementObjectForResolvedPropertyValue:(id)value forGetter:(SEL)getter encoder:(id)encoder;
- (void)resolveAllPropertiesAndDetachOnQueue:(id)queue;
- (id)init;
- (void)dealloc;
- (id)_initWithContext:(struct LSContext { id x0; } *)context persistentIdentifier:(id)identifier;
- (id)initWithPersistentIdentifier:(id)identifier;
- (id)_initWithContext:(struct LSContext { id x0; } *)context tableID:(unsigned int)id unitID:(unsigned int)id;
- (id)_initInvalid;
- (void)_setResolvedPropertyValue:(id)value forGetter:(SEL)getter;
- (void)_removeResolvedPropertyValueForGetter:(SEL)getter;
- (id)_resolvedPropertyValueForGetter:(SEL)getter nullPlaceholder:(id)placeholder;
- (id)_resolvedPropertyValueForGetter:(SEL)getter;
- (void)_resolveAllProperties;
- (void)_performBlockWithContext:(id /* block */)context;
- (void)_ifAttached:(id /* block */)attached else:(id /* block */)else;
- (id)_attributedDescription;
- (BOOL)_isShared;
- (void)_setShared:(BOOL)shared;
- (unsigned int)unitID;
- (unsigned int)tableID;
- (id)description;
- (id)debugDescription;
- (void)detach;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)beginContentAccess;
- (void)endContentAccess;
- (void)discardContentIfPossible;
- (BOOL)isContentDiscarded;
@end

#endif /* LSRecord_h */
