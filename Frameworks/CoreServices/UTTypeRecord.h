//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1299.2.3.1.0
//
#ifndef UTTypeRecord_h
#define UTTypeRecord_h
@import Foundation;

#include "LSRecord.h"
#include "LSBundleRecord.h"
#include "LSPropertyList.h"

@class NSData, NSDictionary, NSNumber, NSOrderedSet, NSSet, NSString, NSURL;

@interface UTTypeRecord : LSRecord

@property (readonly) NSDictionary *iconDictionary;
@property (readonly) NSURL *iconResourceBundleURL;
@property (readonly) _LSLocalizedStringRecord *_localizedDescription;
@property (readonly) NSData *_declaringBundleBookmark;
@property (readonly) NSString *_delegatePath;
@property (readonly, @dynamic, nonatomic) id compatibilityObject;
@property (readonly) NSString *identifier;
@property (readonly) NSNumber *version;
@property (readonly) BOOL dynamic;
@property (readonly) BOOL declared;
@property (readonly) BOOL wildcard;
@property (readonly) BOOL inPublicDomain;
@property (readonly) BOOL exported;
@property (readonly) BOOL imported;
@property (readonly) BOOL active;
@property (readonly) BOOL coreType;
@property (readonly) LSBundleRecord *declaringBundleRecord;
@property (readonly) LSPropertyList *declaration;
@property (readonly) LSPropertyList *tagSpecification;
@property (readonly) NSURL *referenceURL;
@property (readonly) NSSet *pedigree;
@property (readonly) NSOrderedSet *parentTypeIdentifiers;
@property (readonly) NSSet *childTypeIdentifiers;
@property (readonly) NSString *localizedDescription;
@property (readonly) NSDictionary *localizedDescriptionDictionary;

/* class methods */
+ (id)enumerator;
+ (id)_typeRecordWithIdentifier:(id)identifier allowUndeclared:(BOOL)undeclared;
+ (id)typeRecordWithIdentifier:(id)identifier;
+ (id)typeRecordWithPotentiallyUndeclaredIdentifier:(id)identifier;
+ (id)typeRecordsWithIdentifiers:(id)identifiers;
+ (id)typeRecordWithTag:(id)tag ofClass:(id)class conformingToTypeRecord:(id)record;
+ (id)typeRecordsWithTag:(id)tag ofClass:(id)class conformingToTypeRecord:(id)record;
+ (id)typeRecordWithTag:(id)tag ofClass:(id)class conformingToIdentifier:(id)identifier;
+ (id)typeRecordsWithTag:(id)tag ofClass:(id)class conformingToIdentifier:(id)identifier;
+ (id)typeRecordWithTag:(id)tag ofClass:(id)class;
+ (id)typeRecordsWithTag:(id)tag ofClass:(id)class;
+ (id)typeRecordForImportedTypeWithIdentifier:(id)identifier conformingToIdentifier:(id)identifier;
+ (id)typeRecordForPromiseAtURL:(id)url error:(id *)error;
+ (id)_typeRecordWithContext:(struct LSContext { id x0; } *)context identifier:(id)identifier allowUndeclared:(BOOL)undeclared;
+ (BOOL)_typeIdentifier:(id)identifier conformsToTypeIdentifier:(id)identifier;
+ (id)_propertyClasses;

/* instance methods */
- (id)iconDictionaryWithContext:(struct LSContext { id x0; } *)context tableID:(unsigned int)id unitID:(unsigned int)id unitBytes:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; int x4; unsigned int x5; unsigned int x6; unsigned int x7[8] unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; } *)bytes;
- (void)_LSRecord_resolve_iconDictionary;
- (id)iconResourceBundleURLWithContext:(struct LSContext { id x0; } *)context tableID:(unsigned int)id unitID:(unsigned int)id unitBytes:(const struct { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; int x4; unsigned int x5; unsigned int x6; unsigned int x7[8] unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; unsigned int x13; unsigned int x14; unsigned int x15; } *)bytes;
- (void)_LSRecord_resolve_iconResourceBundleURL;
- (BOOL)isDynamic;
- (BOOL)isDeclared;
- (BOOL)isWildcard;
- (BOOL)isInPublicDomain;
- (BOOL)isExported;
- (BOOL)isImported;
- (BOOL)isActive;
- (BOOL)isCoreType;
- (id)preferredTagOfClass:(id)class;
- (BOOL)conformsToTypeRecord:(id)record;
- (BOOL)conformsToTypeIdentifier:(id)identifier;
- (BOOL)isChildOfTypeIdentifier:(id)identifier;
- (void)enumeratePedigreeWithBlock:(id /* block */)block;
- (void)enumerateDescendantsWithBlock:(id /* block */)block;
- (void)enumerateParentTypesWithBlock:(id /* block */)block;
- (void)enumerateChildTypesWithBlock:(id /* block */)block;
- (id)localizedDescriptionWithPreferredLocalizations:(id)localizations;
- (void)_enumerateRelatedTypesWithMaximumDegreeOfSeparation:(long long)separation block:(id /* block */)block;
- (void)_enumerateRelatedTypeUnitsOrDynamicIdsWithContext:(struct LSContext { id x0; } *)context unitID:(unsigned int)id maximumDegreeOfSeparation:(long long)separation block:(id /* block */)block;
- (id)_initWithContext:(struct LSContext { id x0; } *)context persistentIdentifierData:(const struct LSPersistentIdentifierData { unsigned char x0; unsigned char x1[3] unsigned int x2; unsigned int x3; unsigned char x4[16] char x5[0] } *)data length:(unsigned long long)length;
- (void)_detachFromContext:(struct LSContext { id x0; } *)context tableID:(unsigned int)id unitID:(unsigned int)id unitBytes:(const void *)bytes;
- (id)debugDescription;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
@end

#endif /* UTTypeRecord_h */
