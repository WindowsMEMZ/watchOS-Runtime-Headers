//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1387.3.4.0.0
//
#ifndef ATAudioSessionClientImpl_h
#define ATAudioSessionClientImpl_h
@import Foundation;

#include "ATAudioSessionPropertyManager.h"

@class AVAudioSession;
@protocol {ObjectRef<__CFRunLoop *>="mCFObject"^{__CFRunLoop}}, {StringRef="mObject"{ObjectRef<const __CFString *>="mCFObject"^{__CFString}}}, {map<std::string, std::shared_ptr<NewNotificationCenterObserver>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<NewNotificationCenterObserver>>>>="__tree_"{__tree<std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, std::less<std::string>>>="__value_"Q}}}, {map<std::string, std::shared_ptr<OldNotificationCenterObserver>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<OldNotificationCenterObserver>>>>="__tree_"{__tree<std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, std::less<std::string>>>="__value_"Q}}}, {unique_ptr<AudioSessionPropertyListeners, std::default_delete<AudioSessionPropertyListeners>>="__ptr_"{__compressed_pair<AudioSessionPropertyListeners *, std::default_delete<AudioSessionPropertyListeners>>="__value_"^{AudioSessionPropertyListeners}}};

@interface ATAudioSessionClientImpl : NSObject {
  /* instance variables */
  AVAudioSession *_weakSession;
  AVAudioSession *_strongSession;
  ATAudioSessionPropertyManager *_propertyManager;
  struct unique_ptr<AudioSessionPropertyListeners, std::default_delete<AudioSessionPropertyListeners>> { struct __compressed_pair<AudioSessionPropertyListeners *, std::default_delete<AudioSessionPropertyListeners>> { struct AudioSessionPropertyListeners *__value_; } __ptr_; } _propertyListeners;
  struct map<std::string, std::shared_ptr<OldNotificationCenterObserver>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<OldNotificationCenterObserver>>>> { struct __tree<std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<OldNotificationCenterObserver>>, std::less<std::string>>> { unsigned long long __value_; } __pair3_; } __tree_; } _oldNotificationCenterObservers;
  struct map<std::string, std::shared_ptr<NewNotificationCenterObserver>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<NewNotificationCenterObserver>>>> { struct __tree<std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<NewNotificationCenterObserver>>, std::less<std::string>>> { unsigned long long __value_; } __pair3_; } __tree_; } _newNotificationCenterObservers;
  struct ObjectRef<__CFRunLoop *> { struct __CFRunLoop *mCFObject; } _clientRunLoop;
  struct StringRef { struct ObjectRef<const __CFString *> { struct __CFString *mCFObject; } mObject; } _clientRunLoopMode;
}

@property undefined * clientInterruptionListenerProc;
@property void * clientUserData;
@property BOOL isConfigured;
@property (readonly) AVAudioSession *avas;
@property unsigned int interruptionType;

/* instance methods */
- (id)initWithSession:(id)session;
- (id)initWithStrongSession:(id)session;
- (BOOL)isValid;
- (int)setClientConfiguration:(struct __CFRunLoop *)configuration runLoopMode:(struct __CFString *)mode listenerProc:(undefined *)proc userData:(void *)data;
- (int)resetClientConfiguration;
- (int)AudioSessionSetActiveImpl:(unsigned char)impl flags:(unsigned int)flags;
- (int)AudioSessionGetPropertyImpl:(unsigned int)impl size:(unsigned int *)size data:(void *)data;
- (int)AudioSessionSetPropertyImpl:(unsigned int)impl size:(unsigned int)size data:(const void *)data;
- (int)AudioSessionGetPropertySizeImpl:(unsigned int)impl size:(unsigned int *)size;
- (int)AudioSessionAddPropertyListenerImpl:(unsigned int)impl userProc:(undefined *)proc userData:(void *)data;
- (int)AudioSessionRemovePropertyListenerImpl:(unsigned int)impl;
- (int)AudioSessionRemovePropertyListenerWithUserDataImpl:(unsigned int)impl userProc:(undefined *)proc userData:(void *)data;
- (void)addNSNotificationListenerFor:(id)for session:(id)session selector:(SEL)selector;
- (void)addNSNotificationListenerFor:(id)for session:(id)session block:(id /* block */)block;
- (void)addAVAudioSessionKVOObservers:(unsigned int)kvoobservers session:(id)session;
- (void)removeAVAudioSessionKVOObservers:(unsigned int)kvoobservers;
- (void)handleInterruption:(id)interruption;
- (void)handleRouteChange:(id)change;
- (void)handleServerDeath:(id)death;
- (void)handleServerReset:(id)reset;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)callPropertyListeners:(unsigned int)listeners data:(id)data;
@end

#endif /* ATAudioSessionClientImpl_h */
