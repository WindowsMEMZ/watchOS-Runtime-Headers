//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 129.0.0.0.0
//
#ifndef NLEmbedding_h
#define NLEmbedding_h
@import Foundation;

#include "NLModel.h"

@class NSString;

@interface NLEmbedding : NSObject {
  /* instance variables */
  void * _embedding;
  NLModel *_nlModel;
  BOOL _usesUntokenizedSentences;
}

@property (readonly) unsigned long long dimension;
@property (readonly) unsigned long long vocabularySize;
@property (readonly, copy) NSString *language;
@property (readonly) unsigned long long revision;

/* class methods */
+ (id)wordEmbeddingForLanguage:(id)language;
+ (id)contextualWordEmbeddingForLanguage:(id)language;
+ (id)sentenceEmbeddingForLanguage:(id)language;
+ (id)wordEmbeddingForLanguage:(id)language revision:(unsigned long long)revision;
+ (id)contextualWordEmbeddingForLanguage:(id)language revision:(unsigned long long)revision;
+ (id)transformerContextualTokenEmbeddingForLanguage:(id)language;
+ (id)sentenceEmbeddingForLanguage:(id)language revision:(unsigned long long)revision;
+ (id)supportedRevisionsForType:(id)type locale:(id)locale;
+ (id)supportedRevisionsForLanguage:(id)language;
+ (id)supportedContextualWordEmbeddingRevisionsForLanguage:(id)language;
+ (id)supportedSentenceEmbeddingRevisionsForLanguage:(id)language;
+ (unsigned long long)currentRevisionForType:(id)type locale:(id)locale;
+ (unsigned long long)currentRevisionForLanguage:(id)language;
+ (unsigned long long)currentContextualWordEmbeddingRevisionForLanguage:(id)language;
+ (unsigned long long)currentSentenceEmbeddingRevisionForLanguage:(id)language;
+ (BOOL)_writeEmbeddingForDictionary:(id)dictionary language:(id)language revision:(unsigned long long)revision toURL:(id)url orData:(id)data error:(id *)error;
+ (BOOL)writeEmbeddingForDictionary:(id)dictionary language:(id)language revision:(unsigned long long)revision toURL:(id)url error:(id *)error;
+ (id)embeddingDataForDictionary:(id)dictionary language:(id)language revision:(unsigned long long)revision error:(id *)error;
+ (id)modelDescriptionForEmbedding:(id)embedding;
+ (BOOL)writeEmbeddingMLModelForDictionary:(id)dictionary language:(id)language revision:(unsigned long long)revision toURL:(id)url options:(id)options error:(id *)error;
+ (id)embeddingWithContentsOfURL:(id)url error:(id *)error;
+ (id)embeddingWithData:(id)data error:(id *)error;
+ (id)embeddingWithMLModel:(id)mlmodel error:(id *)error;
+ (id)_embeddingWithContentsOfURL:(id)url error:(id *)error;
+ (id)_embeddingWithData:(id)data error:(id *)error;
+ (BOOL)assetsAvailableForEmbeddingType:(id)type language:(id)language;
+ (void)requestAssetsForEmbeddingType:(id)type language:(id)language withCompletionHandler:(id /* block */)handler;

/* instance methods */
- (id)initWithType:(id)type architecture:(id)architecture locale:(id)locale version:(id)version;
- (id)initWithType:(id)type locale:(id)locale version:(id)version;
- (BOOL)usesUntokenizedSentences;
- (void)setUsesUntokenizedSentences:(BOOL)sentences;
- (id)initWithLocale:(struct __CFLocale *)locale;
- (id)initContextualEmbeddingWithLocale:(struct __CFLocale *)locale;
- (id)initSentenceEmbeddingWithLocale:(struct __CFLocale *)locale;
- (void *)_createEmbeddingRefWithContentsOfURL:(id)url;
- (id)_initWithContentsOfURL:(id)url error:(id *)error;
- (id)initWithContentsOfURL:(id)url error:(id *)error;
- (void *)_createEmbeddingRefWithData:(id)data;
- (id)_initWithData:(id)data error:(id *)error;
- (id)initWithData:(id)data error:(id *)error;
- (void *)_embeddingRef;
- (id)initWithNLModel:(id)nlmodel error:(id *)error;
- (id)initWithMLModel:(id)mlmodel error:(id *)error;
- (void)dealloc;
- (BOOL)containsString:(id)string;
- (double)distanceBetweenString:(id)string andString:(id)string distanceType:(long long)type;
- (void)enumerateNeighborsForString:(id)string maximumCount:(unsigned long long)count distanceType:(long long)type usingBlock:(id /* block */)block;
- (void)enumerateNeighborsForString:(id)string maximumCount:(unsigned long long)count maximumDistance:(double)distance distanceType:(long long)type usingBlock:(id /* block */)block;
- (id)neighborsForString:(id)string maximumCount:(unsigned long long)count distanceType:(long long)type;
- (id)neighborsForString:(id)string maximumCount:(unsigned long long)count maximumDistance:(double)distance distanceType:(long long)type;
- (void)enumerateNeighborsForVector:(id)vector maximumCount:(unsigned long long)count distanceType:(long long)type usingBlock:(id /* block */)block;
- (void)enumerateNeighborsForVector:(id)vector maximumCount:(unsigned long long)count maximumDistance:(double)distance distanceType:(long long)type usingBlock:(id /* block */)block;
- (id)neighborsForVector:(id)vector maximumCount:(unsigned long long)count distanceType:(long long)type;
- (id)neighborsForVector:(id)vector maximumCount:(unsigned long long)count maximumDistance:(double)distance distanceType:(long long)type;
- (id)vectorForString:(id)string;
- (BOOL)getVector:(float *)vector forString:(id)string;
- (id)vectorsForTokenizedSentences:(id)sentences maxTokens:(unsigned long long)tokens;
- (id)vectorsForUntokenizedSentences:(id)sentences maxTokens:(unsigned long long)tokens;
- (id)vectorsForTokenizedSentences:(id)sentences untokenizedSentences:(id)sentences maxTokens:(unsigned long long)tokens;
- (id)vectorsForSentences:(id)sentences maxTokens:(unsigned long long)tokens;
@end

#endif /* NLEmbedding_h */
