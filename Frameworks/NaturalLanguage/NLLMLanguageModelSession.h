//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 129.0.0.0.0
//
#ifndef NLLMLanguageModelSession_h
#define NLLMLanguageModelSession_h
@import Foundation;

#include "NLTokenIDBasedLanguageModelSession.h"
#include "NLTokenizer.h"

@interface NLLMLanguageModelSession : NLTokenIDBasedLanguageModelSession {
  /* instance variables */
  void * _model;
  NLTokenizer *_tokenizer;
}

/* instance methods */
- (id)initWithLanguageModel:(id)model options:(id)options;
- (void)dealloc;
- (id)description;
- (id)conditionalProbabilityForToken:(id)token context:(id)context;
- (id)conditionalProbabilityForString:(id)string context:(id)context;
- (void)enumeratePredictionsForContext:(id)context maximumPredictions:(unsigned long long)predictions maximumTokensPerPrediction:(unsigned long long)prediction withBlock:(id /* block */)block;
- (long long)blocklistStatusForString:(id)string matchType:(long long)type;
- (void)adaptToToken:(id)token context:(id)context;
- (void)unadaptToToken:(id)token context:(id)context;
- (id)conditionalProbabilityForTokenID:(unsigned int)id contextTokenIDs:(const unsigned int *)ids length:(unsigned long long)length;
- (void)enumeratePredictionsForContextTokenIDs:(const unsigned int *)ids length:(unsigned long long)length maximumPredictions:(unsigned long long)predictions maximumTokensPerPrediction:(unsigned long long)prediction withBlock:(id /* block */)block;
- (long long)blocklistStatusForTokenIDs:(const unsigned int *)ids length:(unsigned long long)length matchType:(long long)type;
- (void)adaptToTokenID:(unsigned int)id contextTokenIDs:(const unsigned int *)ids length:(unsigned long long)length;
- (void)unadaptToTokenID:(unsigned int)id contextTokenIDs:(const unsigned int *)ids length:(unsigned long long)length;
- (BOOL)addTokenForString:(id)string tokenID:(unsigned int *)id;
- (BOOL)getFirstDynamicTokenID:(unsigned int *)id lastDynamicTokenID:(unsigned int *)id;
- (void)recordWithDifferentialPrivacy:(id)privacy;
- (void)reset;
- (void)flushDynamicData;
- (void)applyExponentialDecay;
- (void)pruneToSize:(unsigned long long)size;
- (BOOL)shouldAdaptToTokenIDs:(const unsigned int *)ids length:(unsigned long long)length;
- (float)usageCountForTokenID:(unsigned int)id;
@end

#endif /* NLLMLanguageModelSession_h */
