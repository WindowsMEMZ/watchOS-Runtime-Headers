//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 129.0.0.0.0
//
#ifndef NLLMSLanguageModelSession_h
#define NLLMSLanguageModelSession_h
@import Foundation;

#include "NLLanguageModelSession.h"
#include "NLTokenizer.h"

@protocol {unique_ptr<language_modeling::LanguageModelSession, std::default_delete<language_modeling::LanguageModelSession>>="__ptr_"{__compressed_pair<language_modeling::LanguageModelSession *, std::default_delete<language_modeling::LanguageModelSession>>="__value_"^{LanguageModelSession}}};

@interface NLLMSLanguageModelSession : NLLanguageModelSession {
  /* instance variables */
  struct unique_ptr<language_modeling::LanguageModelSession, std::default_delete<language_modeling::LanguageModelSession>> { struct __compressed_pair<language_modeling::LanguageModelSession *, std::default_delete<language_modeling::LanguageModelSession>> { struct LanguageModelSession *__value_; } __ptr_; } _session;
  NLTokenizer *_tokenizer;
}

/* instance methods */
- (id)initWithLanguageModel:(id)model options:(id)options;
- (id)description;
- (id)conditionalProbabilityForToken:(id)token context:(id)context;
- (id)conditionalProbabilityForString:(id)string context:(id)context;
- (void)enumeratePredictionsForContext:(id)context maximumPredictions:(unsigned long long)predictions maximumTokensPerPrediction:(unsigned long long)prediction withBlock:(id /* block */)block;
- (long long)blocklistStatusForString:(id)string matchType:(long long)type;
- (void)adaptToToken:(id)token context:(id)context;
- (void)unadaptToToken:(id)token context:(id)context;
- (void)reset;
@end

#endif /* NLLMSLanguageModelSession_h */
