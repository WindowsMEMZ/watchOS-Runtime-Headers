//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 125.3.4.0.0
//
#ifndef MTRSetupPayload_h
#define MTRSetupPayload_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"

@class NSNumber, NSString;
@protocol {SetupPayload="version"C"vendorID"S"productID"S"commissioningFlow"C"rendezvousInformation"{Optional<chip::BitFlags<chip::RendezvousInformationFlag, unsigned char>>="mHasValue"B"mValue"(Value="mData"{BitFlags<chip::RendezvousInformationFlag, unsigned char>="mValue"C})}"discriminator"{SetupDiscriminator="mDiscriminator"b12"mIsShortDiscriminator"b1}"setUpPINCode"I"optionalVendorData"{map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>>="__tree_"{__tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>>="__value_"Q}}}"optionalExtensionData"{map<unsigned char, chip::OptionalQRCodeInfoExtension, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfoExtension>>>="__tree_"{__tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>>="__value_"Q}}}};

@interface MTRSetupPayload : NSObject<NSSecureCoding> {
  /* instance variables */
  struct SetupPayload { unsigned char version; unsigned short vendorID; unsigned short productID; unsigned char commissioningFlow; struct Optional<chip::BitFlags<chip::RendezvousInformationFlag, unsigned char>> { BOOL mHasValue; union Value { struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { unsigned char mValue; } mData; } mValue; } rendezvousInformation; struct SetupDiscriminator { unsigned int x :12 mDiscriminator; unsigned int x :1 mIsShortDiscriminator; } discriminator; unsigned int setUpPINCode; struct map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>> { unsigned long long __value_; } __pair3_; } __tree_; } optionalVendorData; struct map<unsigned char, chip::OptionalQRCodeInfoExtension, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfoExtension>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>> { unsigned long long __value_; } __pair3_; } __tree_; } optionalExtensionData; } _chipSetupPayload;
}

@property (copy, nonatomic) NSNumber *rendezvousInformation;
@property (copy, nonatomic) NSNumber *setUpPINCode;
@property (copy, nonatomic) NSNumber *version;
@property (copy, nonatomic) NSNumber *vendorID;
@property (copy, nonatomic) NSNumber *productID;
@property (nonatomic) unsigned long long commissioningFlow;
@property (nonatomic) unsigned long long discoveryCapabilities;
@property (copy, nonatomic) NSNumber *discriminator;
@property (nonatomic) BOOL hasShortDiscriminator;
@property (copy, nonatomic) NSNumber *setupPasscode;
@property (copy, nonatomic) NSString *serialNumber;

/* class methods */
+ (id)new;
+ (void)initialize;
+ (struct Optional<chip::BitFlags<chip::RendezvousInformationFlag, unsigned char>> { BOOL x0; union Value { struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { unsigned char x0; } x0; } x1; })convertDiscoveryCapabilities:(unsigned long long)capabilities;
+ (unsigned char)unconvertCommissioningFlow:(unsigned long long)flow;
+ (unsigned long long)generateRandomPIN;
+ (id)generateRandomSetupPasscode;
+ (BOOL)isQRCode:(id)qrcode;
+ (id)setupPayloadWithOnboardingPayload:(id)payload error:(id *)error;
+ (BOOL)supportsSecureCoding;
+ (id)_boxDiscoveryCapabilities:(unsigned long long)capabilities;
+ (unsigned long long)_unboxDiscoveryCapabilities:(id)capabilities;

/* instance methods */
- (id)init;
- (unsigned long long)convertRendezvousFlags:(const void *)flags;
- (unsigned long long)convertCommissioningFlow:(unsigned char)flow;
- (id)initWithSetupPayload:(struct SetupPayload { unsigned char x0; unsigned short x1; unsigned short x2; unsigned char x3; struct Optional<chip::BitFlags<chip::RendezvousInformationFlag, unsigned char>> { BOOL x0; union Value { struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { unsigned char x0; } x0; } x1; } x4; struct SetupDiscriminator { unsigned int x0 :12; unsigned int x1 :1; } x5; unsigned int x6; struct map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>> { unsigned long long x0; } x2; } x0; } x7; struct map<unsigned char, chip::OptionalQRCodeInfoExtension, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfoExtension>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>> { unsigned long long x0; } x2; } x0; } x8; })payload;
- (id)initWithSetupPasscode:(id)passcode discriminator:(id)discriminator;
- (void)getSerialNumber:(struct SetupPayload { unsigned char x0; unsigned short x1; unsigned short x2; unsigned char x3; struct Optional<chip::BitFlags<chip::RendezvousInformationFlag, unsigned char>> { BOOL x0; union Value { struct BitFlags<chip::RendezvousInformationFlag, unsigned char> { unsigned char x0; } x0; } x1; } x4; struct SetupDiscriminator { unsigned int x0 :12; unsigned int x1 :1; } x5; unsigned int x6; struct map<unsigned char, chip::OptionalQRCodeInfo, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfo>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfo>, std::less<unsigned char>>> { unsigned long long x0; } x2; } x0; } x7; struct map<unsigned char, chip::OptionalQRCodeInfoExtension, std::less<unsigned char>, std::allocator<std::pair<const unsigned char, chip::OptionalQRCodeInfoExtension>>> { struct __tree<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>, std::allocator<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>>> { void * x0; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void * x0; } x0; } x1; struct __compressed_pair<unsigned long, std::__map_value_compare<unsigned char, std::__value_type<unsigned char, chip::OptionalQRCodeInfoExtension>, std::less<unsigned char>>> { unsigned long long x0; } x2; } x0; } x8; })number;
- (id)getAllOptionalVendorData:(id *)data;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)manualEntryCode;
- (id)qrCodeString:(id *)string;
@end

#endif /* MTRSetupPayload_h */
