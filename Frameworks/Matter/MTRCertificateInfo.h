//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 125.3.4.0.0
//
#ifndef MTRCertificateInfo_h
#define MTRCertificateInfo_h
@import Foundation;

#include "MTRDistinguishedNameInfo.h"
#include "NSCopying-Protocol.h"

@class NSData, NSDate;
@protocol {ChipCertificateData="mCertificate"{Span<const unsigned char>="mDataBuf"*"mDataLen"Q}"mSubjectDN"{ChipDN="rdn"[5{ChipRDN="mString"{Span<const char>="mDataBuf"*"mDataLen"Q}"mChipVal"Q"mAttrOID"S"mAttrIsPrintableString"B}]}"mIssuerDN"{ChipDN="rdn"[5{ChipRDN="mString"{Span<const char>="mDataBuf"*"mDataLen"Q}"mChipVal"Q"mAttrOID"S"mAttrIsPrintableString"B}]}"mSubjectKeyId"{FixedSpan<const unsigned char, 20UL>="mDataBuf"*}"mAuthKeyId"{FixedSpan<const unsigned char, 20UL>="mDataBuf"*}"mNotBeforeTime"I"mNotAfterTime"I"mPublicKey"{FixedSpan<const unsigned char, 65UL>="mDataBuf"*}"mPubKeyCurveOID"S"mPubKeyAlgoOID"S"mSigAlgoOID"S"mCertFlags"{BitFlags<chip::Credentials::CertFlags, unsigned short>="mValue"S}"mKeyUsageFlags"{BitFlags<chip::Credentials::KeyUsageFlags, unsigned short>="mValue"S}"mKeyPurposeFlags"{BitFlags<chip::Credentials::KeyPurposeFlags, unsigned char>="mValue"C}"mPathLenConstraint"C"mSignature"{FixedSpan<const unsigned char, 64UL>="mDataBuf"*}"mTBSHash"[32C]};

@interface MTRCertificateInfo : NSObject<NSCopying> {
  /* instance variables */
  NSData *_bytes;
  struct ChipCertificateData { struct Span<const unsigned char> { char *mDataBuf; unsigned long long mDataLen; } mCertificate; struct ChipDN { struct ChipRDN { struct Span<const char> { char *mDataBuf; unsigned long long mDataLen; } mString; unsigned long long mChipVal; unsigned short mAttrOID; BOOL mAttrIsPrintableString; } x[5] rdn; } mSubjectDN; struct ChipDN { struct ChipRDN { struct Span<const char> { char *mDataBuf; unsigned long long mDataLen; } mString; unsigned long long mChipVal; unsigned short mAttrOID; BOOL mAttrIsPrintableString; } x[5] rdn; } mIssuerDN; struct FixedSpan<const unsigned char, 20UL> { char *mDataBuf; } mSubjectKeyId; struct FixedSpan<const unsigned char, 20UL> { char *mDataBuf; } mAuthKeyId; unsigned int mNotBeforeTime; unsigned int mNotAfterTime; struct FixedSpan<const unsigned char, 65UL> { char *mDataBuf; } mPublicKey; unsigned short mPubKeyCurveOID; unsigned short mPubKeyAlgoOID; unsigned short mSigAlgoOID; struct BitFlags<chip::Credentials::CertFlags, unsigned short> { unsigned short mValue; } mCertFlags; struct BitFlags<chip::Credentials::KeyUsageFlags, unsigned short> { unsigned short mValue; } mKeyUsageFlags; struct BitFlags<chip::Credentials::KeyPurposeFlags, unsigned char> { unsigned char mValue; } mKeyPurposeFlags; unsigned char mPathLenConstraint; struct FixedSpan<const unsigned char, 64UL> { char *mDataBuf; } mSignature; unsigned char x[32] mTBSHash; } _data;
}

@property (readonly) MTRDistinguishedNameInfo *issuer;
@property (readonly) MTRDistinguishedNameInfo *subject;
@property (readonly) NSDate *notBefore;
@property (readonly) NSDate *notAfter;

/* instance methods */
- (id)initWithTLVBytes:(id)tlvbytes;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
@end

#endif /* MTRCertificateInfo_h */
