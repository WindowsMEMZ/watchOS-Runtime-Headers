//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 125.3.4.0.0
//
#ifndef MTRCommissionableBrowserResultInterfaces_h
#define MTRCommissionableBrowserResultInterfaces_h
@import Foundation;

@protocol struct Optional<chip::Dnssd::CommonResolutionData> { BOOL x0; union Value { struct CommonResolutionData { struct InterfaceId { unsigned int x0; } x0; unsigned long long x1; I]} x2[5{IPAddress=[4] unsigned short x3; char x4[17] BOOL x5; struct Optional<std::chrono::duration<unsigned int, std::ratio<1, 1000>>> { BOOL x0; union Value { struct duration<unsigned int, std::ratio<1, 1000>> { unsigned int x0; } x0; } x1; } x6; struct Optional<std::chrono::duration<unsigned int, std::ratio<1, 1000>>> { BOOL x0; union Value { struct duration<unsigned int, std::ratio<1, 1000>> { unsigned int x0; } x0; } x1; } x7; struct Optional<std::chrono::duration<unsigned short, std::ratio<1, 1000>>> { BOOL x0; union Value { struct duration<unsigned short, std::ratio<1, 1000>> { unsigned short x0; } x0; } x1; } x8; } x0; } x1; }, {Optional<chip::Dnssd::CommonResolutionData>="mHasValue"B"mValue"(Value="mData"{CommonResolutionData="interfaceId"{InterfaceId="mPlatformInterface"I}"numIPs"Q"ipAddress"[5{IPAddress="Addr"[4I]}]"port"S"hostName"[17c]"supportsTcp"B"mrpRetryIntervalIdle"{Optional<std::chrono::duration<unsigned int, std::ratio<1, 1000>>>="mHasValue"B"mValue"(Value="mData"{duration<unsigned int, std::ratio<1, 1000>>="__rep_"I})}"mrpRetryIntervalActive"{Optional<std::chrono::duration<unsigned int, std::ratio<1, 1000>>>="mHasValue"B"mValue"(Value="mData"{duration<unsigned int, std::ratio<1, 1000>>="__rep_"I})}"mrpRetryActiveThreshold"{Optional<std::chrono::duration<unsigned short, std::ratio<1, 1000>>>="mHasValue"B"mValue"(Value="mData"{duration<unsigned short, std::ratio<1, 1000>>="__rep_"S})}})};

@interface MTRCommissionableBrowserResultInterfaces : NSObject

@property (nonatomic) struct Optional<chip::Dnssd::CommonResolutionData> { BOOL x0; union Value { struct CommonResolutionData { struct InterfaceId { unsigned int x0; } x0; unsigned long long x1; I]} x2[5{IPAddress=[4] unsigned short x3; char x4[17] BOOL x5; struct Optional<std::chrono::duration<unsigned int, std::ratio<1, 1000>>> { BOOL x0; union Value { struct duration<unsigned int, std::ratio<1, 1000>> { unsigned int x0; } x0; } x1; } x6; struct Optional<std::chrono::duration<unsigned int, std::ratio<1, 1000>>> { BOOL x0; union Value { struct duration<unsigned int, std::ratio<1, 1000>> { unsigned int x0; } x0; } x1; } x7; struct Optional<std::chrono::duration<unsigned short, std::ratio<1, 1000>>> { BOOL x0; union Value { struct duration<unsigned short, std::ratio<1, 1000>> { unsigned short x0; } x0; } x1; } x8; } x0; } x1; } resolutionData;

/* instance methods */
@end

#endif /* MTRCommissionableBrowserResultInterfaces_h */
