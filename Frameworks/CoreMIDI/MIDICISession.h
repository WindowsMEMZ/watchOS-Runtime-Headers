//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 301.2.1.0.0
//
#ifndef MIDICISession_h
#define MIDICISession_h
@import Foundation;

#include "MIDICIDeviceInfo.h"

@class NSArray, NSMutableArray, NSNumber;

@interface MIDICISession : NSObject {
  /* instance variables */
  unsigned int _client;
  unsigned int _destination;
  NSArray *_supportedProtocols;
  NSMutableArray *_profileStates;
  id /* block */ _sessionDisconnectCallback;
  id /* block */ _profileSpecificDataCallback;
  unsigned int _ciSessionRef;
  unsigned char _maxRequests;
}

@property (copy, nonatomic) id /* block */ propertyChangedCallback;
@property (copy, nonatomic) id /* block */ propertyResponseCallback;
@property (copy, nonatomic) id /* block */ disconnectBlock;
@property (copy, nonatomic) id /* block */ profileSpecificDataBlock;
@property (readonly, nonatomic) struct MIDICIDeviceIdentification { unsigned char x0[3] unsigned char x1[2] unsigned char x2[2] unsigned char x3[4] unsigned char x4[5] } deviceID;
@property (copy, nonatomic) id /* block */ propertyResponseCallback;
@property (copy, nonatomic) id /* block */ propertyChangedCallback;
@property (readonly, nonatomic) unsigned int entity;
@property (readonly, nonatomic) unsigned int midiDestination;
@property (readonly, nonatomic) BOOL supportsProfileCapability;
@property (readonly, nonatomic) BOOL supportsPropertyCapability;
@property (readonly, nonatomic) MIDICIDeviceInfo *deviceInfo;
@property (readonly, nonatomic) NSNumber *maxSysExSize;
@property (readonly, nonatomic) NSNumber *maxPropertyRequests;
@property (copy, nonatomic) id /* block */ profileChangedCallback;
@property (copy, nonatomic) id /* block */ profileSpecificDataHandler;

/* class methods */
+ (id)description;

/* instance methods */
- (void)hasProperty:(id)property onChannel:(unsigned char)channel responseHandler:(id /* block */)handler;
- (void)getProperty:(id)property onChannel:(unsigned char)channel responseHandler:(id /* block */)handler;
- (void)setProperty:(id)property onChannel:(unsigned char)channel responseHandler:(id /* block */)handler;
- (id)init;
- (id)initWithDiscoveredNode:(id)node dataReadyHandler:(id /* block */)handler disconnectHandler:(id /* block */)handler;
- (id)initWithMIDIEntity:(unsigned int)midientity dataReadyHandler:(id /* block */)handler;
- (id)initWithMIDIDestination:(unsigned int)mididestination dataReadyHandler:(id /* block */)handler disconnectHandler:(id /* block */)handler profileSpecificDataHandler:(id /* block */)handler;
- (id)initWithMIDIDestination:(unsigned int)mididestination dataReadyHandler:(id /* block */)handler;
- (id)description;
- (void)dealloc;
- (BOOL)isEqual:(id)equal;
- (void)handleCINotification:(const struct MIDINotification { int x0; unsigned int x1; } *)cinotification withHandler:(id /* block */)handler;
- (id)profileStateForChannel:(unsigned char)channel;
- (BOOL)enableProfile:(id)profile onChannel:(unsigned char)channel error:(id *)error;
- (BOOL)disableProfile:(id)profile onChannel:(unsigned char)channel error:(id *)error;
- (BOOL)toggleProfile:(id)profile onChannel:(unsigned char)channel enabling:(BOOL)enabling error:(id *)error;
- (BOOL)sendProfile:(id)profile onChannel:(unsigned char)channel profileData:(id)data;
- (void)addProfileState:(char *)state length:(unsigned int)length channel:(unsigned char)channel;
- (BOOL)updateProfileStateForChannel:(unsigned char)channel withProfile:(id)profile enabled:(BOOL)enabled;
@end

#endif /* MIDICISession_h */
