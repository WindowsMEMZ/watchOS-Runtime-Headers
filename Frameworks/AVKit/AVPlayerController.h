//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1088.10.0.0.0
//
#ifndef AVPlayerController_h
#define AVPlayerController_h
@import Foundation;

#include "AVObservationController.h"
#include "AVValueTiming.h"

@class AVAsset, AVAssetTrack, AVCoordinatedPlaybackSuspension, AVMediaSelectionOption, AVPlayer, AVPlayerItemPhotosensitivityMetadataHandler, BSSimpleAssertion, NSArray, NSDate, NSDictionary, NSError, NSNumber, NSString, NSTimer;
@protocol AVPlayerControllerDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface AVPlayerController : NSObject {
  /* instance variables */
  NSArray *_audioMediaSelectionOptions;
  NSArray *_legibleMediaSelectionOptions;
  AVMediaSelectionOption *_cachedSelectedAudioMediaSelectionOption;
  AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOption;
  AVMediaSelectionOption *_cachedSelectedLegibleMediaSelectionOptionAccordingToAVFoundation;
  NSString *_lastKnownPersistedExtendedLanguageTag;
  void * _observationInfo;
  BOOL _inspectionSuspended;
  id _updateAtMinMaxTimePeriodicObserverToken;
  id _timecodePeriodicObserverToken;
  BOOL _pictureInPictureInterrupted;
  BOOL _isDeallocating;
  BOOL _hasSetUpSeekableLiveStreamState;
  NSNumber *_rateToRestoreAfterAudioSessionInterruptionEnds;
  id /* block */ _retryPlayingImmediatelyBlock;
  BOOL _shouldPlayImmediately;
  BOOL _looping;
  long long _actionAtItemEnd;
  long long _playbackSuspensionCount;
  long long _scrubbingCount;
  NSObject<OS_dispatch_queue> *_seekQueue;
  BOOL _pendingSeek;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _toleranceBefore;
  struct { long long value; int timescale; unsigned int flags; long long epoch; } _toleranceAfter;
  BOOL _isScanningForward;
  BOOL _isScanningBackward;
  unsigned long long _scanningCount;
  double _preScanningRate;
  AVValueTiming *_liveStreamMinTiming;
  AVValueTiming *_liveStreamMaxTiming;
  BOOL _liveStreamEventModePossible;
  long long _canUseNetworkResourcesForLiveStreamingWhilePausedCount;
  BOOL _previousValueOfCanUseNetworkResourcesForLiveStreamingWhilePaused;
  BOOL _shouldPlayWhenLikelyToKeepUp;
  id _deviceBatteryStateDidChangeObserver;
  BOOL _deviceBatteryMonitoringWasEnabled;
  BSSimpleAssertion *_reduceResourceUsageAssertion;
  double _defaultPlaybackRate;
  NSObject<AVPlayerControllerDelegate> *_internalDelegate;
  NSObject<OS_dispatch_queue> *_backgroundQueue;
  NSDate *_lastTimePlayingOnMatchPointDeviceWasUpdated;
  NSTimer *_updatePlayingOnMatchPointDeviceThrottleTimer;
  AVPlayerItemPhotosensitivityMetadataHandler *_photosensitivityMetadataHandler;
  BOOL _muted;
  BOOL _avkitSettingMuted;
  BOOL _allowsAudioPlayback;
  BOOL _hasPendingAtLiveEdgeStateUpdate;
  NSTimer *_liveEdgeTimer;
}

@property (nonatomic) BOOL playingOnSecondScreen;
@property (readonly, nonatomic) BOOL usesExternalPlaybackWhileExternalScreenIsActive;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } maximumVideoResolution;
@property (nonatomic) BOOL handlesAudioSessionInterruptions;
@property (readonly, nonatomic) BOOL playingOnMatchPointDevice;
@property (nonatomic) BOOL atMaxTime;
@property (nonatomic) BOOL atMinTime;
@property (nonatomic) BOOL scrubbing;
@property (retain, nonatomic) AVPlayer *player;
@property (retain, nonatomic) AVPlayer *activePlayer;
@property (nonatomic) double activeRate;
@property (readonly, nonatomic) AVObservationController *observationController;
@property (nonatomic) struct CGSize { double x0; double x1; } presentationSize;
@property (retain, nonatomic) AVAsset *currentAssetIfReady;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *assetInspectionQueue;
@property (retain, nonatomic) AVAsset *assetBeingPrepared;
@property (nonatomic) BOOL pictureInPictureSupported;
@property (retain, nonatomic) NSString *externalPlaybackAirPlayDeviceLocalizedName;
@property (readonly, nonatomic) BOOL readyToPlay;
@property (retain, nonatomic) AVValueTiming *timing;
@property (retain, nonatomic) AVValueTiming *minTiming;
@property (retain, nonatomic) AVValueTiming *maxTiming;
@property (retain, nonatomic) AVAssetTrack *currentAudioTrack;
@property (retain, nonatomic) AVAssetTrack *currentVideoTrack;
@property BOOL seekingInternal;
@property (nonatomic) BOOL seeking;
@property struct { long long x0; int x1; unsigned int x2; long long x3; } seekToTimeInternal;
@property (nonatomic) double seekToTime;
@property (nonatomic) double initialScrubbingTime;
@property (retain, nonatomic) NSDictionary *metadata;
@property (retain, nonatomic) NSArray *contentChapters;
@property (nonatomic) BOOL composable;
@property (nonatomic) BOOL hasProtectedContent;
@property (retain, nonatomic) NSArray *availableMetadataFormats;
@property (nonatomic) BOOL compatibleWithAirPlayVideo;
@property (nonatomic) double rateBeforeScrubBegan;
@property (retain, nonatomic) AVCoordinatedPlaybackSuspension *scrubCoordinatorSuspension;
@property (nonatomic) BOOL preventingIdleSystemSleep;
@property (nonatomic) BOOL preventingIdleDisplaySleep;
@property (nonatomic) BOOL disablingAutomaticTermination;
@property (nonatomic) BOOL allowsPictureInPicturePlayback;
@property (nonatomic) BOOL pictureInPictureActive;
@property (nonatomic) BOOL canTogglePictureInPicture;
@property (copy, nonatomic) NSString *pipActivitySessionIdentifier;
@property (nonatomic) BOOL hasBegunInspection;
@property (nonatomic) BOOL playingOnMatchPointDevice;
@property (nonatomic) BOOL deviceBatteryChargingOrFull;
@property (readonly, nonatomic) BOOL shouldPreventIdleDisplaySleep;
@property (retain, nonatomic) NSArray *photosensitivityRegions;
@property (nonatomic) BOOL atLiveEdge;
@property (nonatomic) BOOL scanningTV;
@property (readonly, nonatomic) NSObject<OS_dispatch_source> *seekTimer;
@property (readonly, nonatomic) NSDate *currentDate;
@property (readonly, nonatomic) NSDate *currentOrEstimatedDate;
@property (nonatomic) BOOL touchBarRequiresLinearPlayback;
@property (nonatomic) BOOL shouldLoadVisualMediaSelectionOptions;
@property (readonly, @dynamic, nonatomic) NSArray *visualMediaSelectionOptions;
@property (nonatomic) long long captionAppearanceDisplayType;
@property (retain, @dynamic, nonatomic) AVMediaSelectionOption *currentVideoMediaSelectionOption;
@property (readonly, nonatomic) BOOL playbackSuspended;
@property (readonly, nonatomic) double suspendedRate;
@property (nonatomic) BOOL coordinatedPlaybackActive;
@property (readonly, nonatomic) long long status;
@property (readonly, nonatomic) NSError *error;

/* class methods */
+ (id)keyPathsForValuesAffectingUsesExternalPlaybackWhileExternalScreenIsActive;
+ (id)keyPathsForValuesAffectingMaximumVideoResolution;
+ (id)canonicalLanguageIdentifierFromString:(id)string;
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingCurrentAudioMediaSelectionOption;
+ (id)keyPathsForValuesAffectingCurrentVideoMediaSelectionOption;
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingCurrentLegibleMediaSelectionOption;
+ (id)_sortedAudibleOption:(id)option;
+ (void)initialize;
+ (BOOL)cachedIsPictureInPictureSupported;
+ (void)setCachedIsPictureInPictureSupported:(BOOL)supported;
+ (id)keyPathsForValuesAffectingpreferredTransform;
+ (id)keyPathsForValuesAffectingStatus;
+ (id)keyPathsForValuesAffectingReadyToPlay;
+ (id)keyPathsForValuesAffectingError;
+ (id)keyPathsForValuesAffectingCompletelySeekable;
+ (id)keyPathsForValuesAffectingShouldPreventIdleDisplaySleep;
+ (id)keyPathsForValuesAffectingActiveRate;
+ (id)keyPathsForValuesAffectingRate;
+ (id)keyPathsForValuesAffectingDefaultPlaybackRate;
+ (id)keyPathsForValuesAffectingCanPlay;
+ (id)keyPathsForValuesAffectingPlaying;
+ (id)keyPathsForValuesAffectingCanPause;
+ (id)keyPathsForValuesAffectingCanTogglePlayback;
+ (id)keyPathsForValuesAffectingVolume;
+ (id)keyPathsForValuesAffectingHasContent;
+ (id)keyPathsForValuesAffectingContentDuration;
+ (id)keyPathsForValuesAffectingContentDimensions;
+ (id)keyPathsForValuesAffectingCurrentTime;
+ (id)keyPathsForValuesAffectingMinTime;
+ (id)keyPathsForValuesAffectingReversePlaybackEndTime;
+ (id)keyPathsForValuesAffectingMaxTime;
+ (id)keyPathsForValuesAffectingForwardPlaybackEndTime;
+ (id)keyPathsForValuesAffectingContentDurationWithinEndTimes;
+ (id)keyPathsForValuesAffectingCurrentTimeWithinEndTimes;
+ (id)keyPathsForValuesAffectingSeekableTimeRanges;
+ (id)keyPathsForValuesAffectingLoadedTimeRanges;
+ (id)keyPathsForValuesAffectingHasEnabledAudio;
+ (id)keyPathsForValuesAffectingHasVideo;
+ (id)keyPathsForValuesAffectingHasEnabledVideo;
+ (id)keyPathsForValuesAffectingHasContentChapters;
+ (id)keyPathsForValuesAffectingStreaming;
+ (id)keyPathsForValuesAffectingPlayableOffline;
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;
+ (id)keyPathsForValuesAffectingHasSeekableLiveStreamingContent;
+ (id)keyPathsForValuesAffectingHasTrimmableContent;
+ (id)keyPathsForValuesAffectingHasShareableContent;
+ (id)keyPathsForValuesAffectingTimeControlStatus;
+ (id)keyPathsForValuesAffectingCanSeek;
+ (id)keyPathsForValuesAffectingCanScanForward;
+ (id)keyPathsForValuesAffectingCanScanBackward;
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;
+ (id)keyPathsForValuesAffectingCanSeekToEnd;
+ (id)keyPathsForValuesAffectingCanSeekFrameForward;
+ (id)keyPathsForValuesAffectingCanSeekFrameBackward;
+ (id)keyPathsForValuesAffectingCanSeekChapterForward;
+ (id)keyPathsForValuesAffectingCanSeekChapterBackward;
+ (id)keyPathsForValuesAffectingAllowsExternalPlayback;
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;
+ (id)keyPathsForValuesAffectingExternalPlaybackActive;
+ (id)keyPathsForValuesAffectingExternalPlaybackType;
+ (id)keyPathsForValuesAffectingPictureInPicturePossible;

/* instance methods */
- (BOOL)hasMediaSelectionOptions;
- (BOOL)hasAudioMediaSelectionOptions;
- (void)setLegibleMediaSelectionOptions:(id)options audioMediaSelectionOptions:(id)options assumeMediaOptionMayHaveChanged:(BOOL)changed;
- (id)audioMediaSelectionOptions;
- (void)setAudioMediaSelectionOptions:(id)options;
- (id)currentAudioMediaSelectionOption;
- (void)setCurrentAudioMediaSelectionOption:(id)option;
- (BOOL)hasLegibleMediaSelectionOptions;
- (id)legibleMediaSelectionOptions;
- (void)setLegibleMediaSelectionOptions:(id)options;
- (id)currentLegibleMediaSelectionOption;
- (void)setCurrentLegibleMediaSelectionOption:(id)option;
- (id)mediaSelectionGroupForMediaCharacteristic:(id)characteristic;
- (id)_optionsForGroup:(id)group;
- (void)selectedMediaOptionMayHaveChanged;
- (void)selectedMediaOptionMayHaveChanged:(BOOL)changed;
- (void)reloadOptions;
- (void)reloadOptionsAndCurrentSelections;
- (void)reloadOptionsAssumingMediaOptionsMayHaveChanged:(BOOL)changed;
- (void)reloadAudioOptions;
- (void)reloadLegibleOptions;
- (void)reloadVisualOptions;
- (id)visualOptions;
- (id)audioOptions;
- (id)legibleOptions;
- (void)_ensureUserCaptionDisplayType:(long long)type;
- (void)_performAutomaticMediaSelectionForUserCaptionDisplayType:(long long)type;
- (void)_disableLegibleMediaSelectionOptions:(id)options;
- (void)_enableAutoMediaSelection:(id)selection;
- (void)_setMediaOption:(id)option mediaCharacteristic:(id)characteristic;
- (id)_selectedMediaOptionWithMediaCharacteristic:(id)characteristic;
- (BOOL)_mediaSelectionCriteriaCanBeAppliedAutomaticallyToLegibleMediaSelectionGroup;
- (id)init;
- (id)initWithPlayer:(id)player;
- (void)_commonInit;
- (void)startInspectionIfNeeded;
- (void)dealloc;
- (void)startKVO;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })preferredTransform;
- (void *)observationInfo;
- (void)setObservationInfo:(void *)info;
- (id)_queuePlayer;
- (BOOL)isReadyToPlay;
- (BOOL)isCompletelySeekable;
- (void)_observeValueForKeyPath:(id)path oldValue:(id)value newValue:(id)value;
- (BOOL)isAtLiveEdge;
- (void)startUsingNetworkResourcesForLiveStreamingWhilePaused;
- (void)stopUsingNetworkResourcesForLiveStreamingWhilePaused;
- (double)rate;
- (void)_playAtRate:(double)rate;
- (void)_setRate_AVFoundationStrategy:(double)strategy;
- (void)setRate:(double)rate;
- (double)defaultPlaybackRate;
- (void)setDefaultPlaybackRate:(double)rate;
- (void)_retryPlayImmediatelyIfNeeded;
- (BOOL)canPlayImmediately;
- (BOOL)canPlay;
- (BOOL)isPlaying;
- (void)setPlaying:(BOOL)playing;
- (void)play:(id)play;
- (void)autoplay:(id)autoplay;
- (BOOL)canPause;
- (void)pause:(id)pause;
- (void)pauseForAllCoordinatedPlaybackParticipants:(BOOL)participants;
- (BOOL)canTogglePlayback;
- (void)togglePlayback:(id)playback;
- (void)togglePlaybackEvenWhenInBackground:(id)background;
- (BOOL)isLooping;
- (void)setLooping:(BOOL)looping;
- (void)updateAtMinMaxTime;
- (double)volume;
- (void)setVolume:(double)volume;
- (void)increaseVolume:(id)volume;
- (void)decreaseVolume:(id)volume;
- (void)changeVolumeToMinimum:(id)minimum;
- (void)changeVolumeToMaximum:(id)maximum;
- (BOOL)isMuted;
- (void)setMuted:(BOOL)muted;
- (BOOL)allowsAudioPlayback;
- (void)setAllowsAudioPlayback:(BOOL)playback;
- (void)toggleMuted:(id)muted;
- (BOOL)isInspectionSuspended;
- (void)setInspectionSuspended:(BOOL)suspended;
- (BOOL)hasContent;
- (double)contentDuration;
- (float)nominalFrameRate;
- (struct CGSize { double x0; double x1; })contentDimensions;
- (double)currentTime;
- (double)minTime;
- (void)setMinTime:(double)time;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })reversePlaybackEndTime;
- (void)setReversePlaybackEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (double)maxTime;
- (void)setMaxTime:(double)time;
- (struct { long long x0; int x1; unsigned int x2; long long x3; })forwardPlaybackEndTime;
- (void)setForwardPlaybackEndTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)_setMinTiming:(id)timing maxTiming:(id)timing;
- (double)contentDurationWithinEndTimes;
- (double)currentTimeWithinEndTimes;
- (id)seekableTimeRanges;
- (id)loadedTimeRanges;
- (BOOL)hasEnabledAudio;
- (BOOL)hasVideo;
- (BOOL)hasEnabledVideo;
- (BOOL)hasContentChapters;
- (BOOL)isStreaming;
- (BOOL)isPlayableOffline;
- (BOOL)hasLiveStreamingContent;
- (BOOL)hasSeekableLiveStreamingContent;
- (BOOL)hasTrimmableContent;
- (BOOL)hasShareableContent;
- (BOOL)_assetIsRestrictedFromSaving:(id)saving;
- (id)audioWaveform;
- (BOOL)_assetIsMarkedNotSerializable:(id)serializable;
- (BOOL)_assetContainsProResRaw:(id)raw;
- (void)_updateCoordinatedPlaybackActive;
- (void)_updateCurrentAudioTrackIfNeeded;
- (void)_updateCurrentVideoTrackIfNeeded;
- (id)currentEnabledAssetTrackForMediaType:(id)type;
- (long long)timeControlStatus;
- (BOOL)canSeek;
- (void)seekToTime:(double)time;
- (void)beginScrubbing;
- (void)endScrubbing;
- (void)suspendPlaybackCoordinatorWhileActivelySeekingIfNecessary;
- (void)resumePlaybackCoordinatorIfSuspended;
- (void)seekToTime:(double)time toleranceBefore:(double)before toleranceAfter:(double)after;
- (void)seekToCMTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })cmtime toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after;
- (void)throttledSeekToTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toleranceBefore:(struct { long long x0; int x1; unsigned int x2; long long x3; })before toleranceAfter:(struct { long long x0; int x1; unsigned int x2; long long x3; })after;
- (void)actuallySeekToTime;
- (void)seekByTimeInterval:(double)interval;
- (void)seekByTimeInterval:(double)interval toleranceBefore:(double)before toleranceAfter:(double)after;
- (BOOL)canScanForward;
- (void)scanForward:(id)forward;
- (void)beginScanningForward:(id)forward;
- (void)_updateScanningForwardRate;
- (void)endScanningForward:(id)forward;
- (BOOL)canScanBackward;
- (void)scanBackward:(id)backward;
- (void)beginScanningBackward:(id)backward;
- (void)_updateScanningBackwardRate;
- (void)endScanningBackward:(id)backward;
- (BOOL)canSeekToBeginning;
- (void)seekToBeginning:(id)beginning;
- (BOOL)canSeekToEnd;
- (void)seekToEnd:(id)end;
- (BOOL)canSeekFrameForward;
- (void)seekFrameForward:(id)forward;
- (BOOL)canSeekFrameBackward;
- (void)seekFrameBackward:(id)backward;
- (void)seekOrStepByFrameCount:(long long)count;
- (void)skipBackwardThirtySeconds:(id)seconds;
- (void)gotoEndOfSeekableRanges:(id)ranges;
- (void)beginScrubbing:(id)scrubbing;
- (void)endScrubbing:(id)scrubbing;
- (void)seekToChapter:(id)chapter;
- (BOOL)canSeekChapterForward;
- (void)seekChapterForward:(id)forward;
- (BOOL)canSeekChapterBackward;
- (void)seekChapterBackward:(id)backward;
- (void)updateTiming;
- (void)updateMinMaxTiming;
- (void)_updateMinMaxTimingIfNeeded;
- (BOOL)allowsExternalPlayback;
- (void)setAllowsExternalPlayback:(BOOL)playback;
- (BOOL)isPlayingOnExternalScreen;
- (BOOL)isPlayingOnSecondScreen;
- (BOOL)isExternalPlaybackActive;
- (long long)externalPlaybackType;
- (void)_updateExternalPlaybackAirPlayDeviceLocalizedNameIfNeeded;
- (BOOL)isPictureInPicturePossible;
- (BOOL)isPictureInPictureInterrupted;
- (void)setPictureInPictureInterrupted:(BOOL)interrupted;
- (void)togglePictureInPicture:(id)picture;
- (void)beginReducingResourcesForPictureInPicturePlayerLayer:(id)layer;
- (void)endReducingResourcesForPictureInPicturePlayerLayer:(id)layer;
- (BOOL)isReducingResourcesForPictureInPicture;
- (BOOL)canUseNetworkResourcesForLiveStreamingWhilePaused;
- (void)setCanUseNetworkResourcesForLiveStreamingWhilePaused:(BOOL)paused;
- (void)_scheduleAtLiveEdgeStateUpdateIfNeeded;
- (void)_scheduleAtLiveEdgeStateUpdateWithTimeInterval:(double)interval;
- (void)_setNeedsAtLiveEdgeStateUpdate;
- (void)_updateAtLiveEdgeStateAndScheduleTimerIfNeeded;
- (void)_updateAtLiveEdgeStateIfNeeded;
- (void)_cancelOutstandingAtLiveEdgeStateUpdates;
- (void)_beginPlaybackSuspension_AVFoundationStrategy;
- (void)_cancelPendingSeeksIfNeeded;
- (id)_createMetadataDictionaryForCurrentAsset;
- (void)_endPlaybackSuspension_AVFoundationStrategy;
- (void)_setPlaybackSuspended:(BOOL)suspended;
- (void)_setSuspendedRate:(double)rate;
- (void)_startSuspendingPlayback;
- (void)_stopSuspendingPlayback;
- (id)_timecodeTrack;
- (id)_outputContext;
- (void)_updateMetadata;
- (void)_updatePlayerMutedState;
- (void)_updateRateForScrubbingAndSeeking;
- (id)scanningDelays;
- (void)_prepareAssetForInspectionIfNeeded;
- (void)_setupInterstitialController;
- (void)_updateActivePlayer;
- (double)_adjustedSeekTimeFromTime:(double)time toTime:(double)time;
- (BOOL)isAtMaxTime;
- (BOOL)isAtMinTime;
- (BOOL)isScrubbing;
- (BOOL)isPictureInPictureSupported;
- (BOOL)isSeekingInternal;
- (BOOL)isSeeking;
- (BOOL)isComposable;
- (BOOL)isCompatibleWithAirPlayVideo;
- (BOOL)isPreventingIdleSystemSleep;
- (BOOL)isPreventingIdleDisplaySleep;
- (BOOL)isDisablingAutomaticTermination;
- (BOOL)isPictureInPictureActive;
- (BOOL)isPlayingOnMatchPointDevice;
- (BOOL)isDeviceBatteryChargingOrFull;
- (BOOL)_isScanningTV;
- (BOOL)isPlaybackSuspended;
@end

#endif /* AVPlayerController_h */
