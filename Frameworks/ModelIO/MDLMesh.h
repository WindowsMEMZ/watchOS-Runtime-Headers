//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 266.1.0.0.0
//
#ifndef MDLMesh_h
#define MDLMesh_h
@import Foundation;

#include "MDLObject.h"
#include "MDLMeshBufferAllocator-Protocol.h"
#include "MDLVertexDescriptor.h"

@class NSArray, NSMutableArray;

@interface MDLMesh : MDLObject {
  /* instance variables */
  struct MDLAABB { " maxBounds; m x0; int x1; in BOOL x2; out u x3; in double x4; short x5; " x6; } _bounds;
  NSArray *_controlNodes;
}

@property (nonatomic) unsigned long long subdivisionScheme;
@property (readonly, nonatomic) struct  boundingBox;
@property (copy, nonatomic) MDLVertexDescriptor *vertexDescriptor;
@property (nonatomic) unsigned long long vertexCount;
@property (retain, nonatomic) NSArray *vertexBuffers;
@property (copy, nonatomic) NSMutableArray *submeshes;
@property (readonly, retain, nonatomic) NSObject<MDLMeshBufferAllocator> *allocator;

/* class methods */
+ (id)newCylinderWithHeight:(float)height radii:(unsigned long long)radii radialSegments:(unsigned long long)segments verticalSegments:(long long)segments geometryType:(BOOL)type inwardNormals:(id)normals;
+ (id)newPlaneWithDimensions:(long long)dimensions segments:(id)segments;
+ (id)newCapsuleWithHeight:(float)height radii:(unsigned long long)radii radialSegments:(unsigned long long)segments verticalSegments:(unsigned long long)segments hemisphereSegments:(long long)segments geometryType:(BOOL)type inwardNormals:(id)normals;
+ (id)newBoxWithDimensions:(long long)dimensions segments:(BOOL)segments geometryType:(id)type;
+ (id)newIcosahedronWithRadius:(float)radius inwardNormals:(BOOL)normals geometryType:(long long)type allocator:(id)allocator;
+ (id)newIcosahedronWithRadius:(float)radius inwardNormals:(BOOL)normals allocator:(id)allocator;
+ (id)newEllipsoidWithRadii:(unsigned long long)radii radialSegments:(unsigned long long)segments verticalSegments:(long long)segments geometryType:(BOOL)type inwardNormals:(BOOL)normals hemisphere:(id)hemisphere;
+ (id)newSubdividedMesh:(id)mesh submeshIndex:(unsigned long long)index subdivisionLevels:(unsigned long long)levels;
+ (id)newEllipticalConeWithHeight:(float)height radii:(unsigned long long)radii radialSegments:(unsigned long long)segments verticalSegments:(long long)segments geometryType:(BOOL)type inwardNormals:(id)normals;

/* instance methods */
- (id)initCylinderWithExtent:(BOOL)extent segments:(BOOL)segments inwardNormals:(BOOL)normals topCap:(long long)cap bottomCap:(id)cap;
- (BOOL)generateAmbientOcclusionTextureWithSize:(long long)size raysPerSample:(float)sample attenuationFactor:(id)factor objectsToConsider:(id)consider vertexAttributeNamed:(id)named;
- (BOOL)generateAmbientOcclusionTextureWithQuality:(float)quality attenuationFactor:(float)factor objectsToConsider:(id)consider vertexAttributeNamed:(id)named materialPropertyNamed:(id)named;
- (BOOL)generateAmbientOcclusionVertexColorsWithRaysPerSample:(long long)sample attenuationFactor:(float)factor objectsToConsider:(id)consider vertexAttributeNamed:(id)named;
- (BOOL)generateAmbientOcclusionVertexColorsWithQuality:(float)quality attenuationFactor:(float)factor objectsToConsider:(id)consider vertexAttributeNamed:(id)named;
- (BOOL)generateLightMapTextureWithTextureSize:(id)size lightsToConsider:(id)consider objectsToConsider:(id)consider vertexAttributeNamed:(id)named;
- (BOOL)generateLightMapTextureWithQuality:(float)quality lightsToConsider:(id)consider objectsToConsider:(id)consider vertexAttributeNamed:(id)named materialPropertyNamed:(id)named;
- (BOOL)generateLightMapVertexColorsWithLightsToConsider:(id)consider objectsToConsider:(id)consider vertexAttributeNamed:(id)named;
- (id)controlNodeForINdex:(unsigned long long)index;
- (struct { x0[4] })inverseBasePoseForIndex:(unsigned long long)index;
- (int)submeshCount;
- (void)_enumerateSubmeshesUsingBlock:(id /* block */)block stopPointer:(BOOL *)pointer;
- (void)enumerateSubmeshesUsingBlock:(id /* block */)block;
- (void)replaceAttributeNamed:(id)named withData:(id)data;
- (void)updateAttributeNamed:(id)named withData:(id)data;
- (void)removeAttributeNamed:(id)named;
- (long long)addVertexBuffer:(id)buffer;
- (void)addAttributeWithName:(id)name format:(unsigned long long)format;
- (void)addAttributeWithName:(id)name format:(unsigned long long)format type:(id)type data:(id)data stride:(long long)stride;
- (void)addAttributeWithName:(id)name format:(unsigned long long)format type:(id)type data:(id)data stride:(long long)stride time:(double)time;
- (void)_calculateTangentBasisFromPositions:(float *)positions positionStride:(long long)stride positionsBufferSize:(unsigned long long)size normals:(float *)normals normalStride:(long long)stride normalsBufferSize:(unsigned long long)size uvs:(float *)uvs uvStride:(long long)stride uvsBufferSize:(unsigned long long)size tangents:(float *)tangents tangentsStride:(long long)stride tangentsBufferSize:(unsigned long long)size bitagents:(float *)bitagents bitangentStride:(long long)stride bitangentsBufferSize:(unsigned long long)size tangentFormat:(unsigned long long)format selector:(SEL)selector;
- (void)addTangentBasisForTextureCoordinateAttributeNamed:(id)named tangentAttributeNamed:(id)named bitangentAttributeNamed:(id)named;
- (void)addTangentBasisForTextureCoordinateAttributeNamed:(id)named normalAttributeNamed:(id)named tangentAttributeNamed:(id)named;
- (void)addOrthTanBasisForTextureCoordinateAttributeNamed:(id)named normalAttributeNamed:(id)named tangentAttributeNamed:(id)named;
- (void)_calculateFaceNormalsFromPositions:(float *)positions positionStride:(long long)stride normals:(float *)normals normalStride:(long long)stride creaseThreshold:(float)threshold;
- (BOOL)triangulate;
- (void)addNormalsWithAttributeNamed:(id)named creaseThreshold:(float)threshold;
- (void)addUnwrappedTextureCoordinatesForAttributeNamed:(id)named;
- (void)flipTextureCoordinatesInAttributeNamed:(id)named;
- (void)makeVerticesUnique;
- (id)description;
- (BOOL)makeVerticesUniqueAndReturnError:(id *)error;
- (id)initPlaneWithExtent:(long long)extent segments:(id)segments;
- (id)initCapsuleWithExtent:(unsigned long long)extent cylinderSegments:(BOOL)segments hemisphereSegments:(long long)segments inwardNormals:(id)normals;
- (id)initBoxWithExtent:(BOOL)extent segments:(long long)segments inwardNormals:(id)normals;
- (id)initIcosahedronWithExtent:(BOOL)extent inwardNormals:(long long)normals geometryType:(id)type;
- (id)initSphereWithExtent:(BOOL)extent segments:(long long)segments inwardNormals:(id)normals;
- (id)initHemisphereWithExtent:(BOOL)extent segments:(BOOL)segments inwardNormals:(long long)normals cap:(id)cap;
- (id)initMeshBySubdividingMesh:(id)mesh submeshIndex:(int)index subdivisionLevels:(unsigned int)levels allocator:(id)allocator;
- (id)initConeWithExtent:(BOOL)extent segments:(BOOL)segments inwardNormals:(long long)normals cap:(id)cap;
- (void)debugPrintToFile:(struct __sFILE { char * x0; int x1; int x2; short x3; short x4; struct __sbuf { char * x0; int x1; } x5; int x6; void * x7; undefined * x8; undefined * x9; undefined * x10; undefined * x11; struct __sbuf { char * x0; int x1; } x12; struct __sFILEX * x13; int x14; unsigned char x15[3] unsigned char x16[1] struct __sbuf { char * x0; int x1; } x17; int x18; long long x19; } *)file;
- (id)initWithBufferAllocator:(id)allocator;
- (void)_createWithVertexBuffer:(id)buffer vertexCount:(unsigned long long)count descriptor:(id)descriptor submeshes:(id)submeshes;
- (id)initWithVertexBuffer:(id)buffer vertexCount:(unsigned long long)count descriptor:(id)descriptor submeshes:(id)submeshes;
- (id)initWithVertexBuffers:(id)buffers vertexCount:(unsigned long long)count descriptor:(id)descriptor submeshes:(id)submeshes;
- (id)vertexAttributeDataForAttributeNamed:(id)named;
- (void)createSourceDataVector:(void *)vector attr:(id)attr srcElementCount:(int)count dstElementCount:(int)count;
- (void)copyDataVector:(void *)vector toAttr:(id)attr;
- (id)vertexAttributeDataForAttributeNamed:(id)named asFormat:(unsigned long long)format;
@end

#endif /* MDLMesh_h */
