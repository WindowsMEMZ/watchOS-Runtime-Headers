//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 266.1.0.0.0
//
#ifndef MDLMaterial_h
#define MDLMaterial_h
@import Foundation;

#include "MDLMaterial.h"
#include "MDLNamed-Protocol.h"
#include "MDLScatteringFunction.h"
#include "NSFastEnumeration-Protocol.h"

@class NSMutableArray, NSString;

@interface MDLMaterial : NSObject<MDLNamed, NSFastEnumeration> {
  /* instance variables */
  NSMutableArray *_userProperties;
  NSMutableArray *_builtinProperties;
}

@property (readonly, retain, nonatomic) MDLScatteringFunction *scatteringFunction;
@property (copy, nonatomic) NSString *name;
@property (retain, nonatomic) MDLMaterial *baseMaterial;
@property (readonly, nonatomic) unsigned long long count;
@property (nonatomic) unsigned long long materialFace;

/* class methods */
+ (id)decodeMaterialWithCoder:(id)coder allocator:(id)allocator;

/* instance methods */
- (void)resolveTexturesWithResolver:(id)resolver;
- (void)loadTexturesUsingArchiveAssetResolver:(id)resolver cache:(id)cache;
- (void)loadTexturesUsingResolver:(id)resolver cache:(id)cache;
- (void)loadTexturesUsingResolver:(id)resolver;
- (id)init;
- (id)initWithName:(id)name scatteringFunction:(id)function;
- (id)initWithName:(id)name physicallyPlausibleBSDF:(struct PhysicallyPlausibleDistribution { undefined * * x0; struct BSDFMaterialValues { struct CGColor * x0; float x1; struct CGColor * x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } x1; } *)bsdf;
- (void)conformToMatProperties;
- (id)propertyNamed:(id)named;
- (id)propertyWithSemantic:(unsigned long long)semantic;
- (id)propertiesWithSemantic:(unsigned long long)semantic;
- (void)setProperty:(id)property;
- (void)removeProperty:(id)property;
- (void)removeAllProperties;
- (struct BidirectionalScatteringDistributionFunction { undefined * * x0; struct BSDFMaterialValues { struct CGColor * x0; float x1; struct CGColor * x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } x1; } *)bsdf;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
- (id)objectAtIndexedSubscript:(unsigned long long)subscript;
- (id)objectForKeyedSubscript:(id)subscript;
- (void)encodeMaterialWithCoder:(id)coder allocator:(id)allocator;
@end

#endif /* MDLMaterial_h */
