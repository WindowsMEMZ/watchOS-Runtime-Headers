//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 266.1.0.0.0
//
#ifndef MDLTexture_h
#define MDLTexture_h
@import Foundation;

#include "MDLNamed-Protocol.h"

@class NSString;

@interface MDLTexture : NSObject<MDLNamed> {
  /* instance variables */
  struct MDLTextureData { char * x[16] topLeftBytesForMip; char * x[16] bottomLeftBytesForMip; int channelCount; " dimensions; const out wchar_t x0; unsigned short x1; int128 x2; const int x3; double x4; e x5; int Q; short x6; unsigned char x7; u x8; unsigned int x9 :0; e x10; " x11; BOOL x12; } _textureData;
  NSData * _topLeftOriginData[14];
  NSData * _bottomLeftOriginData[14];
  BOOL _selfCreating;
  BOOL _alphaValuesSet;
}

@property (readonly, nonatomic)  dimensions;
@property (readonly, nonatomic) long long rowStride;
@property (readonly, nonatomic) unsigned long long channelCount;
@property (readonly, nonatomic) unsigned long long mipLevelCount;
@property (readonly, nonatomic) long long channelEncoding;
@property (nonatomic) BOOL isCube;
@property (nonatomic) BOOL hasAlphaValues;
@property (copy, nonatomic) NSString *name;

/* class methods */
+ (id)_textureCubeWithSingleImageNamed:(id)named bundle:(id)bundle;
+ (id)textureWithURL:(id)url;
+ (id)textureWithURL:(id)url offset:(unsigned long long)offset size:(unsigned long long)size;
+ (id)textureWithData:(id)data offset:(unsigned long long)offset size:(unsigned long long)size;
+ (id)textureResourceNamed:(id)named assetResolver:(id)resolver;
+ (id)textureNamed:(id)named assetResolver:(id)resolver;
+ (id)textureFromResource:(id)resource;
+ (id)textureNamed:(id)named bundle:(id)bundle;
+ (id)textureNamed:(id)named;
+ (id)textureCubeWithImagesNamed:(id)named bundle:(id)bundle;
+ (id)textureCubeWithImagesNamed:(id)named;
+ (id)irradianceTextureCubeWithTexture:(id)texture name:(id)name;
+ (id)irradianceTextureCubeWithTexture:(id)texture name:(id)name dimensions:(float)dimensions;

/* instance methods */
- (void)clearTexelData;
- (struct MDLTextureData { char * x0[16] char * x1[16] int x2; unsigned long long x3; BOOL x4; } *)textureData;
- (id)allocateDataAtLevel:(long long)level;
- (id)generateDataAtLevel:(long long)level selector:(SEL)selector;
- (id)init;
- (id)initWithData:(id)data topLeftOrigin:(BOOL)origin name:(id)name dimensions:(long long)dimensions rowStride:(unsigned long long)stride channelCount:(long long)count channelEncoding:(BOOL)encoding;
- (void)loadDataWithTopLeftOriginAtMipLevel:(long long)level create:(BOOL)create selector:(SEL)selector;
- (void)loadDataWithBottomLeftOriginAtMipLevel:(long long)level create:(BOOL)create selector:(SEL)selector;
- (id)texelDataWithTopLeftOrigin;
- (id)texelDataWithTopLeftOrigin:(unsigned long long)origin;
- (id)texelDataWithBottomLeftOrigin;
- (id)texelDataWithTopLeftOriginAtMipLevel:(long long)level create:(BOOL)create;
- (id)texelDataWithBottomLeftOriginAtMipLevel:(long long)level create:(BOOL)create;
- (void)setTexelDataWithBottomLeftOrigin:(id)origin atMipLevel:(long long)level;
- (void)setTexelDataWithTopLeftOrigin:(id)origin atMipLevel:(long long)level;
- (BOOL)writeToURL:(id)url;
- (BOOL)writeToURL:(id)url level:(unsigned long long)level;
- (BOOL)writeToURL:(id)url type:(struct __CFString *)type;
- (BOOL)writeToURL:(id)url type:(struct __CFString *)type level:(unsigned long long)level;
- (struct CGImage *)imageFromTexture;
- (struct CGImage *)imageFromTextureAtLevel:(unsigned long long)level;
@end

#endif /* MDLTexture_h */
