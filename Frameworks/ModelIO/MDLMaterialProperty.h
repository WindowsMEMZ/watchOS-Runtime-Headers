//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 266.1.0.0.0
//
#ifndef MDLMaterialProperty_h
#define MDLMaterialProperty_h
@import Foundation;

#include "MDLBufferView.h"
#include "MDLMaterialProperty.h"
#include "MDLMaterialPropertyNode.h"
#include "MDLNamed-Protocol.h"
#include "MDLTextureSampler.h"
#include "NSCopying-Protocol.h"

@class NSString, NSURL;

@interface MDLMaterialProperty : NSObject<MDLNamed, NSCopying> {
  /* instance variables */
  NSString *_string;
  NSURL *_url;
  MDLTextureSampler *_textureSampler;
   _float;
  struct { x[4] columns; } _matrix;
  MDLBufferView *_buffer;
  MDLMaterialPropertyNode *_node;
  MDLMaterialProperty *_overrider;
  MDLMaterialProperty *_overridee;
}

@property (nonatomic) BOOL isDefaultValue;
@property (readonly, nonatomic) MDLBufferView *bufferData;
@property (readonly, nonatomic) unsigned long long stride;
@property (nonatomic) unsigned long long semantic;
@property (nonatomic) unsigned long long type;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *stringValue;
@property (copy, nonatomic) NSURL *URLValue;
@property (retain, nonatomic) MDLTextureSampler *textureSamplerValue;
@property (nonatomic) struct CGColor * color;
@property (nonatomic) float floatValue;
@property (nonatomic)  float2Value;
@property (nonatomic)  float3Value;
@property (nonatomic)  float4Value;
@property (nonatomic) struct { x0[4] } matrix4x4;
@property (nonatomic) float luminance;

/* class methods */
+ (3)_decodeVectorWithCoder:(id)coder forKey:(id)key;
+ (struct { x0[4] })_decodeMatrixPropertyWithCoder:(id)coder forKey:(id)key;
+ (id)decodeMaterialPropertyWithCoder:(id)coder forKey:(id)key allocator:(id)allocator;

/* instance methods */
- (void)clear;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic float:(float)float;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic matrix4x4:(struct { x0[4] })matrix4x4;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic URL:(id)url;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic string:(id)string;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic textureSampler:(id)sampler;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic;
- (id)initWithName:(id)name semantic:(unsigned long long)semantic color:(struct CGColor *)color;
- (id)initWithName:(id)name buffer:(id)buffer stride:(unsigned long long)stride;
- (id)initWithName:(id)name buffer:(id)buffer;
- (void)dealloc;
- (void)setProperties:(id)properties;
- (void)setMatrix4x4Value:(struct { x0[4] })value;
- (void)_encodeVector:(id)vector withCoder:(id)coder;
- (void)_encodeMatrixPropertyWithCoder:(id)coder forKey:(id)key;
- (void)encodeMaterialPropertyWithCoder:(id)coder forKey:(id)key allocator:(id)allocator;
@end

#endif /* MDLMaterialProperty_h */
