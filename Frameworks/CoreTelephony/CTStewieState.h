//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 11207.0.0.0.0
//
#ifndef CTStewieState_h
#define CTStewieState_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@interface CTStewieState : NSObject<NSCopying, NSSecureCoding>

@property (nonatomic) long long allowedServices;
@property (nonatomic) long long activeServices;
@property (nonatomic) long long subscriptionDeterminedServices;
@property (nonatomic) long long subscribedServices;
@property (nonatomic) long long congestedServices;
@property (nonatomic) long long offGridCriteriaSatisfiedServices;
@property (nonatomic) long long configuredForLocationServices;
@property (nonatomic) long long status;
@property (nonatomic) long long reason;
@property (nonatomic) long long baseReason;
@property (nonatomic) long long transportType;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithStewieState:(const struct StewieState { unsigned short x0; unsigned short x1; unsigned short x2; unsigned short x3; unsigned short x4; unsigned short x5; unsigned short x6; unsigned char x7; unsigned char x8; unsigned char x9; } *)state;
- (id)description;
- (BOOL)isEqualToState:(id)state;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (BOOL)displayStewieInStatusBar;
- (BOOL)displayInactiveSOSInStatusBar;
- (BOOL)isStewieActive;
- (BOOL)isStewieActiveOverBB;
- (BOOL)isStewieActiveOverInternet;
- (BOOL)isAllowedService:(long long)service;
- (BOOL)isActiveService:(long long)service;
- (BOOL)isSubscriptionRequired:(long long)required;
- (BOOL)isSubscribedService:(long long)service;
- (BOOL)isSubscriptionStatusNetworkDetermined:(long long)determined;
- (BOOL)isCongestedService:(long long)service;
- (BOOL)isOffGridCriteriaSatisfied:(long long)satisfied;
- (BOOL)isConfiguredForLocation:(long long)location;
- (long long)statusReasonForService:(long long)service;
@end

#endif /* CTStewieState_h */
