//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 11207.0.0.0.0
//
#ifndef CoreTelephonyClient_h
#define CoreTelephonyClient_h
@import Foundation;

#include "CoreTelephonyClientMux.h"

@class BOOL *;

@interface CoreTelephonyClient : NSObject {
  /* instance variables */
  id fDelegateAddr;
  unsigned long long fOsStateHandle;
}

@property (@dynamic) void * fDataAssertion;
@property (nonatomic) struct queue { struct object { struct dispatch_object_s * x0; } x0; } userQueue;
@property (retain, nonatomic) CoreTelephonyClientMux *mux;
@property (weak, nonatomic) id delegate;

/* class methods */
+ (id)sharedMultiplexer;

/* instance methods */
- (void)setEosStatus:(id)status assertionState:(id)state completion:(id /* block */)completion;
- (void)getEosStatus:(id /* block */)status;
- (void)getEOSFirmwareUpdateInfo:(id /* block */)info;
- (id)supportsHydraWithError:(id *)error;
- (id)usingBootstrapDataService:(id *)service;
- (void)addPlanWith:(id)with request:(id)request appName:(id)name completionHandler:(id /* block */)handler;
- (void)addPlanWith:(id)with appName:(id)name appType:(unsigned long long)type completionHandler:(id /* block */)handler;
- (void)addPlanWith:(id)with completionHandler:(id /* block */)handler;
- (BOOL)supportsPlanProvisioning:(id)provisioning carrierDescriptors:(id)descriptors smdpUrl:(id)url iccidPrefix:(id)prefix;
- (void)getCameraScanInfoForCardData:(id)data completionHandler:(id /* block */)handler;
- (void)getTransferPlanListWithCompletion:(id /* block */)completion;
- (void)getTransferPlansWithCompletion:(id /* block */)completion;
- (void)hiddenTransferPlans:(id /* block */)plans;
- (void)hideTransferPlan:(id)plan fromDevice:(id)device completion:(id /* block */)completion;
- (void)hideTransferCellularPlan:(id)plan fromDevice:(id)device completion:(id /* block */)completion;
- (void)unhideTransferPlan:(id)plan completion:(id /* block */)completion;
- (void)transferPlan:(id)plan fromDevice:(id)device completionHandler:(id /* block */)handler;
- (void)transferCellularPlan:(id)plan fromDevice:(id)device completionHandler:(id /* block */)handler;
- (void)transferPlans:(id)plans fromDevice:(id)device completionHandler:(id /* block */)handler;
- (void)transferCellularPlans:(id)plans fromDevice:(id)device completionHandler:(id /* block */)handler;
- (void)cancelCellularPlanTransfer:(id)transfer fromDevice:(id)device completionHandler:(id /* block */)handler;
- (id)updateSecureIntentData:(id)data;
- (void)disableRejectedIccid:(id /* block */)iccid;
- (void)convertPhysicalToeSIMWithCompletionHandler:(id /* block */)handler;
- (void)getPlanTransferCredentials:(id)credentials completion:(id /* block */)completion;
- (void)getTransferType:(id)type remoteEid:(id)eid completion:(id /* block */)completion;
- (void)deleteTransferPlansForImei:(id)imei completion:(id /* block */)completion;
- (void)deleteZone:(id)zone completion:(id /* block */)completion;
- (void)plansPendingInstallWithCompletion:(id /* block */)completion;
- (void)installPendingPlan:(id)plan completion:(id /* block */)completion;
- (void)installPendingPlanList:(id)list completion:(id /* block */)completion;
- (void)getRemoteDevices:(id /* block */)devices;
- (void)getDeviceInfo:(id /* block */)info;
- (void)submitSimSetupUsage:(id)usage completion:(id /* block */)completion;
- (void)getCarrierSetupWithCompletion:(id /* block */)completion;
- (void)websheetInfoForPlan:(id)plan completion:(id /* block */)completion;
- (void)websheetInfoForPlan:(id)plan inBuddy:(BOOL)buddy completion:(id /* block */)completion;
- (void)websheetInfoForIccid:(id)iccid completion:(id /* block */)completion;
- (void)encryptDataForPlan:(id)plan data:(id)data completion:(id /* block */)completion;
- (void)encryptDataWithCarrierIdentifiers:(id)identifiers mnc:(id)mnc gid1:(id)gid1 gid2:(id)gid2 data:(id)data completion:(id /* block */)completion;
- (void)submitCarrierSetupUserCancelEvent:(id /* block */)event;
- (id)needToLaunchSetUpeSIM:(id *)sim;
- (void)registerSetUpeSIMLaunchedEvent:(id /* block */)event;
- (void)setUpeSIMLaunched:(id /* block */)simlaunched;
- (void)submitPlanSetupDetails:(id)details completion:(id /* block */)completion;
- (void)plansPendingCrossPlatformTransferWithCompletion:(id /* block */)completion;
- (id)shouldShoweSIMTravelTip:(id *)tip;
- (void)retrieveAppListURLWithCompletion:(id /* block */)completion;
- (void)copyPriVersion:(id)version completion:(id /* block */)completion;
- (id)getActivationPolicyState:(id *)state;
- (id)isFactoryDebugEnabled:(id *)enabled;
- (id)fetchBasebandTicket:(BOOL)ticket withError:(id *)error;
- (void)selectPhonebook:(id)phonebook forPhonebookName:(int)name withPassword:(id)password completion:(id /* block */)completion;
- (void)savePhonebookEntry:(id)entry atIndex:(int)index withContactName:(id)name contactNumber:(id)number completion:(id /* block */)completion;
- (void)fetchPhonebook:(id)phonebook completion:(id /* block */)completion;
- (void)getPhonebookEntryWithCompletion:(id)completion atIndex:(int)index completion:(id /* block */)completion;
- (id)getPhonebookEntry:(id)entry atIndex:(int)index error:(id *)error;
- (void)getPhonebookEntryCountWithCompletion:(id)completion completion:(id /* block */)completion;
- (int)getPhonebookEntryCount:(id)count error:(id *)error;
- (void)getPhoneNumberWithCompletion:(id)completion completion:(id /* block */)completion;
- (id)getPhoneNumber:(id)number error:(id *)error;
- (struct { BOOL x0; BOOL x1; })reliableNetworkFallback:(id)fallback error:(id *)error;
- (id)setReliableNetworkFallback:(id)fallback enable:(BOOL)enable;
- (BOOL)saveDataMode:(id)mode error:(id *)error;
- (BOOL)lowDataMode:(id)mode error:(id *)error;
- (id)setSaveDataMode:(id)mode enable:(BOOL)enable;
- (id)setLowDataMode:(id)mode enable:(BOOL)enable;
- (BOOL)isSmartDataModeSupported:(id *)supported;
- (BOOL)smartDataMode:(id)mode error:(id *)error;
- (id)setSmartDataMode:(id)mode enable:(BOOL)enable;
- (BOOL)isHighDataModeSupported:(id)supported error:(id *)error;
- (BOOL)interfaceCostExpensive:(id)expensive error:(id *)error;
- (id)setInterfaceCost:(id)cost expensive:(BOOL)expensive;
- (BOOL)overriddenInterfaceCostInexpensive:(id *)inexpensive;
- (id)setOverriddenInterfaceCostInexpensive:(BOOL)inexpensive;
- (id)setPrivacyProxyState:(id)state enabled:(BOOL)enabled;
- (struct { BOOL x0; BOOL x1; })getPrivacyProxyState:(id)state error:(id *)error;
- (void)getVoicemailInfo:(id)info completion:(id /* block */)completion;
- (id)setVisualVoicemailState:(id)state subscribed:(BOOL)subscribed;
- (void)fetchCallWaitingValue:(id)value callClass:(int)class completion:(id /* block */)completion;
- (id)fetchCallWaitingValue:(id)value callClass:(int)class;
- (void)fetchCallForwardingValue:(id)value reason:(int)reason callClass:(int)class completion:(id /* block */)completion;
- (id)fetchCallForwardingValue:(id)value reason:(int)reason callClass:(int)class;
- (void)fetchCallBarringValue:(id)value facility:(int)facility callClass:(int)class password:(id)password completion:(id /* block */)completion;
- (id)fetchCallBarringValue:(id)value facility:(int)facility callClass:(int)class password:(id)password;
- (void)fetchConnectedLinePresentationValue:(id)value completion:(id /* block */)completion;
- (id)fetchConnectedLinePresentationValue:(id)value;
- (void)fetchCallingLinePresentationValue:(id)value completion:(id /* block */)completion;
- (id)fetchCallingLinePresentationValue:(id)value;
- (void)fetchConnectedLineIdRestrictionValue:(id)value completion:(id /* block */)completion;
- (id)fetchConnectedLineIdRestrictionValue:(id)value;
- (void)fetchCallingLineIdRestrictionValue:(id)value completion:(id /* block */)completion;
- (id)fetchCallingLineIdRestrictionValue:(id)value;
- (void)saveCallWaitingValue:(id)value callClass:(int)class enabled:(BOOL)enabled completion:(id /* block */)completion;
- (id)saveCallWaitingValue:(id)value callClass:(int)class enabled:(BOOL)enabled;
- (void)saveCallForwardingValue:(id)value value:(id)value completion:(id /* block */)completion;
- (id)saveCallForwardingValue:(id)value value:(id)value;
- (void)isUnconditionalCallForwardingActive:(id)active completion:(id /* block */)completion;
- (void)saveCallBarringValue:(id)value facility:(int)facility callClass:(int)class enabled:(BOOL)enabled password:(id)password completion:(id /* block */)completion;
- (id)saveCallBarringValue:(id)value facility:(int)facility callClass:(int)class enabled:(BOOL)enabled password:(id)password;
- (void)saveCallingLineIdRestrictionValue:(id)value restrictionValue:(int)value completion:(id /* block */)completion;
- (id)saveCallingLineIdRestrictionValue:(id)value restrictionValue:(int)value;
- (id)isVinylTapeSupportedWithError:(id *)error;
- (void)isVinylTestModeEnabledWithCompletion:(id /* block */)completion;
- (void)setVinylTestMode:(BOOL)mode completion:(id /* block */)completion;
- (void)setVirtualSimMode:(BOOL)mode completion:(id /* block */)completion;
- (id)setPrefForKey:(id)key heirarchy:(id)heirarchy value:(id)value storage:(id)storage;
- (void)setPrefForKey:(id)key heirarchy:(id)heirarchy value:(id)value storage:(id)storage completion:(id /* block */)completion;
- (id)getPrefForKey:(id)key heirarchy:(id)heirarchy storage:(id)storage error:(id *)error;
- (void)getPrefForKey:(id)key heirarchy:(id)heirarchy storage:(id)storage completion:(id /* block */)completion;
- (id)terminateProcess;
- (void)terminateProcess:(id /* block */)process;
- (id)getRadioPersonality:(id)personality error:(id *)error;
- (void)getRadioPersonality:(id)personality completion:(id /* block */)completion;
- (BOOL)requestBootstrapDataService:(id *)service;
- (BOOL)releaseBootstrapDataService:(id *)service;
- (BOOL)isAnyPlanTransferableFromThisDeviceOrError:(id *)error;
- (id)bootstrapPlanTransferForEndpoint:(unsigned long long)endpoint;
- (id)bootstrapPlanTransferForEndpoint:(unsigned long long)endpoint usingMessageSession:(id)session;
- (void)bootstrapPlanTransferForEndpoint:(unsigned long long)endpoint usingMessageSession:(id)session completion:(id /* block */)completion;
- (void)isAnyPlanOfTransferCapability:(unsigned long long)capability availableForThisDeviceWithCompletion:(id /* block */)completion;
- (id)endPlanTransferForEndPoint:(unsigned long long)point;
- (void)cancelCellularPlanTransfer:(id)transfer fromDevice:(id)device keepCache:(BOOL)cache completionHandler:(id /* block */)handler;
- (void)getProximityTransportSession:(unsigned long long)session remoteDeviceInfo:(id)info completion:(id /* block */)completion;
- (void)activateProximityTransfer:(unsigned long long)transfer completion:(id /* block */)completion;
- (void)invalidateProximityTransfer:(unsigned long long)transfer force:(BOOL)force completion:(id /* block */)completion;
- (void)validateProximityTransfer:(unsigned long long)transfer pin:(id)pin completion:(id /* block */)completion;
- (void)resetProximityTransportExtension:(id /* block */)extension;
- (void)prepareCrossPlatformPlanTransfer:(id)transfer completion:(id /* block */)completion;
- (void)invalidateCrossPlatformPlanTransfer:(id /* block */)transfer;
- (void)carrierOneTimeCodeSendersWithCompletion:(id /* block */)completion;
- (id)getStewieSupport:(id *)support;
- (void)getStewieSupportWithCompletion:(id /* block */)completion;
- (void)requestStewieWithContext:(id)context completion:(id /* block */)completion;
- (void)exitStewieWithContext:(id)context completion:(id /* block */)completion;
- (void)getConnectionAssistantConfig:(id /* block */)config;
- (id)getConnectionAssistantConfigWithError:(id *)error;
- (void)getConnectionAssistantState:(id /* block */)state;
- (id)getConnectionAssistantStateWithError:(id *)error;
- (void)getConnectionAssistantServicePlot:(id /* block */)plot;
- (id)getConnectionAssistantServicePlotWithError:(id *)error;
- (void)setStewieBlocked:(BOOL)blocked completion:(id /* block */)completion;
- (id)setStewieBlocked:(BOOL)blocked;
- (void)reportStewieDeviceOrientation:(id)orientation completion:(id /* block */)completion;
- (id)reportStewieDeviceOrientation:(id)orientation;
- (void)compressWithStewieCodec:(id)codec completion:(id /* block */)completion;
- (void)activateStewieEmergencyTryOutWithCompletion:(id /* block */)completion;
- (void)reportStewieConnectionAssistantEvent:(id)event completion:(id /* block */)completion;
- (id)reportStewieConnectionAssistantEvent:(id)event;
- (void)testStewieCommand:(id)command completion:(id /* block */)completion;
- (id)fetchRoadsideProvidersWithContext:(id)context error:(id *)error;
- (void)fetchRoadsideProvidersWithContext:(id)context completion:(id /* block */)completion;
- (id)selectRoadsideProviderWithContext:(id)context error:(id *)error;
- (void)selectRoadsideProviderWithContext:(id)context completion:(id /* block */)completion;
- (id)getResumableRoadsideProvider:(id *)provider;
- (void)getResumableRoadsideProviderWithCompletion:(id /* block */)completion;
- (void)setUIConfiguredApns:(id)apns apns:(id)apns completion:(id /* block */)completion;
- (void)getUIConfiguredApns:(id)apns completion:(id /* block */)completion;
- (id)getUIConfiguredApns:(id)apns error:(id *)error;
- (void)resetUIConfiguredApns:(id)apns completion:(id /* block */)completion;
- (void)getConfiguredApns:(id)apns completion:(id /* block */)completion;
- (id)getConfiguredApns:(id)apns error:(id *)error;
- (unsigned long long)getGSMAUIControlSetting:(id)setting error:(id *)error;
- (id)loadGSMASettings:(id)gsmasettings state:(BOOL)state;
- (void)deletePersonalWallet:(id)wallet completion:(id /* block */)completion;
- (id)deletePersonalWallet:(id)wallet;
- (id)listPersonalWallets:(id *)wallets;
- (id)renamePersonalWallet:(id)wallet to:(id)to;
- (id)transferPersonalWallet:(id)wallet to:(id)to;
- (void)getLocalPolicies:(id)policies completion:(id /* block */)completion;
- (id)getLocalPolicies:(id)policies error:(id *)error;
- (void)getRemotePolicies:(id)policies completion:(id /* block */)completion;
- (void)setLocalPolicies:(id)policies completion:(id /* block */)completion;
- (id)setLocalPolicies:(id)policies;
- (void)setRemotePolicies:(id)policies completion:(id /* block */)completion;
- (void)removePoliciesFromLocalDevice:(id)device completion:(id /* block */)completion;
- (void)performNetworkAccessFlowIfAllowed:(id)allowed ignoreForeground:(BOOL)foreground completion:(id /* block */)completion;
- (void)copyRegistrationStatus:(id)status completion:(id /* block */)completion;
- (id)copyRegistrationStatus:(id)status error:(id *)error;
- (void)copyRegistrationDisplayStatus:(id)status completion:(id /* block */)completion;
- (id)copyRegistrationDisplayStatus:(id)status error:(id *)error;
- (void)copyServingPlmn:(id)plmn completion:(id /* block */)completion;
- (id)copyServingPlmn:(id)plmn error:(id *)error;
- (void)copyMobileCountryCode:(id)code completion:(id /* block */)completion;
- (id)copyMobileCountryCode:(id)code error:(id *)error;
- (void)copyLastKnownMobileCountryCode:(id)code completion:(id /* block */)completion;
- (id)copyLastKnownMobileCountryCode:(id)code error:(id *)error;
- (void)copyMobileNetworkCode:(id)code completion:(id /* block */)completion;
- (id)copyMobileNetworkCode:(id)code error:(id *)error;
- (void)copyIsInHomeCountry:(id)country completion:(id /* block */)completion;
- (id)copyIsInHomeCountry:(id)country error:(id *)error;
- (void)copyIsDataAttached:(id)attached completion:(id /* block */)completion;
- (void)copyOperatorName:(id)name completion:(id /* block */)completion;
- (id)getOperatorName:(id)name error:(id *)error;
- (void)copyLocalizedOperatorName:(id)name completion:(id /* block */)completion;
- (id)getLocalizedOperatorName:(id)name error:(id *)error;
- (id)getNRDisableStatus:(id)status error:(id *)error;
- (id)getNRStatus:(id)nrstatus error:(id *)error;
- (id)getSupports5GStandalone:(id)gstandalone error:(id *)error;
- (id)setSupports5GStandalone:(id)gstandalone enabled:(BOOL)enabled;
- (void)copyRadioAccessTechnology:(id)technology completion:(id /* block */)completion;
- (id)copyRadioAccessTechnology:(id)technology error:(id *)error;
- (void)copyWirelessTechnology:(id)technology completion:(id /* block */)completion;
- (void)copyAbbreviatedOperatorName:(id)name completion:(id /* block */)completion;
- (void)getRatSelection:(id)selection completion:(id /* block */)completion;
- (id)getRatSelectionMask:(id)mask error:(id *)error;
- (void)setRatSelection:(id)selection selection:(id)selection preferred:(id)preferred completion:(id /* block */)completion;
- (id)setRatSelectionMask:(id)mask selection:(unsigned char)selection preferred:(unsigned char)preferred;
- (void)copyBandInfo:(id)info completion:(id /* block */)completion;
- (void)setBandInfo:(id)info bands:(id)bands completion:(id /* block */)completion;
- (id)getBandInfo:(id)info error:(id *)error;
- (void)setActiveBandInfo:(id)info bands:(id)bands error:(id *)error;
- (void)getSignalStrengthInfo:(id)info completion:(id /* block */)completion;
- (id)getSignalStrengthInfo:(id)info error:(id *)error;
- (void)getVoiceLinkQualityMetric:(id)metric completion:(id /* block */)completion;
- (void)getEnhancedVoiceLinkQualityMetric:(id)metric completion:(id /* block */)completion;
- (void)copyRejectCauseCode:(id)code completion:(id /* block */)completion;
- (id)getRejectCauseCode:(id)code error:(id *)error;
- (void)copyRegistrationAgentStatus:(id)status completion:(id /* block */)completion;
- (void)getIMSRegistrationStatus:(id)status completion:(id /* block */)completion;
- (id)getIMSRegistrationStatus:(id)status error:(id *)error;
- (void)copyRegistrationIMSTransportInfo:(id)info completion:(id /* block */)completion;
- (void)setMaxDataRate:(id)rate rate:(long long)rate completion:(id /* block */)completion;
- (id)setMaxDataRate:(id)rate rate:(long long)rate;
- (void)getMaxDataRate:(id)rate completion:(id /* block */)completion;
- (long long)getMaxDataRate:(id)rate error:(id *)error;
- (void)getSupportedDataRates:(id)rates completion:(id /* block */)completion;
- (id)getSupportedDataRates:(id)rates error:(id *)error;
- (void)fetchNetworkList:(id)list completion:(id /* block */)completion;
- (void)copyNetworkList:(id)list completion:(id /* block */)completion;
- (void)automaticallySelectNetwork:(id)network completion:(id /* block */)completion;
- (void)selectNetwork:(id)network network:(id)network completion:(id /* block */)completion;
- (void)copyNetworkSelection:(id)selection completion:(id /* block */)completion;
- (void)isNetworkSelectionMenuAvailable:(id)available completion:(id /* block */)completion;
- (id)isNetworkSelectionMenuAvailable:(id)available error:(id *)error;
- (void)copyNetworkSelectionMode:(id)mode completion:(id /* block */)completion;
- (void)copyNetworkSelectionState:(id)state completion:(id /* block */)completion;
- (void)copyNetworkSelectionInfo:(id)info completion:(id /* block */)completion;
- (id)copyNetworkSelectionInfo:(id)info error:(id *)error;
- (void)isNetworkReselectionNeeded:(id)needed completion:(id /* block */)completion;
- (id)getEncryptionStatus:(id)status error:(id *)error;
- (id)getSignalStrengthMeasurements:(id)measurements error:(id *)error;
- (void)getSignalStrengthMeasurements:(id)measurements completion:(id /* block */)completion;
- (id)getDataMode:(id)mode error:(id *)error;
- (id)getPublicSignalStrength:(id)strength error:(id *)error;
- (id)getCurrentRat:(id)rat error:(id *)error;
- (void)context:(id)context canSetCapability:(id)capability completion:(id /* block */)completion;
- (id)context:(id)context canSetCapability:(id)capability allowed:(BOOL *)allowed with:(id *)with;
- (void)context:(id)context getCapability:(id)capability completion:(id /* block */)completion;
- (id)context:(id)context getCapability:(id)capability status:(BOOL *)status with:(id *)with;
- (void)context:(id)context setCapability:(id)capability enabled:(BOOL)enabled with:(id)with completion:(id /* block */)completion;
- (id)context:(id)context setCapability:(id)capability enabled:(BOOL)enabled with:(id)with;
- (void)context:(id)context getSystemCapabilitiesWithCompletion:(id /* block */)completion;
- (id)context:(id)context getSystemCapabilities:(id *)capabilities;
- (id)getSupports5G:(id)g error:(id *)error;
- (id)context:(id)context recheckPhoneServicesAccountStatus:(id)status;
- (void)getPhoneServicesDeviceListWithCompletion:(id /* block */)completion;
- (id)getPhoneServicesDeviceList:(id *)list;
- (void)getPhoneServicesDeviceInfoWithCompletion:(id /* block */)completion;
- (id)getPhoneServicesDeviceInfo:(id *)info;
- (void)context:(id)context addPhoneServicesDevice:(id)device withCompletion:(id /* block */)completion;
- (id)context:(id)context addPhoneServicesDevice:(id)device;
- (void)context:(id)context removePhoneServicesDevice:(id)device withCompletion:(id /* block */)completion;
- (id)context:(id)context removePhoneServicesDevice:(id)device;
- (id)wifiCallingCTFollowUpComplete:(id)complete;
- (id)context:(id)context mandatoryDisableVoLTE:(BOOL)lte;
- (BOOL)context:(id)context isMandatoryDisabledVoLTE:(id *)lte;
- (void)isPNRSupported:(id)pnrsupported completion:(id /* block */)completion;
- (BOOL)isPNRSupported:(id)pnrsupported outError:(id *)error;
- (void)issuePNRRequest:(id)pnrrequest pnrReqType:(id)type completion:(id /* block */)completion;
- (void)getPNRContext:(id)pnrcontext completion:(id /* block */)completion;
- (id)getPNRContext:(id)pnrcontext outError:(id *)error;
- (BOOL)isPhoneNumberCredentialValid:(id)valid outError:(id *)error;
- (void)context:(id)context getPhoneNumberSignatureWithCompletion:(id /* block */)completion;
- (id)context:(id)context getPhoneNumberSignature:(id *)signature;
- (void)sendTaggedInfo:(id)info type:(unsigned long long)type payload:(id)payload completion:(id /* block */)completion;
- (id)getTransportKeysToUpdate:(id *)update;
- (void)getTransportKeysToUpdateWithCompletion:(id /* block */)completion;
- (id)setTransportKeysUpdated:(BOOL)updated with:(id)with;
- (id)forceRollAllTransportKeys;
- (BOOL)hasDedicatedBearerSupport;
- (id)addDedicatedBearer:(id)bearer error:(id *)error;
- (id)removeDedicatedBearer:(id)bearer;
- (id)removeAllDedicatedBearers;
- (BOOL)isDedicatedBearerPresent:(id)present error:(id *)error;
- (id)getListOfPresentDedicatedBearers;
- (id)getQoSLinkCharacteristics:(id *)characteristics;
- (id)requestQoSLinkCharacteristics;
- (id)getRemoteDevicesOfType:(unsigned long long)type error:(id *)error;
- (id)getRemoteDevicesForTransferOrError:(id *)error;
- (id)getRemoteDeviceOfType:(unsigned long long)type withEID:(id)eid error:(id *)error;
- (id)getRemoteDeviceForTransferWithEID:(id)eid error:(id *)error;
- (void)transferRemotePlan:(id)plan fromDevice:(id)device completion:(id /* block */)completion;
- (void)getRemotePlanManageAccountInfoFor:(id)for completion:(id /* block */)completion;
- (void)remotePlanSignupInfoFor:(id)for userConsent:(long long)consent completion:(id /* block */)completion;
- (void)isPrivateNetworkSIM:(id)sim completion:(id /* block */)completion;
- (BOOL)isPrivateNetworkSIM:(id)sim error:(id *)error;
- (BOOL)isPrivateNetworkEvaluationNeeded:(id *)needed;
- (void)isPrivateNetworkPreferredOverWifi:(id)wifi completion:(id /* block */)completion;
- (BOOL)updateGeofenceProfile:(id)profile;
- (BOOL)removeGeofenceProfile;
- (void)deleteHiddenSims:(id /* block */)sims;
- (void)getSweetgumCapabilities:(id)capabilities completion:(id /* block */)completion;
- (void)getSweetgumUserConsentInfo:(id)info completion:(id /* block */)completion;
- (void)setSweetgumUserConsent:(id)consent userConsent:(BOOL)consent completion:(id /* block */)completion;
- (void)getSweetgumUsage:(id)usage completion:(id /* block */)completion;
- (void)refreshSweetgumUsage:(id)usage completion:(id /* block */)completion;
- (void)getSweetgumPlans:(id)plans completion:(id /* block */)completion;
- (void)refreshSweetgumPlans:(id)plans completion:(id /* block */)completion;
- (void)getSweetgumApps:(id)apps completion:(id /* block */)completion;
- (void)refreshSweetgumApps:(id)apps completion:(id /* block */)completion;
- (void)refreshSweetgumAll:(id)all completion:(id /* block */)completion;
- (void)getSweetgumDataPlanMetrics:(id)metrics completion:(id /* block */)completion;
- (void)purchaseSweetgumPlan:(id)plan completion:(id /* block */)completion;
- (void)getSIMStatus:(id)simstatus completion:(id /* block */)completion;
- (id)getSIMStatus:(id)simstatus error:(id *)error;
- (void)getSIMTrayStatus:(id /* block */)status;
- (id)getSIMTrayStatusOrError:(id *)error;
- (id)isEmbeddedSIMOnlyConfig:(id *)config;
- (void)copyMobileEquipmentInfo:(id /* block */)info;
- (id)getMobileEquipmentInfo:(id *)info;
- (id)getMobileEquipmentInfoFor:(id)for error:(id *)error;
- (id)getTypeAllocationCode:(id)code error:(id *)error;
- (void)copyFirmwareUpdateInfo:(id /* block */)info;
- (void)copySIMIdentity:(id)simidentity completion:(id /* block */)completion;
- (id)copySIMIdentity:(id)simidentity error:(id *)error;
- (void)copyMobileSubscriberIdentity:(id)identity completion:(id /* block */)completion;
- (id)copyMobileSubscriberIdentity:(id)identity error:(id *)error;
- (BOOL)context:(id)context isProtectedIdentitySupported:(id)supported error:(id *)error;
- (void)context:(id)context isProtectedIdentitySupported:(id)supported completion:(id /* block */)completion;
- (void)context:(id)context supportedIdentityProtectionFor:(id)for completion:(id /* block */)completion;
- (long long)context:(id)context supportedIdentityProtectionFor:(id)for error:(id *)error;
- (void)createEncryptedIdentity:(id)identity identity:(id)identity completion:(id /* block */)completion;
- (void)context:(id)context getPseudoIdentityFor:(id)for completion:(id /* block */)completion;
- (id)context:(id)context getPseudoIdentityFor:(id)for error:(id *)error;
- (id)context:(id)context getEncryptedIdentity:(id)identity error:(id *)error;
- (void)evaluateMobileSubscriberIdentity:(id)identity identity:(id)identity completion:(id /* block */)completion;
- (id)context:(id)context evaluateMobileSubscriberIdentity:(id)identity;
- (void)copyMobileSubscriberCountryCode:(id)code completion:(id /* block */)completion;
- (id)copyMobileSubscriberCountryCode:(id)code error:(id *)error;
- (id)copyMobileSubscriberIsoCountryCode:(id)code error:(id *)error;
- (id)copyMobileSubscriberIsoSubregionCode:(id)code MNC:(id)mnc error:(id *)error;
- (id)getSimHardwareInfo:(id)info error:(id *)error;
- (long long)isEsimFor:(id)for error:(id *)error;
- (void)getMobileSubscriberHomeCountryList:(id)list completion:(id /* block */)completion;
- (id)getMobileSubscriberHomeCountryList:(id)list error:(id *)error;
- (void)copyLastKnownMobileSubscriberCountryCode:(id)code completion:(id /* block */)completion;
- (id)copyLastKnownMobileSubscriberCountryCode:(id)code error:(id *)error;
- (void)copyMobileSubscriberNetworkCode:(id)code completion:(id /* block */)completion;
- (id)copyMobileSubscriberNetworkCode:(id)code error:(id *)error;
- (void)copyGid1:(id)gid1 completion:(id /* block */)completion;
- (id)copyGid1:(id)gid1 error:(id *)error;
- (void)copyGid2:(id)gid2 completion:(id /* block */)completion;
- (id)copyGid2:(id)gid2 error:(id *)error;
- (id)shouldAllowSimLockFor:(id)for;
- (id)shouldAllowSimLockFor:(id)for error:(id *)error;
- (void)fetchSIMLockValue:(id)value completion:(id /* block */)completion;
- (id)fetchSIMLockValue:(id)value error:(id *)error;
- (void)saveSIMLockValue:(id)value enabled:(BOOL)enabled pin:(id)pin completion:(id /* block */)completion;
- (void)saveSIMLockValue:(id)value enabled:(BOOL)enabled pin:(id)pin error:(id *)error;
- (void)unlockPIN:(id)pin pin:(id)pin completion:(id /* block */)completion;
- (void)unlockPIN:(id)pin pin:(id)pin error:(id *)error;
- (void)unlockPUK:(id)puk puk:(id)puk newPin:(id)pin completion:(id /* block */)completion;
- (void)unlockPUK:(id)puk puk:(id)puk newPin:(id)pin error:(id *)error;
- (void)changePIN:(id)pin oldPin:(id)pin newPin:(id)pin completion:(id /* block */)completion;
- (void)changePIN:(id)pin oldPin:(id)pin newPin:(id)pin error:(id *)error;
- (void)getRemainingPINAttemptCount:(id)count completion:(id /* block */)completion;
- (id)getRemainingPINAttemptCount:(id)count error:(id *)error;
- (void)getRemainingPUKAttemptCount:(id)count completion:(id /* block */)completion;
- (id)getRemainingPUKAttemptCount:(id)count error:(id *)error;
- (void)getSimLabel:(id)label completion:(id /* block */)completion;
- (id)getSimLabel:(id)label error:(id *)error;
- (void)getShortLabel:(id)label completion:(id /* block */)completion;
- (id)getShortLabel:(id)label error:(id *)error;
- (void)getSubscriptionUserFacingName:(id)name completion:(id /* block */)completion;
- (id)getSubscriptionUserFacingName:(id)name error:(id *)error;
- (void)copyLabel:(id)label completion:(id /* block */)completion;
- (id)copyLabel:(id)label error:(id *)error;
- (void)setLabel:(id)label label:(id)label completion:(id /* block */)completion;
- (void)setLabel:(id)label label:(id)label error:(id *)error;
- (void)setDefaultVoice:(id)voice completion:(id /* block */)completion;
- (void)setDefaultVoice:(id)voice error:(id *)error;
- (void)setActiveUserDataSelection:(id)selection completion:(id /* block */)completion;
- (void)setActiveUserDataSelection:(id)selection error:(id *)error;
- (void)generateAuthenticationInfoUsingSim:(id)sim authParams:(id)params completion:(id /* block */)completion;
- (void)promptForSIMUnlock:(id)simunlock completion:(id /* block */)completion;
- (void)SIMUnlockProcedureDidComplete;
- (void)authenticate:(id)authenticate request:(id)request completion:(id /* block */)completion;
- (id)getUserAuthToken:(id)token error:(id *)error;
- (void)refreshUserAuthToken:(id)token error:(id *)error;
- (id)getUserDefaultVoiceSubscriptionContext:(id *)context;
- (id)getLastKnownSimDeactivationInfoFor:(id)for error:(id *)error;
- (id)copyMobileSubscriberIso3CountryCode:(id)code MNC:(id)mnc error:(id *)error;
- (id)checkEmbeddedSimHealthWithError:(id *)error;
- (BOOL)supportsEmbeddedSIM;
- (id)copyMccOrPlmnsListForIso3CountryCode:(id)code error:(id *)error;
- (id)isAnySimReadyWithError:(id *)error;
- (id)isSimMatching:(id)matching carrierDescriptors:(id)descriptors error:(id *)error;
- (id)getSIMToolkitMenu:(id)menu menu:(id *)menu;
- (id)selectSIMToolkitMenuItem:(id)item index:(id)index;
- (id)getSIMToolkitListItems:(id)items items:(id *)items;
- (id)selectSIMToolkitListItem:(id)item session:(id)session response:(id)response index:(id)index;
- (id)sendSIMToolkitResponse:(id)response session:(id)session response:(id)response;
- (id)sendSIMToolkitStringResponse:(id)response session:(id)session response:(id)response string:(id)string;
- (id)sendSIMToolkitBooleanResponse:(id)response session:(id)session response:(id)response yesNo:(BOOL)no;
- (id)sendSIMToolkitUserActivity:(id)activity;
- (id)sendSIMToolkitDisplayReady:(id)ready;
- (id)getSIMToolkitUSSDString:(id)ussdstring ussdString:(id *)string needRsp:(BOOL *)rsp;
- (id)sendSIMToolkitUSSDResponse:(id)ussdresponse response:(id)response;
- (id)cancelSIMToolkitUSSDSession:(id)ussdsession;
- (void)setVoLTEAudioCodec:(id)codec codecInfo:(id)info completion:(id /* block */)completion;
- (void)checkRadioBootHealth:(id /* block */)health;
- (id)getBasebandRadioFrequencyFrontEndScanData:(id *)data;
- (void)copyCarrierBundleValue:(id)value key:(id)key bundleType:(id)type completion:(id /* block */)completion;
- (id)copyCarrierBundleValue:(id)value key:(id)key bundleType:(id)type error:(id *)error;
- (void)copyCarrierBundleValue:(id)value keyHierarchy:(id)hierarchy bundleType:(id)type completion:(id /* block */)completion;
- (id)copyCarrierBundleValue:(id)value keyHierarchy:(id)hierarchy bundleType:(id)type error:(id *)error;
- (void)copyCarrierBundleValues:(id)values keys:(id)keys defaultValues:(id)values bundleType:(id)type withFallbackBundleCheck:(BOOL)check completion:(id /* block */)completion;
- (id)copyCarrierBundleValues:(id)values keys:(id)keys defaultValues:(id)values bundleType:(id)type withFallbackBundleCheck:(BOOL)check error:(id *)error;
- (void)copyCarrierBundleValues:(id)values keyHierarchies:(id)hierarchies defaultValues:(id)values bundleType:(id)type withFallbackBundleCheck:(BOOL)check completion:(id /* block */)completion;
- (id)copyCarrierBundleValues:(id)values keyHierarchies:(id)hierarchies defaultValues:(id)values bundleType:(id)type withFallbackBundleCheck:(BOOL)check error:(id *)error;
- (void)copyCarrierBundleValueWithDefault:(id)default key:(id)key bundleType:(id)type completion:(id /* block */)completion;
- (id)copyCarrierBundleValueWithDefault:(id)default key:(id)key bundleType:(id)type error:(id *)error;
- (void)copyCarrierBundleValueWithDefault:(id)default keyHierarchy:(id)hierarchy bundleType:(id)type completion:(id /* block */)completion;
- (id)copyCarrierBundleValueWithDefault:(id)default keyHierarchy:(id)hierarchy bundleType:(id)type error:(id *)error;
- (id)copyCarrierBundleValueWithCountryBundleLookup:(id)lookup keyHierarchy:(id)hierarchy matchingInfo:(id)info error:(id *)error;
- (id)context:(id)context getCarrierBundleValue:(id)value error:(id *)error;
- (void)context:(id)context getCarrierBundleValue:(id)value completion:(id /* block */)completion;
- (void)copyCarrierBundleLocation:(id)location completion:(id /* block */)completion;
- (id)copyCarrierBundleLocation:(id)location error:(id *)error;
- (void)copyCarrierBookmarks:(id)bookmarks completion:(id /* block */)completion;
- (void)copyCarrierBundleVersion:(id)version completion:(id /* block */)completion;
- (id)copyCarrierBundleVersion:(id)version error:(id *)error;
- (void)isAttachApnSettingAllowed:(id)allowed completion:(id /* block */)completion;
- (BOOL)isAttachApnSettingAllowed:(id)allowed error:(id *)error;
- (id)context:(id)context modifyAttachApnSettings:(id)settings;
- (void)context:(id)context modifyAttachApnSettings:(id)settings completion:(id /* block */)completion;
- (id)context:(id)context getAttachApnSettings:(id *)settings;
- (void)copyBundleVersion:(id)version bundleType:(id)type completion:(id /* block */)completion;
- (id)copyBundleVersion:(id)version bundleType:(id)type error:(id *)error;
- (void)copyBundleIdentifier:(id)identifier bundleType:(id)type completion:(id /* block */)completion;
- (id)copyBundleIdentifier:(id)identifier bundleType:(id)type error:(id *)error;
- (BOOL)restoreToSystemBundles:(id *)bundles;
- (id)getCountryBundleLocationForBundleIdentifier:(id)identifier error:(id *)error;
- (id)getCountryBundleIdentifierForCountryCode:(id)code error:(id *)error;
- (id)getEnglishCarrierNameFor:(id)for error:(id *)error;
- (void)copyBundleLocation:(id)location bundleType:(id)type completion:(id /* block */)completion;
- (id)copyBundleLocation:(id)location bundleType:(id)type error:(id *)error;
- (void)checkForUpdatedBundlesWithAutoInstall:(BOOL)install completion:(id /* block */)completion;
- (id)getCountryBundleLocationForMatchingInfo:(id)info error:(id *)error;
- (BOOL)supportsSelector:(SEL)selector withContext:(id)context error:(id *)error;
- (void)dataUsageForLastPeriods:(unsigned long long)periods completion:(id /* block */)completion;
- (void)dataUsageForLastPeriodsOnActivePairedDevice:(unsigned long long)device completion:(id /* block */)completion;
- (id)billingCycleEndDatesForLastPeriods:(unsigned long long)periods error:(id *)error;
- (void)usageCollectionEnabled:(id /* block */)enabled;
- (id)usageCollectionEnabledSync:(id *)sync;
- (void)setUsageCollectionEnabled:(BOOL)enabled completion:(id /* block */)completion;
- (void)userEnteredMonthlyBudget:(id)budget completion:(id /* block */)completion;
- (id)userEnteredMonthlyBudget:(id)budget error:(id *)error;
- (void)setUserEntered:(id)entered monthlyBudget:(id)budget completion:(id /* block */)completion;
- (void)setUserEntered:(id)entered monthlyBudget:(id)budget error:(id *)error;
- (void)clearUserEnteredMonthlyBudget:(id)budget completion:(id /* block */)completion;
- (void)clearUserEnteredMonthlyBudget:(id)budget error:(id *)error;
- (void)userEnteredMonthlyRoamingBudget:(id)budget completion:(id /* block */)completion;
- (id)userEnteredMonthlyRoamingBudget:(id)budget error:(id *)error;
- (void)setUserEntered:(id)entered monthlyRoamingBudget:(id)budget completion:(id /* block */)completion;
- (void)setUserEntered:(id)entered monthlyRoamingBudget:(id)budget error:(id *)error;
- (void)clearUserEnteredMonthlyRoamingBudget:(id)budget completion:(id /* block */)completion;
- (void)clearUserEnteredMonthlyRoamingBudget:(id)budget error:(id *)error;
- (void)userEnteredBillingEndDayOfMont:(id)mont completion:(id /* block */)completion;
- (id)userEnteredBillingEndDayOfMont:(id)mont error:(id *)error;
- (void)setUserEnteredBillingEnd:(id)end dayOfMonth:(id)month completion:(id /* block */)completion;
- (void)setUserEnteredBillingEnd:(id)end dayOfMonth:(id)month error:(id *)error;
- (void)clearUserEnteredBillingEndDayOfMonth:(id)month completion:(id /* block */)completion;
- (void)clearUserEnteredBillingEndDayOfMonth:(id)month error:(id *)error;
- (id)getCellularUsageWorkspaceInfo:(id *)info;
- (void)getSmsReadyState:(id)state completion:(id /* block */)completion;
- (id)getSmsReadyState:(id)state error:(id *)error;
- (void)getSmscAddress:(id)address completion:(id /* block */)completion;
- (id)getSmscAddress:(id)address error:(id *)error;
- (void)getEmergencyTextNumbers:(id)numbers completion:(id /* block */)completion;
- (id)getEmergencyTextNumbers:(id)numbers error:(id *)error;
- (void)isEmergencyNumber:(id)number number:(id)number completion:(id /* block */)completion;
- (BOOL)isEmergencyNumber:(id)number number:(id)number error:(id *)error;
- (void)isEmergencyNumberWithWhitelistIncluded:(id)included number:(id)number completion:(id /* block */)completion;
- (BOOL)isEmergencyNumberWithWhitelistIncluded:(id)included number:(id)number error:(id *)error;
- (void)shouldShowUserWarningWhenDialingCallOnContext:(id)context completion:(id /* block */)completion;
- (BOOL)shouldShowUserWarningWhenDialingCallOnContext:(id)context error:(id *)error;
- (id)shouldShowBrandedCallingInfo:(id *)info;
- (id)setShouldShowBrandedCallingInfo:(BOOL)info;
- (void)getCallCapabilities:(id)capabilities completion:(id /* block */)completion;
- (id)getCallCapabilities:(id)capabilities error:(id *)error;
- (void)getOperatorMultiPartyCallCountMaximum:(id)maximum completion:(id /* block */)completion;
- (id)getOperatorMultiPartyCallCountMaximum:(id)maximum error:(id *)error;
- (void)refreshCellMonitor:(id)monitor completion:(id /* block */)completion;
- (void)copyCellInfo:(id)info completion:(id /* block */)completion;
- (void)copyCellId:(id)id completion:(id /* block */)completion;
- (id)copyPublicCellId:(id)id error:(id *)error;
- (void)copyLocationAreaCode:(id)code completion:(id /* block */)completion;
- (void)copyEmergencyMode:(id /* block */)mode;
- (id)copyEmergencyModeWithError:(id *)error;
- (void)getAllEmergencyNumbers:(id /* block */)numbers;
- (id)getAllEmergencyNumbersWithError:(id *)error;
- (void)setWiFiCallingSettingPreferences:(id)preferences key:(id)key value:(id)value completion:(id /* block */)completion;
- (void)getWiFiCallingSettingPreferences:(id)preferences key:(id)key completion:(id /* block */)completion;
- (id)getWiFiCallingSettingPreferences:(id)preferences key:(id)key error:(id *)error;
- (id)setWiFiCallingSettingPreferences:(id)preferences key:(id)key value:(id)value;
- (void)setPacketContextActiveByServiceType:(id)type connectionType:(int)type active:(BOOL)active completion:(id /* block */)completion;
- (id)setPacketContextActiveByServiceType:(id)type connectionType:(int)type active:(BOOL)active;
- (void)setInternetActive:(BOOL)active completion:(id /* block */)completion;
- (id)setInternetActive:(BOOL)active;
- (void)setTetheringActive:(BOOL)active completion:(id /* block */)completion;
- (id)setTetheringActive:(BOOL)active;
- (void)resetAPNSettings:(id /* block */)apnsettings;
- (id)resetAPNSettings;
- (void)addLowLatencyFilter:(id)filter pdp:(int)pdp queueSetId:(unsigned long long)id uplink:(BOOL)uplink completion:(id /* block */)completion;
- (void)getLowLatencyFilters:(int)filters queueSetId:(unsigned long long)id completion:(id /* block */)completion;
- (void)deleteLowLatencyFilter:(id)filter pdp:(int)pdp queueSetId:(unsigned long long)id uplink:(BOOL)uplink completion:(id /* block */)completion;
- (void)sendDeadPeerDetection:(id /* block */)detection;
- (id)sendDeadPeerDetection;
- (void)setInternationalDataAccessStatus:(BOOL)status completion:(id /* block */)completion;
- (id)setInternationalDataAccessStatus:(BOOL)status;
- (void)setInternationalDataAccess:(id)access status:(BOOL)status completion:(id /* block */)completion;
- (id)setInternationalDataAccessSync:(id)sync status:(BOOL)status;
- (void)getInternationalDataAccessStatus:(id /* block */)status;
- (BOOL)getInternationalDataAccessStatusSync:(id *)sync;
- (void)getInternationalDataAccess:(id)access completion:(id /* block */)completion;
- (BOOL)getInternationalDataAccessSync:(id)sync error:(id *)error;
- (void)setSupportDynamicDataSimSwitchOnBBCall:(BOOL)bbcall completion:(id /* block */)completion;
- (void)setSupportDynamicDataSimSwitch:(BOOL)switch completion:(id /* block */)completion;
- (void)setSupportDynamicDataSimSwitch:(BOOL)switch forIccid:(id)iccid completion:(id /* block */)completion;
- (id)setSupportDynamicDataSimSwitchOnBBCall:(BOOL)bbcall;
- (id)setSupportDynamicDataSimSwitch:(BOOL)switch;
- (void)getSupportDynamicDataSimSwitchOnBBCall:(id /* block */)bbcall;
- (void)getSupportDynamicDataSimSwitch:(id /* block */)switch;
- (BOOL)getSupportDynamicDataSimSwitchOnBBCallSync:(id *)sync;
- (BOOL)getSupportDynamicDataSimSwitchSync:(id *)sync;
- (id)getPacketContextCount:(unsigned int *)count;
- (void)getConnectionAvailability:(id)availability connectionType:(int)type completion:(id /* block */)completion;
- (id)getConnectionAvailability:(id)availability connectionType:(int)type error:(id *)error;
- (void)getInternetConnectionAvailability:(id /* block */)availability;
- (id)getInternetConnectionAvailabilitySync:(id *)sync;
- (void)getActiveConnections:(id)connections completion:(id /* block */)completion;
- (id)getActiveConnections:(id)connections error:(id *)error;
- (void)getConnectionState:(id)state connectionType:(int)type completion:(id /* block */)completion;
- (id)getConnectionState:(id)state connectionType:(int)type error:(id *)error;
- (id)getSliceTrafficDescriptorsInfo:(id)info connectionType:(int)type error:(id *)error;
- (id)getSliceTrafficDescriptors:(id *)descriptors;
- (void)getInternetConnectionState:(id /* block */)state;
- (id)getInternetConnectionStateSync:(id *)sync;
- (void)getDataStatus:(id)status completion:(id /* block */)completion;
- (id)getDataStatus:(id)status error:(id *)error;
- (void)getDataStatusBasic:(id)basic completion:(id /* block */)completion;
- (id)getDataStatusBasic:(id)basic error:(id *)error;
- (void)getInternetDataStatus:(id /* block */)status;
- (id)getInternetDataStatusSync:(id *)sync;
- (void)getInternetDataStatusBasic:(id /* block */)basic;
- (id)getInternetDataStatusBasicSync:(id *)sync;
- (void)getPublicDataBearer:(id /* block */)bearer;
- (int)getPublicDataBearerSync:(id *)sync;
- (void)getPublicNrFrequencyRange:(id /* block */)range;
- (unsigned int)getPublicNrFrequencyRangeSync:(id *)sync;
- (void)getNATTKeepAliveOverCell:(id)cell completion:(id /* block */)completion;
- (unsigned int)getNATTKeepAliveOverCell:(id)cell error:(id *)error;
- (unsigned int)getNATTKeepAliveOverCell:(id *)cell;
- (unsigned int)getNATTKeepAliveOverCellForPreferredDataContext:(id *)context;
- (BOOL)isTetheringEditingSupported:(id)supported error:(id *)error;
- (void)isTetheringEditingSupported:(id)supported completion:(id /* block */)completion;
- (void)getAnbrActivationState:(id)state completion:(id /* block */)completion;
- (void)queryAnbrBitrate:(id)bitrate bitrate:(id)bitrate direction:(int)direction completion:(id /* block */)completion;
- (void)setCoalescing:(BOOL)coalescing udp:(BOOL)udp completion:(id /* block */)completion;
- (void)simulateDataStall:(BOOL)stall pdp:(int)pdp completion:(id /* block */)completion;
- (void)getCurrentDataSubscriptionContext:(id /* block */)context;
- (void)getCurrentDataServiceDescriptor:(id /* block */)descriptor;
- (id)getCurrentDataSubscriptionContextSync:(id *)sync;
- (id)getCurrentDataServiceDescriptorSync:(id *)sync;
- (void)getPreferredDataSubscriptionContext:(id /* block */)context;
- (void)getPreferredDataServiceDescriptor:(id /* block */)descriptor;
- (id)getPreferredDataSubscriptionContextSync:(id *)sync;
- (id)getPreferredDataServiceDescriptorSync:(id *)sync;
- (void)getTetheringStatus:(id /* block */)status;
- (void)getTetheringStatus:(id /* block */)status connectionType:(int)type;
- (id)getTetheringStatusSync:(id *)sync;
- (id)getTetheringStatusSync:(id *)sync connectionType:(int)type;
- (id)enterLoopBackMode;
- (void *)createAssertionForConnectionType:(int)type allocator:(struct __CFAllocator *)allocator error:(id *)error onReAssertError:(id /* block */)error;
- (id)setApplicationCategory:(id)category;
- (id)private_setPacketContextActiveByServiceType:(id)type connectionType:(int)type active:(BOOL)active;
- (id)private_getConnectionAvailability:(id)availability connectionType:(int)type error:(id *)error;
- (id)private_getActiveConnections:(id)connections error:(id *)error;
- (id)private_getConnectionState:(id)state connectionType:(int)type error:(id *)error;
- (id)private_getSliceTrafficDescriptorsInfo:(id)info connectionType:(int)type error:(id *)error;
- (id)private_getSliceTrafficDescriptors:(id *)descriptors;
- (id)private_getDataStatus:(id)status error:(id *)error;
- (unsigned int)private_getNATTKeepAliveOverCell:(id)cell error:(id *)error;
- (id)initWithQueue:(struct dispatch_queue_s *)queue;
- (id)initWithQueue:(struct dispatch_queue_s *)queue multiplexer:(id)multiplexer;
- (id)init;
- (void)dealloc;
- (void)getSubscriptionInfo:(id /* block */)info;
- (id)getSubscriptionInfoWithError:(id *)error;
- (long long)getDualSimCapability:(id *)capability;
- (void)getDescriptorsForDomain:(long long)domain completion:(id /* block */)completion;
- (id)getDescriptorsForDomain:(long long)domain error:(id *)error;
- (id)getReleaseCandidateFlag;
- (id)getAllowDevSignedCarrierBundlesFlag;
- (void)getActiveContextsWithCallback:(id /* block */)callback;
- (id)getActiveContexts:(id *)contexts;
- (void)getEvolvedSubscriptionLabelID:(id)id withCallback:(id /* block */)callback;
- (id)getEvolvedSubscriptionLabelID:(id)id error:(id *)error;
- (id)proxyWithErrorHandler:(id /* block */)handler;
- (id)synchronousProxyWithErrorHandler:(id /* block */)handler;
- (id)cachedValueForSelector:(SEL)selector;
- (void)cacheValue:(id)value forSelector:(SEL)selector;
- (void)ping:(id /* block */)ping;
- (BOOL)supportsCellular;
- (BOOL)supportsRequestWithSelector:(SEL)selector;
- (void)dispatchBlockToClientAsync:(id /* block */)async;
- (struct __CTAssertionType { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; id x1; id x2; int x3; } *)createCTAssertionForConnectionType:(int)type allocator:(struct __CFAllocator *)allocator proxy:(id)proxy;
- (void)registerBlockForInvalidationNotification:(struct __CTAssertionType { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; id x1; id x2; int x3; } *)notification callback:(id /* block */)callback;
@end

#endif /* CoreTelephonyClient_h */
