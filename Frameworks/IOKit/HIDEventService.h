//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 100065.64.1.0.0
//
#ifndef HIDEventService_h
#define HIDEventService_h
@import Foundation;

@protocol {?="session"^{__IOHIDSession}"service"I"serviceInterface"^^{IOHIDServiceInterface}"serviceInterface2"^^{IOHIDServiceInterface2}"plugInInterface"^^{IOCFPlugInInterfaceStruct}"registryID"^{__CFNumber}"locationID"^v"entitlements"^{__CFArray}"queueContext"^{__IOHIDServiceQueueContext}"dispatchQueue"@"NSObject<OS_dispatch_queue>""notificationPort"^{IONotificationPort}"notification"I"removalNotificationSet"^{__CFSet}"propertyNotificationSet"^{__CFSet}"eventTarget"^v"eventRefcon"^v"eventCallback"^?"lastLEDMask"I"lastButtonMask"I"currentReportInterval"I"currentBatchInterval"I"defaultReportInterval"I"defaultBatchInterval"I"primaryUsagePage"I"primaryUsage"I"transport"[32c]"queueSize"I"containsReportInterval"i"state"I"eventCount"I"eventMask"Q"clientCacheDict"^{__CFDictionary}"simpleFilters"^{__CFArray}"filters"^{__CFArray}"keyboardEventInProgress"^{__CFSet}"nullEventMask"Q"displayIntegratedDigitizer"i"builtIn"i"inMomentumPhase"i"inDigitizerPhase"i"supportReportLatency"i"hidden"i"protectedAccess"i"propertyCache"^{__CFDictionary}"propertyCacheHit"I"propertyCacheMiss"I"activityLastTimestamp"Q"virtualService"{?="connection"^v"target"^v"refcon"^v"callbacks"^{IOHIDServiceVirtualCallbacksV2}}"connections"^^v"propertySetTime"Q"propertyGetTime"Q"elementSetTime"Q"regID"Q"eventLog"^{__CFData}"eventTypeCnt"^Q"pluginCancelHandler"@?"filterCancelHandler"@?"pendingPluginCancel"B"pendingFilterCancels"I"cancelTimer"@"NSObject<OS_dispatch_source>""dataLock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}"hidAnalyticsEvent"^v"hidAnalyticsDispatchEvent"^v"objc"{?="interface"^v"name"^{__CFString}"getProperty":"setProperty":"eventMatching":"setEventDispatcher":"setCancelHandler":"activate":"cancel":"setDispatchQueue":"clientNotification":"copyEvent":"setOutputEvent":}};

@interface HIDEventService : NSObject {
  /* instance variables */
  struct { struct __IOHIDSession *session; unsigned int service; struct IOHIDServiceInterface * *serviceInterface; struct IOHIDServiceInterface2 * *serviceInterface2; struct IOCFPlugInInterfaceStruct * *plugInInterface; struct __CFNumber *registryID; void *locationID; struct __CFArray *entitlements; struct __IOHIDServiceQueueContext *queueContext; NSObject<OS_dispatch_queue> *dispatchQueue; struct IONotificationPort *notificationPort; unsigned int notification; struct __CFSet *removalNotificationSet; struct __CFSet *propertyNotificationSet; void *eventTarget; void *eventRefcon; undefined *eventCallback; unsigned int lastLEDMask; unsigned int lastButtonMask; unsigned int currentReportInterval; unsigned int currentBatchInterval; unsigned int defaultReportInterval; unsigned int defaultBatchInterval; unsigned int primaryUsagePage; unsigned int primaryUsage; char x[32] transport; unsigned int queueSize; int containsReportInterval; unsigned int state; unsigned int eventCount; unsigned long long eventMask; struct __CFDictionary *clientCacheDict; struct __CFArray *simpleFilters; struct __CFArray *filters; struct __CFSet *keyboardEventInProgress; unsigned long long nullEventMask; int displayIntegratedDigitizer; int builtIn; int inMomentumPhase; int inDigitizerPhase; int supportReportLatency; int hidden; int protectedAccess; struct __CFDictionary *propertyCache; unsigned int propertyCacheHit; unsigned int propertyCacheMiss; unsigned long long activityLastTimestamp; struct { void *connection; void *target; void *refcon; struct IOHIDServiceVirtualCallbacksV2 *callbacks; } virtualService; void * *connections; unsigned long long propertySetTime; unsigned long long propertyGetTime; unsigned long long elementSetTime; unsigned long long regID; struct __CFData *eventLog; unsigned long long *eventTypeCnt; id /* block */ pluginCancelHandler; id /* block */ filterCancelHandler; BOOL pendingPluginCancel; unsigned int pendingFilterCancels; NSObject<OS_dispatch_source> *cancelTimer; struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } dataLock; void *hidAnalyticsEvent; void *hidAnalyticsDispatchEvent; struct { void *interface; struct __CFString *name; SEL getProperty; SEL setProperty; SEL eventMatching; SEL setEventDispatcher; SEL setCancelHandler; SEL activate; SEL cancel; SEL setDispatchQueue; SEL clientNotification; SEL copyEvent; SEL setOutputEvent; } objc; } _service;
}

/* instance methods */
- (unsigned long long)_cfTypeID;
- (void)dealloc;
- (id)description;
@end

#endif /* HIDEventService_h */
