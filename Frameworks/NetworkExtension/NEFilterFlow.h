//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1838.60.8.0.0
//
#ifndef NEFilterFlow_h
#define NEFilterFlow_h
@import Foundation;

#include "NEFilterAbsoluteVerdict.h"
#include "NEPrettyDescription-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSData, NSMutableArray, NSString, NSURL, NSUUID;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface NEFilterFlow : NSObject<NEPrettyDescription, NSSecureCoding, NSCopying> {
  /* instance variables */
  BOOL _isRemediationFlow;
  BOOL _isPaused;
  BOOL _reportAtEnd;
  BOOL _sourceAppIdentifierFromApp;
  int _pid;
  int _epid;
  NEFilterAbsoluteVerdict *_currentVerdict;
  NSObject<OS_dispatch_queue> *_queue;
  NSUUID *_flowUUID;
  NSMutableArray *_savedMessageHandlerQueue;
  NSObject<OS_xpc_object> *_connection;
}

@property (copy) NSString *sourceAppIdentifier;
@property (copy) NSString *sourceAppVersion;
@property (copy) NSData *sourceAppUniqueIdentifier;
@property (copy) NSURL *URL;
@property long long direction;
@property (retain) NSData *sourceAppAuditToken;
@property (retain) NSData *sourceProcessAuditToken;
@property unsigned long long inBytes;
@property unsigned long long outBytes;
@property BOOL inputComplete;
@property BOOL outputComplete;
@property (retain) NSData *crypto_signature;
@property (readonly, nonatomic) NSString *identifierString;
@property (readonly) NSUUID *identifier;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)descriptionWithIndent:(int)indent options:(unsigned long long)options;
- (id)description;
- (id)init;
- (id)initWithURL:(id)url sourceAppIdentifier:(id)identifier;
- (BOOL)createNewFlowReply:(id)reply controlSocket:(int)socket verdict:(id)verdict context:(id)context;
- (BOOL)createDataReply:(id)reply controlSocket:(int)socket direction:(long long)direction verdict:(id)verdict context:(id)context;
- (BOOL)createDataCompleteReply:(id)reply controlSocket:(int)socket direction:(long long)direction verdict:(id)verdict context:(id)context;
@end

#endif /* NEFilterFlow_h */
