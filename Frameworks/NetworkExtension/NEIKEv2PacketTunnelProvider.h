//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1838.60.8.0.0
//
#ifndef NEIKEv2PacketTunnelProvider_h
#define NEIKEv2PacketTunnelProvider_h
@import Foundation;

#include "NEPacketTunnelProvider.h"
#include "NEIKEv2CompanionDatapath.h"
#include "NEIKEv2MOBIKE.h"
#include "NEIKEv2Rekey.h"
#include "NEIKEv2Server.h"
#include "NEIKEv2Session.h"
#include "NEUserNotification.h"

@class NSArray, NSDictionary, NWPath, NWPathEvaluator, NWResolver;
@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source;

@interface NEIKEv2PacketTunnelProvider : NEPacketTunnelProvider {
  /* instance variables */
  BOOL _isIfCellular;
  BOOL _isIfCompanion;
  BOOL _companionHasOutboundPath;
  BOOL _hasNAT;
  BOOL _dispose;
  BOOL _sessionDidConnect;
  BOOL _mobikeCapable;
  BOOL _authenticationPrompted;
  BOOL _isObserving;
  unsigned int _flags;
  NSArray *_ikeConfig;
  NSArray *_localTrafficSelectors;
  NSArray *_remoteTrafficSelectors;
  NSDictionary *_options;
  struct NEVirtualInterface_s * _virtualInterface;
  NEIKEv2Server *_server;
  NWResolver *_resolver;
  NSObject<OS_dispatch_source> *_resolverWaitTimer;
  NEIKEv2Rekey *_rekey;
  NSObject<OS_dispatch_semaphore> *_getSocketSemaphore;
  NEIKEv2MOBIKE *_mobikeHandle;
  id /* block */ _startTunnelCompletionHandler;
  id /* block */ _stopTunnelCompletionHandler;
  id /* block */ _dnsResolverCompletionHandler;
  long long _tunnelKind;
  NWPath *_path;
  NEUserNotification *_g_notification;
  unsigned long long _randomLocalPortFallbackRetryCount;
  NEIKEv2CompanionDatapath *_companionProxyDatapath;
  NEIKEv2Session *_session;
  unsigned long long _ifIndex;
  long long _pathStatus;
  NSObject<OS_dispatch_queue> *_queue;
  NWPathEvaluator *_scopedPathEvaluator;
}

/* instance methods */
- (id)description;
- (id)init;
- (void)dealloc;
- (void)startTunnelWithOptions:(id)options completionHandler:(id /* block */)handler;
- (void)stopTunnelWithReason:(long long)reason completionHandler:(id /* block */)handler;
- (void)wake;
- (void)observerHelperHandler:(id)handler ofObject:(id)object change:(id)change context:(void *)context;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)setTunnelNetworkSettings:(id)settings completionHandler:(id /* block */)handler;
@end

#endif /* NEIKEv2PacketTunnelProvider_h */
