//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1838.60.8.0.0
//
#ifndef NEHasher_h
#define NEHasher_h
@import Foundation;

#include "NSCoder.h"

@class NSArray;

@interface NEHasher : NSCoder {
  /* instance variables */
  struct CC_SHA1state_st { unsigned int x0; unsigned int x1; unsigned int x2; unsigned int x3; unsigned int x4; unsigned int x5; unsigned int x6; unsigned int x7[16] int x8; } * _sha1Context;
  NSArray *_classPrefixWhitelist;
}

/* class methods */
+ (id)hashObject:(id)object;
+ (id)hashObject:(id)object withClassPrefixWhitelist:(id)whitelist;

/* instance methods */
- (id)init;
- (void)dealloc;
- (BOOL)allowsKeyedCoding;
- (BOOL)containsValueForKey:(id)key;
- (long long)versionForClassName:(id)name;
- (void)encodeValueOfObjCType:(const char *)ctype at:(const void *)at;
- (void)encodeDataObject:(id)object;
- (void)encodeBool:(BOOL)bool forKey:(id)key;
- (void)encodeBytes:(const char *)bytes length:(unsigned long long)length forKey:(id)key;
- (void)encodeBytes:(const void *)bytes length:(unsigned long long)length;
- (void)encodeConditionalObject:(id)object forKey:(id)key;
- (void)encodeDouble:(double)double forKey:(id)key;
- (void)encodeInt:(int)int forKey:(id)key;
- (void)encodeFloat:(float)float forKey:(id)key;
- (void)encodeInteger:(long long)integer forKey:(id)key;
- (void)encodeInt32:(int)int32 forKey:(id)key;
- (void)encodeInt64:(long long)int64 forKey:(id)key;
- (void)encodeObject:(id)object forKey:(id)key;
- (void)decodeValueOfObjCType:(const char *)ctype at:(void *)at;
- (id)decodeDataObject;
- (BOOL)decodeBoolForKey:(id)key;
- (const char *)decodeBytesForKey:(id)key returnedLength:(unsigned long long *)length;
- (double)decodeDoubleForKey:(id)key;
- (float)decodeFloatForKey:(id)key;
- (int)decodeInt32ForKey:(id)key;
- (long long)decodeInt64ForKey:(id)key;
- (long long)decodeIntegerForKey:(id)key;
- (int)decodeIntForKey:(id)key;
- (id)decodeObjectForKey:(id)key;
- (id)decodeObjectOfClass:(Class)class forKey:(id)key;
- (id)decodeObjectOfClasses:(id)classes forKey:(id)key;
- (id)decodePropertyListForKey:(id)key;
@end

#endif /* NEHasher_h */
