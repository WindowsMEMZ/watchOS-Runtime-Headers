//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1838.60.8.0.0
//
#ifndef NEAgentFilterExtension_h
#define NEAgentFilterExtension_h
@import Foundation;

#include "NEAgentSessionDelegate-Protocol.h"
#include "NEFilterControlExtensionProviderHostContext.h"
#include "NEFilterExtensionProviderHostContext.h"
#include "NEFilterExtensionProviderHostDelegate-Protocol.h"
#include "NEFilterPluginDriver-Protocol.h"
#include "NEFilterProviderConfiguration.h"

@class NSArray, NSExtension, NSString, NSUUID, NSXPCInterface, NSXPCListenerEndpoint;
@protocol NEPluginManagerObjectFactory, OS_dispatch_queue, OS_dispatch_source;

@interface NEAgentFilterExtension : NSObject<NEFilterExtensionProviderHostDelegate, NEAgentSessionDelegate, NEFilterPluginDriver> {
  /* instance variables */
  BOOL _dataExtensionInitialized;
  BOOL _controlExtensionInitialized;
  BOOL _appsUpdateStarted;
  BOOL _appsUpdateEnding;
  int _crypto_kernel_salt;
  NSObject<NEPluginManagerObjectFactory> *_managerObjectFactory;
  NSString *_pluginType;
  NSExtension *_dataExtension;
  NSExtension *_controlExtension;
  NEFilterExtensionProviderHostContext *_dataSessionContext;
  NEFilterControlExtensionProviderHostContext *_controlSessionContext;
  NSUUID *_dataSessionRequestIdentifier;
  NSUUID *_controlSessionRequestIdentifier;
  NSObject<OS_dispatch_queue> *_queue;
  NSString *_dataExtensionIdentifier;
  NSString *_controlExtensionIdentifier;
  NSXPCListenerEndpoint *_clientListenerEndpoint;
  NEFilterProviderConfiguration *_configuration;
  NSArray *_extensionUUIDs;
  NSObject<OS_dispatch_source> *_sendFailedTimer;
  struct cfil_crypto_state { struct ccdigest_info * x0; unsigned char x1[32] } * _crypto_state;
  id /* block */ _pendingDisposeCompletion;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSArray *uuids;
@property (readonly, nonatomic) NSXPCInterface *driverInterface;
@property (readonly, nonatomic) NSXPCInterface *managerInterface;

/* class methods */
+ (BOOL)authenticateFlowWithState:(struct cfil_crypto_state { struct ccdigest_info * x0; unsigned char x1[32] } *)state crypto_key:(id)crypto_key flow:(id)flow salt:(unsigned int)salt isKernelSocket:(BOOL)socket;

/* instance methods */
- (id)initWithPluginType:(id)type pluginClass:(long long)class pluginInfo:(id)info queue:(id)queue factory:(id)factory;
- (id)initWithPluginType:(id)type pluginClass:(long long)class pluginEndpoint:(id)endpoint pluginProcessIdentity:(id)identity queue:(id)queue factory:(id)factory;
- (void)dealloc;
- (void)handleInitWithCompletionHandler:(id /* block */)handler;
- (void)handleDisposeWithCompletionHandler:(id /* block */)handler;
- (void)handleCancel;
- (void)handleAppsUninstalled:(id)uninstalled;
- (void)handleAppsUpdateBegins:(id)begins;
- (void)handleAppsUpdateEnding:(id)ending;
- (void)handleAppsUpdateEnds:(id)ends;
- (void)startWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)startFilter;
- (void)sleepWithCompletionHandler:(id /* block */)handler;
- (void)wakeup;
- (void)updateConfiguration:(id)configuration;
- (void)extension:(id)extension didStartWithError:(id)error;
- (void)extension:(id)extension didFailWithError:(id)error;
- (void)extensionDidStop:(id)stop;
- (void)sendBrowserContentFilterServerRequest;
- (void)sendSocketContentFilterRequest;
- (void)fetchCurrentRulesForFlow:(id)flow completionHandler:(id /* block */)handler;
- (void)report:(id)report;
- (void)getFilterClientConnectionWithCompletionHandler:(int)handler completionHandler:(id /* block */)handler;
- (void)notifyRulesChanged;
- (void)provideRemediationMap:(id)map;
- (void)provideURLAppendStringMap:(id)map;
- (void)createPacketChannelForExtension:(id)extension completionHandler:(id /* block */)handler;
- (void)applySettings:(id)settings completionHandler:(id /* block */)handler;
@end

#endif /* NEAgentFilterExtension_h */
