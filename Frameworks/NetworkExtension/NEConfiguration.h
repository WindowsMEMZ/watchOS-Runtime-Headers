//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1838.60.8.0.0
//
#ifndef NEConfiguration_h
#define NEConfiguration_h
@import Foundation;

#include "NEAOVPN.h"
#include "NEAppPush.h"
#include "NEConfigurationValidating-Protocol.h"
#include "NEContentFilter.h"
#include "NEDNSProxy.h"
#include "NEDNSSettingsBundle.h"
#include "NEPathController.h"
#include "NEProfileIngestionPayloadInfo.h"
#include "NEProfileIngestionPluginDelegate-Protocol.h"
#include "NEProfilePayloadHandlerDelegate-Protocol.h"
#include "NERelayConfiguration.h"
#include "NEVPN.h"
#include "NEVPNApp.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSString, NSUUID;

@interface NEConfiguration : NSObject<NEProfilePayloadHandlerDelegate, NEProfileIngestionPluginDelegate, NEConfigurationValidating, NSSecureCoding, NSCopying> {
  /* instance variables */
  long long _appPermissionType;
}

@property (readonly) NSString *pluginType;
@property (readonly) BOOL transparentProxy;
@property (readonly) long long grade;
@property (readonly) NSUUID *identifier;
@property (copy) NSString *application;
@property (copy) NSString *name;
@property (copy) NSString *applicationName;
@property (copy) NSString *applicationIdentifier;
@property (copy) NSString *externalIdentifier;
@property (copy) NEProfileIngestionPayloadInfo *payloadInfo;
@property (copy) NEVPN *VPN;
@property (copy) NEAOVPN *alwaysOnVPN;
@property (copy) NEVPNApp *appVPN;
@property (copy) NEContentFilter *contentFilter;
@property (copy) NEPathController *pathController;
@property (copy) NEDNSProxy *dnsProxy;
@property (copy) NEDNSSettingsBundle *dnsSettings;
@property (copy) NEAppPush *appPush;
@property (copy) NERelayConfiguration *relay;
@property (readonly, nonatomic) BOOL isEnabled;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)configurationWithProfilePayload:(id)payload grade:(long long)grade;
+ (id)configurationWithProfilePayload:(id)payload;

/* instance methods */
- (BOOL)setCertificates:(id)certificates keyRefs:(id)refs specs:(id)specs;
- (BOOL)setCertificates:(id)certificates;
- (id)getCertificates;
- (id)getPendingCertificateUUIDs:(id)uuids;
- (id)getPendingCertificateInfo:(id)info;
- (id)getConfigurationIdentifier;
- (BOOL)setPayloadInfoIdentity:(id)identity;
- (BOOL)setPayloadInfoCommon:(id)common payloadOrganization:(id)organization;
- (BOOL)setProfileInfo:(id)info;
- (BOOL)setPerAppRuleSettings:(id)settings withAppIdentifier:(id)identifier;
- (BOOL)setPerAppUUID:(id)uuid andSafariDomains:(id)domains;
- (BOOL)setAppLayerVPNUUID:(id)vpnuuid andSafariDomains:(id)domains;
- (BOOL)setSMBDomains:(id)smbdomains;
- (BOOL)setMailDomains:(id)domains;
- (BOOL)setMailDomains:(id)domains accountIdentifiers:(id)identifiers;
- (BOOL)setCalendarDomains:(id)domains;
- (BOOL)setCalendarDomains:(id)domains accountIdentifiers:(id)identifiers;
- (BOOL)setContactsDomains:(id)domains;
- (BOOL)setContactsDomains:(id)domains accountIdentifiers:(id)identifiers;
- (BOOL)setRestrictDomains:(BOOL)domains;
- (BOOL)setExcludedDomains:(id)domains;
- (BOOL)setAssociatedDomains:(id)domains;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)initWithName:(id)name grade:(long long)grade;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)checkValidityAndCollectErrors:(id)errors;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)generateSignature;
- (id)description;
- (id)descriptionWithOptions:(unsigned long long)options;
- (void)clearSystemKeychain;
- (BOOL)isTransparentProxy;
- (void)copyPasswordsFromSystemKeychain;
- (void)applyOverrides;
@end

#endif /* NEConfiguration_h */
