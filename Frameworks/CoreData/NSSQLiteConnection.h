//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1338.0.0.0.0
//
#ifndef NSSQLiteConnection_h
#define NSSQLiteConnection_h
@import Foundation;

#include "NSSQLCore.h"
#include "NSSQLEntity.h"
#include "NSSQLSaveChangesRequestContext.h"
#include "NSSQLitePrefetchRequestCache.h"
#include "NSSQLiteStatement.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface NSSQLiteConnection : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSSQLCore *_sqlCore;
  NSURL *_workingURL;
  NSString *_dbPath;
  BOOL _transactionIsOpen;
  BOOL _transactionIsCurrentlyReadOnly;
  BOOL _useSyntaxColoredLogging;
  NSSQLiteStatement *_sqlStatement;
  NSArray *_columnsToFetch;
  NSArray *_metadataColumns;
  struct sqlite3 * _db;
  struct sqlite3_stmt * _vmstatement;
  int _rowsProcessedCount;
  unsigned int _lastEntityKey;
  NSSQLEntity *_finalEntity;
  NSSQLEntity *_lastEntity;
  struct sqlite3_stmt * _fetchPKStatement;
  struct sqlite3_stmt * _updatePKStatement;
  NSSQLiteStatement *_beginStatement;
  NSSQLiteStatement *_commitStatement;
  NSSQLiteStatement *_rollbackStatement;
  struct __CFDictionary * _vmCachedStatements;
  NSMutableDictionary *_pragmaSettings;
  NSMutableSet *_mObjectIDsUpdatedByTriggers;
  NSMutableArray *_mObjectIDsInsertedByDATriggers;
  NSMutableArray *_mObjectIDsUpdatededByDATriggers;
  NSSQLSaveChangesRequestContext *_saveRequest;
  struct __CFDictionary * _statementCachesByEntity;
  NSSQLitePrefetchRequestCache *_prefetchRequestCache;
  struct __CFDictionary * _cachedEntityUpdateStatements;
  struct __CFDictionary * _cachedEntityConstrainedValuesUpdateStatements;
  double _timeOutOption;
  double _timeOutIncrement;
  void * _extraBuffersForRegisteredFunctions[5];
  NSString *_dbPathRegisteredWithBackupd;
  long long _vacuumTracker;
  NSMutableArray *_temporaryTables;
  struct __sqliteConnectionFlags { unsigned int x :1 _readyToBind; unsigned int x :1 _fetchInProgress; unsigned int x :2 _fileSystemType; unsigned int x :1 _proxyLocking; unsigned int x :1 _vacuumSetupNeeded; unsigned int x :1 _usingWAL; unsigned int x :1 _disallowReconnect; unsigned int x :1 _isWriter; unsigned int x :1 _didSnapshotRecovery; unsigned int x :1 _hasTransactionStringTable; unsigned int x :1 _isQueryGenTracking; unsigned int x :20 _reserved; } _sqliteConnectionFlags;
  unsigned long long _debugInode;
  NSMutableArray *_activeGenerations;
  NSMutableDictionary *_transactionStringName;
  NSMutableDictionary *_usedIndexes;
  long long _cachedPageSize;
}

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)initForSQLCore:(id)sqlcore;
- (id)initAsQueryGenerationTrackingConnectionForSQLCore:(id)sqlcore;
- (void)dealloc;
- (id)adapter;
- (id)sqlStatement;
- (void)execute;
- (void)setExclusiveLockingMode:(BOOL)mode;
- (int)registerCurrentQueryGenerationWithStore:(id)store;
@end

#endif /* NSSQLiteConnection_h */
