//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1338.0.0.0.0
//
#ifndef NSPersistentStoreCoordinator_h
#define NSPersistentStoreCoordinator_h
@import Foundation;

#include "NSManagedObjectModel.h"
#include "_PFModelMap.h"

@class NSArray, NSError, NSMutableArray, NSString;
@protocol NSPersistentStoreCoordinatorDelegate;

@interface NSPersistentStoreCoordinator : NSObject {
  /* instance variables */
  id _queueOwner;
  void * _dispatchQueue;
  struct _persistentStoreCoordinatorFlags { unsigned int x :1 _isRegistered; unsigned int x :1 _canUseDirectDispatch; unsigned int x :1 _queueUsage; unsigned int x :8 _qosClass; unsigned int x :21 _reservedFlags; } _flags;
  int _cd_rc;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _miniLock;
  NSString *_queueLabel;
  NSMutableArray *_extendedStoreURLs;
  NSError *_lastOpenError;
  id _xpcBundleID;
  NSString *_xpcProcessName;
  _PFModelMap *_modelMap;
  NSObject<NSPersistentStoreCoordinatorDelegate> *_delegate;
}

@property (readonly) NSManagedObjectModel *managedObjectModel;
@property (readonly) NSArray *persistentStores;
@property (copy) NSString *name;

/* class methods */
+ (BOOL)removePersistentHistoryFromPersistentStoreAtURL:(id)url options:(id)options error:(id *)error;
+ (id)ubiquityStoreURLForStoreURL:(id)url ubiquityIdentityToken:(id)token ubiquityName:(id)name;
+ (void)initialize;
+ (BOOL)accessInstanceVariablesDirectly;
+ (void)_registerCoreDataStoreClass:(Class)class forStoreType:(id)type;
+ (void)registerStoreClass:(Class)class forStoreType:(id)type;
+ (id)registeredStoreTypes;
+ (id)metadataForPersistentStoreOfType:(id)type URL:(id)url error:(id *)error;
+ (id)metadataForPersistentStoreOfType:(id)type URL:(id)url options:(id)options error:(id *)error;
+ (BOOL)setMetadata:(id)metadata forPersistentStoreOfType:(id)type URL:(id)url options:(id)options error:(id *)error;
+ (BOOL)setMetadata:(id)metadata forPersistentStoreOfType:(id)type URL:(id)url error:(id *)error;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)zone;

/* instance methods */
- (BOOL)_refreshTriggerValuesInStore:(id)store error:(id *)error;
- (id)_retainedCurrentQueryGeneration:(id)generation;
- (BOOL)_validateQueryGeneration:(id)generation error:(id *)error;
- (id)currentQueryGenerationTokenFromStores:(id)stores;
- (id)managedObjectIDFromUTF8String:(const char *)string length:(unsigned long long)length;
- (BOOL)_replacePersistentStoreAtURL:(id)url destinationOptions:(id)options withPersistentStoreFromURL:(id)url sourceOptions:(id)options storeType:(id)type error:(id *)error;
- (BOOL)_destroyPersistentStoreAtURL:(id)url withType:(id)type options:(id)options error:(id *)error;
- (BOOL)_destroyPersistentStoreAtURL:(id)url withType:(id)type error:(id *)error;
- (BOOL)_rekeyPersistentStoreAtURL:(id)url type:(id)type options:(id)options withKey:(id)key error:(id *)error;
- (id)persistentStoreForIdentifier:(id)identifier;
- (void)setDelegate:(id)delegate;
- (id)delegate;
- (id)persistentStoreCoordinator;
- (id)newValuesForObjectWithID:(id)id withContext:(id)context error:(id *)error;
- (id)newValueForRelationship:(id)relationship forObjectWithID:(id)id withContext:(id)context error:(id *)error;
- (id)_newOrderedRelationshipInformationForRelationship:(id)relationship forObjectWithID:(id)id withContext:(id)context error:(id *)error;
- (id)_allOrderKeysForDestination:(id)destination inRelationship:(id)relationship error:(id *)error;
- (void)managedObjectContextDidRegisterObjectsWithIDs:(id)ids generation:(id)generation;
- (void)managedObjectContextDidUnregisterObjectsWithIDs:(id)ids generation:(id)generation;
- (BOOL)obtainPermanentIDsForObjects:(id)objects error:(id *)error;
- (void)performBlock:(id /* block */)block;
- (void)performBlockAndWait:(id /* block */)wait;
- (void)setMetadata:(id)metadata forPersistentStore:(id)store;
- (id)metadataForPersistentStore:(id)store;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (void)dealloc;
- (id)init;
- (id)initWithManagedObjectModel:(id)model;
- (void)addPersistentStoreWithDescription:(id)description completionHandler:(id /* block */)handler;
- (id)addPersistentStoreWithType:(id)type configuration:(id)configuration URL:(id)url options:(id)options error:(id *)error;
- (BOOL)removePersistentStore:(id)store error:(id *)error;
- (BOOL)_removeAllPersistentStores:(id *)stores;
- (id)persistentStoreForURL:(id)url;
- (id)URLForPersistentStore:(id)store;
- (BOOL)setURL:(id)url forPersistentStore:(id)store;
- (id)migratePersistentStore:(id)store toURL:(id)url options:(id)options withType:(id)type error:(id *)error;
- (BOOL)destroyPersistentStoreAtURL:(id)url withType:(id)type options:(id)options error:(id *)error;
- (BOOL)replacePersistentStoreAtURL:(id)url destinationOptions:(id)options withPersistentStoreFromURL:(id)url sourceOptions:(id)options storeType:(id)type error:(id *)error;
- (id)currentPersistentHistoryTokenFromStores:(id)stores;
- (id)managedObjectIDForURIRepresentation:(id)urirepresentation;
- (BOOL)finishDeferredLightweightMigration:(id *)migration;
- (BOOL)finishDeferredLightweightMigrationTask:(id *)task;
- (id)_exceptionNoStoreSaveFailureForError:(id)error recommendedFrame:(int *)frame;
- (id)executeRequest:(id)request withContext:(id)context error:(id *)error;
@end

#endif /* NSPersistentStoreCoordinator_h */
