//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1338.0.0.0.0
//
#ifndef _PFBatchFaultingArray_h
#define _PFBatchFaultingArray_h
@import Foundation;

#include "NSArray.h"
#include "NSCachingFetchRequest.h"
#include "NSManagedObjectContext.h"
#include "PFObjectIDCollection-Protocol.h"
#include "_PFArray.h"

@class NSString;

@interface _PFBatchFaultingArray : NSArray<PFObjectIDCollection> {
  /* instance variables */
  int _cd_rc;
  unsigned int _count;
  _PFArray *_array;
  unsigned int * _entryFlags;
  NSManagedObjectContext *_moc;
  NSCachingFetchRequest *_request;
  unsigned int _batchSize;
  unsigned int * _LRUBatches;
  struct _PFBatchFaultingArrayFlags { unsigned int x :8 _LRUIndex; unsigned int x :1 _uniformEntity; unsigned int x :11 _LRUEntryCount; unsigned int x :12 _RESERVED; } _flags;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (Class)classForKeyedUnarchiver;
+ (void)initialize;
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)zone;

/* instance methods */
- (Class)classForCoder;
- (id)initWithPFArray:(id)pfarray andRequest:(id)request andContext:(id)context;
- (BOOL)isEqualToArray:(id)array;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (void)dealloc;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (void)getObjects:(id *)objects;
- (void)getObjects:(id *)objects range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
- (void)enumerateObjectsAtIndexes:(id)indexes options:(unsigned long long)options usingBlock:(id /* block */)block;
- (unsigned long long)indexOfObjectAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (id)indexesOfObjectsAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (void)enumerateObjectsWithOptions:(unsigned long long)options usingBlock:(id /* block */)block;
- (unsigned long long)indexOfObjectWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (id)indexesOfObjectsWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (id)sortedArrayUsingFunction:(undefined *)function context:(void *)context;
- (id)sortedArrayUsingFunction:(undefined *)function context:(void *)context hint:(id)hint;
- (id)sortedArrayUsingSelector:(SEL)selector;
- (id)sortedArrayUsingComparator:(id /* block */)comparator;
- (id)sortedArrayWithOptions:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (id)filteredArrayUsingPredicate:(id)predicate;
- (id)sortedArrayUsingDescriptors:(id)descriptors;
- (id)valueForKey:(id)key;
- (id)valueForKeyPath:(id)path;
- (id)objectsAtIndexes:(id)indexes;
- (id)objectAtIndexedSubscript:(unsigned long long)subscript;
- (unsigned long long)indexOfObject:(id)object;
- (unsigned long long)indexOfObject:(id)object inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (unsigned long long)indexOfObjectIdenticalTo:(id)to;
- (unsigned long long)indexOfObjectIdenticalTo:(id)to inRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (unsigned long long)indexOfManagedObjectForObjectID:(id)id;
- (id)managedObjectIDAtIndex:(unsigned long long)index;
- (id)subarrayWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)arrayFromObjectIDs;
- (id)newArrayFromObjectIDs;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)index;
@end

#endif /* _PFBatchFaultingArray_h */
