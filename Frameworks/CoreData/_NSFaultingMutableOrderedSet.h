//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1338.0.0.0.0
//
#ifndef _NSFaultingMutableOrderedSet_h
#define _NSFaultingMutableOrderedSet_h
@import Foundation;

#include "NSMutableOrderedSet.h"
#include "NSManagedObject.h"
#include "NSPropertyDescription.h"
#include "_NSFaultingMutableOrderedSet.h"

@class NSMutableDictionary;

@interface _NSFaultingMutableOrderedSet : NSMutableOrderedSet {
  /* instance variables */
  int _cd_rc;
  struct _NSFaultingMutableOrderedSetFlags { unsigned int x :1 _isFault; unsigned int x :1 _mustPropagateDelete; unsigned int x :1 _ignoringIdempotentKVO; unsigned int x :1 _mustCopyOnWrite; unsigned int x :1 _isImmutableCopy; unsigned int x :11 _reserved; unsigned int x :16 _relationship; } _flags;
  id _realSet;
  unsigned int * _orderKeys;
  _NSFaultingMutableOrderedSet *_grottyHack;
  NSMutableDictionary *_forcedKeys;
}

@property (readonly, nonatomic) NSManagedObject *source;
@property (readonly, nonatomic) NSPropertyDescription *relationship;
@property (readonly, nonatomic) BOOL fault;

/* class methods */
+ (BOOL)accessInstanceVariablesDirectly;
+ (id)alloc;
+ (id)allocWithZone:(struct _NSZone *)zone;
+ (Class)classForKeyedUnarchiver;

/* instance methods */
- (id)_orderedObjectsAndKeys;
- (BOOL)_reorderObjectsToLocationsByOrderKey:(id)key error:(id *)error;
- (id)initWithOrderedSet:(id)set;
- (id)initWithSource:(id)source forRelationship:(id)relationship asFault:(BOOL)fault;
- (id)initWithSource:(id)source destinations:(id)destinations forRelationship:(id)relationship inContext:(id)context;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (void)dealloc;
- (BOOL)isFault;
- (id)description;
- (id)descriptionWithLocale:(id)locale;
- (void)willRead;
- (void)willReadWithContents:(id)contents;
- (BOOL)_shouldProcessKVOChange;
- (void)_setProcessingIdempotentKVO:(BOOL)kvo;
- (void)turnIntoFault;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (unsigned long long)count;
- (id)objectAtIndex:(unsigned long long)index;
- (unsigned long long)indexOfObject:(id)object;
- (void)insertObject:(id)object atIndex:(unsigned long long)index;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
- (void)enumerateObjectsWithOptions:(unsigned long long)options usingBlock:(id /* block */)block;
- (void)enumerateObjectsAtIndexes:(id)indexes options:(unsigned long long)options usingBlock:(id /* block */)block;
- (unsigned long long)indexOfObjectWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (unsigned long long)indexOfObjectAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (id)indexesOfObjectsWithOptions:(unsigned long long)options passingTest:(id /* block */)test;
- (id)indexesOfObjectsAtIndexes:(id)indexes options:(unsigned long long)options passingTest:(id /* block */)test;
- (id)objectEnumerator;
- (void)getObjects:(id *)objects range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)getObjects:(id *)objects;
- (void)removeObjectAtIndex:(unsigned long long)index;
- (void)replaceObjectAtIndex:(unsigned long long)index withObject:(id)object;
- (void)setValue:(id)value forKey:(id)key;
- (id)valueForKey:(id)key;
- (id)valueForKeyPath:(id)path;
- (Class)classForCoder;
- (id)replacementObjectForCoder:(id)coder;
- (BOOL)isEqualToOrderedSet:(id)set;
- (BOOL)isEqual:(id)equal;
- (BOOL)_isIdenticalFault:(id)fault;
- (BOOL)containsObject:(id)object;
- (void)addObject:(id)object;
- (void)addObjects:(const id *)objects count:(unsigned long long)count;
- (void)addObjectsFromArray:(id)array;
- (void)insertObjects:(const id *)objects count:(unsigned long long)count atIndex:(unsigned long long)index;
- (void)insertObjects:(id)objects atIndexes:(id)indexes;
- (void)removeObjectsInRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (void)removeAllObjects;
- (void)removeObjectsInArray:(id)array;
- (void)minusOrderedSet:(id)set;
- (void)unionOrderedSet:(id)set;
- (void)minusSet:(id)set;
- (void)unionSet:(id)set;
- (void)sortUsingComparator:(id /* block */)comparator;
- (void)sortWithOptions:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (void)sortRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range options:(unsigned long long)options usingComparator:(id /* block */)comparator;
- (id)allObjects;
@end

#endif /* _NSFaultingMutableOrderedSet_h */
