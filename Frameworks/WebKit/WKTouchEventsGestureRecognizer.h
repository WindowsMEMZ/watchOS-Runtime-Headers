//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKTouchEventsGestureRecognizer_h
#define WKTouchEventsGestureRecognizer_h
@import Foundation;

#include "UIGestureRecognizer.h"
#include "WKTouchEventsGestureRecognizerDelegate-Protocol.h"

@class NSMapTable;
@protocol {RetainPtr<NSMapTable<NSNumber *,UITouch *>>="m_ptr"^v}, {WKTouchEvent="type"C"timestamp"d"locationInScreenCoordinates"{CGPoint="x"d"y"d}"locationInDocumentCoordinates"{CGPoint="x"d"y"d}"scale"d"rotation"d"inJavaScriptGesture"B"touchPoints"{Vector<WebKit::WKTouchPoint, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{WKTouchPoint}"m_capacity"I"m_size"I}"isPotentialTap"B}, {optional<CGPoint>=""(?="__null_state_"c"__val_"{CGPoint="x"d"y"d})"__engaged_"B};

@interface WKTouchEventsGestureRecognizer : UIGestureRecognizer {
  /* instance variables */
  id _touchTarget;
  SEL _touchAction;
  NSObject<WKTouchEventsGestureRecognizerDelegate> *_touchEventDelegate;
  BOOL _passedHitTest;
  BOOL _isPotentialTap;
  BOOL _wasExplicitlyCancelled;
  double _originalGestureDistance;
  double _originalGestureAngle;
  double _lastTouchesBeganTime;
  struct optional<CGPoint> { union { char __null_state_; struct CGPoint { double x; double y; } __val_; } x0; BOOL __engaged_; } _lastTouchesBeganLocation;
}

@property (nonatomic) BOOL defaultPrevented;
@property (readonly, nonatomic) const void * lastTouchEvent;
@property (readonly, nonatomic) BOOL dispatchingTouchEvents;
@property (readonly, nonatomic) NSMapTable *activeTouchesByIdentifier;

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)initWithTarget:(id)target action:(SEL)action touchDelegate:(id)delegate;
- (void)reset;
- (void)cancel;
- (void)_updateTapStateWithTouches:(id)touches;
- (void)_updateTapStateWithTouches:(id)touches type:(unsigned char)type;
- (void)_recordTouches:(id)touches type:(unsigned char)type;
- (void)performAction;
- (BOOL)_hasActiveTouchesForEvent:(id)event;
- (void)_processTouches:(id)touches withEvent:(id)event type:(unsigned char)type;
- (BOOL)canBePreventedByGestureRecognizer:(id)recognizer;
- (void)touchesBegan:(id)began withEvent:(id)event;
- (void)touchesMoved:(id)moved withEvent:(id)event;
- (void)touchesEnded:(id)ended withEvent:(id)event;
- (void)touchesCancelled:(id)cancelled withEvent:(id)event;
- (BOOL)isDefaultPrevented;
- (BOOL)isDispatchingTouchEvents;
@end

#endif /* WKTouchEventsGestureRecognizer_h */
