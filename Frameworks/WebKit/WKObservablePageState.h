//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKObservablePageState_h
#define WKObservablePageState_h
@import Foundation;

#include "_WKObservablePageState-Protocol.h"

@class NSString, NSURL;
@protocol {RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>>="m_ptr"^{WebPageProxy}}, {unique_ptr<WebKit::PageLoadStateObserver, std::default_delete<WebKit::PageLoadStateObserver>>="__ptr_"{__compressed_pair<WebKit::PageLoadStateObserver *, std::default_delete<WebKit::PageLoadStateObserver>>="__value_"^{PageLoadStateObserver}}};

@interface WKObservablePageState : NSObject<_WKObservablePageState> {
  /* instance variables */
  struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> { struct WebPageProxy *m_ptr; } _page;
  struct unique_ptr<WebKit::PageLoadStateObserver, std::default_delete<WebKit::PageLoadStateObserver>> { struct __compressed_pair<WebKit::PageLoadStateObserver *, std::default_delete<WebKit::PageLoadStateObserver>> { struct PageLoadStateObserver *__value_; } __ptr_; } _observer;
}

@property (readonly, copy, nonatomic) NSString *title;
@property (readonly, copy, nonatomic) NSURL *URL;
@property (readonly, nonatomic) BOOL loading;
@property (readonly, nonatomic) double estimatedProgress;
@property (readonly, nonatomic) BOOL hasOnlySecureContent;
@property (readonly, nonatomic) BOOL _webProcessIsResponsive;
@property (readonly, nonatomic) NSURL *unreachableURL;
@property (readonly, nonatomic) struct __SecTrust * serverTrust;

/* instance methods */
- (id)initWithPage:(void *)page;
- (void)dealloc;
- (BOOL)isLoading;
@end

#endif /* WKObservablePageState_h */
