//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKWebView_h
#define WKWebView_h
@import Foundation;

#include "UIView.h"
#include "UIResponderStandardEditActions-Protocol.h"
#include "UIScrollViewDelegate-Protocol.h"
#include "WKBackForwardList.h"
#include "WKBrowsingContextHandle.h"
#include "WKNavigationDelegate-Protocol.h"
#include "WKPasswordView.h"
#include "WKWebViewConfiguration.h"
#include "WKWebViewContentProviderRegistry.h"
#include "_WKWebViewPrintProvider-Protocol.h"

@class NSArray, NSData, NSNumber, NSString, NSURL, UIColor, UIGestureRecognizer, UIScrollView, UITapGestureRecognizer, UIView;
@protocol WKHistoryDelegatePrivate, WKUIDelegate, _WKAppHighlightDelegate, _WKDiagnosticLoggingDelegate, _WKFindDelegate, _WKFullscreenDelegate, _WKIconLoadingDelegate, _WKInputDelegate, _WKResourceLoadDelegate, _WKTextManipulationDelegate, struct optional<CGSize> { union { char x0; struct CGSize { double x0; double x1; } x1; } x0; BOOL x1; }, {OptionSet<WebKit::ViewStabilityFlag>="m_storage"C}, {PerWebProcessState="viewportMetaTagWidth"d"initialScaleFactor"d"hasCommittedLoadForMainFrame"B"needsResetViewStateAfterCommitLoadForMainFrame"B"dynamicViewportUpdateMode"i"waitingForEndAnimatedResize"B"waitingForCommitAfterAnimatedResize"B"animatedResizeOriginalContentWidth"d"animatedResizeOldBounds"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}"scrollOffsetToRestore"{optional<WebCore::FloatPoint>=""(?="__null_state_"c"__val_"{FloatPoint="m_x"f"m_y"f})"__engaged_"B}"unobscuredCenterToRestore"{optional<WebCore::FloatPoint>=""(?="__null_state_"c"__val_"{FloatPoint="m_x"f"m_y"f})"__engaged_"B}"scrollViewBackgroundColor"{Color="m_colorAndFlags"Q}"invokingUIScrollViewDelegateCallback"B"didDeferUpdateVisibleContentRectsForUIScrollViewDelegateCallback"B"didDeferUpdateVisibleContentRectsForAnyReason"B"didDeferUpdateVisibleContentRectsForUnstableScrollView"B"currentlyAdjustingScrollViewInsetsForKeyboard"B"hasScheduledVisibleRectUpdate"B"commitDidRestoreScrollPosition"B"avoidsUnsafeArea"B"viewportMetaTagWidthWasExplicit"B"viewportMetaTagCameFromImageDocument"B"lastSentViewLayoutSize"{optional<WebCore::FloatSize>=""(?="__null_state_"c"__val_"{FloatSize="m_width"f"m_height"f})"__engaged_"B}"lastSentDeviceOrientation"{optional<int>=""(?="__null_state_"c"__val_"i)"__engaged_"B}"lastSentOrientationForMediaCapture"{optional<int>=""(?="__null_state_"c"__val_"i)"__engaged_"B}"lastSentMinimumEffectiveDeviceWidth"{optional<double>=""(?="__null_state_"c"__val_"d)"__engaged_"B}"frozenVisibleContentRect"{optional<CGRect>=""(?="__null_state_"c"__val_"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}})"__engaged_"B}"frozenUnobscuredContentRect"{optional<CGRect>=""(?="__null_state_"c"__val_"{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}})"__engaged_"B}"firstPaintAfterCommitLoadTransactionID"{MonotonicObjectIdentifier<WebKit::TransactionIDType>="m_identifier"Q}"lastTransactionID"{MonotonicObjectIdentifier<WebKit::TransactionIDType>="m_identifier"Q}"firstTransactionIDAfterPageRestore"{optional<WebKit::MonotonicObjectIdentifier<WebKit::TransactionIDType>>=""(?="__null_state_"c"__val_"{MonotonicObjectIdentifier<WebKit::TransactionIDType>="m_identifier"Q})"__engaged_"B}"pendingFindLayerID"{ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>>="m_object"{ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}}"committedFindLayerID"{ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>>="m_object"{ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}}"liveResizeParameters"{optional<LiveResizeParameters>=""(?="__null_state_"c"__val_"{LiveResizeParameters="viewWidth"d"initialScrollPosition"{CGPoint="x"d"y"d}})"__engaged_"B}}, {RectEdges<float>="m_sides"{array<float, 4UL>="__elems_"[4f]}}, {RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>>="m_ptr"^{WebPageProxy}}, {RetainPtr<NSArray<NSNumber *>>="m_ptr"^v}, {RetainPtr<NSMutableArray>="m_ptr"^v}, {RetainPtr<NSTimer>="m_ptr"^v}, {RetainPtr<UIView<WKWebViewContentProvider>>="m_ptr"^v}, {RetainPtr<UIView>="m_ptr"^v}, {RetainPtr<WKContentView>="m_ptr"^v}, {RetainPtr<WKPasswordView>="m_ptr"^v}, {RetainPtr<WKSafeBrowsingWarning>="m_ptr"^v}, {RetainPtr<WKScrollView>="m_ptr"^v}, {RetainPtr<WKWebViewConfiguration>="m_ptr"^v}, {RetainPtr<_WKRemoteObjectRegistry>="m_ptr"^v}, {RetainPtr<id>="m_ptr"^v}, {Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^v"m_capacity"I"m_size"I}, {Vector<WTF::Function<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^v"m_capacity"I"m_size"I}, {WeakObjCPtr<id<_WKAppHighlightDelegate>>="m_weakReference"@}, {WeakObjCPtr<id<_WKInputDelegate>>="m_weakReference"@}, {WeakObjCPtr<id<_WKTextManipulationDelegate>>="m_weakReference"@}, {optional<CGSize>=""(?="__null_state_"c"__val_"{CGSize="width"d"height"d})"__engaged_"B}, {optional<WTF::MonotonicTime>=""(?="__null_state_"c"__val_"{MonotonicTime="m_value"d})"__engaged_"B}, {optional<WebCore::WheelScrollGestureState>=""(?="__null_state_"c"__val_"C)"__engaged_"B}, {optional<bool>=""(?="__null_state_"c"__val_"B)"__engaged_"B}, {unique_ptr<WebKit::IconLoadingDelegate, std::default_delete<WebKit::IconLoadingDelegate>>="__ptr_"{__compressed_pair<WebKit::IconLoadingDelegate *, std::default_delete<WebKit::IconLoadingDelegate>>="__value_"^{IconLoadingDelegate}}}, {unique_ptr<WebKit::NavigationState, std::default_delete<WebKit::NavigationState>>="__ptr_"{__compressed_pair<WebKit::NavigationState *, std::default_delete<WebKit::NavigationState>>="__value_"^{NavigationState}}}, {unique_ptr<WebKit::ResourceLoadDelegate, std::default_delete<WebKit::ResourceLoadDelegate>>="__ptr_"{__compressed_pair<WebKit::ResourceLoadDelegate *, std::default_delete<WebKit::ResourceLoadDelegate>>="__value_"^{ResourceLoadDelegate}}}, {unique_ptr<WebKit::UIDelegate, std::default_delete<WebKit::UIDelegate>>="__ptr_"{__compressed_pair<WebKit::UIDelegate *, std::default_delete<WebKit::UIDelegate>>="__value_"^{UIDelegate}}}, {unique_ptr<WebKit::ViewGestureController, std::default_delete<WebKit::ViewGestureController>>="__ptr_"{__compressed_pair<WebKit::ViewGestureController *, std::default_delete<WebKit::ViewGestureController>>="__value_"^{ViewGestureController}}};

@interface WKWebView : UIView<UIScrollViewDelegate, UIResponderStandardEditActions> {
  /* instance variables */
  struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> { struct WebPageProxy *m_ptr; } _page;
  struct unique_ptr<WebKit::NavigationState, std::default_delete<WebKit::NavigationState>> { struct __compressed_pair<WebKit::NavigationState *, std::default_delete<WebKit::NavigationState>> { struct NavigationState *__value_; } __ptr_; } _navigationState;
  struct unique_ptr<WebKit::UIDelegate, std::default_delete<WebKit::UIDelegate>> { struct __compressed_pair<WebKit::UIDelegate *, std::default_delete<WebKit::UIDelegate>> { struct UIDelegate *__value_; } __ptr_; } _uiDelegate;
  struct unique_ptr<WebKit::IconLoadingDelegate, std::default_delete<WebKit::IconLoadingDelegate>> { struct __compressed_pair<WebKit::IconLoadingDelegate *, std::default_delete<WebKit::IconLoadingDelegate>> { struct IconLoadingDelegate *__value_; } __ptr_; } _iconLoadingDelegate;
  struct unique_ptr<WebKit::ResourceLoadDelegate, std::default_delete<WebKit::ResourceLoadDelegate>> { struct __compressed_pair<WebKit::ResourceLoadDelegate *, std::default_delete<WebKit::ResourceLoadDelegate>> { struct ResourceLoadDelegate *__value_; } __ptr_; } _resourceLoadDelegate;
  struct WeakObjCPtr<id<_WKTextManipulationDelegate>> { id m_weakReference; } _textManipulationDelegate;
  struct WeakObjCPtr<id<_WKInputDelegate>> { id m_weakReference; } _inputDelegate;
  struct WeakObjCPtr<id<_WKAppHighlightDelegate>> { id m_weakReference; } _appHighlightDelegate;
  struct RetainPtr<WKSafeBrowsingWarning> { void *m_ptr; } _safeBrowsingWarning;
  struct optional<bool> { union { char __null_state_; BOOL __val_; } x0; BOOL __engaged_; } _resolutionForShareSheetImmediateCompletionForTesting;
  unsigned long long _selectionAttributes;
  unsigned long long _observedRenderingProgressEvents;
  BOOL _usePlatformFindUI;
  struct RetainPtr<WKContentView> { void *m_ptr; } _contentView;
  struct unique_ptr<WebKit::ViewGestureController, std::default_delete<WebKit::ViewGestureController>> { struct __compressed_pair<WebKit::ViewGestureController *, std::default_delete<WebKit::ViewGestureController>> { struct ViewGestureController *__value_; } __ptr_; } _gestureController;
  struct Vector<WTF::BlockPtr<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { void *m_buffer; unsigned int m_capacity; unsigned int m_size; } _visibleContentRectUpdateCallbacks;
  BOOL _findInteractionEnabled;
  struct RetainPtr<_WKRemoteObjectRegistry> { void *m_ptr; } _remoteObjectRegistry;
  struct PerWebProcessState { double viewportMetaTagWidth; double initialScaleFactor; BOOL hasCommittedLoadForMainFrame; BOOL needsResetViewStateAfterCommitLoadForMainFrame; int dynamicViewportUpdateMode; BOOL waitingForEndAnimatedResize; BOOL waitingForCommitAfterAnimatedResize; double animatedResizeOriginalContentWidth; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } animatedResizeOldBounds; struct optional<WebCore::FloatPoint> { union { char __null_state_; struct FloatPoint { float m_x; float m_y; } __val_; } x0; BOOL __engaged_; } scrollOffsetToRestore; struct optional<WebCore::FloatPoint> { union { char __null_state_; struct FloatPoint { float m_x; float m_y; } __val_; } x0; BOOL __engaged_; } unobscuredCenterToRestore; struct Color { unsigned long long m_colorAndFlags; } scrollViewBackgroundColor; BOOL invokingUIScrollViewDelegateCallback; BOOL didDeferUpdateVisibleContentRectsForUIScrollViewDelegateCallback; BOOL didDeferUpdateVisibleContentRectsForAnyReason; BOOL didDeferUpdateVisibleContentRectsForUnstableScrollView; BOOL currentlyAdjustingScrollViewInsetsForKeyboard; BOOL hasScheduledVisibleRectUpdate; BOOL commitDidRestoreScrollPosition; BOOL avoidsUnsafeArea; BOOL viewportMetaTagWidthWasExplicit; BOOL viewportMetaTagCameFromImageDocument; struct optional<WebCore::FloatSize> { union { char __null_state_; struct FloatSize { float m_width; float m_height; } __val_; } x0; BOOL __engaged_; } lastSentViewLayoutSize; struct optional<int> { union { char __null_state_; int __val_; } x0; BOOL __engaged_; } lastSentDeviceOrientation; struct optional<int> { union { char __null_state_; int __val_; } x0; BOOL __engaged_; } lastSentOrientationForMediaCapture; struct optional<double> { union { char __null_state_; double __val_; } x0; BOOL __engaged_; } lastSentMinimumEffectiveDeviceWidth; struct optional<CGRect> { union { char __null_state_; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } __val_; } x0; BOOL __engaged_; } frozenVisibleContentRect; struct optional<CGRect> { union { char __null_state_; struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } __val_; } x0; BOOL __engaged_; } frozenUnobscuredContentRect; struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long m_identifier; } firstPaintAfterCommitLoadTransactionID; struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long m_identifier; } lastTransactionID; struct optional<WebKit::MonotonicObjectIdentifier<WebKit::TransactionIDType>> { union { char __null_state_; struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long m_identifier; } __val_; } x0; BOOL __engaged_; } firstTransactionIDAfterPageRestore; struct ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>> { struct ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } m_object; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } m_processIdentifier; } pendingFindLayerID; struct ProcessQualified<WTF::ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>> { struct ObjectIdentifierGeneric<WebCore::PlatformLayerIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } m_object; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } m_processIdentifier; } committedFindLayerID; struct optional<LiveResizeParameters> { union { char __null_state_; struct LiveResizeParameters { double viewWidth; struct CGPoint { double x; double y; } initialScrollPosition; } __val_; } x0; BOOL __engaged_; } liveResizeParameters; } _perProcessState;
  struct optional<CGSize> { union { char __null_state_; struct CGSize { double width; double height; } __val_; } x0; BOOL __engaged_; } _viewLayoutSizeOverride;
  struct optional<CGSize> { union { char __null_state_; struct CGSize { double width; double height; } __val_; } x0; BOOL __engaged_; } _minimumUnobscuredSizeOverride;
  struct optional<CGSize> { union { char __null_state_; struct CGSize { double width; double height; } __val_; } x0; BOOL __engaged_; } _maximumUnobscuredSizeOverride;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _inputViewBoundsInWindow;
  BOOL _fastClickingIsDisabled;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _obscuredInsets;
  BOOL _haveSetObscuredInsets;
  BOOL _isChangingObscuredInsetsInteractively;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _unobscuredSafeAreaInsets;
  BOOL _haveSetUnobscuredSafeAreaInsets;
  BOOL _needsToPresentLockdownModeMessage;
  unsigned long long _obscuredInsetEdgesAffectedBySafeArea;
  unsigned long long _supportedInterfaceOrientations;
  long long _interfaceOrientationOverride;
  BOOL _overridesInterfaceOrientation;
  BOOL _allowsViewportShrinkToFit;
  unsigned long long _currentDynamicViewportSizeUpdateID;
  struct CATransform3D { double m11; double m12; double m13; double m14; double m21; double m22; double m23; double m24; double m31; double m32; double m33; double m34; double m41; double m42; double m43; double m44; } _resizeAnimationTransformAdjustments;
  double _animatedResizeOldMinimumEffectiveDeviceWidth;
  int _animatedResizeOldOrientation;
  struct UIEdgeInsets { double top; double left; double bottom; double right; } _animatedResizeOldObscuredInsets;
  struct RetainPtr<UIView> { void *m_ptr; } _resizeAnimationView;
  double _lastAdjustmentForScroller;
  struct RetainPtr<id> { void *m_ptr; } _endLiveResizeNotificationObserver;
  struct RectEdges<float> { struct array<float, 4UL> { float x[4] __elems_; } m_sides; } _obscuredInsetsWhenSaved;
  double _scaleToRestore;
  struct RetainPtr<UIView<WKWebViewContentProvider>> { void *m_ptr; } _customContentView;
  struct RetainPtr<UIView> { void *m_ptr; } _customContentFixedOverlayView;
  struct RetainPtr<NSTimer> { void *m_ptr; } _enclosingScrollViewScrollTimer;
  BOOL _didScrollSinceLastTimerFire;
  double _totalScrollViewBottomInsetAdjustmentForKeyboard;
  BOOL _alwaysSendNextVisibleContentRectUpdate;
  BOOL _contentViewShouldBecomeFirstResponderAfterNavigationGesture;
  struct Vector<WTF::Function<void ()>, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { void *m_buffer; unsigned int m_capacity; unsigned int m_size; } _callbacksDeferredDuringResize;
  struct RetainPtr<NSMutableArray> { void *m_ptr; } _stableStatePresentationUpdateCallbacks;
  struct RetainPtr<WKPasswordView> { void *m_ptr; } _passwordView;
  struct OptionSet<WebKit::ViewStabilityFlag> { unsigned char m_storage; } _viewStabilityWhenVisibleContentRectUpdateScheduled;
  struct optional<WebCore::WheelScrollGestureState> { union { char __null_state_; unsigned char __val_; } x0; BOOL __engaged_; } _currentScrollGestureState;
  unsigned long long _wheelEventCountInCurrentScrollGesture;
  unsigned long long _dragInteractionPolicy;
  struct MonotonicTime { double m_value; } _timeOfRequestForVisibleContentRectUpdate;
  struct MonotonicTime { double m_value; } _timeOfLastVisibleContentRectUpdate;
  struct optional<WTF::MonotonicTime> { union { char __null_state_; struct MonotonicTime { double m_value; } __val_; } x0; BOOL __engaged_; } _timeOfFirstVisibleContentRectUpdateWithPendingCommit;
  unsigned long long _focusPreservationCount;
  unsigned long long _activeFocusedStateRetainCount;
  struct RetainPtr<NSArray<NSNumber *>> { void *m_ptr; } _scrollViewDefaultAllowedTouchTypes;
}

@property (readonly, nonatomic) id _remoteObjectRegistry;
@property (readonly, nonatomic) WKBrowsingContextHandle *_handle;
@property (nonatomic) unsigned long long _observedRenderingProgressEvents;
@property (weak, nonatomic) NSObject<WKHistoryDelegatePrivate> *_historyDelegate;
@property (weak, nonatomic) NSObject<_WKIconLoadingDelegate> *_iconLoadingDelegate;
@property (weak, nonatomic) NSObject<_WKResourceLoadDelegate> *_resourceLoadDelegate;
@property (readonly, nonatomic) NSURL *_unreachableURL;
@property (readonly, nonatomic) NSURL *_mainFrameURL;
@property (readonly, nonatomic) NSURL *_resourceDirectoryURL;
@property (readonly, nonatomic) NSArray *_certificateChain;
@property (readonly, nonatomic) NSURL *_committedURL;
@property (readonly, nonatomic) NSString *_MIMEType;
@property (readonly, nonatomic) NSString *_userAgent;
@property (copy) NSString *_applicationNameForUserAgent;
@property (copy) NSString *_customUserAgent;
@property (readonly, nonatomic) BOOL _playingAudio;
@property (nonatomic) BOOL _userContentExtensionsEnabled;
@property (readonly, nonatomic) int _webProcessIdentifier;
@property (readonly, nonatomic) int _provisionalWebProcessIdentifier;
@property (readonly, nonatomic) int _gpuProcessIdentifier;
@property (nonatomic) BOOL _editable;
@property (readonly, nonatomic) BOOL _negotiatedLegacyTLS;
@property (readonly, nonatomic) BOOL _wasPrivateRelayed;
@property (readonly, nonatomic) NSData *_sessionStateData;
@property (readonly, nonatomic) _WKSessionState *_sessionState;
@property (nonatomic) BOOL _allowsRemoteInspection;
@property (copy, nonatomic) NSString *_remoteInspectionNameOverride;
@property (readonly, nonatomic) BOOL _isBeingInspected;
@property (readonly, nonatomic) _WKInspector *_inspector;
@property (readonly, nonatomic) _WKFrameHandle *_mainFrame;
@property (weak, nonatomic) NSObject<_WKTextManipulationDelegate> *_textManipulationDelegate;
@property (nonatomic) BOOL _addsVisitedLinks;
@property (readonly, nonatomic) BOOL _networkRequestsInProgress;
@property (readonly, nonatomic) BOOL _showingNavigationGestureSnapshot;
@property (readonly, nonatomic) BOOL _deferrableUserScriptsNeedNotification;
@property (nonatomic) unsigned long long _layoutMode;
@property (nonatomic) struct CGSize { double x0; double x1; } _fixedLayoutSize;
@property (nonatomic) struct CGSize { double x0; double x1; } _viewportSizeForCSSViewportUnits;
@property (nonatomic) double _viewScale;
@property (nonatomic) double _minimumEffectiveDeviceWidth;
@property (nonatomic) BOOL _backgroundExtendsBeyondPage;
@property (readonly, nonatomic) unsigned long long _selectionAttributes;
@property (readonly, nonatomic) BOOL _webProcessIsResponsive;
@property (nonatomic) long long _paginationMode;
@property (nonatomic) BOOL _paginationBehavesLikeColumns;
@property (nonatomic) double _pageLength;
@property (nonatomic) double _gapBetweenPages;
@property (nonatomic) BOOL _paginationLineGridEnabled;
@property (readonly) unsigned long long _pageCount;
@property (readonly, nonatomic) BOOL _supportsTextZoom;
@property (nonatomic) double _textZoomFactor;
@property (nonatomic) double _pageZoomFactor;
@property (weak, nonatomic) NSObject<_WKDiagnosticLoggingDelegate> *_diagnosticLoggingDelegate;
@property (weak, nonatomic) NSObject<_WKFindDelegate> *_findDelegate;
@property (weak, nonatomic) NSObject<_WKInputDelegate> *_inputDelegate;
@property (readonly, nonatomic) BOOL _displayingStandaloneImageDocument;
@property (readonly, nonatomic) BOOL _displayingStandaloneMediaDocument;
@property (nonatomic) BOOL _scrollPerformanceDataCollectionEnabled;
@property (readonly, nonatomic) NSArray *_scrollPerformanceData;
@property (nonatomic) BOOL _allowsMediaDocumentInlinePlayback;
@property (nonatomic) NSObject<_WKFullscreenDelegate> *_fullscreenDelegate;
@property (readonly, nonatomic) BOOL _isInFullscreen;
@property (readonly, nonatomic) unsigned long long _mediaCaptureState;
@property (readonly, nonatomic) unsigned long long _mediaMutedState;
@property (nonatomic) BOOL _mediaCaptureEnabled;
@property (readonly, nonatomic) BOOL _canTogglePictureInPicture;
@property (readonly, nonatomic) BOOL _isPictureInPictureActive;
@property (nonatomic) BOOL _canUseCredentialStorage;
@property (weak, nonatomic) NSObject<_WKAppHighlightDelegate> *_appHighlightDelegate;
@property (readonly, nonatomic) UIColor *_themeColor;
@property (readonly, nonatomic) UIColor *_pageExtendedBackgroundColor;
@property (readonly, nonatomic) UIColor *_sampledPageTopColor;
@property (nonatomic) double _overrideDeviceScaleFactor;
@property (readonly, nonatomic) unsigned long long _displayCaptureSurfaces;
@property (readonly, nonatomic) long long _displayCaptureState;
@property (readonly, nonatomic) long long _systemAudioCaptureState;
@property (readonly, nonatomic) BOOL _allowsAnyAnimationToPlay;
@property (readonly, copy, nonatomic) NSArray *certificateChain;
@property (readonly, nonatomic) NSString *_caLayerTreeAsText;
@property (nonatomic) double _mediaCaptureReportingDelayForTesting;
@property (readonly, nonatomic) BOOL _wirelessVideoPlaybackDisabled;
@property (nonatomic) BOOL _scrollingUpdatesDisabledForTesting;
@property (readonly, nonatomic) NSString *_scrollingTreeAsText;
@property (readonly, nonatomic) int _networkProcessIdentifier;
@property (readonly, nonatomic) unsigned long long _countOfUpdatesWithLayerChanges;
@property (readonly, nonatomic) BOOL _hasServiceWorkerBackgroundActivityForTesting;
@property (readonly, nonatomic) BOOL _hasServiceWorkerForegroundActivityForTesting;
@property (readonly, nonatomic) WKPasswordView *_passwordView;
@property (readonly, nonatomic) WKWebViewContentProviderRegistry *_contentProviderRegistry;
@property (readonly, nonatomic) long long _selectionGranularity;
@property (readonly, nonatomic) BOOL _shouldAvoidSecurityHeuristicScoreUpdates;
@property (readonly, nonatomic) BOOL _isBackground;
@property (readonly, nonatomic) BOOL _allowsDoubleTapGestures;
@property (readonly, nonatomic) BOOL _haveSetObscuredInsets;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _computedObscuredInset;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _computedUnobscuredSafeAreaInset;
@property (readonly, nonatomic) BOOL _retainingActiveFocusedState;
@property (readonly, nonatomic) int _deviceOrientationIgnoringOverrides;
@property (readonly, nonatomic) BOOL _haveSetUnobscuredSafeAreaInsets;
@property (readonly, nonatomic) BOOL _hasOverriddenLayoutParameters;
@property (readonly, nonatomic) struct optional<CGSize> { union { char x0; struct CGSize { double x0; double x1; } x1; } x0; BOOL x1; } _viewLayoutSizeOverride;
@property (readonly, nonatomic) struct optional<CGSize> { union { char x0; struct CGSize { double x0; double x1; } x1; } x0; BOOL x1; } _minimumUnobscuredSizeOverride;
@property (readonly, nonatomic) struct optional<CGSize> { union { char x0; struct CGSize { double x0; double x1; } x1; } x0; BOOL x1; } _maximumUnobscuredSizeOverride;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _contentVisibleRect;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } _minimumLayoutSizeOverride;
@property (readonly, nonatomic) struct CGSize { double x0; double x1; } _maximumUnobscuredSizeOverride;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _obscuredInsets;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } _unobscuredSafeAreaInsets;
@property (readonly, nonatomic) BOOL _safeAreaShouldAffectObscuredInsets;
@property (nonatomic) unsigned long long _obscuredInsetEdgesAffectedBySafeArea;
@property (readonly, nonatomic) UIView *_enclosingViewForExposedRectComputation;
@property (nonatomic) long long _interfaceOrientationOverride;
@property (nonatomic) BOOL _allowsViewportShrinkToFit;
@property (readonly, nonatomic) BOOL _displayingPDF;
@property (readonly, nonatomic) NSData *_dataForDisplayedPDF;
@property (readonly, nonatomic) NSString *_suggestedFilenameForDisplayedPDF;
@property (readonly, nonatomic) _WKWebViewPrintFormatter *_webViewPrintFormatter;
@property (nonatomic) unsigned long long _dragInteractionPolicy;
@property (readonly, nonatomic) BOOL _shouldAvoidResizingWhenInputViewBoundsChange;
@property (readonly, nonatomic) BOOL _contentViewIsFirstResponder;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _uiTextCaretRect;
@property (readonly, nonatomic) UIView *_safeBrowsingWarning;
@property (readonly, nonatomic) NSObject<_WKWebViewPrintProvider> *_printProvider;
@property (readonly, nonatomic) NSString *textContentTypeForTesting;
@property (readonly, nonatomic) NSString *selectFormPopoverTitle;
@property (readonly, nonatomic) NSString *formInputLabel;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _inputViewBoundsInWindow;
@property (readonly, nonatomic) NSString *_uiViewTreeAsText;
@property (readonly, nonatomic) NSNumber *_stableStateOverride;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _dragCaretRect;
@property (readonly, nonatomic) BOOL _animatingDragCancel;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _tapHighlightViewRect;
@property (readonly, nonatomic) UIGestureRecognizer *_imageAnalysisGestureRecognizer;
@property (readonly, nonatomic) UITapGestureRecognizer *_singleTapGestureRecognizer;
@property (readonly, copy, nonatomic) WKWebViewConfiguration *configuration;
@property (weak, nonatomic) NSObject<WKNavigationDelegate> *navigationDelegate;
@property (weak, nonatomic) NSObject<WKUIDelegate> *UIDelegate;
@property (readonly, nonatomic) WKBackForwardList *backForwardList;
@property (readonly, copy, nonatomic) NSString *title;
@property (readonly, copy, nonatomic) NSURL *URL;
@property (readonly, nonatomic) BOOL loading;
@property (readonly, nonatomic) double estimatedProgress;
@property (readonly, nonatomic) BOOL hasOnlySecureContent;
@property (readonly, nonatomic) struct __SecTrust * serverTrust;
@property (readonly, nonatomic) BOOL canGoBack;
@property (readonly, nonatomic) BOOL canGoForward;
@property (readonly, nonatomic) long long cameraCaptureState;
@property (readonly, nonatomic) long long microphoneCaptureState;
@property (nonatomic) BOOL allowsBackForwardNavigationGestures;
@property (copy, nonatomic) NSString *customUserAgent;
@property (nonatomic) BOOL allowsLinkPreview;
@property (readonly, nonatomic) UIScrollView *scrollView;
@property (nonatomic) double pageZoom;
@property (copy, nonatomic) NSString *mediaType;
@property (copy, nonatomic) id interactionState;
@property (readonly, nonatomic) UIColor *themeColor;
@property (copy, nonatomic) UIColor *underPageBackgroundColor;
@property (readonly, nonatomic) long long fullscreenState;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } minimumViewportInset;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } maximumViewportInset;
@property (nonatomic) BOOL inspectable;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_resetPresentLockdownModeMessage;
+ (void)_clearLockdownModeWarningNeeded;
+ (void)_setApplicationBundleIdentifier:(id)identifier;
+ (void)_clearApplicationBundleIdentifierTestingOverride;
+ (id)_stringForFind;
+ (void)_setStringForFind:(id)find;
+ (BOOL)_handlesSafeBrowsing;
+ (BOOL)_willUpgradeToHTTPS:(id)https;
+ (id)_confirmMalwareSentinel;
+ (id)_visitUnsafeWebsiteSentinel;
+ (void)_permissionChanged:(id)changed forOrigin:(id)origin;
+ (BOOL)handlesURLScheme:(id)urlscheme;
+ (BOOL)automaticallyNotifiesObserversOfUnderPageBackgroundColor;

/* instance methods */
- (void)_requestTextInputContextsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect completionHandler:(id /* block */)handler;
- (void)_focusTextInputContext:(id)context placeCaretAt:(struct CGPoint { double x0; double x1; })at completionHandler:(id /* block */)handler;
- (void)_willBeginTextInteractionInTextInputContext:(id)context;
- (void)selectWordBackwardForTesting;
- (void)_didFinishTextInteractionInTextInputContext:(id)context;
- (void)_requestDocumentContext:(id)context completionHandler:(id /* block */)handler;
- (void)_adjustSelectionWithDelta:(struct _NSRange { unsigned long long x0; unsigned long long x1; })delta completionHandler:(id /* block */)handler;
- (BOOL)_mayContainEditableElementsInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)keyboardAccessoryBarNext;
- (void)keyboardAccessoryBarPrevious;
- (void)applyAutocorrection:(id)autocorrection toString:(id)string withCompletionHandler:(id /* block */)handler;
- (void)applyAutocorrection:(id)autocorrection toString:(id)string isCandidate:(BOOL)candidate withCompletionHandler:(id /* block */)handler;
- (void)dismissFormAccessoryView;
- (id)_filePickerAcceptedTypeIdentifiers;
- (void)_dismissFilePicker;
- (void)setTimePickerValueToHour:(long long)hour minute:(long long)minute;
- (double)timePickerValueHour;
- (double)timePickerValueMinute;
- (void)selectFormAccessoryPickerRow:(int)row;
- (BOOL)selectFormAccessoryHasCheckedItemAtRow:(long long)row;
- (void)setSelectedColorForColorPicker:(id)picker;
- (void)_selectDataListOption:(int)option;
- (BOOL)_isShowingDataListSuggestions;
- (id)_propertiesOfLayerWithID:(unsigned long long)id;
- (void)_doAfterReceivingEditDragSnapshotForTesting:(id /* block */)testing;
- (BOOL)_isAnimatingDragCancel;
- (void)_simulateElementAction:(long long)action atLocation:(struct CGPoint { double x0; double x1; })location;
- (void)_simulateLongPressActionAtLocation:(struct CGPoint { double x0; double x1; })location;
- (void)_simulateTextEntered:(id)entered;
- (void)_triggerSystemPreviewActionOnElement:(unsigned long long)element document:(id)document page:(unsigned long long)page;
- (void)_setDeviceOrientationUserPermissionHandlerForTesting:(id /* block */)testing;
- (void)_setDeviceHasAGXCompilerServiceForTesting;
- (BOOL)_hasResizeAssertion;
- (void)_simulateSelectionStart;
- (Class)_printFormatterClass;
- (void)_setViewLayoutSizeOverride:(struct CGSize { double x0; double x1; })override;
- (void)_setMinimumUnobscuredSizeOverride:(struct CGSize { double x0; double x1; })override;
- (void)_setMaximumUnobscuredSizeOverride:(struct CGSize { double x0; double x1; })override;
- (void)_setObscuredInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (void)_setObscuredInsetEdgesAffectedBySafeArea:(unsigned long long)area;
- (void)_setUnobscuredSafeAreaInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (void)_setInterfaceOrientationOverride:(long long)override;
- (void)_clearInterfaceOrientationOverride;
- (void)_setAllowsViewportShrinkToFit:(BOOL)fit;
- (BOOL)_isDisplayingPDF;
- (void)_setDragInteractionPolicy:(unsigned long long)policy;
- (struct CGPoint { double x0; double x1; })_convertPointFromContentsToView:(struct CGPoint { double x0; double x1; })view;
- (struct CGPoint { double x0; double x1; })_convertPointFromViewToContents:(struct CGPoint { double x0; double x1; })contents;
- (void)_doAfterNextStablePresentationUpdate:(id /* block */)update;
- (void)_setFont:(id)font sender:(id)sender;
- (void)_setFontSize:(double)size sender:(id)sender;
- (void)_setTextColor:(id)color sender:(id)sender;
- (void)_detectDataWithTypes:(unsigned long long)types completionHandler:(id /* block */)handler;
- (void)_requestActivatedElementAtPosition:(struct CGPoint { double x0; double x1; })position completionBlock:(id /* block */)block;
- (void)didStartFormControlInteraction;
- (void)didEndFormControlInteraction;
- (void)_beginInteractiveObscuredInsetsChange;
- (void)_endInteractiveObscuredInsetsChange;
- (void)_hideContentUntilNextUpdate;
- (void)_beginAnimatedResizeWithUpdates:(id /* block */)updates;
- (void)_endAnimatedResize;
- (void)_resizeWhileHidingContentWithUpdates:(id /* block */)updates;
- (void)_setSuppressSoftwareKeyboard:(BOOL)keyboard;
- (void)_snapshotRectAfterScreenUpdates:(BOOL)updates rectInViewCoordinates:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })coordinates intoImageOfWidth:(double)width completionHandler:(id /* block */)handler;
- (void)_snapshotRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect intoImageOfWidth:(double)width completionHandler:(id /* block */)handler;
- (void)_overrideLayoutParametersWithMinimumLayoutSize:(struct CGSize { double x0; double x1; })size maximumUnobscuredSizeOverride:(struct CGSize { double x0; double x1; })override;
- (void)_clearOverrideLayoutParameters;
- (void)_overrideViewportWithArguments:(id)arguments;
- (id)_viewForFindUI;
- (void)_setOverlaidAccessoryViewsInset:(struct CGSize { double x0; double x1; })inset;
- (id /* block */)_retainActiveFocusedState;
- (void)_becomeFirstResponderWithSelectionMovingForward:(BOOL)forward completionHandler:(id /* block */)handler;
- (id)_snapshotLayerContentsForBackForwardListItem:(id)item;
- (id)_dataDetectionResults;
- (void)_accessibilityRetrieveRectsAtSelectionOffset:(long long)offset withText:(id)text completionHandler:(id /* block */)handler;
- (void)_accessibilityStoreSelection;
- (void)_accessibilityClearSelection;
- (void)_accessibilityRetrieveSpeakSelectionContent;
- (void)_accessibilityDidGetSpeakSelectionContent:(id)content;
- (id)_fullScreenPlaceholderView;
- (void)_willOpenAppLink;
- (void)_isNavigatingToAppBoundDomain:(id /* block */)domain;
- (void)_isForcedIntoAppBoundMode:(id /* block */)mode;
- (id)_textInputTraits;
- (void)setFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)layoutSubviews;
- (void)_setupScrollAndContentViews;
- (void)_registerForNotifications;
- (BOOL)_isShowingVideoPictureInPicture;
- (BOOL)_mayAutomaticallyShowVideoPictureInPicture;
- (void)_incrementFocusPreservationCount;
- (void)_decrementFocusPreservationCount;
- (unsigned long long)_resetFocusPreservationCount;
- (BOOL)_isRetainingActiveFocusedState;
- (void)_dynamicUserInterfaceTraitDidChange;
- (BOOL)_effectiveAppearanceIsDark;
- (BOOL)_effectiveUserInterfaceLevelIsElevated;
- (void)_populateArchivedSubviews:(id)subviews;
- (id)browsingContextController;
- (BOOL)becomeFirstResponder;
- (BOOL)canBecomeFirstResponder;
- (BOOL)resignFirstResponder;
- (id)undoManager;
- (void)_addShortcut:(id)shortcut;
- (void)_define:(id)_define;
- (void)_lookup:(id)_lookup;
- (void)_translate:(id)_translate;
- (void)_promptForReplace:(id)replace;
- (void)_share:(id)_share;
- (void)_showTextStyleOptions:(id)options;
- (void)_transliterateChinese:(id)chinese;
- (void)_nextAccessoryTab:(id)tab;
- (void)_previousAccessoryTab:(id)tab;
- (void)copy:(id)copy;
- (void)cut:(id)cut;
- (void)paste:(id)paste;
- (void)replace:(id)replace;
- (void)select:(id)select;
- (void)selectAll:(id)all;
- (void)toggleBoldface:(id)boldface;
- (void)toggleItalics:(id)italics;
- (void)toggleUnderline:(id)underline;
- (void)increaseSize:(id)size;
- (void)decreaseSize:(id)size;
- (void)pasteAndMatchStyle:(id)style;
- (void)makeTextWritingDirectionNatural:(id)natural;
- (void)makeTextWritingDirectionLeftToRight:(id)right;
- (void)makeTextWritingDirectionRightToLeft:(id)left;
- (BOOL)canPerformAction:(SEL)action withSender:(id)sender;
- (id)targetForAction:(SEL)action withSender:(id)sender;
- (void)willFinishIgnoringCalloutBarFadeAfterPerformingAction;
- (id)_wkScrollView;
- (id)_currentContentView;
- (void)_setHasCustomContentView:(BOOL)view loadedMIMEType:(const void *)mimetype;
- (void)_didFinishLoadingDataForCustomContentProviderWithSuggestedFilename:(const void *)filename data:(id)data;
- (BOOL)_tryToHandleKeyEventInCustomContentView:(id)view;
- (void)pressesBegan:(id)began withEvent:(id)event;
- (void)pressesChanged:(id)changed withEvent:(id)event;
- (void)pressesEnded:(id)ended withEvent:(id)event;
- (void)pressesCancelled:(id)cancelled withEvent:(id)event;
- (void)_willInvokeUIScrollViewDelegateCallback;
- (void)_didInvokeUIScrollViewDelegateCallback;
- (void)_resetCachedScrollViewBackgroundColor;
- (void)_updateScrollViewBackground;
- (void)_updateScrollViewIndicatorStyle;
- (id)_insertionPointColor;
- (void)_videoControlsManagerDidChange;
- (struct CGPoint { double x0; double x1; })_initialContentOffsetForScrollView;
- (struct CGPoint { double x0; double x1; })_contentOffsetAdjustedForObscuredInset:(struct CGPoint { double x0; double x1; })inset;
- (unsigned long long)_effectiveObscuredInsetEdgesAffectedBySafeArea;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_computedObscuredInsetForSafeBrowsingWarning;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_contentInsetsFromSystemMinimumLayoutMargins;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_computedContentInset;
- (void)_processWillSwapOrDidExit;
- (void)_processWillSwap;
- (void)_processDidExit;
- (void)_didRelaunchProcess;
- (void)_didCommitLoadForMainFrame;
- (struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })visibleRectInViewCoordinates;
- (void)_didCommitLayerTreeDuringAnimatedResize:(const void *)resize;
- (void)_trackTransactionCommit:(const void *)commit;
- (void)_updateScrollViewForTransaction:(const void *)transaction;
- (BOOL)_restoreScrollAndZoomStateForTransaction:(const void *)transaction;
- (void)_didCommitLayerTree:(const void *)tree;
- (void)_layerTreeCommitComplete;
- (void)_couldNotRestorePageState;
- (void)_restorePageScrollPosition:(struct optional<WebCore::FloatPoint> { union { char x0; struct FloatPoint { float x0; float x1; } x1; } x0; BOOL x1; })position scrollOrigin:(struct FloatPoint { float x0; float x1; })origin previousObscuredInset:(struct RectEdges<float> { struct array<float, 4UL> { float x0[4] } x0; })inset scale:(double)scale;
- (void)_restorePageStateToUnobscuredCenter:(struct optional<WebCore::FloatPoint> { union { char x0; struct FloatPoint { float x0; float x1; } x1; } x0; BOOL x1; })center scale:(double)scale;
- (struct RefPtr<WebKit::ViewSnapshot, WTF::RawPtrTraits<WebKit::ViewSnapshot>, WTF::DefaultRefDerefTraits<WebKit::ViewSnapshot>> { struct ViewSnapshot * x0; })_takeViewSnapshot;
- (void)_zoomToCenter:(struct FloatPoint { float x0; float x1; })center atScale:(double)scale animated:(BOOL)animated honorScrollability:(BOOL)scrollability;
- (void)_zoomToRect:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })rect atScale:(double)scale origin:(struct FloatPoint { float x0; float x1; })origin animated:(BOOL)animated;
- (void)_scrollToContentScrollPosition:(struct FloatPoint { float x0; float x1; })position scrollOrigin:(struct IntPoint { int x0; int x1; })origin animated:(BOOL)animated;
- (float)_adjustScrollRectToAvoidHighlightOverlay:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })overlay;
- (BOOL)_scrollToRect:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })rect origin:(struct FloatPoint { float x0; float x1; })origin minimumScrollDistance:(float)distance;
- (void)_zoomOutWithOrigin:(struct FloatPoint { float x0; float x1; })origin animated:(BOOL)animated;
- (void)_zoomToInitialScaleWithOrigin:(struct FloatPoint { float x0; float x1; })origin animated:(BOOL)animated;
- (BOOL)_selectionRectIsFullyVisibleAndNonEmpty;
- (void)_scrollToAndRevealSelectionIfNeeded;
- (void)_zoomToFocusRect:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)rect selectionRect:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)rect fontSize:(float)size minimumScale:(double)scale maximumScale:(double)scale allowScaling:(BOOL)scaling forceScroll:(BOOL)scroll;
- (double)_initialScaleFactor;
- (double)_contentZoomScale;
- (double)_targetContentZoomScaleForRect:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)rect currentScale:(double)scale fitEntireRect:(BOOL)rect minimumScale:(double)scale maximumScale:(double)scale;
- (BOOL)_zoomToRect:(struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; })rect withOrigin:(struct FloatPoint { float x0; float x1; })origin fitEntireRect:(BOOL)rect minimumScale:(double)scale maximumScale:(double)scale minimumScrollDistance:(float)distance;
- (void)didMoveToWindow;
- (void)_setOpaqueInternal:(BOOL)internal;
- (void)setOpaque:(BOOL)opaque;
- (void)setBackgroundColor:(id)color;
- (BOOL)usesStandardContentView;
- (struct CGSize { double x0; double x1; })scrollView:(id)view contentSizeForZoomScale:(double)scale withProposedSize:(struct CGSize { double x0; double x1; })size;
- (id)viewForZoomingInScrollView:(id)view;
- (void)scrollViewWillBeginZooming:(id)zooming withView:(id)view;
- (void)scrollViewWillBeginDragging:(id)dragging;
- (void)_didFinishScrolling:(id)scrolling;
- (void)scrollViewWillEndDragging:(id)dragging withVelocity:(struct CGPoint { double x0; double x1; })velocity targetContentOffset:(inout struct CGPoint { double x0; double x1; } *)offset;
- (void)scrollViewDidEndDragging:(id)dragging willDecelerate:(BOOL)decelerate;
- (void)scrollViewDidEndDecelerating:(id)decelerating;
- (void)scrollViewDidScrollToTop:(id)top;
- (struct CGPoint { double x0; double x1; })_scrollView:(id)view adjustedOffsetForOffset:(struct CGPoint { double x0; double x1; })offset translation:(struct CGPoint { double x0; double x1; })translation startPoint:(struct CGPoint { double x0; double x1; })point locationInView:(struct CGPoint { double x0; double x1; })view horizontalVelocity:(inout double *)velocity verticalVelocity:(inout double *)velocity;
- (void)scrollViewDidScroll:(id)scroll;
- (void)scrollViewDidZoom:(id)zoom;
- (void)scrollViewDidEndZooming:(id)zooming withView:(id)view atScale:(double)scale;
- (void)scrollViewDidEndScrollingAnimation:(id)animation;
- (void)_scrollViewDidInterruptDecelerating:(id)decelerating;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleRectInEnclosingView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleContentRect;
- (void)_didScroll;
- (void)_enclosingScrollerScrollingEnded:(id)ended;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_scrollViewSystemContentInset;
- (struct FloatSize { float x0; float x1; })activeViewLayoutSize:(const struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)size;
- (void)_dispatchSetViewLayoutSize:(struct FloatSize { float x0; float x1; })size;
- (void)_dispatchSetDeviceOrientation:(int)orientation;
- (void)_dispatchSetOrientationForMediaCapture:(int)capture;
- (BOOL)_updateScrollViewContentInsetsIfNecessary;
- (void)_frameOrBoundsWillChange;
- (void)_updateDrawingAreaSize;
- (void)_frameOrBoundsMayHaveChanged;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentRectForUserInteraction;
- (BOOL)_scrollViewIsRubberBanding:(id)banding;
- (BOOL)_scrollViewIsRubberBandingForRefreshControl;
- (void)_scheduleVisibleContentRectUpdate;
- (void)_scheduleForcedVisibleContentRectUpdate;
- (struct OptionSet<WebKit::ViewStabilityFlag> { unsigned char x0; })_viewStabilityState:(id)state;
- (void)_addUpdateVisibleContentRectPreCommitHandler;
- (void)_scheduleVisibleContentRectUpdateAfterScrollInView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_contentBoundsExtendedForRubberbandingWithScale:(double)scale;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })currentlyVisibleContentInsetsWithScale:(double)scale obscuredInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (BOOL)_shouldDeferGeometryUpdates;
- (struct optional<WebKit::VisibleContentRectUpdateInfo> { union { char x0; struct VisibleContentRectUpdateInfo { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct RectEdges<float> { struct array<float, 4UL> { float x0[4] } x0; } x2; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x3; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x4; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x5; struct RectEdges<float> { struct array<float, 4UL> { float x0[4] } x0; } x6; struct RectEdges<float> { struct array<float, 4UL> { float x0[4] } x0; } x7; struct VelocityData { float x0; float x1; float x2; struct MonotonicTime { double x0; } x3; } x8; struct MonotonicObjectIdentifier<WebKit::TransactionIDType> { unsigned long long x0; } x9; double x10; struct OptionSet<WebKit::ViewStabilityFlag> { unsigned char x0; } x11; BOOL x12; BOOL x13; BOOL x14; } x1; } x0; BOOL x1; })_createVisibleContentRectUpdateInfo;
- (void)_updateVisibleContentRects;
- (void)_didStartProvisionalLoadForMainFrame;
- (void)_ensureResizeAnimationView;
- (void)_destroyResizeAnimationView;
- (void)_cancelAnimatedResize;
- (void)_didCompleteAnimatedResize;
- (void)_didStopDeferringGeometryUpdates;
- (void)_didFinishNavigation:(struct Navigation *)navigation;
- (void)_didFailNavigation:(struct Navigation *)navigation;
- (void)_didSameDocumentNavigationForMainFrame:(unsigned char)frame;
- (void)_keyboardChangedWithInfo:(id)info adjustScrollView:(BOOL)view;
- (BOOL)_shouldUpdateKeyboardWithInfo:(id)info;
- (void)_keyboardWillChangeFrame:(id)frame;
- (void)_keyboardDidChangeFrame:(id)frame;
- (void)_keyboardWillShow:(id)show;
- (void)_keyboardDidShow:(id)show;
- (void)_keyboardWillHide:(id)hide;
- (void)_windowDidRotate:(id)rotate;
- (void)_contentSizeCategoryDidChange:(id)change;
- (void)_accessibilitySettingsDidChange:(id)change;
- (id)_contentSizeCategory;
- (BOOL)_isNavigationSwipeGestureRecognizer:(id)recognizer;
- (void)_navigationGestureDidBegin;
- (void)_navigationGestureDidEnd;
- (void)_showPasswordViewWithDocumentName:(id)name passwordHandler:(id /* block */)handler;
- (void)_hidePasswordView;
- (void)_didRequestPasswordForDocument;
- (void)_didStopRequestingPasswordForDocument;
- (void)_updateScrollViewInsetAdjustmentBehavior;
- (void)_resetScrollViewInsetAdjustmentBehavior;
- (void)_setAvoidsUnsafeArea:(BOOL)area;
- (void)_firePresentationUpdateForPendingStableStatePresentationCallbacks;
- (void)setSemanticContentAttribute:(long long)attribute;
- (void)buildMenuWithBuilder:(id)builder;
- (void)_presentLockdownMode;
- (void)_presentLockdownModeAlertIfNeeded;
- (long long)_effectiveDataOwner:(long long)owner;
- (void)_didAddLayerForFindOverlay:(id)overlay;
- (void)_didRemoveLayerForFindOverlay;
- (void)_resetUnobscuredSafeAreaInsets;
- (void)_resetObscuredInsets;
- (void)_addEventAttributionWithSourceID:(unsigned char)id destinationURL:(id)url sourceDescription:(id)description purchaser:(id)purchaser reportEndpoint:(id)endpoint optionalNonce:(id)nonce applicationBundleID:(id)id ephemeral:(BOOL)ephemeral;
- (void)_setPageScale:(double)scale withOrigin:(struct CGPoint { double x0; double x1; })origin;
- (double)_pageScale;
- (void)_setContinuousSpellCheckingEnabledForTesting:(BOOL)testing;
- (id)_contentsOfUserInterfaceItem:(id)item;
- (void)_requestActiveNowPlayingSessionInfo:(id /* block */)info;
- (void)_setScrollingUpdatesDisabledForTesting:(BOOL)testing;
- (void)_doAfterNextPresentationUpdateWithoutWaitingForAnimatedResizeForTesting:(id /* block */)testing;
- (void)_disableBackForwardSnapshotVolatilityForTesting;
- (BOOL)_beginBackSwipeForTesting;
- (BOOL)_completeBackSwipeForTesting;
- (void)_resetNavigationGestureStateForTesting;
- (void)_setDefersLoadingForTesting:(BOOL)testing;
- (void)_setShareSheetCompletesImmediatelyWithResolutionForTesting:(BOOL)testing;
- (void)_processWillSuspendForTesting:(id /* block */)testing;
- (void)_processWillSuspendImminentlyForTesting;
- (void)_processDidResumeForTesting;
- (void)_setThrottleStateForTesting:(int)testing;
- (void)_denyNextUserMediaRequest;
- (void)_setIndexOfGetDisplayMediaDeviceSelectedForTesting:(id)testing;
- (void)_setSystemCanPromptForGetDisplayMediaForTesting:(BOOL)testing;
- (void)_setMediaCaptureReportingDelayForTesting:(double)testing;
- (void)_doAfterProcessingAllPendingMouseEvents:(id /* block */)events;
- (BOOL)_hasSleepDisabler;
- (id)_scrollbarStateForScrollingNodeID:(unsigned long long)id isVertical:(BOOL)vertical;
- (int)_audioRoutingArbitrationStatus;
- (double)_audioRoutingArbitrationUpdateTime;
- (void)_doAfterActivityStateUpdate:(id /* block */)update;
- (id)_suspendMediaPlaybackCounter;
- (void)_setPrivateClickMeasurementOverrideTimerForTesting:(BOOL)testing completionHandler:(id /* block */)handler;
- (void)_setPrivateClickMeasurementAttributionReportURLsForTesting:(id)testing destinationURL:(id)url completionHandler:(id /* block */)handler;
- (void)_setPrivateClickMeasurementAttributionTokenPublicKeyURLForTesting:(id)testing completionHandler:(id /* block */)handler;
- (void)_setPrivateClickMeasurementAttributionTokenSignatureURLForTesting:(id)testing completionHandler:(id /* block */)handler;
- (void)_setPrivateClickMeasurementAppBundleIDForTesting:(id)testing completionHandler:(id /* block */)handler;
- (void)_dumpPrivateClickMeasurement:(id /* block */)measurement;
- (BOOL)_shouldBypassGeolocationPromptForTesting;
- (void)_didShowContextMenu;
- (void)_didDismissContextMenu;
- (void)_resetInteraction;
- (void)_didPresentContactPicker;
- (void)_didDismissContactPicker;
- (void)_dismissContactPickerWithContacts:(id)contacts;
- (void)_lastNavigationWasAppInitiated:(id /* block */)initiated;
- (void)_appPrivacyReportTestingData:(id /* block */)data;
- (void)_clearAppPrivacyReportTestingData:(id /* block */)data;
- (void)_isLayerTreeFrozenForTesting:(id /* block */)testing;
- (void)_computePagesForPrinting:(id)printing completionHandler:(id /* block */)handler;
- (void)_gpuToWebProcessConnectionCountForTesting:(id /* block */)testing;
- (void)_setConnectedToHardwareConsoleForTesting:(BOOL)testing;
- (void)_setSystemPreviewCompletionHandlerForLoadTesting:(id /* block */)testing;
- (void)_createMediaSessionCoordinatorForTesting:(id)testing completionHandler:(id /* block */)handler;
- (id)_formDelegate;
- (void)_setFormDelegate:(id)delegate;
- (void)_alignCenter:(id)center;
- (void)_alignJustified:(id)justified;
- (void)_alignLeft:(id)left;
- (void)_alignRight:(id)right;
- (void)_indent:(id)_indent;
- (void)_outdent:(id)_outdent;
- (void)_toggleStrikeThrough:(id)through;
- (void)_insertOrderedList:(id)list;
- (void)_insertUnorderedList:(id)list;
- (void)_insertNestedOrderedList:(id)list;
- (void)_insertNestedUnorderedList:(id)list;
- (void)_increaseListLevel:(id)level;
- (void)_decreaseListLevel:(id)level;
- (void)_changeListType:(id)type;
- (void)_pasteAsQuotation:(id)quotation;
- (void)_pasteAndMatchStyle:(id)style;
- (id)inputAccessoryView;
- (id)inputView;
- (id)inputAssistantItem;
- (void)_setViewportSizeForCSSViewportUnits:(struct CGSize { double x0; double x1; })units;
- (void)_didEnableBrowserExtensions:(id)extensions;
- (void)_didDisableBrowserExtensions:(id)extensions;
- (void)_frames:(id /* block */)_frames;
- (void)_frameTrees:(id /* block */)trees;
- (BOOL)_isEditable;
- (void)_setEditable:(BOOL)editable;
- (void)_executeEditCommand:(id)command argument:(id)argument completion:(id /* block */)completion;
- (void)_setTextManipulationDelegate:(id)delegate;
- (void)_startTextManipulationsWithConfiguration:(id)configuration completion:(id /* block */)completion;
- (void)_completeTextManipulation:(id)manipulation completion:(id /* block */)completion;
- (void)_completeTextManipulationForItems:(id)items completion:(id /* block */)completion;
- (void)_startImageAnalysis:(id)analysis target:(id)target;
- (void)_dataTaskWithRequest:(id)request completionHandler:(id /* block */)handler;
- (void)_takeFindStringFromSelection:(id)selection;
- (void)_setHistoryDelegate:(id)delegate;
- (void)_updateMediaPlaybackControlsManager;
- (void)_togglePictureInPicture;
- (void)_pauseAllAnimationsWithCompletionHandler:(id /* block */)handler;
- (void)_playAllAnimationsWithCompletionHandler:(id /* block */)handler;
- (BOOL)_allowAnimationControls;
- (void)_closeAllMediaPresentations;
- (void)_stopMediaCapture;
- (void)_stopAllMediaPlayback;
- (void)_suspendAllMediaPlayback;
- (void)_resumeAllMediaPlayback;
- (void)_restoreAppHighlights:(id)highlights;
- (void)_restoreAndScrollToAppHighlight:(id)highlight;
- (void)_addAppHighlight;
- (void)_addAppHighlightInNewGroup:(BOOL)group originatedInApp:(BOOL)app;
- (void)_loadAlternateHTMLString:(id)htmlstring baseURL:(id)url forUnreachableURL:(id)url;
- (id)_loadData:(id)data MIMEType:(id)mimetype characterEncodingName:(id)name baseURL:(id)url userData:(id)data;
- (id)_loadRequest:(id)request shouldOpenExternalURLs:(BOOL)urls;
- (id)_loadRequest:(id)request shouldOpenExternalURLsPolicy:(long long)policy;
- (void)_loadServiceWorker:(id)worker usingModules:(BOOL)modules completionHandler:(id /* block */)handler;
- (void)_loadServiceWorker:(id)worker completionHandler:(id /* block */)handler;
- (void)_grantAccessToAssetServices;
- (void)_revokeAccessToAssetServices;
- (void)_disableURLSchemeCheckInDataDetectors;
- (void)_switchFromStaticFontRegistryToUserFontRegistry;
- (void)_didLoadAppInitiatedRequest:(id /* block */)request;
- (void)_didLoadNonAppInitiatedRequest:(id /* block */)request;
- (void)_suspendPage:(id /* block */)page;
- (void)_resumePage:(id /* block */)page;
- (void)_setApplicationNameForUserAgent:(id)agent;
- (void)_setCustomUserAgent:(id)agent;
- (void)_setUserContentExtensionsEnabled:(BOOL)enabled;
- (void)_killWebContentProcess;
- (id)_reloadWithoutContentBlockers;
- (id)_reloadExpiredOnly;
- (void)_killWebContentProcessAndResetState;
- (void)_takePDFSnapshotWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)_getPDFFirstPageSizeInFrame:(id)frame completionHandler:(id /* block */)handler;
- (id)_sessionStateWithFilter:(id /* block */)filter;
- (void)_restoreFromSessionStateData:(id)data;
- (id)_restoreSessionState:(id)state andNavigate:(BOOL)navigate;
- (void)_close;
- (BOOL)_tryClose;
- (BOOL)_isClosed;
- (id)_insertAttachmentWithFilename:(id)filename contentType:(id)type data:(id)data options:(id)options completion:(id /* block */)completion;
- (id)_insertAttachmentWithFileWrapper:(id)wrapper contentType:(id)type options:(id)options completion:(id /* block */)completion;
- (id)_insertAttachmentWithFileWrapper:(id)wrapper contentType:(id)type completion:(id /* block */)completion;
- (id)_attachmentForIdentifier:(id)identifier;
- (void)_simulateDeviceOrientationChangeWithAlpha:(double)alpha beta:(double)beta gamma:(double)gamma;
- (void)_launchInitialProcessIfNecessary;
- (void)_clearBackForwardCache;
- (void)_showSafeBrowsingWarningWithTitle:(id)title warning:(id)warning details:(id)details completionHandler:(id /* block */)handler;
- (void)_showSafeBrowsingWarningWithURL:(id)url title:(id)title warning:(id)warning details:(id)details completionHandler:(id /* block */)handler;
- (void)_showSafeBrowsingWarningWithURL:(id)url title:(id)title warning:(id)warning detailsWithLinks:(id)links completionHandler:(id /* block */)handler;
- (void)_isJITEnabled:(id /* block */)jitenabled;
- (void)_evaluateJavaScriptWithoutUserGesture:(id)gesture completionHandler:(id /* block */)handler;
- (void)_callAsyncJavaScript:(id)script arguments:(id)arguments inFrame:(id)frame inContentWorld:(id)world completionHandler:(id /* block */)handler;
- (BOOL)_allMediaPresentationsClosed;
- (void)_evaluateJavaScript:(id)script inFrame:(id)frame inContentWorld:(id)world completionHandler:(id /* block */)handler;
- (void)_evaluateJavaScript:(id)script withSourceURL:(id)url inFrame:(id)frame inContentWorld:(id)world completionHandler:(id /* block */)handler;
- (void)_updateWebpagePreferences:(id)preferences;
- (void)_notifyUserScripts;
- (void)_setAllowsRemoteInspection:(BOOL)inspection;
- (void)_setRemoteInspectionNameOverride:(id)override;
- (void)_setAddsVisitedLinks:(BOOL)links;
- (void)_setObservedRenderingProgressEvents:(unsigned long long)events;
- (void)_getMainResourceDataWithCompletionHandler:(id /* block */)handler;
- (void)_getWebArchiveDataWithCompletionHandler:(id /* block */)handler;
- (void)_getContentsAsStringWithCompletionHandler:(id /* block */)handler;
- (void)_getContentsAsStringWithCompletionHandlerKeepIPCConnectionAliveForTesting:(id /* block */)testing;
- (void)_getContentsOfAllFramesAsStringWithCompletionHandler:(id /* block */)handler;
- (void)_getContentsAsAttributedStringWithCompletionHandler:(id /* block */)handler;
- (void)_getApplicationManifestWithCompletionHandler:(id /* block */)handler;
- (void)_getTextFragmentMatchWithCompletionHandler:(id /* block */)handler;
- (void)_setPaginationMode:(long long)mode;
- (void)_setPaginationBehavesLikeColumns:(BOOL)columns;
- (void)_setPageLength:(double)length;
- (void)_setGapBetweenPages:(double)pages;
- (void)_setPaginationLineGridEnabled:(BOOL)enabled;
- (void)_setTextZoomFactor:(double)factor;
- (void)_setPageZoomFactor:(double)factor;
- (void)_setDiagnosticLoggingDelegate:(id)delegate;
- (void)_setFindDelegate:(id)delegate;
- (void)_countStringMatches:(id)matches options:(unsigned long long)options maxCount:(unsigned long long)count;
- (void)_findString:(id)string options:(unsigned long long)options maxCount:(unsigned long long)count;
- (void)_hideFindUI;
- (void)_saveBackForwardSnapshotForItem:(id)item;
- (void)_serviceWorkersEnabled:(id /* block */)enabled;
- (void)_clearServiceWorkerEntitlementOverride:(id /* block */)override;
- (void)_preconnectToServer:(id)server;
- (void)_setCanUseCredentialStorage:(BOOL)storage;
- (void)_setInputDelegate:(id)delegate;
- (BOOL)_isDisplayingStandaloneImageDocument;
- (BOOL)_isDisplayingStandaloneMediaDocument;
- (BOOL)_isPlayingAudio;
- (BOOL)_isShowingNavigationGestureSnapshot;
- (void)_setLayoutMode:(unsigned long long)mode;
- (void)_setFixedLayoutSize:(struct CGSize { double x0; double x1; })size;
- (void)_setBackgroundExtendsBeyondPage:(BOOL)page;
- (void)_setViewScale:(double)scale;
- (void)_getProcessDisplayNameWithCompletionHandler:(id /* block */)handler;
- (void)_setMinimumEffectiveDeviceWidth:(double)width;
- (void)_setScrollPerformanceDataCollectionEnabled:(BOOL)enabled;
- (void)_setAllowsMediaDocumentInlinePlayback:(BOOL)playback;
- (void)_setFullscreenDelegate:(id)delegate;
- (void)_setMediaCaptureEnabled:(BOOL)enabled;
- (void)_setPageMuted:(unsigned long long)muted;
- (void)_removeDataDetectedLinks:(id /* block */)links;
- (void)_doAfterNextPresentationUpdate:(id /* block */)update;
- (void)_doAfterNextPresentationUpdateWithoutWaitingForPainting:(id /* block */)painting;
- (void)_doAfterNextVisibleContentRectUpdate:(id /* block */)update;
- (void)_setDisplayCaptureState:(long long)state completionHandler:(id /* block */)handler;
- (void)_setSystemAudioCaptureState:(long long)state completionHandler:(id /* block */)handler;
- (void)_setOverrideDeviceScaleFactor:(double)factor;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (BOOL)_isValid;
- (void)_initializeWithConfiguration:(id)configuration;
- (void)_setupPageConfiguration:(void *)configuration;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame configuration:(id)configuration;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)dealloc;
- (id)valueForUndefinedKey:(id)key;
- (void)_setIconLoadingDelegate:(id)delegate;
- (void)_setResourceLoadDelegate:(id)delegate;
- (id)loadRequest:(id)request;
- (id)loadFileURL:(id)url allowingReadAccessToURL:(id)url;
- (id)loadHTMLString:(id)htmlstring baseURL:(id)url;
- (id)loadData:(id)data MIMEType:(id)mimetype characterEncodingName:(id)name baseURL:(id)url;
- (void)startDownloadUsingRequest:(id)request completionHandler:(id /* block */)handler;
- (void)resumeDownloadFromResumeData:(id)data completionHandler:(id /* block */)handler;
- (id)goToBackForwardListItem:(id)item;
- (BOOL)isLoading;
- (id)goBack;
- (id)goForward;
- (id)reload;
- (id)reloadFromOrigin;
- (void)stopLoading;
- (void)evaluateJavaScript:(id)script completionHandler:(id /* block */)handler;
- (void)evaluateJavaScript:(id)script inFrame:(id)frame inContentWorld:(id)world completionHandler:(id /* block */)handler;
- (void)callAsyncJavaScript:(id)script arguments:(id)arguments inFrame:(id)frame inContentWorld:(id)world completionHandler:(id /* block */)handler;
- (void)closeAllMediaPresentations;
- (void)closeAllMediaPresentations:(id /* block */)presentations;
- (void)closeAllMediaPresentationsWithCompletionHandler:(id /* block */)handler;
- (void)pauseAllMediaPlayback:(id /* block */)playback;
- (void)pauseAllMediaPlaybackWithCompletionHandler:(id /* block */)handler;
- (void)resumeAllMediaPlayback:(id /* block */)playback;
- (void)suspendAllMediaPlayback:(id /* block */)playback;
- (void)setAllMediaPlaybackSuspended:(BOOL)suspended completionHandler:(id /* block */)handler;
- (void)requestMediaPlaybackState:(id /* block */)state;
- (void)requestMediaPlaybackStateWithCompletionHandler:(id /* block */)handler;
- (void)setMicrophoneCaptureState:(long long)state completionHandler:(id /* block */)handler;
- (void)setCameraCaptureState:(long long)state completionHandler:(id /* block */)handler;
- (void)_evaluateJavaScript:(id)script asAsyncFunction:(BOOL)function withSourceURL:(id)url withArguments:(id)arguments forceUserGesture:(BOOL)gesture inFrame:(id)frame inWorld:(id)world completionHandler:(id /* block */)handler;
- (void)takeSnapshotWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)findString:(id)string withConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (BOOL)isInspectable;
- (void)_showSafeBrowsingWarning:(const void *)warning completionHandler:(void *)handler;
- (void)_clearSafeBrowsingWarning;
- (void)_clearSafeBrowsingWarningIfForMainFrameNavigation;
- (void)_internalDoAfterNextPresentationUpdate:(id /* block */)update withoutWaitingForPainting:(BOOL)painting withoutWaitingForAnimatedResize:(BOOL)resize;
- (void)_doAfterNextVisibleContentRectAndPresentationUpdate:(id /* block */)update;
- (void)_recalculateViewportSizesWithMinimumViewportInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })inset maximumViewportInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })inset throwOnInvalidInput:(BOOL)input;
- (void)_didInsertAttachment:(void *)attachment withSource:(id)source;
- (void)_didRemoveAttachment:(void *)attachment;
- (void)_didInvalidateDataForAttachment:(void *)attachment;
- (void)_setAppHighlightDelegate:(id)delegate;
- (struct OpaqueWKPage *)_pageForTesting;
- (struct NakedPtr<WebKit::WebPageProxy> { struct WebPageProxy * x0; })_page;
- (struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; })_resolutionForShareSheetImmediateCompletionForTesting;
- (void)createPDFWithConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)createWebArchiveDataWithCompletionHandler:(id /* block */)handler;
- (void)_didChangeEditorState;
- (id)loadSimulatedRequest:(id)request response:(id)response responseData:(id)data;
- (id)loadSimulatedRequest:(id)request withResponse:(id)response responseData:(id)data;
- (id)loadSimulatedRequest:(id)request responseHTMLString:(id)htmlstring;
- (id)loadSimulatedRequest:(id)request withResponseHTMLString:(id)htmlstring;
- (id)loadFileRequest:(id)request allowingReadAccessToURL:(id)url;
- (void)setMinimumViewportInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })inset maximumViewportInset:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })inset;
@end

#endif /* WKWebView_h */
