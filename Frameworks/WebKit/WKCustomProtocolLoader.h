//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKCustomProtocolLoader_h
#define WKCustomProtocolLoader_h
@import Foundation;

#include "NSURLConnectionDelegate-Protocol.h"

@class NSString;
@protocol {ObjectIdentifierGeneric<WebKit::LegacyCustomProtocolIDType, WTF::ObjectIdentifierThreadSafeAccessTraits>="m_identifier"Q}, {RetainPtr<NSURLConnection>="m_ptr"^v}, {WeakPtr<WebKit::LegacyCustomProtocolManagerProxy, WTF::DefaultWeakPtrImpl>="m_impl"{RefPtr<WTF::DefaultWeakPtrImpl, WTF::RawPtrTraits<WTF::DefaultWeakPtrImpl>, WTF::DefaultRefDerefTraits<WTF::DefaultWeakPtrImpl>>="m_ptr"^{DefaultWeakPtrImpl}}};

@interface WKCustomProtocolLoader : NSObject<NSURLConnectionDelegate> {
  /* instance variables */
  struct WeakPtr<WebKit::LegacyCustomProtocolManagerProxy, WTF::DefaultWeakPtrImpl> { struct RefPtr<WTF::DefaultWeakPtrImpl, WTF::RawPtrTraits<WTF::DefaultWeakPtrImpl>, WTF::DefaultRefDerefTraits<WTF::DefaultWeakPtrImpl>> { struct DefaultWeakPtrImpl *m_ptr; } m_impl; } _customProtocolManagerProxy;
  struct ObjectIdentifierGeneric<WebKit::LegacyCustomProtocolIDType, WTF::ObjectIdentifierThreadSafeAccessTraits> { unsigned long long m_identifier; } _customProtocolID;
  unsigned long long _storagePolicy;
  struct RetainPtr<NSURLConnection> { void *m_ptr; } _urlConnection;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithLegacyCustomProtocolManagerProxy:(void *)proxy customProtocolID:(struct ObjectIdentifierGeneric<WebKit::LegacyCustomProtocolIDType, WTF::ObjectIdentifierThreadSafeAccessTraits> { unsigned long long x0; })id request:(id)request;
- (void)dealloc;
- (void)cancel;
- (void)connection:(id)connection didFailWithError:(id)error;
- (id)connection:(id)connection willCacheResponse:(id)response;
- (void)connection:(id)connection didReceiveResponse:(id)response;
- (void)connection:(id)connection didReceiveData:(id)data;
- (id)connection:(id)connection willSendRequest:(id)request redirectResponse:(id)response;
- (void)connectionDidFinishLoading:(id)loading;
@end

#endif /* WKCustomProtocolLoader_h */
