//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef _WKWebExtensionContext_h
#define _WKWebExtensionContext_h
@import Foundation;

#include "WKWebView.h"

@class NSArray, NSDictionary, NSSet, NSString, NSURL;
@protocol _WKWebExtensionWindow;

@interface _WKWebExtensionContext : NSObject

@property (nonatomic) BOOL _testingMode;
@property (readonly, nonatomic) WKWebView *_backgroundWebView;
@property (readonly, nonatomic) NSURL *_backgroundContentURL;
@property (readonly, nonatomic) _WKWebExtension *webExtension;
@property (readonly, weak, nonatomic) _WKWebExtensionController *webExtensionController;
@property (readonly, nonatomic) BOOL loaded;
@property (copy, nonatomic) NSURL *baseURL;
@property (copy, nonatomic) NSString *uniqueIdentifier;
@property (nonatomic) BOOL inspectable;
@property (copy, nonatomic) NSDictionary *grantedPermissions;
@property (copy, nonatomic) NSDictionary *grantedPermissionMatchPatterns;
@property (copy, nonatomic) NSDictionary *deniedPermissions;
@property (copy, nonatomic) NSDictionary *deniedPermissionMatchPatterns;
@property (nonatomic) BOOL requestedOptionalAccessToAllHosts;
@property (readonly, copy, nonatomic) NSSet *currentPermissions;
@property (readonly, copy, nonatomic) NSSet *currentPermissionMatchPatterns;
@property (readonly, nonatomic) BOOL hasAccessToAllURLs;
@property (readonly, nonatomic) BOOL hasAccessToAllHosts;
@property (readonly, copy, nonatomic) NSArray *openWindows;
@property (readonly, weak, nonatomic) NSObject<_WKWebExtensionWindow> *focusedWindow;
@property (readonly, copy, nonatomic) NSSet *openTabs;

/* class methods */
+ (id)contextForExtension:(id)extension;

/* instance methods */
- (id)initForExtension:(id)extension;
- (BOOL)isLoaded;
- (BOOL)isInspectable;
- (BOOL)hasPermission:(id)permission;
- (BOOL)hasPermission:(id)permission inTab:(id)tab;
- (BOOL)hasAccessToURL:(id)url;
- (BOOL)hasAccessToURL:(id)url inTab:(id)tab;
- (long long)permissionStatusForPermission:(id)permission;
- (long long)permissionStatusForPermission:(id)permission inTab:(id)tab;
- (void)setPermissionStatus:(long long)status forPermission:(id)permission;
- (void)setPermissionStatus:(long long)status forPermission:(id)permission expirationDate:(id)date;
- (long long)permissionStatusForURL:(id)url;
- (long long)permissionStatusForURL:(id)url inTab:(id)tab;
- (void)setPermissionStatus:(long long)status forURL:(id)url;
- (void)setPermissionStatus:(long long)status forURL:(id)url expirationDate:(id)date;
- (long long)permissionStatusForMatchPattern:(id)pattern;
- (long long)permissionStatusForMatchPattern:(id)pattern inTab:(id)tab;
- (void)setPermissionStatus:(long long)status forMatchPattern:(id)pattern;
- (void)setPermissionStatus:(long long)status forMatchPattern:(id)pattern expirationDate:(id)date;
- (BOOL)hasInjectedContentForURL:(id)url;
- (BOOL)hasActiveUserGestureInTab:(id)tab;
- (void)didOpenWindow:(id)window;
- (void)didCloseWindow:(id)window;
- (void)didFocusWindow:(id)window;
- (void)didOpenTab:(id)tab;
- (void)didCloseTab:(id)tab windowIsClosing:(BOOL)closing;
- (void)didActivateTab:(id)tab;
- (void)didSelectTabs:(id)tabs;
- (void)didMoveTab:(id)tab fromIndex:(unsigned long long)index inWindow:(id)window;
- (void)didReplaceTab:(id)tab withTab:(id)tab;
- (void)didChangeTabProperties:(unsigned long long)properties forTab:(id)tab;
- (BOOL)_inTestingMode;
- (void)_setTestingMode:(BOOL)mode;
@end

#endif /* _WKWebExtensionContext_h */
