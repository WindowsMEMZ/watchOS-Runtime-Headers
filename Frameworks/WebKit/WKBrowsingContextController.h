//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKBrowsingContextController_h
#define WKBrowsingContextController_h
@import Foundation;

#include "WKBackForwardList.h"
#include "WKBrowsingContextHandle.h"

@class NSArray, NSString, NSURL;
@protocol WKBrowsingContextHistoryDelegate, WKBrowsingContextLoadDelegate, WKBrowsingContextPolicyDelegate, {RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>>="m_ptr"^{WebPageProxy}}, {WeakObjCPtr<id<WKBrowsingContextHistoryDelegate>>="m_weakReference"@}, {WeakObjCPtr<id<WKBrowsingContextLoadDelegate>>="m_weakReference"@}, {WeakObjCPtr<id<WKBrowsingContextPolicyDelegate>>="m_weakReference"@}, {unique_ptr<WebKit::PageLoadStateObserver, std::default_delete<WebKit::PageLoadStateObserver>>="__ptr_"{__compressed_pair<WebKit::PageLoadStateObserver *, std::default_delete<WebKit::PageLoadStateObserver>>="__value_"^{PageLoadStateObserver}}};

@interface WKBrowsingContextController : NSObject {
  /* instance variables */
  struct RefPtr<WebKit::WebPageProxy, WTF::RawPtrTraits<WebKit::WebPageProxy>, WTF::DefaultRefDerefTraits<WebKit::WebPageProxy>> { struct WebPageProxy *m_ptr; } _page;
  struct unique_ptr<WebKit::PageLoadStateObserver, std::default_delete<WebKit::PageLoadStateObserver>> { struct __compressed_pair<WebKit::PageLoadStateObserver *, std::default_delete<WebKit::PageLoadStateObserver>> { struct PageLoadStateObserver *__value_; } __ptr_; } _pageLoadStateObserver;
}

@property (readonly) struct OpaqueWKPage * _pageRef;
@property (readonly) BOOL hasOnlySecureContent;
@property unsigned long long paginationMode;
@property BOOL paginationBehavesLikeColumns;
@property double pageLength;
@property double gapBetweenPages;
@property BOOL paginationLineGridEnabled;
@property (readonly) unsigned long long pageCount;
@property (readonly, nonatomic) WKBrowsingContextHandle *handle;
@property (readonly, nonatomic) _WKRemoteObjectRegistry *_remoteObjectRegistry;
@property (readonly, nonatomic) int processIdentifier;
@property (weak) NSObject<WKBrowsingContextLoadDelegate> *loadDelegate;
@property (weak) NSObject<WKBrowsingContextPolicyDelegate> *policyDelegate;
@property (weak) NSObject<WKBrowsingContextHistoryDelegate> *historyDelegate;
@property (copy) NSString *applicationNameForUserAgent;
@property (copy) NSString *customUserAgent;
@property (readonly) BOOL canGoForward;
@property (readonly) BOOL canGoBack;
@property (readonly) WKBackForwardList *backForwardList;
@property (readonly) BOOL loading;
@property (readonly) NSURL *activeURL;
@property (readonly) NSURL *provisionalURL;
@property (readonly) NSURL *committedURL;
@property (readonly) NSURL *unreachableURL;
@property (readonly) double estimatedProgress;
@property (readonly) NSString *title;
@property (readonly) NSArray *certificateChain;
@property double textZoom;
@property double pageZoom;

/* class methods */
+ (void)registerSchemeForCustomProtocol:(id)protocol;
+ (void)unregisterSchemeForCustomProtocol:(id)protocol;
+ (id)customSchemes;
+ (id)_browsingContextControllerForPageRef:(struct OpaqueWKPage *)ref;

/* instance methods */
- (BOOL)_webProcessIsResponsive;
- (void)dealloc;
- (void)loadRequest:(id)request;
- (void)loadRequest:(id)request userData:(id)data;
- (void)loadFileURL:(id)url restrictToFilesWithin:(id)within;
- (void)loadFileURL:(id)url restrictToFilesWithin:(id)within userData:(id)data;
- (void)loadHTMLString:(id)htmlstring baseURL:(id)url;
- (void)loadHTMLString:(id)htmlstring baseURL:(id)url userData:(id)data;
- (void)loadAlternateHTMLString:(id)htmlstring baseURL:(id)url forUnreachableURL:(id)url;
- (void)loadData:(id)data MIMEType:(id)mimetype textEncodingName:(id)name baseURL:(id)url;
- (void)loadData:(id)data MIMEType:(id)mimetype textEncodingName:(id)name baseURL:(id)url userData:(id)data;
- (void)stopLoading;
- (void)reload;
- (void)reloadFromOrigin;
- (void)goForward;
- (void)goBack;
- (void)goToBackForwardListItem:(id)item;
- (BOOL)isLoading;
- (id)_initWithPageRef:(struct OpaqueWKPage *)ref;
@end

#endif /* WKBrowsingContextController_h */
