//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKActionSheetAssistant_h
#define WKActionSheetAssistant_h
@import Foundation;

#include "WKActionSheetAssistantDelegate-Protocol.h"
#include "WKActionSheetDelegate-Protocol.h"

@protocol {RetainPtr<WKActionSheet>="m_ptr"^v}, {RetainPtr<_WKActivatedElementInfo>="m_ptr"^v}, {WeakObjCPtr<UIView>="m_weakReference"@}, {WeakObjCPtr<id<WKActionSheetAssistantDelegate>>="m_weakReference"@}, {optional<WebKit::InteractionInformationAtPosition>=""(?="__null_state_"c"__val_"{InteractionInformationAtPosition="request"{InteractionInformationRequest="point"{IntPoint="m_x"i"m_y"i}"includeSnapshot"B"includeLinkIndicator"B"includeCaretContext"B"includeHasDoubleClickHandler"B"includeImageData"B"gatherAnimations"B"linkIndicatorShouldHaveLegacyMargins"B"disallowUserAgentShadowContent"B}"canBeValid"B"nodeAtPositionHasDoubleClickHandler"{optional<bool>=""(?="__null_state_"c"__val_"B)"__engaged_"B}"selectability"C"isSelected"B"prefersDraggingOverTextSelection"B"isNearMarkedText"B"touchCalloutEnabled"B"isLink"B"isImage"B"isAttachment"B"isAnimatedImage"B"isAnimating"B"canShowAnimationControls"B"isPausedVideo"B"isElement"B"isContentEditable"B"containerScrollingNodeID"Q"preventTextInteraction"B"elementContainsImageOverlay"B"shouldNotUseIBeamInEditableContent"B"isImageOverlayText"B"isVerticalWritingMode"B"adjustedPointForNodeRespondingToClickEvents"{FloatPoint="m_x"f"m_y"f}"url"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_hasOpaquePath"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageURL"{URL="m_string"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"m_isValid"b1"m_protocolIsInHTTPFamily"b1"m_hasOpaquePath"b1"m_portLength"b3"m_schemeEnd"b26"m_userStart"I"m_userEnd"I"m_passwordEnd"I"m_hostEnd"I"m_pathAfterLastSlash"I"m_pathEnd"I"m_queryEnd"I}"imageMIMEType"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"title"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"idAttribute"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"bounds"{IntRect="m_location"{IntPoint="m_x"i"m_y"i}"m_size"{IntSize="m_width"i"m_height"i}}"image"{RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>="m_ptr"^{ShareableBitmap}}"textBefore"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"textAfter"{String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}"caretLength"f"lineCaretExtent"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"cursor"{optional<WebCore::Cursor>=""(?="__null_state_"c"__val_"{Cursor="m_type"i"m_image"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"m_hotSpot"{IntPoint="m_x"i"m_y"i}"m_platformCursor"^v})"__engaged_"B}"linkIndicator"{TextIndicatorData="selectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textBoundingRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"contentImageWithoutSelectionRectInRootViewCoordinates"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"textRectsInBoundingRectCoordinates"{Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{FloatRect}"m_capacity"I"m_size"I}"contentImageScaleFactor"f"contentImageWithHighlight"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImageWithoutSelection"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"contentImage"{RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>>="m_ptr"^{Image}}"estimatedBackgroundColor"{Color="m_colorAndFlags"Q}"presentationTransition"C"options"{OptionSet<WebCore::TextIndicatorOption>="m_storage"S}}"elementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}})"__engaged_"B}"hostImageOrVideoElementContext"{optional<WebCore::ElementContext>=""(?="__null_state_"c"__val_"{ElementContext="boundingRect"{FloatRect="m_location"{FloatPoint="m_x"f"m_y"f}"m_size"{FloatSize="m_width"f"m_height"f}}"webPageIdentifier"{ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}"documentIdentifier"{ProcessQualified<WTF::UUID>="m_object"{UUID="m_data"T}"m_processIdentifier"{ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}}"elementIdentifier"{ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits>="m_identifier"Q}})"__engaged_"B}})"__engaged_"B};

@interface WKActionSheetAssistant : NSObject<WKActionSheetDelegate> {
  /* instance variables */
  struct RetainPtr<WKActionSheet> { void *m_ptr; } _interactionSheet;
  struct RetainPtr<_WKActivatedElementInfo> { void *m_ptr; } _elementInfo;
  struct optional<WebKit::InteractionInformationAtPosition> { union { char __null_state_; struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int m_x; int m_y; } point; BOOL includeSnapshot; BOOL includeLinkIndicator; BOOL includeCaretContext; BOOL includeHasDoubleClickHandler; BOOL includeImageData; BOOL gatherAnimations; BOOL linkIndicatorShouldHaveLegacyMargins; BOOL disallowUserAgentShadowContent; } request; BOOL canBeValid; struct optional<bool> { union { char __null_state_; BOOL __val_; } x0; BOOL __engaged_; } nodeAtPositionHasDoubleClickHandler; unsigned char selectability; BOOL isSelected; BOOL prefersDraggingOverTextSelection; BOOL isNearMarkedText; BOOL touchCalloutEnabled; BOOL isLink; BOOL isImage; BOOL isAttachment; BOOL isAnimatedImage; BOOL isAnimating; BOOL canShowAnimationControls; BOOL isPausedVideo; BOOL isElement; BOOL isContentEditable; unsigned long long containerScrollingNodeID; BOOL preventTextInteraction; BOOL elementContainsImageOverlay; BOOL shouldNotUseIBeamInEditableContent; BOOL isImageOverlayText; BOOL isVerticalWritingMode; struct FloatPoint { float m_x; float m_y; } adjustedPointForNodeRespondingToClickEvents; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned int x :1 m_isValid; unsigned int x :1 m_protocolIsInHTTPFamily; unsigned int x :1 m_hasOpaquePath; unsigned int x :3 m_portLength; unsigned int x :26 m_schemeEnd; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } url; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } m_string; unsigned int x :1 m_isValid; unsigned int x :1 m_protocolIsInHTTPFamily; unsigned int x :1 m_hasOpaquePath; unsigned int x :3 m_portLength; unsigned int x :26 m_schemeEnd; unsigned int m_userStart; unsigned int m_userEnd; unsigned int m_passwordEnd; unsigned int m_hostEnd; unsigned int m_pathAfterLastSlash; unsigned int m_pathEnd; unsigned int m_queryEnd; } imageURL; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } imageMIMEType; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } title; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } idAttribute; struct IntRect { struct IntPoint { int m_x; int m_y; } m_location; struct IntSize { int m_width; int m_height; } m_size; } bounds; struct RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>> { struct ShareableBitmap *m_ptr; } image; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } textBefore; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } textAfter; float caretLength; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } lineCaretExtent; struct optional<WebCore::Cursor> { union { char __null_state_; struct Cursor { int m_type; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image *m_ptr; } m_image; struct IntPoint { int m_x; int m_y; } m_hotSpot; void *m_platformCursor; } __val_; } x0; BOOL __engaged_; } cursor; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } selectionRectInRootViewCoordinates; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } textBoundingRectInRootViewCoordinates; struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } contentImageWithoutSelectionRectInRootViewCoordinates; struct Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct FloatRect *m_buffer; unsigned int m_capacity; unsigned int m_size; } textRectsInBoundingRectCoordinates; float contentImageScaleFactor; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image *m_ptr; } contentImageWithHighlight; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image *m_ptr; } contentImageWithoutSelection; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image *m_ptr; } contentImage; struct Color { unsigned long long m_colorAndFlags; } estimatedBackgroundColor; unsigned char presentationTransition; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short m_storage; } options; } linkIndicator; struct optional<WebCore::ElementContext> { union { char __null_state_; struct ElementContext { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } boundingRect; struct ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } webPageIdentifier; struct ProcessQualified<WTF::UUID> { struct UUID { unsigned int128 m_data; } m_object; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } m_processIdentifier; } documentIdentifier; struct ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } elementIdentifier; } __val_; } x0; BOOL __engaged_; } elementContext; struct optional<WebCore::ElementContext> { union { char __null_state_; struct ElementContext { struct FloatRect { struct FloatPoint { float m_x; float m_y; } m_location; struct FloatSize { float m_width; float m_height; } m_size; } boundingRect; struct ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } webPageIdentifier; struct ProcessQualified<WTF::UUID> { struct UUID { unsigned int128 m_data; } m_object; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } m_processIdentifier; } documentIdentifier; struct ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long m_identifier; } elementIdentifier; } __val_; } x0; BOOL __engaged_; } hostImageOrVideoElementContext; } __val_; } x0; BOOL __engaged_; } _positionInformation;
  struct WeakObjCPtr<UIView> { id m_weakReference; } _view;
  BOOL _isPresentingDDUserInterface;
  BOOL _hasPendingActionSheet;
}

@property (weak, nonatomic) NSObject<WKActionSheetAssistantDelegate> *delegate;
@property (nonatomic) BOOL needsLinkIndicator;

/* instance methods */
- (id)initWithView:(id)view;
- (void)dealloc;
- (BOOL)synchronouslyRetrievePositionInformation;
- (id)superviewForSheet;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_presentationRectForSheetGivenPoint:(struct CGPoint { double x0; double x1; })point inHostView:(id)view;
- (id)hostViewForSheet;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })presentationRectForElementUsingClosestIndicatedRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })presentationRectForIndicatedElement;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })initialPresentationRectInHostViewForSheet;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })presentationRectInHostViewForSheet;
- (void)updatePositionInformation;
- (BOOL)presentSheet;
- (void)updateSheetPosition;
- (BOOL)isShowingSheet;
- (void)interactionDidStartWithPositionInformation:(const void *)information;
- (struct optional<WebKit::InteractionInformationAtPosition> { union { char x0; struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; } x0; BOOL x1; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x2; unsigned char x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; unsigned long long x17; BOOL x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; struct FloatPoint { float x0; float x1; } x23; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x0; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :3; unsigned int x5 :26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x24; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x0; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :3; unsigned int x5 :26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x25; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x26; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x27; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x28; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x29; struct RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>> { struct ShareableBitmap * x0; } x30; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x31; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x32; float x33; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x34; struct optional<WebCore::Cursor> { union { char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x1; struct IntPoint { int x0; int x1; } x2; void * x3; } x1; } x0; BOOL x1; } x35; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct FloatRect * x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x5; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x6; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x7; struct Color { unsigned long long x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x36; struct optional<WebCore::ElementContext> { union { char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; struct ProcessQualified<WTF::UUID> { struct UUID { unsigned int128 x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; } x2; struct ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x3; } x1; } x0; BOOL x1; } x37; struct optional<WebCore::ElementContext> { union { char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; struct ProcessQualified<WTF::UUID> { struct UUID { unsigned int128 x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; } x2; struct ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x3; } x1; } x0; BOOL x1; } x38; } x1; } x0; BOOL x1; })currentPositionInformation;
- (void)_createSheetWithElementActions:(id)actions defaultTitle:(id)title showLinkTitle:(BOOL)title;
- (void)showImageSheet;
- (long long)_presentationStyleForPositionInfo:(const void *)info elementInfo:(id)info;
- (void)_appendOpenActionsForURL:(id)url actions:(id)actions elementInfo:(id)info;
- (void)_appendAnimationAction:(id)action elementInfo:(id)info;
- (struct RetainPtr<NSArray<_WKElementAction *>> { void * x0; })defaultActionsForLinkSheet:(id)sheet;
- (struct RetainPtr<NSArray<_WKElementAction *>> { void * x0; })defaultActionsForImageSheet:(id)sheet;
- (void)showLinkSheet;
- (void)showDataDetectorsUIForPositionInformation:(const void *)information;
- (void)handleElementActionWithType:(long long)type element:(id)element needsInteraction:(BOOL)interaction;
- (void)cleanupSheet;
- (id)currentlyAvailableActionTitles;
@end

#endif /* WKActionSheetAssistant_h */
