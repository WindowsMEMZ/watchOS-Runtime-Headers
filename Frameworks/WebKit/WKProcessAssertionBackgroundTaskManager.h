//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKProcessAssertionBackgroundTaskManager_h
#define WKProcessAssertionBackgroundTaskManager_h
@import Foundation;

#include "RBSAssertionObserving-Protocol.h"

@class NSString;
@protocol {RetainPtr<RBSAssertion>="m_ptr"^v}, {ThreadSafeWeakHashSet<WebKit::ProcessAndUIAssertion>="m_map"{HashMap<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>, WTF::DefaultHash<const WebKit::ProcessAndUIAssertion *>, WTF::HashTraits<const WebKit::ProcessAndUIAssertion *>, WTF::HashTraits<WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>, WTF::HashTableTraits>="m_impl"{HashTable<const WebKit::ProcessAndUIAssertion *, WTF::KeyValuePair<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>>, WTF::DefaultHash<const WebKit::ProcessAndUIAssertion *>, WTF::HashMap<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>::KeyValuePairTraits, WTF::HashTraits<const WebKit::ProcessAndUIAssertion *>>=""(?="m_table"^v"m_tableForLLDB"^I)}}"m_operationCountSinceLastCleanup"I"m_maxOperationCountWithoutCleanup"I"m_lock"{Lock="m_byte"{Atomic<unsigned char>="value"{atomic<unsigned char>="__a_"{__cxx_atomic_impl<unsigned char, std::__cxx_atomic_base_impl<unsigned char>>="__a_value"AC}}}}}, {atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}, {unique_ptr<WebKit::ProcessStateMonitor, std::default_delete<WebKit::ProcessStateMonitor>>="__ptr_"{__compressed_pair<WebKit::ProcessStateMonitor *, std::default_delete<WebKit::ProcessStateMonitor>>="__value_"^{ProcessStateMonitor}}};

@interface WKProcessAssertionBackgroundTaskManager : NSObject<RBSAssertionObserving> {
  /* instance variables */
  struct RetainPtr<RBSAssertion> { void *m_ptr; } _backgroundTask;
  struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } _backgroundTaskWasInvalidated;
  struct ThreadSafeWeakHashSet<WebKit::ProcessAndUIAssertion> { struct HashMap<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>, WTF::DefaultHash<const WebKit::ProcessAndUIAssertion *>, WTF::HashTraits<const WebKit::ProcessAndUIAssertion *>, WTF::HashTraits<WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>, WTF::HashTableTraits> { struct HashTable<const WebKit::ProcessAndUIAssertion *, WTF::KeyValuePair<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>>, WTF::DefaultHash<const WebKit::ProcessAndUIAssertion *>, WTF::HashMap<const WebKit::ProcessAndUIAssertion *, WTF::RefPtr<WTF::ThreadSafeWeakPtrControlBlock, WTF::RawPtrTraits<WTF::ThreadSafeWeakPtrControlBlock>, WTF::ThreadSafeWeakPtrControlBlockRefDerefTraits>>::KeyValuePairTraits, WTF::HashTraits<const WebKit::ProcessAndUIAssertion *>> { union { void *m_table; unsigned int *m_tableForLLDB; } x0; } m_impl; } m_map; unsigned int m_operationCountSinceLastCleanup; unsigned int m_maxOperationCountWithoutCleanup; struct Lock { struct Atomic<unsigned char> { struct atomic<unsigned char> { struct __cxx_atomic_impl<unsigned char, std::__cxx_atomic_base_impl<unsigned char>> { atomic  __a_value; unsigned char x0; } __a_; } value; } m_byte; } m_lock; } _assertionsNeedingBackgroundTask;
  id /* block */ _pendingTaskReleaseTask;
  struct unique_ptr<WebKit::ProcessStateMonitor, std::default_delete<WebKit::ProcessStateMonitor>> { struct __compressed_pair<WebKit::ProcessStateMonitor *, std::default_delete<WebKit::ProcessStateMonitor>> { struct ProcessStateMonitor *__value_; } __ptr_; } m_processStateMonitor;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)shared;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)addAssertionNeedingBackgroundTask:(void *)task;
- (void)removeAssertionNeedingBackgroundTask:(void *)task;
- (void)_notifyAssertionsOfImminentSuspension;
- (void)_scheduleReleaseTask;
- (void)_cancelPendingReleaseTask;
- (BOOL)_hasBackgroundTask;
- (void)_updateBackgroundTask;
- (void)assertionWillInvalidate:(id)invalidate;
- (void)assertion:(id)assertion didInvalidateWithError:(id)error;
- (void)_handleBackgroundTaskExpiration;
- (void)_handleBackgroundTaskExpirationOnMainThread;
- (void)_releaseBackgroundTask;
- (void)setProcessStateMonitorEnabled:(BOOL)enabled;
@end

#endif /* WKProcessAssertionBackgroundTaskManager_h */
