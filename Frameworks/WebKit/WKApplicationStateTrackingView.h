//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKApplicationStateTrackingView_h
#define WKApplicationStateTrackingView_h
@import Foundation;

#include "UIView.h"

@class UIView;
@protocol {WeakObjCPtr<WKWebView>="m_weakReference"@}, {unique_ptr<WebKit::ApplicationStateTracker, std::default_delete<WebKit::ApplicationStateTracker>>="__ptr_"{__compressed_pair<WebKit::ApplicationStateTracker *, std::default_delete<WebKit::ApplicationStateTracker>>="__value_"^{ApplicationStateTracker}}};

@interface WKApplicationStateTrackingView : UIView {
  /* instance variables */
  struct WeakObjCPtr<WKWebView> { id m_weakReference; } _webViewToTrack;
  struct unique_ptr<WebKit::ApplicationStateTracker, std::default_delete<WebKit::ApplicationStateTracker>> { struct __compressed_pair<WebKit::ApplicationStateTracker *, std::default_delete<WebKit::ApplicationStateTracker>> { struct ApplicationStateTracker *__value_; } __ptr_; } _applicationStateTracker;
}

@property (readonly, nonatomic) BOOL isBackground;
@property (readonly, nonatomic) UIView *_contentView;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame webView:(id)view;
- (void)willMoveToWindow:(id)window;
- (void)didMoveToWindow;
- (void)_applicationDidEnterBackground;
- (void)_applicationDidFinishSnapshottingAfterEnteringBackground;
- (void)_applicationWillEnterForeground;
- (void)_willBeginSnapshotSequence;
- (void)_didCompleteSnapshotSequence;
@end

#endif /* WKApplicationStateTrackingView_h */
