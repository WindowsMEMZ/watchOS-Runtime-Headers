//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKRemoteObjectEncoder_h
#define WKRemoteObjectEncoder_h
@import Foundation;

#include "NSCoder.h"

@protocol {HashSet<NSObject *, WTF::DefaultHash<NSObject *>, WTF::HashTraits<NSObject *>, WTF::HashTableTraits>="m_impl"{HashTable<NSObject *, NSObject *, WTF::IdentityExtractor, WTF::DefaultHash<NSObject *>, WTF::HashTraits<NSObject *>, WTF::HashTraits<NSObject *>>=""(?="m_table"^@"m_tableForLLDB"^I)}}, {RefPtr<API::Dictionary, WTF::RawPtrTraits<API::Dictionary>, WTF::DefaultRefDerefTraits<API::Dictionary>>="m_ptr"^{Dictionary}};

@interface WKRemoteObjectEncoder : NSCoder {
  /* instance variables */
  struct RefPtr<API::Dictionary, WTF::RawPtrTraits<API::Dictionary>, WTF::DefaultRefDerefTraits<API::Dictionary>> { struct Dictionary *m_ptr; } _rootDictionary;
  void * _objectStream;
  void * _currentDictionary;
  struct HashSet<NSObject *, WTF::DefaultHash<NSObject *>, WTF::HashTraits<NSObject *>, WTF::HashTableTraits> { struct HashTable<NSObject *, NSObject *, WTF::IdentityExtractor, WTF::DefaultHash<NSObject *>, WTF::HashTraits<NSObject *>, WTF::HashTraits<NSObject *>> { union { m_tableForLLDB * *m_table; unsigned int * x0; } x0; } m_impl; } _objectsBeingEncoded;
}

/* instance methods */
- (id)init;
- (void *)rootObjectDictionary;
- (void)encodeValueOfObjCType:(const char *)ctype at:(const void *)at;
- (BOOL)allowsKeyedCoding;
- (void)encodeObject:(id)object forKey:(id)key;
- (void)encodeBytes:(const char *)bytes length:(unsigned long long)length forKey:(id)key;
- (void)encodeBool:(BOOL)bool forKey:(id)key;
- (void)encodeInt:(int)int forKey:(id)key;
- (void)encodeInt32:(int)int32 forKey:(id)key;
- (void)encodeInt64:(long long)int64 forKey:(id)key;
- (void)encodeInteger:(long long)integer forKey:(id)key;
- (void)encodeFloat:(float)float forKey:(id)key;
- (void)encodeDouble:(double)double forKey:(id)key;
- (BOOL)requiresSecureCoding;
@end

#endif /* WKRemoteObjectEncoder_h */
