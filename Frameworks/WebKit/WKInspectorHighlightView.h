//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKInspectorHighlightView_h
#define WKInspectorHighlightView_h
@import Foundation;

#include "UIView.h"

@protocol {RetainPtr<NSMutableArray<CAShapeLayer *>>="m_ptr"^v}, {optional<WebCore::InspectorOverlayHighlight>=""(?="__null_state_"c"__val_"{InspectorOverlayHighlight="contentColor"{Color="m_colorAndFlags"Q}"contentOutlineColor"{Color="m_colorAndFlags"Q}"paddingColor"{Color="m_colorAndFlags"Q}"borderColor"{Color="m_colorAndFlags"Q}"marginColor"{Color="m_colorAndFlags"Q}"type"C"quads"{Vector<WebCore::FloatQuad, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{FloatQuad}"m_capacity"I"m_size"I}"gridHighlightOverlays"{Vector<WebCore::InspectorOverlayHighlight::GridHighlightOverlay, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{GridHighlightOverlay}"m_capacity"I"m_size"I}"flexHighlightOverlays"{Vector<WebCore::InspectorOverlayHighlight::FlexHighlightOverlay, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{FlexHighlightOverlay}"m_capacity"I"m_size"I}"usePageCoordinates"B})"__engaged_"B};

@interface WKInspectorHighlightView : UIView {
  /* instance variables */
  struct RetainPtr<NSMutableArray<CAShapeLayer *>> { void *m_ptr; } _layers;
  struct optional<WebCore::InspectorOverlayHighlight> { union { char __null_state_; struct InspectorOverlayHighlight { struct Color { unsigned long long m_colorAndFlags; } contentColor; struct Color { unsigned long long m_colorAndFlags; } contentOutlineColor; struct Color { unsigned long long m_colorAndFlags; } paddingColor; struct Color { unsigned long long m_colorAndFlags; } borderColor; struct Color { unsigned long long m_colorAndFlags; } marginColor; unsigned char type; struct Vector<WebCore::FloatQuad, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct FloatQuad *m_buffer; unsigned int m_capacity; unsigned int m_size; } quads; struct Vector<WebCore::InspectorOverlayHighlight::GridHighlightOverlay, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct GridHighlightOverlay *m_buffer; unsigned int m_capacity; unsigned int m_size; } gridHighlightOverlays; struct Vector<WebCore::InspectorOverlayHighlight::FlexHighlightOverlay, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct FlexHighlightOverlay *m_buffer; unsigned int m_capacity; unsigned int m_size; } flexHighlightOverlays; BOOL usePageCoordinates; } __val_; } x0; BOOL __engaged_; } _highlight;
}

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (void)_removeAllLayers;
- (void)_createLayers:(unsigned long long)layers;
- (void)_layoutForNodeHighlight:(const void *)highlight offset:(unsigned int)offset;
- (void)_layoutForNodeListHighlight:(const void *)highlight;
- (void)_layoutForRectsHighlight:(const void *)highlight;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)update:(const void *)update scale:(double)scale frame:(const struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } *)frame;
@end

#endif /* WKInspectorHighlightView_h */
