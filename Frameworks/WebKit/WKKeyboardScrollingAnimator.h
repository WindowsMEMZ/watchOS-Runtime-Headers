//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKKeyboardScrollingAnimator_h
#define WKKeyboardScrollingAnimator_h
@import Foundation;

#include "WKKeyboardScrollableInternal-Protocol.h"

@protocol {RetainPtr<CADisplayLink>="m_ptr"^v}, {optional<WebCore::KeyboardScroll>=""(?="__null_state_"c"__val_"{KeyboardScroll="offset"{FloatSize="m_width"f"m_height"f}"maximumVelocity"{FloatSize="m_width"f"m_height"f}"force"{FloatSize="m_width"f"m_height"f}"granularity"C"direction"C})"__engaged_"B};

@interface WKKeyboardScrollingAnimator : NSObject {
  /* instance variables */
  NSObject<WKKeyboardScrollableInternal> *_scrollable;
  struct RetainPtr<CADisplayLink> { void *m_ptr; } _displayLink;
  struct optional<WebCore::KeyboardScroll> { union { char __null_state_; struct KeyboardScroll { struct FloatSize { float m_width; float m_height; } offset; struct FloatSize { float m_width; float m_height; } maximumVelocity; struct FloatSize { float m_width; float m_height; } force; unsigned char granularity; unsigned char direction; } __val_; } x0; BOOL __engaged_; } _currentScroll;
  BOOL _scrollTriggeringKeyIsPressed;
  struct FloatSize { float m_width; float m_height; } _velocity;
  struct FloatPoint { float m_x; float m_y; } _idealPosition;
  struct FloatPoint { float m_x; float m_y; } _currentPosition;
  struct FloatPoint { float m_x; float m_y; } _idealPositionForMinimumTravel;
}

/* instance methods */
- (id)init;
- (id)initWithScrollable:(id)scrollable;
- (void)invalidate;
- (struct optional<WebCore::KeyboardScroll> { union { char x0; struct KeyboardScroll { struct FloatSize { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; struct FloatSize { float x0; float x1; } x2; unsigned char x3; unsigned char x4; } x1; } x0; BOOL x1; })keyboardScrollForEvent:(id)event;
- (BOOL)beginWithEvent:(id)event;
- (void)handleKeyEvent:(id)event;
- (void)stopAnimatedScroll;
- (BOOL)scrollTriggeringKeyIsPressed;
- (void)willStartInteractiveScroll;
- (void)startDisplayLinkIfNeeded;
- (void)stopDisplayLink;
- (void)stopScrollingImmediately;
- (void)displayLinkFired:(id)fired;
@end

#endif /* WKKeyboardScrollingAnimator_h */
