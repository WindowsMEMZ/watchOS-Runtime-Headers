//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef _WKActivatedElementInfo_h
#define _WKActivatedElementInfo_h
@import Foundation;

@class NSDictionary, NSString, NSURL, UIImage;
@protocol {RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>>="m_ptr"^{ShareableBitmap}}, {RetainPtr<NSDictionary>="m_ptr"^v}, {RetainPtr<NSString>="m_ptr"^v}, {RetainPtr<NSURL>="m_ptr"^v}, {RetainPtr<UIImage>="m_ptr"^v}, {Vector<WebCore::ElementAnimationContext, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc>="m_buffer"^{ElementAnimationContext}"m_capacity"I"m_size"I};

@interface _WKActivatedElementInfo : NSObject {
  /* instance variables */
  struct IntPoint { int m_x; int m_y; } _interactionLocation;
  struct RetainPtr<UIImage> { void *m_ptr; } _cocoaImage;
  struct Vector<WebCore::ElementAnimationContext, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct ElementAnimationContext *m_buffer; unsigned int m_capacity; unsigned int m_size; } _animationsUnderElement;
  BOOL _animatedImage;
  BOOL _isImage;
  BOOL _isUsingAlternateURLForImage;
}

@property (readonly, nonatomic) NSString *imageMIMEType;
@property (readonly, nonatomic) struct IntPoint { int x0; int x1; } _interactionLocation;
@property (readonly, nonatomic) BOOL _isImage;
@property (readonly, nonatomic) BOOL _isUsingAlternateURLForImage;
@property (readonly, nonatomic) const void * _animationsUnderElement;
@property (readonly, nonatomic) NSURL *URL;
@property (readonly, nonatomic) NSURL *imageURL;
@property (readonly, nonatomic) NSString *title;
@property (readonly, nonatomic) long long type;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } boundingRect;
@property (readonly, nonatomic) NSString *ID;
@property (readonly, nonatomic) BOOL isAnimatedImage;
@property (readonly, nonatomic) BOOL isAnimating;
@property (readonly, nonatomic) BOOL canShowAnimationControls;
@property (readonly, nonatomic) NSDictionary *userInfo;
@property (readonly, copy, nonatomic) UIImage *image;

/* class methods */
+ (id)activatedElementInfoWithInteractionInformationAtPosition:(const void *)position userInfo:(id)info;

/* instance methods */
- (id)_initWithInteractionInformationAtPosition:(const void *)position isUsingAlternateURLForImage:(BOOL)image userInfo:(id)info;
- (id)_initWithType:(long long)type URL:(id)url information:(const void *)information;
- (id)_initWithType:(long long)type image:(void *)image information:(const void *)information;
- (id)_initWithType:(long long)type URL:(id)url imageURL:(id)url information:(const void *)information;
- (id)_initWithType:(long long)type URL:(id)url image:(void *)image information:(const void *)information;
- (id)_initWithType:(long long)type URL:(id)url imageURL:(id)url userInfo:(id)info information:(const void *)information;
- (id)_initWithType:(long long)type URL:(id)url imageURL:(id)url image:(void *)image userInfo:(id)info information:(const void *)information;
- (id)_initWithType:(long long)type URL:(id)url imageURL:(id)url location:(const struct IntPoint { int x0; int x1; } *)location title:(id)title ID:(id)id rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect image:(void *)image imageMIMEType:(id)mimetype isAnimatedImage:(BOOL)image isAnimating:(BOOL)animating canShowAnimationControls:(BOOL)controls animationsUnderElement:(struct Vector<WebCore::ElementAnimationContext, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct ElementAnimationContext * x0; unsigned int x1; unsigned int x2; })element userInfo:(id)info;
@end

#endif /* _WKActivatedElementInfo_h */
