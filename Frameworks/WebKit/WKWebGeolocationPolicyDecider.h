//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKWebGeolocationPolicyDecider_h
#define WKWebGeolocationPolicyDecider_h
@import Foundation;

@protocol {Deque<std::unique_ptr<PermissionRequest>, 0UL>="m_start"Q"m_end"Q"m_buffer"{VectorBuffer<std::unique_ptr<PermissionRequest>, 0UL, WTF::FastMalloc>="m_buffer"^v"m_capacity"I"m_size"I}}, {RetainPtr<NSMutableDictionary>="m_ptr"^v}, {RetainPtr<NSObject<OS_dispatch_queue> *>="m_ptr"^v}, {unique_ptr<PermissionRequest, std::default_delete<PermissionRequest>>="__ptr_"{__compressed_pair<PermissionRequest *, std::default_delete<PermissionRequest>>="__value_"^{PermissionRequest}}};

@interface WKWebGeolocationPolicyDecider : NSObject {
  /* instance variables */
  struct RetainPtr<NSObject<OS_dispatch_queue> *> { void *m_ptr; } _diskDispatchQueue;
  struct RetainPtr<NSMutableDictionary> { void *m_ptr; } _sites;
  struct Deque<std::unique_ptr<PermissionRequest>, 0UL> { unsigned long long m_start; unsigned long long m_end; struct VectorBuffer<std::unique_ptr<PermissionRequest>, 0UL, WTF::FastMalloc> { void *m_buffer; unsigned int m_capacity; unsigned int m_size; } m_buffer; } _challenges;
  struct unique_ptr<PermissionRequest, std::default_delete<PermissionRequest>> { struct __compressed_pair<PermissionRequest *, std::default_delete<PermissionRequest>> { struct PermissionRequest *__value_; } __ptr_; } _activeChallenge;
}

/* class methods */
+ (id)sharedPolicyDecider;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)decidePolicyForGeolocationRequestFromOrigin:(const void *)origin requestingURL:(id)url view:(id)view listener:(id)listener;
- (void)_executeNextChallenge;
- (void)_finishActiveChallenge:(BOOL)challenge;
- (void)clearCache;
- (id)_siteFileInContainerDirectory:(id)directory creatingIntermediateDirectoriesIfNecessary:(BOOL)necessary;
- (id)_siteFile;
- (void)_loadWithCompletionHandler:(id /* block */)handler;
- (void)_save;
- (long long)_getChallengeCountFromHistoryForToken:(id)token requestingURL:(id)url;
- (void)_addChallengeCount:(long long)count forToken:(id)token requestingURL:(id)url;
@end

#endif /* WKWebGeolocationPolicyDecider_h */
