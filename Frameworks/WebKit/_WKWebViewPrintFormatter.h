//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef _WKWebViewPrintFormatter_h
#define _WKWebViewPrintFormatter_h
@import Foundation;

#include "UIViewPrintFormatter.h"

@protocol {Condition="m_hasWaiters"{Atomic<bool>="value"{atomic<bool>="__a_"{__cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>>="__a_value"AB}}}}, {Lock="m_byte"{Atomic<unsigned char>="value"{atomic<unsigned char>="__a_"{__cxx_atomic_impl<unsigned char, std::__cxx_atomic_base_impl<unsigned char>>="__a_value"AC}}}}, {RetainPtr<CGImage *>="m_ptr"^v}, {RetainPtr<CGPDFDocument *>="m_ptr"^v}, {RetainPtr<_WKFrameHandle>="m_ptr"^v};

@interface _WKWebViewPrintFormatter : UIViewPrintFormatter {
  /* instance variables */
  BOOL _suppressPageCountRecalc;
  struct Lock { struct Atomic<unsigned char> { struct atomic<unsigned char> { struct __cxx_atomic_impl<unsigned char, std::__cxx_atomic_base_impl<unsigned char>> { atomic  __a_value; unsigned char x0; } __a_; } value; } m_byte; } _printLock;
  struct Condition { struct Atomic<bool> { struct atomic<bool> { struct __cxx_atomic_impl<bool, std::__cxx_atomic_base_impl<bool>> { atomic  __a_value; BOOL x0; } __a_; } value; } m_hasWaiters; } _printCompletionCondition;
  struct RetainPtr<CGPDFDocument *> { void *m_ptr; } _printedDocument;
  struct RetainPtr<CGImage *> { void *m_ptr; } _printPreviewImage;
}

@property (retain, nonatomic) _WKFrameHandle *frameToPrint;
@property (nonatomic) BOOL snapshotFirstPage;

/* instance methods */
- (BOOL)requiresMainThread;
- (id)_webView;
- (BOOL)_shouldDrawUsingBitmap;
- (struct CGPDFDocument *)_printedDocument;
- (void)_setPrintedDocument:(struct CGPDFDocument *)document;
- (struct CGImage *)_printPreviewImage;
- (void)_setPrintPreviewImage:(struct CGImage *)image;
- (void)_waitForPrintedDocumentOrImage;
- (void)_setSnapshotPaperRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_invalidatePrintRenderingState;
- (long long)_recalcPageCount;
- (void)_setNeedsRecalc;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rectForPageAtIndex:(long long)index;
- (void)drawInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect forPageAtIndex:(long long)index;
- (void)_drawInRectUsingBitmap:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bitmap forPageAtIndex:(long long)index;
- (void)_drawInRectUsingPDF:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })pdf forPageAtIndex:(long long)index;
@end

#endif /* _WKWebViewPrintFormatter_h */
