//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKProcessPool_h
#define WKProcessPool_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "WKGeolocationProviderIOS.h"
#include "WKObject-Protocol.h"

@class NSString, NSURL;
@protocol _WKAutomationDelegate, _WKDownloadDelegate, _WKGeolocationCoreLocationProvider, {ObjectStorage<WebKit::WebProcessPool>="data"{type="__lx"[912C]}}, {RetainPtr<WKGeolocationProviderIOS>="m_ptr"^v}, {RetainPtr<_WKAutomationSession>="m_ptr"^v}, {RetainPtr<id<_WKGeolocationCoreLocationProvider>>="m_ptr"^v}, {WeakObjCPtr<id<_WKAutomationDelegate>>="m_weakReference"@}, {WeakObjCPtr<id<_WKDownloadDelegate>>="m_weakReference"@};

@interface WKProcessPool : NSObject<WKObject, NSSecureCoding> {
  /* instance variables */
  struct ObjectStorage<WebKit::WebProcessPool> { struct type { unsigned char x[912] __lx; } data; } _processPool;
  struct WeakObjCPtr<id<_WKAutomationDelegate>> { id m_weakReference; } _automationDelegate;
  struct WeakObjCPtr<id<_WKDownloadDelegate>> { id m_weakReference; } _downloadDelegate;
  struct RetainPtr<_WKAutomationSession> { void *m_ptr; } _automationSession;
  struct RetainPtr<WKGeolocationProviderIOS> { void *m_ptr; } _geolocationProvider;
  struct RetainPtr<id<_WKGeolocationCoreLocationProvider>> { void *m_ptr; } _coreLocationProvider;
}

@property (readonly, nonatomic) _WKProcessPoolConfiguration *_configuration;
@property (weak, nonatomic) NSObject<_WKDownloadDelegate> *_downloadDelegate;
@property (weak, nonatomic) NSObject<_WKAutomationDelegate> *_automationDelegate;
@property (nonatomic) NSObject<_WKGeolocationCoreLocationProvider> *_coreLocationProvider;
@property (copy, nonatomic) NSURL *_javaScriptConfigurationDirectory;
@property (nonatomic) BOOL _cookieStoragePartitioningEnabled;
@property (readonly) WKGeolocationProviderIOS *_geolocationProvider;
@property (readonly) struct Object { undefined * * x0; void * x1; } * _apiObject;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_sharedProcessPool;
+ (id)_allProcessPoolsForTesting;
+ (id)_websiteDataURLForContainerWithURL:(id)url;
+ (id)_websiteDataURLForContainerWithURL:(id)url bundleIdentifierIfNotInContainer:(id)container;
+ (void)_forceGameControllerFramework;
+ (void)_setLinkedOnOrBeforeEverythingForTesting;
+ (void)_setLinkedOnOrAfterEverythingForTesting;
+ (void)_setLinkedOnOrAfterEverything;
+ (void)_setCaptivePortalModeEnabledGloballyForTesting:(BOOL)testing;
+ (BOOL)_lockdownModeEnabledGloballyForTesting;
+ (void)_clearCaptivePortalModeEnabledGloballyForTesting;
+ (void)_setWebProcessCountLimit:(unsigned int)limit;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)_setAllowsSpecificHTTPSCertificate:(id)httpscertificate forHost:(id)host;
- (void)_registerURLSchemeAsCanDisplayOnlyIfCanRequest:(id)request;
- (void)_registerURLSchemeAsSecure:(id)secure;
- (void)_registerURLSchemeAsBypassingContentSecurityPolicy:(id)policy;
- (void)_setDomainRelaxationForbiddenForURLScheme:(id)urlscheme;
- (void)_setCanHandleHTTPSServerTrustEvaluation:(BOOL)evaluation;
- (id)_objectForBundleParameter:(id)parameter;
- (void)_setObject:(id)object forBundleParameter:(id)parameter;
- (void)_setObjectsForBundleParametersWithDictionary:(id)dictionary;
- (void)_setDownloadDelegate:(id)delegate;
- (void)_setAutomationDelegate:(id)delegate;
- (void)_warmInitialProcess;
- (void)_automationCapabilitiesDidChange;
- (void)_setAutomationSession:(id)session;
- (void)_setJavaScriptConfigurationDirectory:(id)directory;
- (void)_addSupportedPlugin:(id)plugin named:(id)named withMimeTypes:(id)types withExtensions:(id)extensions;
- (void)_clearSupportedPlugins;
- (void)_terminateServiceWorkers;
- (void)_setUseSeparateServiceWorkerProcess:(BOOL)process;
- (int)_prewarmedProcessIdentifier;
- (void)_clearWebProcessCache;
- (unsigned long long)_webProcessCount;
- (int)_gpuProcessIdentifier;
- (BOOL)_hasAudibleMediaActivity;
- (BOOL)_requestWebProcessTermination:(int)termination;
- (BOOL)_isWebProcessSuspended:(int)suspended;
- (void)_makeNextWebProcessLaunchFailForTesting;
- (BOOL)_hasPrewarmedWebProcess;
- (unsigned long long)_webProcessCountIgnoringPrewarmed;
- (unsigned long long)_webProcessCountIgnoringPrewarmedAndCached;
- (unsigned long long)_webPageContentProcessCount;
- (void)_preconnectToServer:(id)server;
- (unsigned long long)_pluginProcessCount;
- (unsigned long long)_maximumSuspendedPageCount;
- (unsigned long long)_processCacheCapacity;
- (unsigned long long)_processCacheSize;
- (unsigned long long)_serviceWorkerProcessCount;
- (BOOL)_isCookieStoragePartitioningEnabled;
- (void)_setCookieStoragePartitioningEnabled:(BOOL)enabled;
- (void)_setCoreLocationProvider:(id)provider;
- (id)_downloadURLRequest:(id)urlrequest websiteDataStore:(id)store originatingWebView:(id)view;
- (id)_resumeDownloadFromData:(id)data websiteDataStore:(id)store path:(id)path originatingWebView:(id)view;
- (void)_getActivePagesOriginsInWebProcessForTesting:(int)testing completionHandler:(id /* block */)handler;
- (void)_clearPermanentCredentialsForProtectionSpace:(id)space;
- (void)_seedResourceLoadStatisticsForTestingWithFirstParty:(id)party thirdParty:(id)party shouldScheduleNotification:(BOOL)notification completionHandler:(id /* block */)handler;
- (void)_garbageCollectJavaScriptObjectsForTesting;
- (unsigned long long)_numberOfConnectedGamepadsForTesting;
- (unsigned long long)_numberOfConnectedHIDGamepadsForTesting;
- (unsigned long long)_numberOfConnectedGameControllerFrameworkGamepadsForTesting;
- (void)_setUsesOnlyHIDGamepadProviderForTesting:(BOOL)testing;
- (void)_terminateAllWebContentProcesses;
- (struct OpaqueWKNotificationManager *)_notificationManagerForTesting;
- (id)_initWithConfiguration:(id)configuration;
- (id)init;
- (void)dealloc;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* WKProcessPool_h */
