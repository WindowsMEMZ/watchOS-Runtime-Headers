//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef WKActionSheetAssistantDelegate_Protocol_h
#define WKActionSheetAssistantDelegate_Protocol_h
@import Foundation;

@protocol WKActionSheetAssistantDelegate <NSObject>
/* instance methods */
- (struct optional<WebKit::InteractionInformationAtPosition> { union { char x0; struct InteractionInformationAtPosition { struct InteractionInformationRequest { struct IntPoint { int x0; int x1; } x0; BOOL x1; BOOL x2; BOOL x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; } x0; BOOL x1; struct optional<bool> { union { char x0; BOOL x1; } x0; BOOL x1; } x2; unsigned char x3; BOOL x4; BOOL x5; BOOL x6; BOOL x7; BOOL x8; BOOL x9; BOOL x10; BOOL x11; BOOL x12; BOOL x13; BOOL x14; BOOL x15; BOOL x16; unsigned long long x17; BOOL x18; BOOL x19; BOOL x20; BOOL x21; BOOL x22; struct FloatPoint { float x0; float x1; } x23; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x0; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :3; unsigned int x5 :26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x24; struct URL { struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x0; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :3; unsigned int x5 :26; unsigned int x6; unsigned int x7; unsigned int x8; unsigned int x9; unsigned int x10; unsigned int x11; unsigned int x12; } x25; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x26; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x27; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x28; struct IntRect { struct IntPoint { int x0; int x1; } x0; struct IntSize { int x0; int x1; } x1; } x29; struct RefPtr<WebKit::ShareableBitmap, WTF::RawPtrTraits<WebKit::ShareableBitmap>, WTF::DefaultRefDerefTraits<WebKit::ShareableBitmap>> { struct ShareableBitmap * x0; } x30; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x31; struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl * x0; } x0; } x32; float x33; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x34; struct optional<WebCore::Cursor> { union { char x0; struct Cursor { int x0; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x1; struct IntPoint { int x0; int x1; } x2; void * x3; } x1; } x0; BOOL x1; } x35; struct TextIndicatorData { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x1; struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x2; struct Vector<WebCore::FloatRect, 0UL, WTF::CrashOnOverflow, 16UL, WTF::FastMalloc> { struct FloatRect * x0; unsigned int x1; unsigned int x2; } x3; float x4; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x5; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x6; struct RefPtr<WebCore::Image, WTF::RawPtrTraits<WebCore::Image>, WTF::DefaultRefDerefTraits<WebCore::Image>> { struct Image * x0; } x7; struct Color { unsigned long long x0; } x8; unsigned char x9; struct OptionSet<WebCore::TextIndicatorOption> { unsigned short x0; } x10; } x36; struct optional<WebCore::ElementContext> { union { char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; struct ProcessQualified<WTF::UUID> { struct UUID { unsigned int128 x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; } x2; struct ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x3; } x1; } x0; BOOL x1; } x37; struct optional<WebCore::ElementContext> { union { char x0; struct ElementContext { struct FloatRect { struct FloatPoint { float x0; float x1; } x0; struct FloatSize { float x0; float x1; } x1; } x0; struct ObjectIdentifierGeneric<WebCore::PageIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; struct ProcessQualified<WTF::UUID> { struct UUID { unsigned int128 x0; } x0; struct ObjectIdentifierGeneric<WebCore::ProcessIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x1; } x2; struct ObjectIdentifierGeneric<WebCore::ElementIdentifierType, WTF::ObjectIdentifierMainThreadAccessTraits> { unsigned long long x0; } x3; } x1; } x0; BOOL x1; } x38; } x1; } x0; BOOL x1; })positionInformationForActionSheetAssistant:(id)assistant;
- (void)actionSheetAssistant:(id)assistant performAction:(unsigned char)action;
- (void)actionSheetAssistant:(id)assistant openElementAtLocation:(struct CGPoint { double x0; double x1; })location;
- (void)actionSheetAssistant:(id)assistant shareElementWithURL:(id)url rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (struct RetainPtr<NSArray> { void * x0; })actionSheetAssistant:(id)assistant decideActionsForElement:(id)element defaultActions:(struct RetainPtr<NSArray> { void * x0; })actions;
@optional
/* instance methods */
- (BOOL)actionSheetAssistant:(id)assistant showCustomSheetForElement:(id)element;
- (void)updatePositionInformationForActionSheetAssistant:(id)assistant;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })unoccludedWindowBoundsForActionSheetAssistant:(id)assistant;
- (void)actionSheetAssistant:(id)assistant willStartInteractionWithElement:(id)element;
- (void)actionSheetAssistantDidStopInteraction:(id)interaction;
- (id)dataDetectionContextForActionSheetAssistant:(id)assistant positionInformation:(const void *)information;
- (id)selectedTextForActionSheetAssistant:(id)assistant;
- (void)actionSheetAssistant:(id)assistant getAlternateURLForImage:(id)image completion:(id /* block */)completion;
- (void)actionSheetAssistant:(id)assistant shareElementWithImage:(id)image rect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)additionalMediaControlsContextMenuItemsForActionSheetAssistant:(id)assistant;
@end

#endif /* WKActionSheetAssistantDelegate_Protocol_h */
