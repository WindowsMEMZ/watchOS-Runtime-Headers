//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 172.8.0.0.0
//
#ifndef CBConnection_h
#define CBConnection_h
@import Foundation;

#include "CBActivatable-Protocol.h"
#include "CBCentralManager.h"
#include "CBCentralManagerDelegate-Protocol.h"
#include "CBDevice.h"
#include "CBErrorReporting-Protocol.h"
#include "CBInterruptable-Protocol.h"
#include "CBL2CAPChannel.h"
#include "CBLabelable-Protocol.h"
#include "CBPairable-Protocol.h"
#include "CBPairingAgentDelegate-Protocol.h"
#include "CBPeripheral.h"
#include "CBPeripheralDelegate-Protocol.h"
#include "CBReadRequest.h"
#include "CBReadWriteRequestable-Protocol.h"
#include "CBRemotable-Protocol.h"
#include "CBServer.h"
#include "CBStateReporting-Protocol.h"
#include "CBUseCaseable-Protocol.h"
#include "CBWriteRequest.h"
#include "CUReadWriteRequestable-Protocol.h"
#include "CUXPCCodable-Protocol.h"

@class NSArray, NSData, NSMutableArray, NSString, NSUUID;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_xpc_object;

@interface CBConnection : NSObject<CBCentralManagerDelegate, CBPeripheralDelegate, CUReadWriteRequestable, CBPairingAgentDelegate, CUXPCCodable, CBActivatable, CBErrorReporting, CBInterruptable, CBLabelable, CBPairable, CBReadWriteRequestable, CBStateReporting, CBRemotable, CBUseCaseable> {
  /* instance variables */
  BOOL _activateCalled;
  id /* block */ _activateCompletion;
  NSUUID *_blePeerUUID;
  CBCentralManager *_centralManager;
  NSObject<OS_dispatch_source> *_connectTimeoutTimer;
  BOOL _guardConnected;
  BOOL _invalidateCalled;
  BOOL _invalidateDone;
  NSData *_pairingOOBData;
  long long _pairingType;
  CBPeripheral *_peripheral;
  NSObject<OS_dispatch_source> *_readSource;
  unsigned char _readSuspended;
  CBReadRequest *_readRequestCurrent;
  NSMutableArray *_readRequests;
  int _socketFD;
  int _state;
  NSObject<OS_dispatch_source> *_writeSource;
  unsigned char _writeSuspended;
  CBWriteRequest *_writeRequestCurrent;
  NSMutableArray *_writeRequests;
  struct LogCategory { int x0; int x1; char * x2; unsigned int x3; char * x4; char * x5; int x6; struct LogCategory * x7; struct LogOutput * x8; struct LogOutput * x9; unsigned long long x10; unsigned long long x11; unsigned int x12; unsigned int x13; char * x14; struct LogCategoryPrivate * x15; } * _ucat;
  NSObject<OS_xpc_object> *_xpcCnx;
}

@property (nonatomic) unsigned int clientID;
@property (nonatomic) double connectedTime;
@property (nonatomic) unsigned int internalFlags;
@property (retain, nonatomic) CBL2CAPChannel *l2capChannel;
@property (retain, nonatomic) CBServer *server;
@property (copy, nonatomic) id /* block */ serverInvalidationHandler;
@property (copy, nonatomic) NSArray *serviceUUIDs;
@property (copy, nonatomic) id /* block */ xpcForwardMessageReceiveHandler;
@property (retain, nonatomic) NSObject<OS_xpc_object> *xpcListenerEndpoint;
@property (copy, nonatomic) id /* block */ xpcSendEventHandler;
@property (nonatomic) unsigned short blePSM;
@property (nonatomic) unsigned int connectionFlags;
@property (nonatomic) long long connectionLatency;
@property (nonatomic) long long connectionScanDutyCycle;
@property (nonatomic) double connectTimeoutSeconds;
@property (retain, nonatomic) CBDevice *peerDevice;
@property (nonatomic) unsigned int serviceFlags;
@property (copy, nonatomic) NSString *clientBundleID;
@property (nonatomic) long long clientUseCase;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dispatchQueue;
@property (copy, nonatomic) id /* block */ invalidationHandler;
@property (copy, nonatomic) id /* block */ errorHandler;
@property (copy, nonatomic) id /* block */ interruptionHandler;
@property (copy, nonatomic) NSString *label;
@property (copy, nonatomic) id /* block */ pairingCompletedHandler;
@property (copy, nonatomic) id /* block */ pairingPromptHandler;
@property (readonly, nonatomic) long long bluetoothState;
@property (copy, nonatomic) id /* block */ bluetoothStateChangedHandler;
@property (retain, nonatomic) CBDevice *remoteDevice;
@property (nonatomic) unsigned int useCase;
@property (copy, nonatomic) NSArray *useCaseClientIDs;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)initWithXPCObject:(id)xpcobject error:(id *)error;
- (void)encodeWithXPCObject:(id)xpcobject;
- (id)initWithXPCEventRepresentation:(id)representation error:(id *)error;
- (void)activateWithCompletion:(id /* block */)completion;
- (void)_activateWithCompletion:(id /* block */)completion;
- (BOOL)activateDirectAndReturnError:(id *)error;
- (void)_activateXPCStart:(BOOL)xpcstart;
- (void)_activateXPCCompleted:(id)xpccompleted;
- (void)disconnectWithCompletion:(id /* block */)completion;
- (id)_ensureXPCStarted;
- (void)_interrupted;
- (void)invalidate;
- (void)_invalidate;
- (void)_invalidated;
- (BOOL)updateWithXPCSubscriberInfo:(id)info;
- (void)xpcForwardMessage:(id)message;
- (void)xpcReceivedForwardedEvent:(id)event;
- (void)xpcReceivedMessage:(id)message;
- (void)_xpcReceivedMessage:(id)message;
- (void)xpcReceivedPairingCompleted:(id)completed;
- (void)xpcReceivedPairingPrompt:(id)prompt;
- (BOOL)_startConnectingAndReturnError:(id *)error;
- (BOOL)_setupIOAndReturnError:(id *)error;
- (void)_reportError:(id)error;
- (void)_run;
- (BOOL)_runConnectStart;
- (BOOL)_runSetupChannel;
- (void)pairingGenerateOOBDataWithCompletionHandler:(id /* block */)handler;
- (void)_pairingGenerateOOBDataWithCompletionHandler:(id /* block */)handler;
- (void)pairingSetOOBEnabled:(BOOL)oobenabled completionHandler:(id /* block */)handler;
- (void)_pairingSetOOBEnabled:(BOOL)oobenabled completionHandler:(id /* block */)handler;
- (void)pairingPerformAction:(int)action completionHandler:(id /* block */)handler;
- (void)pairingPerformAction:(int)action withOptions:(id)options completionHandler:(id /* block */)handler;
- (void)_pairingPerformActionBLE:(int)ble withOptions:(id)options completionHandler:(id /* block */)handler;
- (void)_pairingPerformActionClassic:(int)classic completionHandler:(id /* block */)handler;
- (void)_pairingPerformActionClassic:(int)classic withOptions:(id)options completionHandler:(id /* block */)handler;
- (void)pairWithOOBData:(id)oobdata;
- (void)_pairWithOOBData:(id)oobdata;
- (void)readWithCBReadRequest:(id)request;
- (void)_processReads:(BOOL)reads;
- (void)_prepareReadRequest:(id)request;
- (void)_abortReadsWithError:(id)error;
- (BOOL)_processReadStatus;
- (void)_completeReadRequest:(id)request error:(id)error;
- (void)writeWithCBWriteRequest:(id)request;
- (void)writeEndOfDataWithCompletion:(id /* block */)completion;
- (void)_processWrites;
- (BOOL)_prepareWriteRequest:(id)request error:(id *)error;
- (void)_abortWritesWithError:(id)error;
- (void)_completeWriteRequest:(id)request error:(id)error;
- (void)centralManagerDidUpdateState:(id)state;
- (void)centralManager:(id)manager didConnectPeripheral:(id)peripheral;
- (void)centralManager:(id)manager didFailToConnectPeripheral:(id)peripheral error:(id)error;
- (void)pairingAgent:(id)agent peerDidRequestPairing:(id)pairing type:(long long)type passkey:(id)passkey;
- (void)pairingAgent:(id)agent peerDidCompletePairing:(id)pairing;
- (void)pairingAgent:(id)agent peerDidFailToCompletePairing:(id)pairing error:(id)error;
- (void)pairingAgent:(id)agent peerDidUnpair:(id)unpair;
- (void)peripheral:(id)peripheral didOpenL2CAPChannel:(id)capchannel error:(id)error;
- (void)readWithRequest:(id)request;
- (void)writeWithRequest:(id)request;
@end

#endif /* CBConnection_h */
