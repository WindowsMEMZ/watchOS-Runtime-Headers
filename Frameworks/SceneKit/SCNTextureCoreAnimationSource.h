//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNTextureCoreAnimationSource_h
#define SCNTextureCoreAnimationSource_h
@import Foundation;

#include "SCNTextureOffscreenRenderingSource.h"

@class CALayer;

@interface SCNTextureCoreAnimationSource : SCNTextureOffscreenRenderingSource {
  /* instance variables */
  double _lastUpdate;
  double _nextUpdateDate;
}

@property (retain, nonatomic) CALayer *layer;

/* instance methods */
- (void)dealloc;
- (BOOL)supportsMetal;
- (void)renderWithEngineContext:(struct __C3DEngineContext *)context textureSampler:(struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)sampler nextFrameTime:(double *)time status:(struct { BOOL x0; BOOL x1; } *)status;
- (id)layerToFocusForRenderedLayer:(id)layer;
- (float)clearValue;
- (BOOL)requiresMainThreadUpdates;
- (void)_resizeLayer:(id)layer toSize:(struct CGSize { double x0; double x1; })size updateLayer:(BOOL)layer updateTransform:(BOOL)transform caRenderer:(id)renderer isMainThread:(BOOL)thread;
- (void)_resizeLayer:(id)layer toSize:(struct CGSize { double x0; double x1; })size updateLayer:(BOOL)layer updateTransform:(BOOL)transform caRenderer:(id)renderer;
- (double)__renderLayerUsingMetal:(id)metal withCARenderer:(id)carenderer engineContext:(struct __C3DEngineContext *)context viewport:(double)viewport atTime:(BOOL)time forceUpdate:(BOOL *)update;
- (double)__updateTextureWithLayer:(id)layer texture:(id)texture engineContext:(struct __C3DEngineContext *)context sampler:(struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)sampler;
- (struct CGSize { double x0; double x1; })layerSizeInPixels;
- (double)layerContentsScaleFactor;
- (id)metalTextureWithEngineContext:(struct __C3DEngineContext *)context textureSampler:(struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)sampler nextFrameTime:(double *)time status:(struct { BOOL x0; BOOL x1; } *)status;
@end

#endif /* SCNTextureCoreAnimationSource_h */
