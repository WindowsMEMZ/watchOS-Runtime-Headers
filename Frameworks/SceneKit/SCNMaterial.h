//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNMaterial_h
#define SCNMaterial_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "SCNAnimatable-Protocol.h"
#include "SCNMaterialProperty.h"
#include "SCNOrderedDictionary.h"
#include "SCNProgram.h"
#include "SCNShadable-Protocol.h"
#include "SCNShadableHelper.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSNumber, NSString;

@interface SCNMaterial : NSObject<SCNAnimatable, SCNShadable, NSCopying, NSSecureCoding> {
  /* instance variables */
  struct __C3DMaterial * _material;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _animationsLock;
  SCNOrderedDictionary *_animations;
  NSMutableDictionary *_bindings;
  NSMutableDictionary *_valuesForUndefinedKeys;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _valuesForUndefinedKeysLock;
  float _indexOfRefraction;
  float _selfIlluminationOcclusion;
  SCNShadableHelper *_shadableHelper;
  BOOL _isPresentationInstance;
  BOOL _avoidsOverLighting;
}

@property (copy, nonatomic) NSString *name;
@property (readonly, nonatomic) SCNMaterialProperty *diffuse;
@property (readonly, nonatomic) SCNMaterialProperty *ambient;
@property (readonly, nonatomic) SCNMaterialProperty *specular;
@property (readonly, nonatomic) SCNMaterialProperty *emission;
@property (readonly, nonatomic) SCNMaterialProperty *transparent;
@property (readonly, nonatomic) SCNMaterialProperty *reflective;
@property (readonly, nonatomic) SCNMaterialProperty *multiply;
@property (readonly, nonatomic) SCNMaterialProperty *normal;
@property (readonly, nonatomic) SCNMaterialProperty *displacement;
@property (readonly, nonatomic) SCNMaterialProperty *ambientOcclusion;
@property (readonly, nonatomic) SCNMaterialProperty *selfIllumination;
@property (readonly, nonatomic) SCNMaterialProperty *metalness;
@property (readonly, nonatomic) SCNMaterialProperty *roughness;
@property (readonly, nonatomic) SCNMaterialProperty *clearCoat;
@property (readonly, nonatomic) SCNMaterialProperty *clearCoatRoughness;
@property (readonly, nonatomic) SCNMaterialProperty *clearCoatNormal;
@property (nonatomic) double shininess;
@property (nonatomic) double transparency;
@property (copy, nonatomic) NSString *lightingModelName;
@property (nonatomic) BOOL litPerPixel;
@property (nonatomic) BOOL doubleSided;
@property (nonatomic) unsigned long long fillMode;
@property (nonatomic) long long cullMode;
@property (nonatomic) long long transparencyMode;
@property (nonatomic) BOOL locksAmbientWithDiffuse;
@property (nonatomic) BOOL writesToDepthBuffer;
@property (nonatomic) long long colorBufferWriteMask;
@property (nonatomic) BOOL readsFromDepthBuffer;
@property (nonatomic) double fresnelExponent;
@property (nonatomic) long long blendMode;
@property (readonly) NSArray *animationKeys;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) SCNProgram *program;
@property (copy, nonatomic) NSDictionary *shaderModifiers;
@property (retain, nonatomic) NSNumber *minimumLanguageVersion;

/* class methods */
+ (id)materialWithMDLMaterial:(id)mdlmaterial;
+ (id)materialWithMDLMaterial:(id)mdlmaterial options:(id)options;
+ (id)materialWithMaterialRef:(struct __C3DMaterial *)ref;
+ (id)material;
+ (id)materialWithColor:(id)color;
+ (id)materialWithContents:(id)contents;
+ (BOOL)accessInstanceVariablesDirectly;
+ (BOOL)resolveInstanceMethod:(SEL)method;
+ (id)materialNamed:(id)named;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_integrateModelKitComputedMaps:(id)maps withGeometry:(id)geometry node:(id)node texturePathProvider:(id /* block */)provider vertexAttributeNamed:(id)named materialPropertyNamed:(id)named filePath:(id)path;
- (id)debugQuickLookObject;
- (id)debugQuickLookData;
- (id)init;
- (id)initWithMaterialRef:(struct __C3DMaterial *)ref;
- (id)initPresentationMaterialWithMaterialRef:(struct __C3DMaterial *)ref;
- (void)dealloc;
- (void)setIdentifier:(id)identifier;
- (id)identifier;
- (void)_syncEntityObjCModel;
- (void)_syncObjCModel;
- (id)presentationMaterial;
- (id)presentationInstance;
- (BOOL)isPausedOrPausedByInheritance;
- (struct __C3DMaterial *)materialRef;
- (struct __C3DEffectCommonProfile { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __C3DMaterial * x1; int x2; struct __C3DEffectSlot * x3; struct __C3DEffectSlot * x4; struct __C3DEffectSlot * x5; struct __C3DEffectSlot * x6; struct __C3DEffectSlot * x7; struct __C3DEffectSlot * x8; struct __C3DEffectSlot * x9; struct __C3DEffectSlot * x10; struct __C3DEffectSlot * x11; struct __C3DEffectSlot * x12; struct __C3DEffectSlot * x13; struct __C3DEffectSlot * x14; struct __C3DEffectSlot * x15; struct __C3DEffectSlot * x16; struct __C3DEffectSlot * x17; struct __C3DEffectSlot * x18; float x19; float x20; float x21; float x22; float x23; unsigned char x24; long long x25; BOOL x26; BOOL x27; unsigned int x28 :1; unsigned int x29 :1; unsigned int x30 :1; unsigned int x31 :1; unsigned int x32 :1; unsigned int x33 :1; unsigned int x34 :1; unsigned int x35 :1; unsigned int x36 :1; unsigned int x37 :13; } *)commonProfile;
- (Class)_materialPropertyClass;
- (void)_setupMaterialProperty:(id *)property;
- (void)setColor:(id)color;
- (id)color;
- (id)builtinProperties;
- (id)properties;
- (id)_property:(id *)_property;
- (void)setIndexOfRefraction:(double)refraction;
- (double)indexOfRefraction;
- (void)setSelfIlluminationOcclusion:(double)occlusion;
- (double)selfIlluminationOcclusion;
- (BOOL)isLitPerPixel;
- (void)setAvoidsOverLighting:(BOOL)lighting;
- (BOOL)avoidsOverLighting;
- (id)contents;
- (void)setContents:(id)contents;
- (id)content;
- (void)setContent:(id)content;
- (BOOL)isDoubleSided;
- (id)copyAnimationChannelForKeyPath:(id)path property:(id)property;
- (id)copyAnimationChannelForKeyPath:(id)path animation:(id)animation;
- (struct __C3DScene *)sceneRef;
- (id)scene;
- (void *)__CFObject;
- (struct __C3DAnimationManager *)animationManager;
- (BOOL)__removeAnimation:(id)animation forKey:(id)key;
- (void)addAnimationPlayer:(id)player forKey:(id)key;
- (void)addAnimation:(id)animation forKey:(id)key;
- (void)addAnimation:(id)animation;
- (void)removeAllAnimations;
- (void)removeAllAnimationsWithBlendOutDuration:(double)duration;
- (void)removeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key blendOutDuration:(double)duration;
- (void)_syncObjCAnimations;
- (id)animationForKey:(id)key;
- (id)_scnAnimationForKey:(id)key;
- (void)_copyAnimationsFrom:(id)from;
- (id)animationPlayerForKey:(id)key;
- (void)_pauseAnimation:(BOOL)animation forKey:(id)key pausedByNode:(BOOL)node;
- (void)pauseAnimationForKey:(id)key;
- (void)resumeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key fadeOutDuration:(double)duration;
- (void)setSpeed:(double)speed forAnimationKey:(id)key;
- (BOOL)isAnimationForKeyPaused:(id)paused;
- (id)_scnBindings;
- (void)bindAnimatablePath:(id)path toObject:(id)object withKeyPath:(id)path options:(id)options;
- (void)unbindAnimatablePath:(id)path;
- (void)removeAllBindings;
- (void)_setAttributes:(id)attributes;
- (void)_copyAttributes:(id)attributes;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copy;
- (struct __C3DMaterial *)materialRefCreateIfNeeded;
- (id)valueForUndefinedKey:(id)key;
- (void)_shadableSetValue:(id)value forUndefinedKey:(id)key;
- (id)customMaterialPropertyNames;
- (id)customMaterialProperties;
- (id)customMaterialAttributeNames;
- (id)customMaterialAttributes;
- (void)_setupShadableHelperIfNeeded;
- (id)__shadableHelper;
- (void)copyShaderModifiersAndLanguageVersionFrom:(id)from;
- (id)shaderModifiersArgumentsNames;
- (void)handleBindingOfSymbol:(id)symbol usingBlock:(id /* block */)block;
- (void)handleUnbindingOfSymbol:(id)symbol usingBlock:(id /* block */)block;
- (void)setValue:(id)value forUndefinedKey:(id)key;
- (void)_customDecodingOfSCNMaterial:(id)scnmaterial;
- (void)_customEncodingOfSCNMaterial:(id)scnmaterial;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* SCNMaterial_h */
