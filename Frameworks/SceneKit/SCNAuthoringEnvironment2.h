//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNAuthoringEnvironment2_h
#define SCNAuthoringEnvironment2_h
@import Foundation;

#include "SCNGeometry.h"
#include "SCNManipulator.h"
#include "SCNNode.h"
#include "SCNRenderer.h"

@class NSMutableSet, UIColor;

@interface SCNAuthoringEnvironment2 : NSObject {
  /* instance variables */
  NSMutableSet *_selection;
  struct __C3DScene * _scene;
  SCNNode *_layerRoot;
  SCNNode *_overlayLayerRoot;
  SCNNode *_lightRoot;
  SCNNode *_cameraRoot;
  SCNNode *_particlesRoot;
  SCNNode *_physicsFieldsRoot;
  SCNNode *_cameraTarget;
  SCNNode *_pointsOfViewRoot;
  struct __CFDictionary * _lightsDictionary;
  struct __CFDictionary * _camerasDictionary;
  struct __CFDictionary * _particlesDictionary;
  struct __CFDictionary * _physicsFieldsDictionary;
  SCNRenderer *_renderer;
  SCNGeometry *_lightGeometry;
  SCNGeometry *_cameraFrustumGeometry;
  SCNGeometry *_cameraOrthographicFrustumGeometry;
  SCNGeometry *_cameraGeometry;
  SCNGeometry *_cameraNearPlaneGeometry;
  SCNGeometry *_particlesGeometry;
  SCNGeometry *_fieldGeometry;
  UIColor *_paleGreen;
  UIColor *_paleBlue;
  UIColor *_red;
  UIColor *_green;
  UIColor *_blue;
  UIColor *_cyan;
  UIColor *_yellow;
  UIColor *_orange;
  UIColor *_pink;
  UIColor *_grayLight;
  UIColor *_grayMedium;
  UIColor *_grayDark;
  UIColor *_white;
}

@property (readonly, nonatomic) SCNNode *authoringLayer;
@property (readonly, nonatomic) SCNNode *authoringOverlayLayer;
@property (readonly, nonatomic) SCNManipulator *manipulator;
@property long long displayMask;

/* class methods */
+ (id)authoringEnvironmentForScene:(id)scene;
+ (id)authoringEnvironmentForScene:(id)scene createIfNeeded:(BOOL)needed;

/* instance methods */
- (id)initWithScene:(id)scene;
- (void)dealloc;
- (void)prepareScene:(id)scene;
- (id)authoringCameraNodes;
- (id)geometryForLightType:(id)type;
- (void)addLightNode:(id)node;
- (id)particlesGeometry;
- (void)setupParticleMeshEmitter:(id)emitter authoringNode:(id)node;
- (void)addParticlesNode:(id)node;
- (id)cameraGeometry;
- (id)cameraFrustumGeometry;
- (id)cameraOrthographicFrustumGeometry;
- (id)cameraNearPlaneGeometry;
- (id)fieldGeometry;
- (void)addCameraNode:(id)node;
- (void)removeCameraNode:(id)node;
- (void)addPhysicsFieldNode:(id)node;
- (void)removePhysicsFieldNode:(id)node;
- (void)removeLightNode:(id)node;
- (void)removeParticlesNode:(id)node;
- (void)addedNode:(id)node;
- (void)removedNode:(id)node;
- (void)selectNode:(id)node;
- (void)addNodeToSelection:(id)selection;
- (void)selectNodes:(id)nodes;
- (void)cancelSelection;
- (void)_resetLightAuthoringWithContainerNode:(id)node source:(id)source light:(id)light;
- (void)updateLightTypeForNode:(id)node source:(id)source light:(id)light screenspaceScalingFactor:(float)factor;
- (void)updateLightNode:(id)node withSourceNode:(id)node;
- (void)updateParticlesNode:(id)node withSourceNode:(id)node;
- (void)updateCameraNode:(id)node withSourceNode:(id)node;
- (void)updateFieldNode:(id)node withSourceNode:(id)node;
- (void)updateWithRenderer:(id)renderer;
- (void)_updateRootsVisibility;
- (BOOL)didTapAtPoint:(struct CGPoint { double x0; double x1; })point;
- (void)setAuthoringCamera:(long long)camera forView:(id)view;
- (id)authoringCamera:(long long)camera;
@end

#endif /* SCNAuthoringEnvironment2_h */
