//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNMTLTessellator_h
#define SCNMTLTessellator_h
@import Foundation;

#include "MTLBuffer-Protocol.h"
#include "SCNMTLResourceManager.h"

@interface SCNMTLTessellator : NSObject {
  /* instance variables */
  struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } * _geometry;
  SCNMTLResourceManager *_resourceManager;
  struct { unsigned char type; float tessellationFactorScale; unsigned int tessellationPartitionMode; unsigned char tessellationSmoothingMode; union { struct { float edgeTessellationFactor; float insideTessellationFactor; } uniform; struct { float projectedEdgeLength; } screenSpaceAdaptive; struct { float maximumEdgeLength; } constrainedEdgeLength; struct { unsigned char tessellationLevel; unsigned int x :1 allowSingleCreasePatch; unsigned int x :1 useScreenSpaceTessellation; } subdivisionSurface; } parameters; } _cachedTessellator;
  NSObject<MTLBuffer> *_tessellationFactorBuffer;
  NSObject<MTLBuffer> *_lastFramePositionBuffer;
}

/* instance methods */
- (id)initWithGeometry:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)geometry resourceManager:(id)manager;
- (void)dealloc;
- (struct { unsigned int x0 :2; unsigned int x1 :2; unsigned int x2 :2; unsigned int x3 :1; })_pipelineStateHashForMeshElement:(id)element patchType:(unsigned char)type;
- (unsigned char)pipelineStateHashForMeshElement:(id)element patchType:(unsigned char)type;
- (id /* block */)newPipelineStateConfiguratorForMeshElement:(id)element patchType:(unsigned char)type device:(id)device;
- (void)update:(struct { id x0; id x1; struct  * x2; unsigned int x3; BOOL x4; })update;
- (void)draw:(struct { struct __C3DMesh * x0; id x1; struct __C3DMeshElement * x2; id x3; unsigned int x4; id x5; unsigned char x6; })draw;
- (void)updateUniformTessellator:(struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; })tessellator;
- (void)uniformTessellationDrawMeshElement:(id)element forMesh:(id)mesh instanceCount:(unsigned long long)count renderContext:(id)context;
- (void)updateScreenSpaceAdaptiveTessellator:(struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; })tessellator parameters:(struct { id x0; id x1; struct  * x2; unsigned int x3; BOOL x4; })parameters;
- (void)screenSpaceAdaptiveTessellationDrawMeshElement:(id)element forMesh:(id)mesh instanceCount:(unsigned long long)count renderContext:(id)context;
- (void)updateConstrainedEdgeLengthTessellator:(struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; })tessellator parameters:(struct { id x0; id x1; struct  * x2; unsigned int x3; BOOL x4; })parameters;
- (void)constrainedEdgeLengthTessellationDrawMeshElement:(id)element forMesh:(id)mesh instanceCount:(unsigned long long)count renderContext:(id)context;
- (void)updateSubdivisionSurfaceTessellator:(struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; })tessellator parameters:(struct { id x0; id x1; struct  * x2; unsigned int x3; BOOL x4; })parameters;
- (void)subdivisionSurfaceTessellationDraw:(struct { struct __C3DMesh * x0; id x1; struct __C3DMeshElement * x2; id x3; unsigned int x4; id x5; unsigned char x6; })draw;
@end

#endif /* SCNMTLTessellator_h */
