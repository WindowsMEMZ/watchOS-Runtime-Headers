//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNCaptureDeviceOutputConsumerSource_h
#define SCNCaptureDeviceOutputConsumerSource_h
@import Foundation;

#include "SCNTextureSource.h"
#include "SCNCaptureDeviceOutputConsumer-Protocol.h"

@class NSString;
@protocol {?="videoOutput"@"pixelBuffer"^{__CVBuffer}"mtlTextureForRenderer"@"<MTLTexture>""mtlTextureColorMatched"@"<MTLTexture>""mtlTextureColorForColorMatchingComputeKernel"@"<MTLTexture>""pixelBufferColorSpace"^{CGColorSpace}};

@interface SCNCaptureDeviceOutputConsumerSource : SCNTextureSource<SCNCaptureDeviceOutputConsumer> {
  /* instance variables */
  struct { pixelBuffer *videoOutput; struct __CVBuffer * x0; <MTLTexture> *mtlTextureForRenderer; <MTLTexture> *mtlTextureColorMatched; <MTLTexture> *mtlTextureColorForColorMatchingComputeKernel; struct CGColorSpace *pixelBufferColorSpace; } _data;
  BOOL _containsAlpha;
  unsigned long long _width;
  unsigned long long _height;
}

@property (nonatomic) BOOL automaticallyAdjustsVideoMirroring;
@property (nonatomic) BOOL videoMirrored;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithOptions:(id)options;
- (BOOL)containsAlpha;
- (void)dealloc;
- (void)connectToProxy:(struct __C3DImageProxy *)proxy;
- (id)metalTextureWithEngineContext:(struct __C3DEngineContext *)context textureSampler:(struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)sampler nextFrameTime:(double *)time status:(struct { BOOL x0; BOOL x1; } *)status;
- (BOOL)isVideoMirrored;
- (void)setSampleBuffer:(struct opaqueCMSampleBuffer *)buffer;
- (void)setPixelBuffer:(struct __CVBuffer *)buffer;
@end

#endif /* SCNCaptureDeviceOutputConsumerSource_h */
