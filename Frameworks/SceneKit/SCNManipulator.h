//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNManipulator_h
#define SCNManipulator_h
@import Foundation;

#include "SCNAuthoringEnvironment.h"
#include "SCNBillboardConstraint.h"
#include "SCNNode.h"

@class BOOL *, NSMutableIndexSet, NSOrderedSet;

@interface SCNManipulator : NSObject {
  /* instance variables */
  SCNNode *_node;
  union C3DMatrix4x4 { float x[16] components; x[4] m; struct { x[4] columns; } simd; } _xAxisToZAxisTransform;
  union C3DMatrix4x4 { float x[16] components; x[4] m; struct { x[4] columns; } simd; } _yAxisToZAxisTransform;
  union C3DMatrix4x4 { float x[16] components; x[4] m; struct { x[4] columns; } simd; } _xyPlaneToYZPlaneTransform;
  union C3DMatrix4x4 { float x[16] components; x[4] m; struct { x[4] columns; } simd; } _xyPlaneToXZPlaneTransform;
  unsigned short _selectedAxis;
  union { struct { " originalPosition; a x0; x x1; int x2; short x3; long double x4; int x5; const e x6; char x7; int128 x8; int x9; out in " x10; } axisMove; struct { " originalPosition; p x0; long x1; a x2; in e x3; inout out const m x4; a x5; long x6; p x7; out int x8; in int128 x9; unsigned int x10; in P x11; long x12; a x13; in e x14; m x15; out u x16; short x17; e x18; long double x19; e x20; long x21; int128 x22; a x23; one way e x24; char x25; int128 x26; out const " x27; } planeMove; struct { float rotationSign; } axisRotate; } _actionData;
  BOOL _isMouseDown;
  unsigned short _action;
  struct CGPoint { double x; double y; } _originalMouseLocation;
  struct { " *positions; out const int x0; e x1; in int128 x2; a x3; int128 x4; int x5; out in short x6; out const int ^; g x7; int x8; in a x9; long x10; unsigned long x11; out char x12; a x13; long x14; M x15; a x16; int128 x17; const int x18; x x19; short ^{SCNMatrix4}; char x20; a x21; long x22; e x23; short x24; " x25;  * x26; } _originalData;
  unsigned int _originalDataCount;
  union C3DMatrix4x4 { float x[16] components; x[4] m; struct { x[4] columns; } simd; } _worldInitialMatrix;
  union C3DMatrix4x4 { float x[16] components; x[4] m; struct { x[4] columns; } simd; } _worldMatrix;
  long long _snapToAlignCount;
  struct { float x0; void * x1; float x2; } * _snapToAlignOnX;
  struct { float x0; void * x1; float x2; } * _snapToAlignOnY;
  struct { float x0; void * x1; float x2; } * _snapToAlignOnZ;
  NSMutableIndexSet *_snapXIndexes;
  NSMutableIndexSet *_snapYIndexes;
  NSMutableIndexSet *_snapZIndexes;
  SCNNode *_planarTranslationHandleXY;
  SCNNode *_planarTranslationHandleYZ;
  SCNNode *_planarTranslationHandleXZ;
  SCNNode *_planarTranslationHandles;
  SCNNode *_axis;
  SCNNode *_arcHandleXY;
  SCNNode *_arcHandleYZ;
  SCNNode *_arcHandleXZ;
  SCNNode *_arcHandles;
  SCNNode *_scaleNode;
  SCNNode *_screenSpaceRotation;
  SCNNode *_highlightNode;
   _planarTranslationLayout;
  BOOL _layoutLocked;
  SCNNode *_zArrow;
  SCNNode *_rotationHandles;
  SCNNode *_occluder;
  SCNNode *_translateHandles;
  SCNBillboardConstraint *_billboard;
  NSOrderedSet *_cloneSet;
  BOOL _cloning;
  BOOL _alternateMode;
}

@property (readonly) SCNAuthoringEnvironment *authoringEnvironment;
@property (readonly) struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } transform;
@property (readonly) SCNNode *manipulatorNode;
@property (retain, nonatomic) NSOrderedSet *targets;
@property (retain, nonatomic) SCNNode *target;
@property (nonatomic) long long xAlignment;
@property (nonatomic) long long yAlignment;
@property (nonatomic) long long zAlignment;
@property (nonatomic) BOOL readonly;
@property (nonatomic) unsigned long long features;

/* instance methods */
- (void)_setAuthoringEnvironment:(id)environment;
- (id)init;
- (void)dealloc;
- (id)copy;
- (long long)effectiveEditingSpace;
- (BOOL)isDragging;
- (void)setupNode;
- (void)updateManipulatorPosition:(struct __C3DEngineContext *)position;
- (void)updateManipulatorNode;
- (void)editingSpaceChanged;
- (void)updateManipulatorComponents;
- (unsigned long long)_effectiveFeatures;
- (void)setAlternateMode:(BOOL)mode;
- (void)lockLayout;
- (void)unlockLayout;
- (void)unhighlightSelectedNode;
- (id)hitTest:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })test;
- (void)_updateActionWithEvent:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })event;
- (BOOL)mouseMoved:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })moved;
- (void)updateItemsPosition;
- (void)updateItemsRotation:;
- (void)updateItemsScale:(float)scale;
- (void)_saveOriginalData;
- (void)_deleteOriginalData;
- (BOOL)_applyWithEvent:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })event;
- (void)clearSnapIndexes;
- (BOOL)mouseDragged:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })dragged;
- (BOOL)mouseDown:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })down;
- (BOOL)mouseUp:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })up;
- (id)scene;
- (void)removeClonesFromScene;
- (void)addClonesToScene;
- (void)validateClones;
- (id)setupClones;
- (void)_updateCloneStateWithEvent:(struct { id x0; id x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; struct SCNVector3 { float x0; float x1; float x2; } x4; struct SCNVector3 { float x0; float x1; float x2; } x5; double x6; })event;
- (id)snapGuideIndexesOnAxis:(unsigned long long)axis;
- (const struct { float x0; void * x1; float x2; } *)snapInfoAtIndex:(unsigned long long)index axis:(unsigned long long)axis;
- (void)_prepareSnapToAlignData:(unsigned short)data;
- (void)prepareSnapToAlignData;
- (void)prepareSnapToAlignDataIfNeeded;
- (1)_snapPositionToAlign:(struct SCNVector3 { float x0; float x1; float x2; })align original:(double)original unit:(BOOL)unit axisMove:(BOOL *)move rayStart:(long long *)start;
@end

#endif /* SCNManipulator_h */
