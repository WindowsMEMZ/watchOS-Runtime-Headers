//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNPhysicsBodyJSExport_Protocol_h
#define SCNPhysicsBodyJSExport_Protocol_h
@import Foundation;

@protocol SCNPhysicsBodyJSExport <JSExport>

@property (nonatomic) long long type;
@property (nonatomic) double mass;
@property (nonatomic) struct SCNVector3 { float x0; float x1; float x2; } momentOfInertia;
@property (nonatomic) BOOL usesDefaultMomentOfInertia;
@property (nonatomic) double charge;
@property (nonatomic) double friction;
@property (nonatomic) double restitution;
@property (nonatomic) double rollingFriction;
@property (retain, nonatomic) SCNPhysicsShape *physicsShape;
@property (readonly, nonatomic) BOOL isResting;
@property (nonatomic) BOOL allowsResting;
@property (nonatomic) struct SCNVector3 { float x0; float x1; float x2; } velocity;
@property (nonatomic) struct SCNVector4 { float x0; float x1; float x2; float x3; } angularVelocity;
@property (nonatomic) double damping;
@property (nonatomic) double angularDamping;
@property (nonatomic) struct SCNVector3 { float x0; float x1; float x2; } velocityFactor;
@property (nonatomic) struct SCNVector3 { float x0; float x1; float x2; } angularVelocityFactor;
@property (nonatomic) unsigned long long categoryBitMask;
@property (nonatomic) unsigned long long collisionBitMask;
@property (nonatomic) unsigned long long contactTestBitMask;
@property (nonatomic) BOOL affectedByGravity;

/* class methods */
+ (id)staticBody;
+ (id)dynamicBody;
+ (id)kinematicBody;
+ (id)bodyWithType:(long long)type shape:(id)shape;
/* instance methods */
- (void)applyForce:(struct SCNVector3 { float x0; float x1; float x2; })force impulse:(BOOL)impulse;
- (void)applyForce:(struct SCNVector3 { float x0; float x1; float x2; })force atPosition:(struct SCNVector3 { float x0; float x1; float x2; })position impulse:(BOOL)impulse;
- (void)applyTorque:(struct SCNVector4 { float x0; float x1; float x2; float x3; })torque impulse:(BOOL)impulse;
- (void)clearAllForces;
- (void)resetTransform;
- (id)copy;
- (BOOL)isAffectedByGravity;
@end

#endif /* SCNPhysicsBodyJSExport_Protocol_h */
