//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNGeometry_h
#define SCNGeometry_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "SCNAnimatable-Protocol.h"
#include "SCNBoundingVolume-Protocol.h"
#include "SCNGeometryElement.h"
#include "SCNGeometrySource.h"
#include "SCNGeometryTessellator.h"
#include "SCNMaterial.h"
#include "SCNOrderedDictionary.h"
#include "SCNProgram.h"
#include "SCNShadable-Protocol.h"
#include "SCNShadableHelper.h"

@class NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSNumber, NSString;

@interface SCNGeometry : NSObject<SCNAnimatable, SCNBoundingVolume, SCNShadable, NSCopying, NSSecureCoding> {
  /* instance variables */
  struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } * _geometry;
  unsigned int x :1 _isPresentationInstance;
  NSMutableArray *_sources;
  NSMutableArray *_elements;
  NSArray *_sourceChannels;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _animationsLock;
  SCNOrderedDictionary *_animations;
  NSMutableDictionary *_bindings;
  BOOL _subdivisionIsAdaptive;
  struct { BOOL enableVertexWeldingAtImport; unsigned char boundaryInterpolationRule; unsigned char faceVaryingInterpolationRule; unsigned char normalSmoothingMode; } _subdivisionSettings;
  SCNShadableHelper *_shadableHelper;
  struct SCNVector3 { float x0; float x1; float x2; } * _fixedBoundingBoxExtrema;
  NSMutableDictionary *_valuesForUndefinedKeys;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _valuesForUndefinedKeysLock;
  SCNGeometryTessellator *_tessellator;
}

@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSArray *materials;
@property (retain, nonatomic) SCNMaterial *firstMaterial;
@property (readonly, nonatomic) NSArray *geometrySources;
@property (readonly, nonatomic) NSArray *geometryElements;
@property (readonly, nonatomic) long long geometryElementCount;
@property (copy, nonatomic) NSArray *levelsOfDetail;
@property (nonatomic) unsigned long long subdivisionLevel;
@property (nonatomic) BOOL wantsAdaptiveSubdivision;
@property (retain, nonatomic) SCNGeometryElement *edgeCreasesElement;
@property (retain, nonatomic) SCNGeometrySource *edgeCreasesSource;
@property (readonly) NSArray *animationKeys;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) SCNProgram *program;
@property (copy, nonatomic) NSDictionary *shaderModifiers;
@property (retain, nonatomic) NSNumber *minimumLanguageVersion;

/* class methods */
+ (id)geometryWithMDLMesh:(id)mdlmesh submesh:(id)submesh options:(id)options;
+ (id)geometryWithMDLMesh:(id)mdlmesh;
+ (id)geometryWithMDLMesh:(id)mdlmesh options:(id)options;
+ (id)morpherWithMDLMesh:(id)mdlmesh;
+ (id)planeWithWidth:(double)width height:(double)height options:(id)options;
+ (id)boxWithWidth:(double)width height:(double)height length:(double)length cornerRadius:(double)radius options:(id)options;
+ (id)pyramidWithWidth:(double)width height:(double)height length:(double)length options:(id)options;
+ (id)sphereWithRadius:(double)radius options:(id)options;
+ (id)cylinderWithRadius:(double)radius height:(double)height options:(id)options;
+ (id)coneWithHeight:(double)height topRadius:(double)radius bottomRadius:(double)radius options:(id)options;
+ (id)tubeWithInnerRadius:(double)radius outerRadius:(double)radius height:(double)height options:(id)options;
+ (id)capsuleWithRadius:(double)radius height:(double)height options:(id)options;
+ (id)torusWithRingRadius:(double)radius pipeRadius:(double)radius options:(id)options;
+ (id)floorWithOptions:(id)options;
+ (id)geometryWithGeometryRef:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)ref;
+ (id)geometry;
+ (id)geometryWithSources:(id)sources elements:(id)elements;
+ (id)geometryWithSources:(id)sources elements:(id)elements sourceChannels:(id)channels;
+ (BOOL)resolveInstanceMethod:(SEL)method;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)debugQuickLookObject;
- (id)debugQuickLookData;
- (id)_geometryByUnifyingNormalsWithCreaseThreshold:(double)threshold;
- (id)_geometryByAddingSourcesOfSkinner:(id)skinner;
- (id)_geometryByRemovingSkinnerSources;
- (void)_discardOriginalTopology;
- (id)_geometryByWeldingVerticesWithThreshold:(double)threshold normalThreshold:(double)threshold;
- (void)setValueForKey:(id)key optionKey:(id)key options:(id)options;
- (id)init;
- (id)initWithGeometryRef:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)ref;
- (id)initPresentationGeometryWithGeometryRef:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)ref;
- (void)dealloc;
- (BOOL)isPresentationInstance;
- (void)setIdentifier:(id)identifier;
- (id)identifier;
- (void)_syncEntityObjCModel;
- (void)_syncObjCModel;
- (id)geometryDescription;
- (struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)geometryRef;
- (void)_setGeometryRef:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)ref;
- (void)setGeometryRef:(struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)ref;
- (id)presentationGeometry;
- (id)presentationInstance;
- (BOOL)isPausedOrPausedByInheritance;
- (void)_releaseCachedSourcesAndElements;
- (void)_setupGeometrySources;
- (void)_setupGeometryElements;
- (id)geometrySourceChannels;
- (id)geometrySourcesForSemantic:(id)semantic;
- (id)geometrySourceForSemantic:(id)semantic;
- (id)geometryElementAtIndex:(long long)index;
- (BOOL)_hasFixedBoundingBoxExtrema;
- (BOOL)getBoundingBoxMin:(struct SCNVector3 { float x0; float x1; float x2; } *)min max:(struct SCNVector3 { float x0; float x1; float x2; } *)max;
- (void)setBoundingBoxMin:(struct SCNVector3 { float x0; float x1; float x2; } *)min max:(struct SCNVector3 { float x0; float x1; float x2; } *)max;
- (BOOL)getBoundingSphereCenter:(struct SCNVector3 { float x0; float x1; float x2; } *)center radius:(double *)radius;
- (BOOL)simdGetBoundingSphereCenter:(1 *)center radius:(float *)radius;
- (id)getBoundingSphere;
- (id)getBoundingBox;
- (void)_setAttributes:(id)attributes;
- (void)_setupObjCModelFrom:(id)from;
- (void)_copyAttributesTo:(id)to;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copy;
- (id)mutableCopy;
- (id)interleavedCopy;
- (id)_renderableCopy;
- (struct __C3DScene *)sceneRef;
- (id)scene;
- (id)keyForNodeAttributes;
- (void)_expand;
- (id)_materialWithName:(id)name;
- (id)materialWithName:(id)name;
- (unsigned long long)countOfMaterials;
- (id)objectInMaterialsAtIndex:(unsigned long long)index;
- (void)insertObject:(id)object inMaterialsAtIndex:(unsigned long long)index;
- (void)removeObjectFromMaterialsAtIndex:(unsigned long long)index;
- (void)replaceObjectInMaterialsAtIndex:(unsigned long long)index withObject:(id)object;
- (id)mutableMaterials;
- (id)_firstMaterial;
- (void)insertMaterial:(id)material atIndex:(unsigned long long)index;
- (void)removeMaterial:(id)material;
- (void)removeMaterialAtIndex:(unsigned long long)index;
- (void)replaceMaterialAtIndex:(unsigned long long)index withMaterial:(id)material;
- (void)replaceMaterial:(id)material with:(id)with;
- (void)removeAllMaterials;
- (id)material;
- (void)setMaterial:(id)material;
- (long long)primitiveType;
- (void)setPrimitiveType:(long long)type;
- (BOOL)parseSpecialKey:(id)key withPath:(id)path intoDestination:(id *)destination remainingPath:(id *)path;
- (id)copyAnimationChannelForKeyPath:(id)path animation:(id)animation;
- (id)tessellator;
- (void)setTessellator:(id)tessellator;
- (struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; })_subdivisionSettings;
- (void)set_subdivisionSettings:(struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; })settings;
- (struct __C3DMaterial *)materialRefCreateIfNeeded;
- (struct __C3DMaterial *)materialRef;
- (void)_unifyNormals;
- (void)setValue:(id)value forUndefinedKey:(id)key;
- (id)valueForUndefinedKey:(id)key;
- (void)_shadableSetValue:(id)value forUndefinedKey:(id)key;
- (id)customMaterialPropertyNames;
- (id)customMaterialProperties;
- (id)customMaterialAttributeNames;
- (id)customMaterialAttributes;
- (void)_setupShadableHelperIfNeeded;
- (id)__shadableHelper;
- (void)copyShaderModifiersAndLanguageVersionFrom:(id)from;
- (id)shaderModifiersArgumentsNames;
- (void)handleBindingOfSymbol:(id)symbol usingBlock:(id /* block */)block;
- (void)handleUnbindingOfSymbol:(id)symbol usingBlock:(id /* block */)block;
- (void *)__CFObject;
- (struct __C3DAnimationManager *)animationManager;
- (BOOL)__removeAnimation:(id)animation forKey:(id)key;
- (void)addAnimationPlayer:(id)player forKey:(id)key;
- (void)addAnimation:(id)animation forKey:(id)key;
- (void)addAnimation:(id)animation;
- (void)removeAllAnimations;
- (void)removeAllAnimationsWithBlendOutDuration:(double)duration;
- (void)removeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key blendOutDuration:(double)duration;
- (void)_syncObjCAnimations;
- (id)animationForKey:(id)key;
- (id)_scnAnimationForKey:(id)key;
- (void)_copyAnimationsFrom:(id)from;
- (id)animationPlayerForKey:(id)key;
- (void)_pauseAnimation:(BOOL)animation forKey:(id)key pausedByNode:(BOOL)node;
- (void)pauseAnimationForKey:(id)key;
- (void)resumeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key fadeOutDuration:(double)duration;
- (void)setSpeed:(double)speed forAnimationKey:(id)key;
- (BOOL)isAnimationForKeyPaused:(id)paused;
- (id)_scnBindings;
- (void)bindAnimatablePath:(id)path toObject:(id)object withKeyPath:(id)path options:(id)options;
- (void)unbindAnimatablePath:(id)path;
- (void)removeAllBindings;
- (void)_customEncodingOfSCNGeometry:(id)scngeometry;
- (void)_customDecodingOfSCNGeometry:(id)scngeometry;
- (struct __C3DGeometry { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct __C3DMesh * x1; struct __C3DMaterial * x2; struct __CFArray * x3; struct __CFSet * x4; struct __CFArray * x5; struct  * x6; unsigned int x7 :1; undefined * x8; struct { unsigned char x0; BOOL x1; struct { BOOL x0; unsigned char x1; unsigned char x2; unsigned char x3; } x2; struct __C3DMeshElement * x3; struct __C3DMeshSource * x4; struct __C3DMesh * x5; void * x6; void * x7; } x9; struct { unsigned char x0; float x1; unsigned int x2; unsigned char x3; union { struct { float x0; float x1; } x0; struct { float x0; } x1; struct { float x0; } x2; struct { unsigned char x0; unsigned int x1 :1; unsigned int x2 :1; } x3; } x4; } x10; unsigned char x11; } *)__createCFObject;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* SCNGeometry_h */
