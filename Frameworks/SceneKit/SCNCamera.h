//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNCamera_h
#define SCNCamera_h
@import Foundation;

#include "MTLTexture-Protocol.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "SCNAnimatable-Protocol.h"
#include "SCNMaterialProperty.h"
#include "SCNOrderedDictionary.h"
#include "SCNTechnique.h"
#include "SCNTechniqueSupport-Protocol.h"

@class NSArray, NSMutableDictionary, NSString;

@interface SCNCamera : NSObject<SCNAnimatable, SCNTechniqueSupport, NSCopying, NSSecureCoding> {
  /* instance variables */
  struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x12; struct { x0[4] } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; unsigned char x13; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot * x43; unsigned long long x44; struct __C3DFXTechnique * x45; void * x46; float x47; } * _camera;
  unsigned int x :1 _isPresentationInstance;
  unsigned int x :1 _custom;
  unsigned int x :1 _legacyFov;
  unsigned int x :1 _fillMode;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _animationsLock;
  SCNOrderedDictionary *_animations;
  NSMutableDictionary *_bindings;
  float _xFov;
  float _yFov;
  float _sensorSize;
   _lensShift;
   _postProjectionTransformTranslation;
   _postProjectionTransformScale;
  float _dofIntensity;
  long long _bladeCount;
  float _aspectRatio;
  float _exposureAdaptationDuration;
  double _exposureAdaptationHistogramRangeHighProbability;
  double _exposureAdaptationHistogramRangeLowProbability;
  long long _exposureAdaptationMode;
  int _bloomIteration;
  struct { float intensity; float radius; float bias; float depthThreshold; float normalThreshold; long long sampleCount; long long downSample; } _screenSpaceAmbientOcclusion;
  NSObject<MTLTexture> *_grainTexture;
  float _grainSlice;
}

@property (copy, nonatomic) NSString *name;
@property (nonatomic) double fieldOfView;
@property (nonatomic) long long projectionDirection;
@property (nonatomic) double focalLength;
@property (nonatomic) double sensorHeight;
@property (nonatomic) double zNear;
@property (nonatomic) double zFar;
@property (nonatomic) BOOL automaticallyAdjustsZRange;
@property (nonatomic) BOOL usesOrthographicProjection;
@property (nonatomic) double orthographicScale;
@property (nonatomic) struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } projectionTransform;
@property (nonatomic) BOOL wantsDepthOfField;
@property (nonatomic) double focusDistance;
@property (nonatomic) long long focalBlurSampleCount;
@property (nonatomic) double fStop;
@property (nonatomic) long long apertureBladeCount;
@property (nonatomic) double motionBlurIntensity;
@property (nonatomic) double screenSpaceAmbientOcclusionIntensity;
@property (nonatomic) double screenSpaceAmbientOcclusionRadius;
@property (nonatomic) double screenSpaceAmbientOcclusionBias;
@property (nonatomic) double screenSpaceAmbientOcclusionDepthThreshold;
@property (nonatomic) double screenSpaceAmbientOcclusionNormalThreshold;
@property (nonatomic) BOOL wantsHDR;
@property (nonatomic) double exposureOffset;
@property (nonatomic) double averageGray;
@property (nonatomic) double whitePoint;
@property (nonatomic) BOOL wantsExposureAdaptation;
@property (nonatomic) double exposureAdaptationBrighteningSpeedFactor;
@property (nonatomic) double exposureAdaptationDarkeningSpeedFactor;
@property (nonatomic) double minimumExposure;
@property (nonatomic) double maximumExposure;
@property (nonatomic) double bloomThreshold;
@property (nonatomic) long long bloomIterationCount;
@property (nonatomic) double bloomIterationSpread;
@property (nonatomic) double bloomIntensity;
@property (nonatomic) double bloomBlurRadius;
@property (nonatomic) double vignettingPower;
@property (nonatomic) double vignettingIntensity;
@property (nonatomic) double colorFringeStrength;
@property (nonatomic) double colorFringeIntensity;
@property (nonatomic) double saturation;
@property (nonatomic) double contrast;
@property (nonatomic) double grainIntensity;
@property (nonatomic) double grainScale;
@property (nonatomic) BOOL grainIsColored;
@property (nonatomic) double whiteBalanceTemperature;
@property (nonatomic) double whiteBalanceTint;
@property (readonly, nonatomic) SCNMaterialProperty *colorGrading;
@property (nonatomic) unsigned long long categoryBitMask;
@property (readonly) NSArray *animationKeys;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) SCNTechnique *technique;

/* class methods */
+ (id)cameraWithMDLCamera:(id)mdlcamera;
+ (id)cameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x12; struct { x0[4] } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; unsigned char x13; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot * x43; unsigned long long x44; struct __C3DFXTechnique * x45; void * x46; float x47; } *)ref;
+ (id)camera;
+ (id)keyPathsForValuesAffectingFieldOfView;
+ (id)keyPathsForValuesAffectingFocalLength;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)debugQuickLookObject;
- (id)debugQuickLookData;
- (id)init;
- (id)initWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x12; struct { x0[4] } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; unsigned char x13; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot * x43; unsigned long long x44; struct __C3DFXTechnique * x45; void * x46; float x47; } *)ref;
- (id)initPresentationCameraWithCameraRef:(struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x12; struct { x0[4] } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; unsigned char x13; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot * x43; unsigned long long x44; struct __C3DFXTechnique * x45; void * x46; float x47; } *)ref;
- (void)dealloc;
- (void)setIdentifier:(id)identifier;
- (id)identifier;
- (void)_syncEntityObjCModel;
- (struct __C3DScene *)sceneRef;
- (id)scene;
- (void *)__CFObject;
- (struct __C3DAnimationManager *)animationManager;
- (BOOL)__removeAnimation:(id)animation forKey:(id)key;
- (void)addAnimationPlayer:(id)player forKey:(id)key;
- (void)addAnimation:(id)animation forKey:(id)key;
- (void)addAnimation:(id)animation;
- (void)removeAllAnimations;
- (void)removeAllAnimationsWithBlendOutDuration:(double)duration;
- (void)removeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key blendOutDuration:(double)duration;
- (void)_syncObjCAnimations;
- (id)animationForKey:(id)key;
- (id)_scnAnimationForKey:(id)key;
- (void)_copyAnimationsFrom:(id)from;
- (id)animationPlayerForKey:(id)key;
- (void)_pauseAnimation:(BOOL)animation forKey:(id)key pausedByNode:(BOOL)node;
- (void)pauseAnimationForKey:(id)key;
- (void)resumeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key fadeOutDuration:(double)duration;
- (void)setSpeed:(double)speed forAnimationKey:(id)key;
- (BOOL)isAnimationForKeyPaused:(id)paused;
- (id)_scnBindings;
- (void)bindAnimatablePath:(id)path toObject:(id)object withKeyPath:(id)path options:(id)options;
- (void)unbindAnimatablePath:(id)path;
- (void)removeAllBindings;
- (void)_syncObjCModel;
- (id)presentationCamera;
- (id)presentationInstance;
- (BOOL)isPausedOrPausedByInheritance;
- (void)_registerAsObserver;
- (BOOL)hasCustomProjectionTransform;
- (long long)screenSpaceAmbientOcclusionSampleCount;
- (void)setScreenSpaceAmbientOcclusionSampleCount:(long long)count;
- (long long)screenSpaceAmbientOcclusionDownSample;
- (void)setScreenSpaceAmbientOcclusionDownSample:(long long)sample;
- (long long)bloomIteration;
- (void)setBloomIteration:(long long)iteration;
- (double)grainSlice;
- (void)setGrainSlice:(double)slice;
- (id)grainTexture;
- (void)setGrainTexture:(id)texture;
- (double)exposureAdaptationDuration;
- (void)setExposureAdaptationDuration:(double)duration;
- (double)exposureAdaptationHistogramRangeHighProbability;
- (void)setExposureAdaptationHistogramRangeHighProbability:(double)probability;
- (double)exposureAdaptationHistogramRangeLowProbability;
- (void)setExposureAdaptationHistogramRangeLowProbability:(double)probability;
- (long long)exposureAdaptationMode;
- (void)setExposureAdaptationMode:(long long)mode;
- (float)dofIntensity;
- (void)setDofIntensity:(float)intensity;
- (double)focalBlurRadius;
- (void)setFocalBlurRadius:(double)radius;
- (double)xFov;
- (void)setXFov:(double)xfov;
- (double)yFov;
- (void)setYFov:(double)yfov;
- (1)lensShift;
- (void)setLensShift:;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })postProjectionTransform;
- (void)setPostProjectionTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (void)setPostProjectionTransformTranslation:;
- (void)setPostProjectionTransformScale:;
- (void)_updateFieldOfView;
- (void)_updateFocalLength;
- (void)_checkSettingsConsistency;
- (double)aperture;
- (void)setAperture:(double)aperture;
- (long long)fillMode;
- (void)setFillMode:(long long)mode;
- (long long)fieldOfViewOrientation;
- (void)setFieldOfViewOrientation:(long long)orientation;
- (double)aspectRatio;
- (void)setAspectRatio:(double)ratio;
- (double)xMag;
- (void)setXMag:(double)xmag;
- (double)yMag;
- (void)setYMag:(double)ymag;
- (BOOL)useLegacyFov;
- (struct __C3DCamera { struct __C3DEntity { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; void * x1; struct __CFString * x2; struct __CFString * x3; struct __CFDictionary * x4; struct __C3DScene * x5; long long x6; } x0; struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :1; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; double x7; double x8; double x9; float x10; double x11; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x12; struct { x0[4] } x13; double x14; double x15; } x1; float x2; float x3; float x4; float x5; int x6; int x7; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; unsigned char x13; union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; } x14; float x15; float x16; float x17; float x18; float x19; float x20; float x21; float x22; float x23; float x24; float x25; float x26; int x27; float x28; float x29; float x30; float x31; float x32; float x33; float x34; float x35; float x36; float x37; float x38; float x39; float x40; float x41; struct { float x0; float x1; float x2; float x3; float x4; int x5; int x6; } x42; struct __C3DEffectSlot * x43; unsigned long long x44; struct __C3DFXTechnique * x45; void * x46; float x47; } *)cameraRef;
- (struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; })projectionTransformWithViewportSize:(struct CGSize { double x0; double x1; })size;
- (id)copyAnimationChannelForKeyPath:(id)path animation:(id)animation;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copy;
- (void)_customEncodingOfSCNCamera:(id)scncamera;
- (double)focalDistance;
- (void)setFocalDistance:(double)distance;
- (double)focalSize;
- (void)setFocalSize:(double)size;
- (void)_didDecodeSCNCamera:(id)scncamera;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* SCNCamera_h */
