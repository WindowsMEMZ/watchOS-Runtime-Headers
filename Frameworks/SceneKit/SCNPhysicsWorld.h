//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNPhysicsWorld_h
#define SCNPhysicsWorld_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "SCNPhysicsContact.h"
#include "SCNScene.h"
#include "SCNTransactionCommandObject-Protocol.h"

@class NSArray, NSMutableArray, NSMutableSet, NSString;
@protocol SCNPhysicsContactDelegate, {c3dAether="_fields"{vector<c3dPhysicsField *, std::allocator<c3dPhysicsField *>>="__begin_"^^{c3dPhysicsField}"__end_"^^{c3dPhysicsField}"__end_cap_"{__compressed_pair<c3dPhysicsField **, std::allocator<c3dPhysicsField *>>="__value_"^^{c3dPhysicsField}}}"_activeFields"{vector<c3dPhysicsField *, std::allocator<c3dPhysicsField *>>="__begin_"^^{c3dPhysicsField}"__end_"^^{c3dPhysicsField}"__end_cap_"{__compressed_pair<c3dPhysicsField **, std::allocator<c3dPhysicsField *>>="__value_"^^{c3dPhysicsField}}}"_lastOverrideIndex"I};

@interface SCNPhysicsWorld : NSObject<SCNTransactionCommandObject, NSSecureCoding> {
  /* instance variables */
  void * _world;
  struct btOverlappingPairCallback { undefined * * x0; } * _ghostPairCallback;
  struct btVehicleRaycaster { undefined * * x0; } * _vehicleRayCaster;
  struct btC3DDebugDraw { undefined * * x0; int x1; float x2; void * x3; } * _debugDrawer;
  struct c3dAether { struct vector<c3dPhysicsField *, std::allocator<c3dPhysicsField *>> { struct c3dPhysicsField * *__begin_; struct c3dPhysicsField * *__end_; struct __compressed_pair<c3dPhysicsField **, std::allocator<c3dPhysicsField *>> { struct c3dPhysicsField * *__value_; } __end_cap_; } _fields; struct vector<c3dPhysicsField *, std::allocator<c3dPhysicsField *>> { struct c3dPhysicsField * *__begin_; struct c3dPhysicsField * *__end_; struct __compressed_pair<c3dPhysicsField **, std::allocator<c3dPhysicsField *>> { struct c3dPhysicsField * *__value_; } __end_cap_; } _activeFields; unsigned int _lastOverrideIndex; } _aether;
  BOOL _hasActiveFields;
  BOOL _firstSimulationDone;
  SCNPhysicsContact *_contact;
  SCNScene *_scene;
  double _scale;
  NSMutableArray *_fields;
  double _elapsedTime;
  NSMutableArray *_behaviors;
  NSArray *_activeBehaviors;
  BOOL _activeBehaviorsValid;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  NSMutableSet *_bodies;
}

@property (nonatomic) struct SCNVector3 { float x0; float x1; float x2; } gravity;
@property (nonatomic) double speed;
@property (nonatomic) double timeStep;
@property (weak) NSObject<SCNPhysicsContactDelegate> *contactDelegate;
@property (readonly, nonatomic) NSArray *allBehaviors;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)_preTick:(double)tick;
- (void)_createDynamicWorldIfNeeded;
- (id)_physicsContact;
- (void)commonInit;
- (id)initWithScene:(id)scene;
- (void)dealloc;
- (void)sceneWillDie;
- (BOOL)_isDefault;
- (void)wakeUpAllBodies;
- (void)setScale:(double)scale;
- (double)scale;
- (void)addBehavior:(id)behavior;
- (void)removeBehavior:(id)behavior;
- (void)removeAllBehaviors;
- (id)objectInAllBehaviorsAtIndex:(unsigned long long)index;
- (BOOL)parseSpecialKey:(id)key withPath:(id)path intoDestination:(id *)destination;
- (id)valueForUndefinedKey:(id)key;
- (id)rayTestWithSegmentFromPoint:(struct SCNVector3 { float x0; float x1; float x2; })point toPoint:(struct SCNVector3 { float x0; float x1; float x2; })point options:(id)options;
- (id)_rayTestWithSegmentFromPoint:(struct btVector3 { union { float x0[4] } x0; })point toPoint:(struct btVector3 { union { float x0[4] } x0; })point options:(id)options;
- (id)contactTestBetweenBody:(id)body andBody:(id)body options:(id)options;
- (id)contactTestWithBody:(id)body options:(id)options;
- (id)convexSweepTestWithShape:(id)shape fromTransform:(struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; })transform toTransform:(struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; })transform options:(id)options;
- (void)updateCollisionPairs;
- (BOOL)_needsRedraw;
- (void)enumerateBodiesUsingBlock:(id /* block */)block;
- (void)_reset;
- (id)_findFieldAttachedToNode:(id)node;
- (void)_addFieldToWorld:(id)world;
- (void)_removeFieldFromWorld:(id)world;
- (void *)_aetherHandle;
- (void)_updatePhysicsFieldsTransforms;
- (void)_step:(double)_step;
- (struct btVehicleRaycaster { undefined * * x0; } *)_defaultVehicleRayCaster;
- (void *)_handle;
- (void)_allowGhostObjects;
- (id)scene;
- (void)setScene:(id)scene;
- (void)_postCommandWithBlock:(id /* block */)block;
- (void)_drawDebugInAuthoringEnvironment:(void *)environment;
- (void)addPhysicsBody:(id)body nodeRef:(struct __C3DNode *)ref colGroup:(unsigned long long)group colMask:(unsigned long long)mask colTest:(unsigned long long)test;
- (void)removePhysicsBody:(id)body handle:(void *)handle;
- (void)_customEncodingOfSCNPhysicsWorld:(id)world;
- (void)_customDecodingOfSCNPhysicsWorld:(id)world;
- (void)_didDecodeSCNPhysicsWorld:(id)world;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* SCNPhysicsWorld_h */
