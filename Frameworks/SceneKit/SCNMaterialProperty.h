//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 599.201.0.0.0
//
#ifndef SCNMaterialProperty_h
#define SCNMaterialProperty_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "SCNAnimatable-Protocol.h"
#include "SCNOrderedDictionary.h"

@class NSArray, NSMutableDictionary, NSString, UIColor;

@interface SCNMaterialProperty : NSObject<SCNAnimatable, NSSecureCoding> {
  /* instance variables */
  unsigned int x :1 _isPresentationInstance;
  unsigned int x :1 _isCommonProfileProperty;
  unsigned int x :1 _sRGB;
  unsigned int x :1 _preventWarmup;
  char _propertyType;
  id _parent;
  NSString *_customSlotName;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _animationsLock;
  SCNOrderedDictionary *_animations;
  NSMutableDictionary *_bindings;
  UIColor *_borderColor;
  unsigned char _contentType;
  struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void * x2; union { struct __C3DImage * x0; void * x1; struct __C3DImageProxy * x2; struct __C3DTexture * x3; void * x4; } x3; unsigned int x4 :8; unsigned int x5 :1; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :4; char x9; struct __C3DTextureSampler * x10; union C3DMatrix4x4 * x11; float x12; int x13; void * x14; } * _customSlot;
  struct __C3DImage * _c3dImage;
  struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } * _contentTransform;
  id _runtimeResolvedPath;
}

@property (retain, nonatomic) id contents;
@property (nonatomic) double intensity;
@property (nonatomic) long long minificationFilter;
@property (nonatomic) long long magnificationFilter;
@property (nonatomic) long long mipFilter;
@property (nonatomic) struct SCNMatrix4 { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } contentsTransform;
@property (nonatomic) long long wrapS;
@property (nonatomic) long long wrapT;
@property (nonatomic) long long mappingChannel;
@property (nonatomic) long long textureComponents;
@property (nonatomic) double maxAnisotropy;
@property (readonly) NSArray *animationKeys;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)precomputedLightingEnvironmentContentsWithURL:(id)url error:(id *)error;
+ (id)precomputedLightingEnvironmentContentsWithData:(id)data error:(id *)error;
+ (id)precomputedLightingEnvironmentDataForContents:(id)contents device:(id)device error:(id *)error;
+ (id)materialPropertyWithContents:(id)contents;
+ (id)dvt_supportedTypesForPropertyContents;
+ (struct __C3DImage *)_copyC3DImageFromImageData:(id)data typeID:(unsigned long long)id;
+ (struct __C3DImage *)copyC3DImageFromImage:(id)image textureOptions:(int)options wasCached:(BOOL *)cached;
+ (struct __C3DImage *)copyC3DImageFromImage:(id)image textureOptions:(int)options;
+ (struct __C3DImage *)copyC3DImageFromImage:(id)image;
+ (id)_copyImageFromC3DImage:(struct __C3DImage *)dimage;
+ (id)copyImageFromC3DImage:(struct __C3DImage *)dimage;
+ (id)captureDeviceOutputConsumer;
+ (id)captureDeviceOutputConsumerWithOptions:(id)options;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithParent:(id)parent propertyType:(char)type;
- (id)initWithParent:(id)parent andCustomName:(id)name;
- (id)initPresentationMaterialPropertyWithModelProperty:(id)property;
- (void)__allocateContentTransformIfNeeded;
- (void)dealloc;
- (id)__runtimeResolvedPath;
- (void)_setParent:(id)parent;
- (void)unlinkCustomPropertyWithParent:(id)parent;
- (void)linkCustomPropertyWithParent:(id)parent andCustomName:(id)name;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void * x2; union { struct __C3DImage * x0; void * x1; struct __C3DImageProxy * x2; struct __C3DTexture * x3; void * x4; } x3; unsigned int x4 :8; unsigned int x5 :1; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :4; char x9; struct __C3DTextureSampler * x10; union C3DMatrix4x4 * x11; float x12; int x13; void * x14; } *)effectSlotCreateIfNeeded:(BOOL)needed;
- (id)_animationPathForKey:(id)key;
- (void)_clearContents;
- (void)_setColor:(id)color;
- (void)setColor:(id)color;
- (id)color;
- (void)setFloatValue:(id)value;
- (id)floatValue;
- (void)_setC3DImageRef:(struct __C3DImage *)ref;
- (void)_setupContentsFromC3DImage;
- (void *)getC3DImageRef;
- (struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; })color4;
- (struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; })borderColor4;
- (long long)_presentationMappingChannel;
- (id)borderColor;
- (void)setBorderColor:(id)color;
- (BOOL)sRGBTexture;
- (void)setSRGBTexture:(BOOL)srgbtexture;
- (int)_textureOptions;
- (void)setAttachment:(id)attachment;
- (id)attachment;
- (void)_updateC3DImageWithContents:(id)contents;
- (void)setImage:(id)image;
- (id)image;
- (id)pvrtcData;
- (void)setSkScene:(id)scene;
- (id)skScene;
- (void)setSkTexture:(id)texture;
- (id)skTexture;
- (void)setLayer:(id)layer;
- (id)layer;
- (void)setCaptureDeviceOutputConsumerSource:(id)source;
- (id)captureDeviceOutputConsumerSource;
- (void)setTextureProvider:(id)provider;
- (id)textureProvider;
- (void)setPrecomputedLightingEnvironment:(id)environment;
- (id)precomputedLightingEnvironment;
- (void)_updateMaterialUIComponent:(id)uicomponent;
- (void)setUIView:(id)uiview;
- (id)UIView;
- (void)setUIWindow:(id)uiwindow;
- (void)_setImagePath:(id)path withResolvedPath:(id)path;
- (void)setContent:(id)content;
- (id)content;
- (void)setProceduralContents:(id)contents;
- (id)proceduralContents;
- (void)setMtlTexture:(id)texture;
- (id)mtlTexture;
- (id)propertyName;
- (id)slotName;
- (char)propertyType;
- (void)parentWillDie:(id)die;
- (id)parent;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x1; void * x2; union { struct __C3DImage * x0; void * x1; struct __C3DImageProxy * x2; struct __C3DTexture * x3; void * x4; } x3; unsigned int x4 :8; unsigned int x5 :1; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :4; char x9; struct __C3DTextureSampler * x10; union C3DMatrix4x4 * x11; float x12; int x13; void * x14; } *)effectSlot;
- (struct __C3DEffectCommonProfile { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __C3DMaterial * x1; int x2; struct __C3DEffectSlot * x3; struct __C3DEffectSlot * x4; struct __C3DEffectSlot * x5; struct __C3DEffectSlot * x6; struct __C3DEffectSlot * x7; struct __C3DEffectSlot * x8; struct __C3DEffectSlot * x9; struct __C3DEffectSlot * x10; struct __C3DEffectSlot * x11; struct __C3DEffectSlot * x12; struct __C3DEffectSlot * x13; struct __C3DEffectSlot * x14; struct __C3DEffectSlot * x15; struct __C3DEffectSlot * x16; struct __C3DEffectSlot * x17; struct __C3DEffectSlot * x18; float x19; float x20; float x21; float x22; float x23; unsigned char x24; long long x25; BOOL x26; BOOL x27; unsigned int x28 :1; unsigned int x29 :1; unsigned int x30 :1; unsigned int x31 :1; unsigned int x32 :1; unsigned int x33 :1; unsigned int x34 :1; unsigned int x35 :1; unsigned int x36 :1; unsigned int x37 :13; } *)commonProfile;
- (struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; int x1; int x2; int x3; int x4; int x5; int x6; struct C3DColor4 { union { float x0[4] struct { float x0; float x1; float x2; float x3; } x1; } x0; } x7; float x8; unsigned char x9; int x10; unsigned long long x11; } *)textureSampler;
- (id)copyAnimationChannelForKeyPath:(id)path animation:(id)animation;
- (void *)__CFObject;
- (struct __C3DAnimationManager *)animationManager;
- (BOOL)__removeAnimation:(id)animation forKey:(id)key;
- (void)addAnimationPlayer:(id)player forKey:(id)key;
- (void)addAnimation:(id)animation forKey:(id)key;
- (void)addAnimation:(id)animation;
- (void)removeAllAnimations;
- (void)removeAllAnimationsWithBlendOutDuration:(double)duration;
- (void)removeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key blendOutDuration:(double)duration;
- (void)_syncObjCAnimations;
- (id)animationForKey:(id)key;
- (id)_scnAnimationForKey:(id)key;
- (void)_copyAnimationsFrom:(id)from;
- (id)animationPlayerForKey:(id)key;
- (void)_pauseAnimation:(BOOL)animation forKey:(id)key pausedByNode:(BOOL)node;
- (void)pauseAnimationForKey:(id)key;
- (void)resumeAnimationForKey:(id)key;
- (void)removeAnimationForKey:(id)key fadeOutDuration:(double)duration;
- (void)setSpeed:(double)speed forAnimationKey:(id)key;
- (BOOL)isAnimationForKeyPaused:(id)paused;
- (id)_scnBindings;
- (void)bindAnimatablePath:(id)path toObject:(id)object withKeyPath:(id)path options:(id)options;
- (void)unbindAnimatablePath:(id)path;
- (void)removeAllBindings;
- (struct __C3DScene *)sceneRef;
- (void)_syncObjCModel;
- (void)copyPropertiesFrom:(id)from;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copy;
- (id)presentationMaterialProperty;
- (id)presentationInstance;
- (BOOL)isPausedOrPausedByInheritance;
- (void)_updateMaterialBorderColor:(id)color;
- (void)_updateMaterialFilters;
- (void)_updateMaterialPropertyTransform:(union C3DMatrix4x4 { float x0[16] x1[4] struct { x0[4] } x2; })transform;
- (void)_updateMaterialAttachment:(id)attachment;
- (void)_layerDidChange:(id)change;
- (void)_skSceneDidChange:(id)change;
- (void)_updateMaterialSKScene:(id)skscene;
- (void)_updateMaterialMTLTexture:(id)mtltexture;
- (void)_updateMaterialSKTexture:(id)sktexture;
- (void)_updateMaterialLayer:(id)layer;
- (void)_updateMaterialCaptureDeviceOutputConsumerSource:(id)source;
- (void)_updateMaterialTextureProvider:(id)provider;
- (void)_updatePrecomputedLightingEnvironment:(id)environment;
- (void)_updateMaterialProceduralContents:(id)contents;
- (void)_updateMaterialImage:(id)image;
- (void)_updateMaterialNumber:(id)number;
- (void)_updateMaterialColor:(id)color;
- (void)_customEncodingOfSCNMaterialProperty:(id)property;
- (void)_didDecodeSCNMaterialProperty:(id)property;
- (void)_customDecodingOfSCNMaterialProperty:(id)property;
- (BOOL)_hasDefaultValues;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* SCNMaterialProperty_h */
