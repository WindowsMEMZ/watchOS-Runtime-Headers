//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1870.2.1.0.0
//
#ifndef EKInviteeAlternativeTimeSearcher_h
#define EKInviteeAlternativeTimeSearcher_h
@import Foundation;

#include "EKSource.h"

@class NSArray, NSDate, NSMutableArray, NSMutableDictionary, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface EKInviteeAlternativeTimeSearcher : NSObject

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *processingQueue;
@property (retain, nonatomic) NSDate *internalOriginalStartDate;
@property (retain, nonatomic) NSDate *internalOriginalEndDate;
@property (retain, nonatomic) NSDate *originalRangeStartDate;
@property (retain, nonatomic) NSMutableArray *internalProposedStarts;
@property (retain, nonatomic) EKSource *source;
@property (retain, nonatomic) NSString *ignoredEventID;
@property (retain, nonatomic) NSOperationQueue *availabilityRequestsQueue;
@property (retain, nonatomic) NSMutableDictionary *participantAddressesToParticipants;
@property (retain, nonatomic) NSString *organizerAddress;
@property (nonatomic) BOOL availabilityRequestInProgress;
@property (retain, nonatomic) NSDate *nextAvailabilityRangeStartDate;
@property (nonatomic) double availabilitySearchDurationMultiplier;
@property (nonatomic) unsigned long long remainingSearchAttempts;
@property (retain, nonatomic) NSMutableArray *leftoverSpans;
@property (retain, nonatomic) NSMutableArray *internalTimesWhenAllAttendeesCanAttend;
@property (retain, nonatomic) NSMutableArray *internalTimesWhenSomeAttendeesCanAttend;
@property (retain, nonatomic) NSMutableArray *internalProposedTimes;
@property (retain, nonatomic) NSMutableArray *internalOriginalConflictedParticipants;
@property (nonatomic) BOOL internalSearchingForMoreTimesWhenAllAttendeesCanAttend;
@property (nonatomic) BOOL internalSearchingForMoreTimesWhenSomeAttendeesCanAttend;
@property (copy, nonatomic) id /* block */ stateChanged;
@property (readonly, nonatomic) NSDate *originalStartDate;
@property (readonly, nonatomic) NSDate *originalEndDate;
@property (readonly, nonatomic) NSArray *originalConflictedParticipants;
@property (readonly, nonatomic) NSArray *timesWhenAllAttendeesCanAttend;
@property (readonly, nonatomic) NSArray *timesWhenSomeAttendeesCanAttend;
@property (readonly, nonatomic) NSArray *proposedTimes;
@property (readonly, nonatomic) BOOL searchingForMoreTimesWhenAllAttendeesCanAttend;
@property (readonly, nonatomic) BOOL searchingForMoreTimesWhenSomeAttendeesCanAttend;
@property (nonatomic) BOOL noConflictRequired;

/* class methods */
+ (id)stateAsString:(long long)string;
+ (id)_findLeftoverSpans:(id)spans usingFreeTimes:(id)times andNonOptimalTimes:(id)times;
+ (id)_addressesForParticipants:(id)participants;
+ (BOOL)_span:(id)_span hasSameConflictedParticipantsAsSpan:(id)span;
+ (id)_allButLastItemInArray:(id)array;
+ (id)_allButFirstItemInArray:(id)array;
+ (void)_insertUniqueParticipants:(id)participants intoExistingParticipantsArray:(id)array;
+ (id)_findHighestRankedNonOptimalTimeSpans:(id)spans;
+ (id)_rankNonOptimalTimeSpans:(id)spans;
+ (long long)_binarySearchForIndexOfTimeSpanInArray:(id)array containingDate:(id)date;
+ (long long)_invalidBinarySearchIndex;
+ (id)_selfOrganizerForNewlyScheduledEventWithAddress:(id)address;
+ (void)_validateSpans:(id)spans;

/* instance methods */
- (id)initWithStateChangedCallback:(id /* block */)callback;
- (void)dealloc;
- (void)searchForMoreTimesWhenAllAttendeesCanAttend;
- (void)searchForMoreTimesWhenSomeAttendeesCanAttend;
- (void)resetWithEvent:(id)event organizerAddressForNewlyScheduledEvent:(id)event;
- (void)_attemptSearch;
- (void)_resetSearchFallbackNumbers;
- (void)_sendStateChange:(long long)change;
- (void)_transitionToConflictFoundStateAndSearch;
- (id)_participantforParticipantAddress:(id)address;
- (void)_processResults:(id)results betweenStartDate:(id)date endDate:(id)date;
- (void)_haltSearchWithError:(BOOL)error;
- (id)_spliceLeftTimeSpans:(id)spans andNewTimeSpans:(id)spans;
- (id)_mergeAdjacentSpansWithSameConflictedParticipants:(id)participants;
- (id)_generateOpenFreeTimesFromTimeSpans:(id)spans;
- (id)_generateNonOptimalTimesFromTimeSpans:(id)spans;
- (id)_filterOutUnreasonableTimeSlots:(id)slots;
- (id)_generateTimeSpansForResults:(id)results betweenStartDate:(id)date endDate:(id)date;
@end

#endif /* EKInviteeAlternativeTimeSearcher_h */
