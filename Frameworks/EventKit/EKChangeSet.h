//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1870.2.1.0.0
//
#ifndef EKChangeSet_h
#define EKChangeSet_h
@import Foundation;

#include "NSCopying-Protocol.h"

@class NSMutableDictionary;

@interface EKChangeSet : NSObject<NSCopying> {
  /* instance variables */
  BOOL _skipsPersistentObjectCopy;
}

@property (retain, nonatomic) NSMutableDictionary *singleValueChanges;
@property (retain, nonatomic) NSMutableDictionary *multiValueAdditions;
@property (retain, nonatomic) NSMutableDictionary *multiValueRemovals;
@property (nonatomic) BOOL isNew;
@property (nonatomic) BOOL isModified;
@property (nonatomic) BOOL isSaved;
@property (nonatomic) BOOL isDeleted;
@property (nonatomic) BOOL isUndeleted;
@property (nonatomic) BOOL isUndetached;

/* instance methods */
- (id)init;
- (id)initWithChangeSet:(id)set;
- (id)initWithChangeSet:(id)set changesToSkip:(id)skip;
- (id)initWithChangeSet:(id)set changesToKeep:(id)keep;
- (id)initWithChangeSet:(id)set filter:(id /* block */)filter;
- (id)_initWithChangeSet:(id)set filter:(id /* block */)filter;
- (id)initWithSingleValueChanges:(id)changes multiValueAdditions:(id)additions multiValueRemovals:(id)removals;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (void)rollbackChanges;
- (void)rollbackChangesForKeys:(id)keys;
- (void)markChangesAsSaved;
- (id)changedKeys;
- (id)changedSingleValueKeys;
- (id)changedMultiValueKeys;
- (BOOL)hasChanges;
- (BOOL)hasUnsavedChanges;
- (BOOL)hasUnsavedChangeForKey:(id)key;
- (BOOL)_isNewAndUnsaved;
- (BOOL)hasUnsavedMultiValueAdditionForKey:(id)key;
- (id)unsavedMultiValueAddedObjectsForKey:(id)key;
- (BOOL)hasUnsavedMultiValueRemovalForKey:(id)key;
- (id)unsavedMultiValueRemovedObjectsForKey:(id)key;
- (id)valueForSingleValueKey:(id)key basedOn:(id)on;
- (id)valueForSingleValueKey:(id)key basedOn:(id)on and:(id)and;
- (void)changeSingleValue:(id)value forKey:(id)key basedOn:(id)on;
- (void)changeSingleValue:(id)value forKey:(id)key basedOn:(id)on and:(id)and;
- (id)valuesForMultiValueKey:(id)key basedOn:(id)on and:(id)and;
- (id)valuesForMultiValueKey:(id)key basedOnSet:(id)set;
- (BOOL)isUniqueAddedObject:(id)object forKey:(id)key;
- (void)replaceMultiChangeAddedObject:(id)object withObject:(id)object forKey:(id)key;
- (void)addChanges:(id)changes;
- (void)addChanges:(id)changes shouldCopyKeyCallback:(id /* block */)callback;
- (void)addToChanges:(id)changes forMultiValueKey:(id)key basedOn:(id)on and:(id)and;
- (void)_addToChanges:(id)changes forMultiValueKey:(id)key basedOn:(id)on and:(id)and shouldCopyKeyCallback:(id /* block */)callback;
- (void)removeFromChanges:(id)changes forMultiValueKey:(id)key basedOn:(id)on and:(id)and;
- (void)replaceUniqueMultiValueObjectsWithUpdatedObjects:(id)objects;
- (void)addChangesAndUpdateUniqueMultiValueObjects:(id)objects;
- (void)_cleanupEmptySetsForMultiValueKey:(id)key;
- (id)_semanticIdentifierToObjectMapForObjects:(id)objects;
- (void)forceChangeValue:(id)value forKey:(id)key;
- (BOOL)skipsPersistentObjectCopy;
- (void)setSkipsPersistentObjectCopy:(BOOL)copy;
- (void)removeAllChangesExceptRemovals;
- (id)description;
- (id)summary;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEffectivelyEqual:(id)equal;
@end

#endif /* EKChangeSet_h */
