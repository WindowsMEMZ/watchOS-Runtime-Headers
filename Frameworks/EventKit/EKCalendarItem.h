//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1870.2.1.0.0
//
#ifndef EKCalendarItem_h
#define EKCalendarItem_h
@import Foundation;

#include "EKObject.h"
#include "EKCalendar.h"
#include "EKCalendarItem.h"

@class NSArray, NSData, NSDate, NSString, NSTimeZone, NSURL;

@interface EKCalendarItem : EKObject

@property (copy, nonatomic) NSData *structuredData;
@property (copy, nonatomic) NSData *localStructuredData;
@property (retain, nonatomic) NSString *calendarItemIdentifier;
@property (retain, nonatomic) NSArray *attachments;
@property (retain, nonatomic) EKCalendarItem *originalItem;
@property (readonly, nonatomic) NSString *UUID;
@property (retain, nonatomic) EKCalendar *calendar;
@property (readonly, nonatomic) NSString *calendarItemExternalIdentifier;
@property (copy, nonatomic) NSString *title;
@property (copy, nonatomic) NSString *location;
@property (copy, nonatomic) NSString *notes;
@property (copy, nonatomic) NSURL *URL;
@property (readonly, nonatomic) NSDate *lastModifiedDate;
@property (readonly, nonatomic) NSDate *creationDate;
@property (copy, nonatomic) NSTimeZone *timeZone;
@property (readonly, nonatomic) BOOL hasAlarms;
@property (readonly, nonatomic) BOOL hasRecurrenceRules;
@property (readonly, nonatomic) BOOL hasAttendees;
@property (readonly, nonatomic) BOOL hasNotes;
@property (readonly, nonatomic) NSArray *attendees;
@property (copy, nonatomic) NSArray *alarms;
@property (copy, nonatomic) NSArray *recurrenceRules;

/* class methods */
+ (id)EKObjectChangeSummarizer_singleValueDiffKeys;
+ (id)EKObjectChangeSummarizer_multiValueDiffKeys;
+ (id)knownRelationshipSingleValueKeys;
+ (id)knownRelationshipSingleValueKeysForValidation;
+ (id)knownRelationshipMultiValueKeys;
+ (id)knownRelationshipMultiValueKeysForValidation;
+ (id)knownRelationshipWeakKeys;
+ (id)knownIdentityKeysForComparison;
+ (id)knownSingleValueKeysForComparison;
+ (id)defaultPropertyKeysToSkipForRecursiveSnapshotCopies;
+ (id)knownDerivedRelationshipKeys;
+ (id)adjustDateFromUTC:(id)utc allDay:(BOOL)day timeZone:(id)zone;
+ (id)keysToIgnoreForApplyingChanges;
+ (BOOL)_shouldDeleteAndAddForMoveFromCalendar:(id)calendar toCalendar:(id)calendar;
+ (id)timeZoneNameFromTimeZone:(id)zone;
+ (id)timeZoneFromTimeZoneName:(id)name withFloatingTimeZone:(id)zone;
+ (BOOL)canonicalizedEqualityTestValue1:(id)value1 value2:(id)value2 key:(id)key object1:(id)object1 object2:(id)object2;

/* instance methods */
- (id)_structuredDataDictionaryFromData:(id)data local:(BOOL)local;
- (id)_dataFromStructuredDataDictionary:(id)dictionary local:(BOOL)local;
- (id)_customObjectForKey:(id)key local:(BOOL)local;
- (void)_setCustomObject:(id)object forKey:(id)key local:(BOOL)local;
- (id)customObjectForKey:(id)key;
- (void)setCustomObject:(id)object forKey:(id)key;
- (id)localCustomObjectForKey:(id)key;
- (void)setLocalCustomObject:(id)object forKey:(id)key;
- (void)willSave;
- (id)description;
- (BOOL)shouldLoadRelationshipForValidation:(id)validation;
- (unsigned long long)entityType;
- (id)startDateRaw;
- (void)setStartDateRaw:(id)raw;
- (id)uniqueId;
- (void)setUniqueId:(id)id;
- (id)uniqueID;
- (void)setUniqueID:(id)id;
- (id)localUID;
- (id)displayNotes;
- (void)setDisplayNotes:(id)notes;
- (id)unlocalizedTitle;
- (void)setUnlocalizedTitle:(id)title;
- (void)setStructuredLocationWithoutPrediction:(id)prediction;
- (id)structuredLocationWithoutPrediction;
- (void)setStructuredLocation:(id)location;
- (id)structuredLocation;
- (void)setClientLocation:(id)location;
- (id)clientLocation;
- (id)preferredLocation;
- (void)setTravelStartLocation:(id)location;
- (id)travelStartLocation;
- (BOOL)isAllDay;
- (void)setAllDay:(BOOL)day;
- (id)calendarScale;
- (void)setCalendarScale:(id)scale;
- (unsigned long long)priority;
- (void)setPriority:(unsigned long long)priority;
- (id)actionString;
- (void)setActionString:(id)string;
- (id)action;
- (void)setAction:(id)action;
- (id)appLink;
- (void)setAppLink:(id)link;
- (id)URLString;
- (void)setURLString:(id)urlstring;
- (id)startTimeZoneName;
- (void)setStartTimeZoneName:(id)name;
- (id)startTimeZone;
- (void)setStartTimeZone:(id)zone;
- (id)endTimeZoneName;
- (void)setEndTimeZoneName:(id)name;
- (id)endTimeZone;
- (void)setEndTimeZone:(id)zone;
- (BOOL)defaultAlarmWasDeleted;
- (void)setDefaultAlarmWasDeleted:(BOOL)deleted;
- (id)externalID;
- (void)setExternalID:(id)id;
- (id)externalScheduleID;
- (void)setExternalScheduleID:(id)id;
- (id)externalModificationTag;
- (void)setExternalModificationTag:(id)tag;
- (id)externalData;
- (void)setExternalData:(id)data;
- (unsigned int)modifiedProperties;
- (void)setModifiedProperties:(unsigned int)properties;
- (int)sequenceNumber;
- (void)setSequenceNumber:(int)number;
- (id)syncError;
- (void)setSyncError:(id)error;
- (BOOL)isNewItemThatFailedToPut;
- (id)exportToICS;
- (id)exportToICSWithOptions:(unsigned long long)options;
- (BOOL)suppressNotificationForChanges;
- (void)setSuppressNotificationForChanges:(BOOL)changes;
- (id)externalURI;
- (id)committedConstraints;
- (BOOL)requiresDetach;
- (BOOL)allowsSpansOtherThanThisEvent;
- (BOOL)isEditable;
- (BOOL)isDeletable;
- (BOOL)_validateDeletable:(id *)deletable;
- (BOOL)_validateDeletableDueToAccessConsent:(id *)consent;
- (BOOL)_validateDeletableInCalendarWithError:(id *)error;
- (BOOL)_isInSharedToMeCalendarWithNoSharingScheduling;
- (BOOL)_validateDeletableBySharedCalendarShareeWithError:(id *)error;
- (BOOL)isFloating;
- (BOOL)isSelfOrganized;
- (BOOL)isSelfOrganizedInvitation;
- (BOOL)isExternallyOrganizedInvitation;
- (BOOL)isOrganizedBySharedCalendarOwner;
- (BOOL)needsResponse;
- (id)constraints;
- (BOOL)allowsCalendarModifications;
- (BOOL)allowsRecurrenceModifications;
- (BOOL)allowsAlarmModifications;
- (BOOL)allowsAttendeesModifications;
- (unsigned long long)actionsState;
- (id)adjustDateFromUTC:(id)utc;
- (BOOL)shouldHaveDefaultAlarms;
- (id)defaultAlarms;
- (id)defaultAlarm;
- (id)sortedAlarms;
- (long long)indexForAlarm:(id)alarm;
- (BOOL)_excludeAlarmDueToConnectionTrigger:(id)trigger;
- (id)allAlarmsSet;
- (void)setAllAlarmsSet:(id)set;
- (void)setAllAlarms:(id)alarms;
- (id)allAlarms;
- (void)addAlarm:(id)alarm;
- (void)removeAlarm:(id)alarm;
- (id)findOriginalAlarmStartingWith:(id)with;
- (void)snoozeAlarm:(id)alarm withTimeIntervalFromNow:(double)now;
- (void)snoozeAlarm:(id)alarm withTimeIntervalFromNow:(double)now pinsTriggerToStartDate:(BOOL)date;
- (void)snoozeAlarm:(id)alarm withLocation:(id)location proximity:(long long)proximity;
- (BOOL)isAlarmAcknowledgedPropertyDirty;
- (BOOL)isOnlyAlarmAcknowledgedPropertyDirty;
- (void)removeAcknowledgedSnoozedAlarms;
- (void)removeAllSnoozedAlarms;
- (id)recurrenceRuleString;
- (id)singleRecurrenceRule;
- (void)setSingleRecurrenceRule:(id)rule;
- (BOOL)_hadRecurrenceRules;
- (void)setRecurrenceRulesSet:(id)set;
- (id)recurrenceRulesSet;
- (void)addRecurrenceRule:(id)rule;
- (void)removeRecurrenceRule:(id)rule;
- (id)startDateForRecurrence;
- (BOOL)_hadAttendees;
- (id)attendeesRaw;
- (void)setAttendeesRaw:(id)raw;
- (id)filterAttendeesPendingDeletion:(id)deletion;
- (void)addAttendee:(id)attendee;
- (void)removeAttendee:(id)attendee;
- (void)_removeAttendee:(id)attendee;
- (id)selfAttendee;
- (id)_selfAttendee;
- (void)setSelfAttendee:(id)attendee;
- (void)_setSelfAttendee:(id)attendee;
- (int)selfParticipantStatusRaw;
- (long long)selfParticipantStatus;
- (id)participantMatchingContact:(id)contact;
- (id)attendeeMatchingEmailAddress:(id)address;
- (id)organizer;
- (void)setOrganizer:(id)organizer;
- (void)addOrganizerAndSelfAttendeeForNewInvitation;
- (void)_addOrganizerAndSelfAttendeeForNewInvitationInCalendar:(id)calendar;
- (void)removeLastExtraneousOrganizerAndSelfAttendee;
- (id)sharedItemCreatedByDisplayName;
- (void)setSharedItemCreatedByDisplayName:(id)name;
- (id)sharedItemCreatedByAddressString;
- (void)setSharedItemCreatedByAddressString:(id)string;
- (id)sharedItemCreatedByAddress;
- (void)setSharedItemCreatedByAddress:(id)address;
- (id)sharedItemCreatedByFirstName;
- (void)setSharedItemCreatedByFirstName:(id)name;
- (id)sharedItemCreatedByLastName;
- (void)setSharedItemCreatedByLastName:(id)name;
- (id)sharedItemCreatedDate;
- (void)setSharedItemCreatedDate:(id)date;
- (id)sharedItemCreatedTimeZoneName;
- (void)setSharedItemCreatedTimeZoneName:(id)name;
- (id)sharedItemCreatedTimeZone;
- (void)setSharedItemCreatedTimeZone:(id)zone;
- (id)sharedItemModifiedByDisplayName;
- (void)setSharedItemModifiedByDisplayName:(id)name;
- (id)sharedItemModifiedByAddressString;
- (void)setSharedItemModifiedByAddressString:(id)string;
- (id)sharedItemModifiedByAddress;
- (void)setSharedItemModifiedByAddress:(id)address;
- (id)sharedItemModifiedByFirstName;
- (void)setSharedItemModifiedByFirstName:(id)name;
- (id)sharedItemModifiedByLastName;
- (void)setSharedItemModifiedByLastName:(id)name;
- (id)sharedItemModifiedDate;
- (void)setSharedItemModifiedDate:(id)date;
- (id)sharedItemModifiedTimeZoneName;
- (void)setSharedItemModifiedTimeZoneName:(id)name;
- (id)sharedItemModifiedTimeZone;
- (void)setSharedItemModifiedTimeZone:(id)zone;
- (id)attachmentsSet;
- (void)setAttachmentsSet:(id)set;
- (void)addAttachment:(id)attachment;
- (void)removeAttachment:(id)attachment;
- (BOOL)hasAttachment;
- (BOOL)canMoveToCalendar:(id)calendar error:(id *)error;
- (BOOL)canMoveToCalendar:(id)calendar fromCalendar:(id)calendar error:(id *)error;
- (BOOL)canMoveOrCopyToCalendar:(id)calendar fromCalendar:(id)calendar error:(id *)error;
- (BOOL)validate:(id *)validate;
- (void)moveToCalendar:(id)calendar;
- (BOOL)hasCalendarChangeThatRequiresDeleteAndAdd;
- (BOOL)hasRecurrenceRuleAdditionOrRemoval;
- (void)_moveToCalendar:(id)calendar forSavingItem:(id)item;
- (void)_updatePersistentObjectOfSelfAndDetachedItemsExceptForSavingItem:(id)item;
- (void)_setCalendarRecursively:(id)recursively forSavingItem:(id)item;
- (void)_resetFieldsAfterMovingToNewCalendar;
- (void)_adjustAfterMovingOrCopyingFromOldCalendar:(id)calendar toNewCalendar:(id)calendar cachedConstraintsForOldCalendar:(id)calendar savingItem:(id)item;
- (void)_recursivelyPerformBlockOnSelfAndDetachedItems:(id /* block */)items forSavingItem:(id)item;
- (id)detachedItems;
- (void)setDetachedItems:(id)items;
- (void)_removeDetachedItem:(id)item;
- (void)_deleteSelfAndDetached;
- (id)ekExceptionDates;
- (void)setEkExceptionDates:(id)dates;
- (id)exceptionDates;
- (id)exceptionDatesAdjustedForFloatingEvents;
- (void)setExceptionDates:(id)dates;
- (void)_addExceptionDate:(id)date;
- (void)_removeExceptionDate:(id)date;
- (void)_deletePersistentItemAndDetachedItems:(id)items forSavingItem:(id)item;
- (void)updateWithAppLink:(id)link usedSelectedText:(BOOL *)text;
- (void)_updateModifiedAlarmByAcknowledging;
- (void)_willSave;
- (id)_generateNewUniqueID;
- (void)updateWithVCSEntity:(id)vcsentity inCalendar:(id)calendar;
@end

#endif /* EKCalendarItem_h */
