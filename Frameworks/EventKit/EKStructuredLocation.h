//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1870.2.1.0.0
//
#ifndef EKStructuredLocation_h
#define EKStructuredLocation_h
@import Foundation;

#include "EKObject.h"
#include "EKPredictedLocationOfInterest.h"
#include "NSCopying-Protocol.h"

@class CLLocation, NSData, NSString;

@interface EKStructuredLocation : EKObject<NSCopying>

@property (copy, nonatomic) NSString *contactLabel;
@property (readonly, nonatomic) BOOL isStructured;
@property (retain, nonatomic) NSString *routing;
@property (copy, nonatomic) NSData *mapKitHandle;
@property (readonly, nonatomic) BOOL hasKnownSpatialData;
@property (retain, nonatomic) NSString *address;
@property (nonatomic) BOOL imprecise;
@property (retain, nonatomic) EKPredictedLocationOfInterest *predictedLOI;
@property (readonly, nonatomic) BOOL prediction;
@property (copy, nonatomic) NSString *derivedFrom;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) CLLocation *geoLocation;
@property (nonatomic) double radius;

/* class methods */
+ (Class)frozenClass;
+ (id)knownIdentityKeysForComparison;
+ (id)knownSingleValueKeysForComparison;
+ (id)knownRelationshipWeakKeys;
+ (id)locationWithTitle:(id)title;
+ (id)_stringByStrippingControlCharactersFromString:(id)string;
+ (id)locationWithPlacemark:(id)placemark;
+ (id)locationWithMapItem:(id)item;
+ (id)locationWithGEOMapItem:(id)item;
+ (id)locationWithCalLocation:(id)location;
+ (id)displayLabelForContact:(id)contact unlocalizedLabel:(id)label;

/* instance methods */
- (id)initWithPersistentObject:(id)object objectForCopy:(id)copy;
- (id)referenceFrame;
- (void)setReferenceFrame:(id)frame;
- (id)latitude;
- (void)setLatitude:(id)latitude;
- (id)longitude;
- (void)setLongitude:(id)longitude;
- (void)_clearGeoLocationCache;
- (id)cacheKey;
- (id)radiusRaw;
- (void)setRadiusRaw:(id)raw;
- (BOOL)_reset;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqualToLocation:(id)location;
- (id)description;
- (id)calLocation;
- (id)geoURLString;
- (void)updateFromMapItem:(id)item;
- (BOOL)isPrediction;
- (BOOL)isImprecise;
@end

#endif /* EKStructuredLocation_h */
