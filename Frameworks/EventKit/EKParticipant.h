//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1870.2.1.0.0
//
#ifndef EKParticipant_h
#define EKParticipant_h
@import Foundation;

#include "EKObject.h"
#include "EKCalendarItem.h"
#include "EKIdentityProtocol-Protocol.h"
#include "NSCopying-Protocol.h"

@class NSPredicate, NSString, NSURL;

@interface EKParticipant : EKObject<EKIdentityProtocol, NSCopying>

@property (copy, nonatomic) NSString *emailAddress;
@property (copy, nonatomic) NSString *phoneNumber;
@property (copy, @dynamic, nonatomic) NSString *inviterNameString;
@property (readonly, nonatomic) BOOL needsResponse;
@property (readonly, nonatomic) NSString *UUID;
@property (copy, nonatomic) NSString *firstName;
@property (copy, nonatomic) NSString *lastName;
@property (copy, nonatomic) NSString *comment;
@property (nonatomic) BOOL scheduleForceSend;
@property (readonly, nonatomic) EKCalendarItem *owner;
@property (readonly, nonatomic) int scheduleStatus;
@property (readonly, nonatomic) NSURL *URL;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) long long participantStatus;
@property (readonly, nonatomic) long long participantRole;
@property (readonly, nonatomic) long long participantType;
@property (readonly, nonatomic) BOOL currentUser;
@property (readonly, @dynamic, nonatomic) NSPredicate *contactPredicate;
@property (readonly, nonatomic) BOOL isCurrentUserForSharing;
@property (readonly, nonatomic) BOOL isCurrentUserForScheduling;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)participantWithName:(id)name url:(id)url;
+ (id)participantWithName:(id)name emailAddress:(id)address phoneNumber:(id)number url:(id)url;
+ (id)knownIdentityKeysForComparison;
+ (id)knownSingleValueKeysForComparison;
+ (id)knownRelationshipWeakKeys;
+ (BOOL)needsResponseForParticipantStatus:(long long)status;
+ (BOOL)doesParticipantURLString:(id)urlstring email:(id)email andPhoneNumber:(id)number matchParticipantURLString:(id)urlstring email:(id)email andPhoneNumber:(id)number;
+ (BOOL)canonicalizedEqualityTestValue1:(id)value1 value2:(id)value2 key:(id)key object1:(id)object1 object2:(id)object2;

/* instance methods */
- (id)initWithName:(id)name emailAddress:(id)address phoneNumber:(id)number url:(id)url;
- (id)nameUsingAddressAsBackup;
- (id)displayNameRaw;
- (void)setDisplayNameRaw:(id)raw;
- (void)setDisplayName:(id)name;
- (id)displayName;
- (id)url;
- (BOOL)isCurrentUser;
- (id)URLString;
- (void)setURLString:(id)urlstring;
- (BOOL)isEqualToParticipant:(id)participant;
- (id)nameComponents;
- (id)displayString;
- (BOOL)isLocationRoom;
- (id)newContact;
- (id)existingContact;
- (id)generateSemanticIdentifier;
@end

#endif /* EKParticipant_h */
