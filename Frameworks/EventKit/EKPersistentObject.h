//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1870.2.1.0.0
//
#ifndef EKPersistentObject_h
#define EKPersistentObject_h
@import Foundation;

#include "EKEventStore.h"
#include "EKFrozenMeltedPair-Protocol.h"
#include "EKObjectID.h"

@class CADGenerationStampedObjectID, NSHashTable, NSMutableDictionary, NSString;

@interface EKPersistentObject : NSObject<EKFrozenMeltedPair> {
  /* instance variables */
  struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } _lock;
  unsigned int _flags;
  NSHashTable *_coCommitObjects;
  NSMutableDictionary *_loadedProperties;
  NSMutableDictionary *_updatedProperties;
}

@property (readonly, nonatomic) int databaseRestoreGeneration;
@property (readonly, nonatomic) int entityType;
@property (readonly, nonatomic) EKEventStore *eventStore;
@property (readonly, nonatomic) BOOL isFrozen;
@property (readonly, nonatomic) BOOL isPartialObject;
@property (readonly, nonatomic) NSString *uniqueIdentifier;
@property (readonly, nonatomic) NSString *semanticIdentifier;
@property (readonly, nonatomic) EKObjectID *objectID;
@property (readonly, nonatomic) CADGenerationStampedObjectID *CADObjectID;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultPropertiesToLoad;
+ (id)relations;
+ (Class)alternateUniverseClass;
+ (id)propertiesUnavailableForPartialObjects;
+ (id)propertyKeyForUniqueIdentifier;
+ (Class)frozenClass;
+ (Class)meltedClass;
+ (id)_createNonPartialObjectFromObject:(id)object ifPropertyIsUnavailable:(id)unavailable;
+ (id)propertiesToUnloadOnCommit;
+ (id)_relationForKey:(id)key;
+ (BOOL)_shouldRetainPropertyForKey:(id)key;
+ (void)_takeDefaultValuesForObjects:(id)objects inEventStore:(id)store;
+ (id)allObjectsWithChangesRelatedToObjects:(id)objects;

/* instance methods */
- (id)init;
- (id)initWithAlternateUniverseObject:(id)object inEventStore:(id)store withUpdatedChildObjects:(id)objects;
- (void)dealloc;
- (BOOL)isEqual:(id)equal;
- (BOOL)canBeConvertedToFullObject;
- (id)preFrozenRelationshipObjects;
- (BOOL)isNew;
- (BOOL)isPropertyUnavailable:(id)unavailable;
- (id)changeSet;
- (id)existingMeltedObject;
- (Class)frozenClass;
- (id)frozenObject;
- (id)frozenObjectInStore:(id)store;
- (id)meltedObjectInStore:(id)store;
- (BOOL)isCompletelyEqual:(id)equal;
- (BOOL)isEqual:(id)equal ignoringProperties:(id)properties;
- (void)_setEventStore:(id)store;
- (void)_setObjectID:(id)id inDatabaseRestoreGeneration:(int)generation;
- (id)_CADObjectID;
- (BOOL)existsInStore;
- (BOOL)_isNew;
- (BOOL)isDirty;
- (void)changed;
- (id)_loadedPropertyKeys;
- (BOOL)refresh;
- (BOOL)isPropertyDirty:(id)dirty;
- (BOOL)isPropertyLoaded:(id)loaded;
- (id)dirtyPropertiesAndValues;
- (void)didCommit;
- (void)reset;
- (void)reset:(id)reset;
- (void)rollback;
- (void)_setPendingInsert:(BOOL)insert;
- (BOOL)_isPendingInsert;
- (BOOL)isPendingInsert;
- (void)_setPendingUpdate:(BOOL)update;
- (BOOL)_isPendingUpdate;
- (void)_setPendingDelete:(BOOL)delete;
- (BOOL)_isPendingDelete;
- (void)_setDefaultPropertiesLoaded:(BOOL)loaded;
- (BOOL)_areDefaultPropertiesLoaded;
- (id)coCommitObjects;
- (void)addCoCommitObject:(id)object;
- (void)internalAddCoCommitObject:(id)object;
- (void)removeCoCommitObject:(id)object;
- (void)internalRemoveCoCommitObject:(id)object;
- (id)loadedPropertyForKey:(id)key;
- (id)_loadedPropertyForKey:(id)key;
- (id)_propertyForKey:(id)key;
- (void)_createLoadedPropertiesIfNeeded;
- (void)_createUpdatedPropertiesIfNeeded;
- (id)updatedPropertiesWithOnlyPersistentObjects;
- (void)_setProperty:(id)property forKey:(id)key isUpdatedProperty:(BOOL)property;
- (void)_setProperty:(id)property forKey:(id)key isRelation:(BOOL)relation isUpdatedProperty:(BOOL)property;
- (void)_setProperty:(id)property forKey:(id)key forRelation:(id)relation isUpdatedProperty:(BOOL)property;
- (void)_releaseLoadedProperties;
- (void)unloadPropertyForKey:(id)key;
- (id)primitiveRelationValueForKey:(id)key;
- (void)_addObjectCore:(id)core toValues:(id)values relation:(id)relation;
- (void)_removeObjectCore:(id)core fromValues:(id)values relation:(id)relation;
- (void)primitiveAddRelatedObject:(id)object forKey:(id)key;
- (void)primitiveRemoveRelatedObject:(id)object forKey:(id)key;
- (void)primitiveSetRelationValue:(id)value forKey:(id)key;
- (id)_primitiveValueForKey:(id)key loader:(id /* block */)loader;
- (void)_primitiveSetValue:(id)value forKey:(id)key;
- (id)primitiveNumberValueForKey:(id)key;
- (void)primitiveSetNumberValue:(id)value forKey:(id)key;
- (int)primitiveIntValueForKey:(id)key;
- (void)primitiveSetIntValue:(int)value forKey:(id)key;
- (double)primitiveDoubleValueForKey:(id)key;
- (void)primitiveSetDoubleValue:(double)value forKey:(id)key;
- (BOOL)primitiveBoolValueForKey:(id)key;
- (void)primitiveSetBoolValue:(BOOL)value forKey:(id)key;
- (id)primitiveDateValueForKey:(id)key;
- (void)primitiveSetDateValue:(id)value forKey:(id)key;
- (id)_loadStringValueForKey:(id)key;
- (id)primitiveStringValueForKey:(id)key;
- (void)primitiveSetStringValue:(id)value forKey:(id)key;
- (id)primitiveDataValueForKey:(id)key;
- (void)primitiveSetDataValue:(id)value forKey:(id)key;
- (id)primitiveSecurityScopedURLWrapperValueForKey:(id)key;
- (void)primitiveSetSecurityScopedURLWrapperValue:(id)value forKey:(id)key;
- (BOOL)_loadRelationForKey:(id)key value:(id *)value;
- (BOOL)_loadChildIdentifiersForKey:(id)key values:(id *)values;
- (void)takeDefaultValues:(id)values;
- (void)takeValues:(id)values forKeys:(id)keys;
- (void)_takeValues:(id)values forKeys:(id)keys relatedObjectValues:(id)values;
- (void)_takeValues:(id)values relatedObjectValues:(id)values;
- (void)takeValuesForDefaultPropertyKeys:(id)keys values:(id)values;
- (void)_takeValuesForDefaultPropertyKeys:(id)keys values:(id)values relatedObjectValues:(id)values;
- (void)_loadDefaultPropertiesIfNeeded;
- (void)_loadPropertiesIfNeeded:(id)needed;
- (void)loadPropertiesIfNeeded:(id)needed;
- (id)ownedObjects;
- (id)dump;
- (id)rebasedFrom;
- (void)setRebasedFrom:(id)from;
@end

#endif /* EKPersistentObject_h */
