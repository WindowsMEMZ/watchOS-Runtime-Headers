//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1870.2.1.0.0
//
#ifndef _EKNotificationMonitor_h
#define _EKNotificationMonitor_h
@import Foundation;

#include "EKEventStore.h"
#include "EKTimedEventStorePurger.h"

@class CADInMemoryChangeTimestamp, NSArray, NSDate, NSMutableArray, NSTimer, PCPersistentTimer;
@protocol OS_dispatch_queue;

@interface _EKNotificationMonitor : NSObject {
  /* instance variables */
  id /* block */ _eventStoreGetter;
  BOOL _running;
  PCPersistentTimer *_timer;
  NSDate *_nextFireTime;
  NSTimer *_syncTimer;
  BOOL _pendingChanges;
  NSObject<OS_dispatch_queue> *_queue;
  CADInMemoryChangeTimestamp *_lastChangedTimestamp;
  BOOL _changedIDsValid;
  NSMutableArray *_changedIDs;
  int _ignoreSyncTimer;
  BOOL _initialCheck;
  BOOL _shouldInstallPersistentTimer;
  BOOL _useSyncIdleTimer;
  BOOL _registerForDarwinNotifications;
  BOOL _filteredByShowsNotificationsFlag;
  BOOL _computeChangedNotificationSet;
  BOOL _automaticallyFaultNotifications;
  BOOL _lastExpirationTimerFireDateWasInThePast;
  BOOL _isExpandedCount;
  BOOL _excludeUncheckedCalendars;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *notificationQueue;
@property (readonly, nonatomic) BOOL isMonitoringOnlyNotificationCount;
@property (readonly, nonatomic) EKTimedEventStorePurger *eventStorePurger;
@property (readonly, nonatomic) EKEventStore *eventStore;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *callbackNotificationQueue;
@property (readonly, nonatomic) unsigned long long notificationCount;
@property (readonly, nonatomic) NSArray *notificationReferences;

/* class methods */
+ (id)logHandle;
+ (id)requestedDarwinNotifications;
+ (id)blacklistedNotificationQueue;
+ (void)addBlacklistedNotificationObjectID:(id)id;
+ (id)blacklistedRowIDs;

/* instance methods */
- (id)init;
- (id)initWithOptions:(long long)options;
- (id)initWithOptions:(long long)options eventStore:(id)store;
- (id)initWithOptions:(long long)options eventStoreGetter:(id /* block */)getter;
- (id)_initWithOptions:(long long)options eventStore:(id)store eventStoreGetter:(id /* block */)getter;
- (void)dealloc;
- (id)_eventStore;
- (void)_killTimer;
- (void)start;
- (void)stop;
- (void)adjust;
- (void)attemptReload;
- (void)attemptReloadSynchronously:(BOOL)synchronously;
- (void)_addRemovedOrAddedObjectIDsTo:(id)to oldNotifications:(id)notifications newNotifications:(id)notifications;
- (void)_updateTimerFireDate:(id)date;
- (id)effectiveCallbackQueue;
- (void)handleDarwinNotification:(id)notification;
- (void)_eventStoreChangedNotification:(id)notification;
- (void)_eventStoreChanged;
- (void)_databaseChanged;
- (void)_notificationCountChangedExternally;
- (void)_alertPrefChanged;
- (void)_timerFired;
- (id)_fetchEventNotificationReferencesFromEventStore:(id)store earliestExpiringNotification:(id *)notification;
- (void)_resetSyncTimer;
- (void)_killSyncTimer:(id)timer;
- (void)_syncTimerFired:(id)fired;
- (void)_syncDidStart;
- (void)_syncDidEndExternally;
- (void)_syncDidEnd:(id)end;
- (void)trackChangesInEventStore;
@end

#endif /* _EKNotificationMonitor_h */
