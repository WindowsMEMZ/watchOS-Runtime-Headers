//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSFileAccessClaim_h
#define NSFileAccessClaim_h
@import Foundation;

#include "NSCountedSet.h"
#include "NSError.h"
#include "NSFileAccessProcessManager.h"
#include "NSSecureCoding-Protocol.h"
#include "NSString.h"
#include "NSXPCConnection.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet;
@protocol OS_dispatch_queue, OS_dispatch_semaphore;

@interface NSFileAccessClaim : NSObject<NSSecureCoding> {
  /* instance variables */
  NSXPCConnection *_client;
  NSString *_claimID;
  NSString *_purposeIDOrNil;
  BOOL _cameFromSuperarbiter;
  unsigned long long _blockageCount;
  BOOL _didWait;
  BOOL _isRevoked;
  NSMutableArray *_claimerBlockageReasons;
  NSError *_claimerError;
  NSMutableOrderedSet *_pendingClaims;
  NSMutableSet *_blockingClaims;
  NSCountedSet *_blockingReactorIDs;
  NSMutableArray *_providerCancellationProcedures;
  NSMutableDictionary *_reacquisitionProceduresByPresenterID;
  NSMutableArray *_revocationProcedures;
  NSMutableArray *_devaluationProcedures;
  NSMutableArray *_finishingProcedures;
  NSFileAccessProcessManager *_processManager;
  BOOL _hasInvokedClaimer;
  id _claimerOrNil;
  id /* block */ _serverClaimerOrNil;
  NSMutableArray *_sandboxTokens;
  NSObject<OS_dispatch_queue> *_arbiterQueue;
  id _originatingReactorQueueID;
  NSMutableDictionary *_fileHandlesForEvictionProtection;
}

@property (readonly) NSObject<OS_dispatch_semaphore> *claimerWaiter;
@property (readonly, copy) NSArray *allURLs;
@property BOOL shouldEnableMaterializationDuringAccessorBlock;

/* class methods */
+ (BOOL)canReadingItemAtLocation:(id)location options:(unsigned long long)options safelyOverlapNewWriting:(BOOL)writing ofItemAtLocation:(id)location options:(unsigned long long)options;
+ (BOOL)canNewWriteOfItemAtLocation:(id)location options:(unsigned long long)options safelyOverlapExistingWriteOfItemAtLocation:(id)location options:(unsigned long long)options;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (BOOL)shouldReadingWithOptions:(unsigned long long)options causePresenterToRelinquish:(id)relinquish;
- (BOOL)shouldWritingWithOptions:(unsigned long long)options causePresenterToRelinquish:(id)relinquish;
- (BOOL)shouldInformProvidersAboutEndOfWriteWithOptions:(unsigned long long)options;
- (void)_setupWithClaimID:(id)id purposeID:(id)id originatingReactorQueueID:(id)id;
- (id)initWithClient:(id)client claimID:(id)id purposeID:(id)id;
- (void)dealloc;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)client;
- (id)claimID;
- (id)purposeID;
- (int)clientProcessIdentifier;
- (void)forwardUsingConnection:(id)connection crashHandler:(id /* block */)handler;
- (void)prepareClaimForGrantingWithArbiterQueue:(id)queue;
- (void)acceptClaimFromClient:(id)client arbiterQueue:(id)queue grantHandler:(id /* block */)handler;
- (void)setCameFromSuperarbiter;
- (BOOL)cameFromSuperarbiter;
- (void)startObservingClientState;
- (void)block;
- (void)unblock;
- (BOOL)didWait;
- (void)blockClaimerForReason:(id)reason;
- (void)unblockClaimerForReason:(id)reason;
- (void)setClaimerError:(id)error;
- (id)claimerError;
- (BOOL)evaluateSelfWithRootNode:(id)node checkSubarbitrability:(BOOL)subarbitrability;
- (void)whenRevokedPerformProcedure:(id /* block */)procedure;
- (void)whenDevaluedPerformProcedure:(id /* block */)procedure;
- (void)whenFinishedPerformProcedure:(id /* block */)procedure;
- (void)addBlockingReactorID:(id)id;
- (void)removeBlockingReactorID:(id)id;
- (BOOL)claimerInvokingIsBlockedByReactorWithID:(id)id;
- (BOOL)isBlockedByClaimWithPurposeID:(id)id;
- (void)givePriorityToClaim:(id)claim;
- (void)scheduleBlockedClaim:(id)claim;
- (void)evaluateNewClaim:(id)claim;
- (void)addPendingClaim:(id)claim;
- (id)pendingClaims;
- (void)removePendingClaims:(id)claims;
- (BOOL)isBlockedByReadingItemAtLocation:(id)location options:(unsigned long long)options;
- (BOOL)isBlockedByWritingItemAtLocation:(id)location options:(unsigned long long)options;
- (void)granted;
- (void)ensureProvidersOfItemsAtReadingLocations:(id)locations writingLocations:(id)locations thenContinue:(id /* block */)continue;
- (BOOL)shouldMakeProviderProvideItemAtLocation:(id)location withOptions:(unsigned long long)options;
- (void)makeProviderOfItemAtLocation:(id)location provideIfNecessaryWithOptions:(unsigned long long)options thenContinue:(id /* block */)continue;
- (void)_checkIfMovingRequiresProvidingAmongWritingLocations:(id)locations options:(unsigned long long *)options thenContinue:(id /* block */)continue;
- (void)makeProvidersProvideItemsForReadingLocations:(id)locations options:(unsigned long long *)options andWritingLocationsIfNecessary:(id)necessary options:(unsigned long long *)options thenContinue:(id /* block */)continue;
- (void)makeProviderOfItemAtLocation:(id)location providePhysicalURLThenContinue:(id /* block */)continue;
- (void)makeProviderOfItemAtLocation:(id)location provideOrAttachPhysicalURLIfNecessaryForPurposeID:(id)id readingOptions:(unsigned long long)options thenContinue:(id /* block */)continue;
- (void)makeProviderOfItemAtLocation:(id)location provideOrAttachPhysicalURLIfNecessaryForPurposeID:(id)id writingOptions:(unsigned long long)options thenContinue:(id /* block */)continue;
- (void)makePresentersOfItemAtLocation:(id)location orContainedItem:(BOOL)item relinquishUsingProcedureGetter:(id /* block */)getter;
- (BOOL)canAccessLocations:(id)locations forReading:(BOOL)reading error:(id *)error;
- (BOOL)_writeArchiveOfDirectoryAtURL:(id)url toURL:(id)url error:(id *)error;
- (void)prepareItemForUploadingFromURL:(id)url thenContinue:(id /* block */)continue;
- (void)invokeClaimer;
- (void)revoked;
- (void)devalueSelf;
- (void)cancelled;
- (void)devalueOldClaim:(id)claim;
- (BOOL)isGranted;
- (BOOL)isRevoked;
- (void)itemAtLocation:(id)location wasReplacedByItemAtLocation:(id)location;
- (id)descriptionWithIndenting:(id)indenting;
- (id)description;
- (BOOL)checkIfSymbolicLinkAtURL:(id)url withResolutionCount:(long long *)count andIfSoThenReevaluateSelf:(id /* block */)self;
- (id)purposeIDOfClaimOnItemAtLocation:(id)location forMessagingPresenter:(id)presenter;
- (BOOL)shouldBeRevokedPriorToInvokingAccessor;
- (void)finished;
- (void)disavowed;
- (BOOL)shouldCancelInsteadOfWaiting;
- (void)protectFilesAgainstEviction;
- (void)_protectIfNecessaryFileAtURL:(id)url withOptions:(unsigned long long)options forReading:(BOOL)reading;
@end

#endif /* NSFileAccessClaim_h */
