//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSXPCEncoder_h
#define NSXPCEncoder_h
@import Foundation;

#include ".h"
#include "NSXPCConnection.h"

@protocol NSXPCEncoderDelegate, OS_xpc_object;

@interface NSXPCEncoder :  {
  /* instance variables */
  NSObject<OS_xpc_object> *_oolObjects;
  NSXPCConnection *_connection;
  struct __CFDictionary * _replacedByDelegateObjects;
  struct { unsigned long long x[1024] collectionSizeOffset; long long collectionRecursionIndex; unsigned long long dataLen; unsigned long long dataSize; char *data; struct __CFDictionary *_objectReferences; struct __CFDictionary *_stringReferences; struct __CFDictionary *_asciiReferences; BOOL isVM; BOOL isStack; } _encoder;
  unsigned long long _genericIndex;
  BOOL _topLevelDictionary;
  BOOL _finished;
  BOOL _askForReplacement;
}

@property NSXPCConnection *_connection;
@property NSObject<NSXPCEncoderDelegate> *delegate;

/* instance methods */
- (id)connection;
- (id)initWithStackSpace:(char *)space size:(unsigned long long)size;
- (id)init;
- (void)dealloc;
- (id)debugDescription;
- (BOOL)allowsKeyedCoding;
- (void)encodeValueOfObjCType:(const char *)ctype at:(const void *)at;
- (void)encodeDataObject:(id)object;
- (void)encodeObject:(id)object;
- (id)_replaceObject:(id)object;
- (void)_checkObject:(id)object;
- (void)_encodeObject:(id)object;
- (void)encodeObject:(id)object forKey:(id)key;
- (void)_encodeUnkeyedObject:(id)object;
- (void)_startTopLevelDictionary;
- (id)_newRootXPCObject;
- (void)_encodeInvocation:(id)invocation isReply:(BOOL)reply into:(id)into;
- (void)_encodeInvocationObjectArgumentsOnly:(id *)only count:(unsigned long long)count typeString:(const char *)string selector:(SEL)selector isReply:(BOOL)reply into:(id)into;
- (void)_encodeArrayOfObjects:(id)objects forKey:(id)key;
- (void)encodeBool:(BOOL)bool forKey:(id)key;
- (void)encodeInt:(int)int forKey:(id)key;
- (void)encodeInt32:(int)int32 forKey:(id)key;
- (void)encodeInt64:(long long)int64 forKey:(id)key;
- (void)encodeFloat:(float)float forKey:(id)key;
- (void)encodeDouble:(double)double forKey:(id)key;
- (void)encodeInteger:(long long)integer forKey:(id)key;
- (void)encodeBytes:(const char *)bytes length:(unsigned long long)length forKey:(id)key;
- (void)_encodeCString:(const char *)cstring length:(unsigned long long)length forKey:(id)key;
- (unsigned long long)_addOOLXPCObject:(id)oolxpcobject;
- (void)encodeXPCObject:(id)xpcobject forKey:(id)key;
- (void)encodeConditionalObject:(id)object forKey:(id)key;
@end

#endif /* NSXPCEncoder_h */
