//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSFileAccessNode_h
#define NSFileAccessNode_h
@import Foundation;

#include "NSFileAccessNode.h"
#include "NSFileProviderProxy.h"
#include "NSString.h"

@class NSMutableDictionary;

@interface NSFileAccessNode : NSObject {
  /* instance variables */
  NSFileAccessNode *_parent;
  NSString *_name;
  NSString *_normalizedName;
  NSFileAccessNode *_symbolicLinkDestination;
  unsigned long long _symbolicLinkReferenceCount;
  NSMutableDictionary *_childrenByNormalizedName;
  id _presenterOrPresenters;
  NSFileProviderProxy *_provider;
  id _accessClaimOrClaims;
  BOOL _isArbitrationBoundary;
  BOOL _isFilePackageIsFigured;
  BOOL _isFilePackage;
  BOOL _symbolicLinkIsFirmlink;
  NSString *_lastRequestedChildName;
  NSFileAccessNode *_lastRequestedChild;
  id _progressPublisherOrPublishers;
  id _progressSubscriberOrSubscribers;
}

/* instance methods */
- (id)initWithParent:(id)parent name:(id)name normalizedName:(id)name;
- (void)_setLinkDestination:(id)destination;
- (void)setSymbolicLinkDestination:(id)destination;
- (void)setFirmlinkDestination:(id)destination;
- (void)dealloc;
- (id)pathToDescendantForFileURL:(id)url componentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; } *)range;
- (void)setChild:(id)child forName:(id)name normalizedName:(id)name;
- (void)removeChildForNormalizedName:(id)name;
- (void)removeSelfIfUseless;
- (id)normalizationOfChildName:(id)name;
- (id)descendantAtPath:(id)path componentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range create:(BOOL)create;
- (id)descendantAtPath:(id)path componentRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range forAddingLeafNode:(id)node create:(BOOL)create;
- (id)childForRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range ofPath:(id)path;
- (id)descendantForFileURL:(id)url;
- (id)pathFromAncestor:(id)ancestor;
- (void)setParent:(id)parent name:(id)name;
- (BOOL)itemIsFilePackage;
- (id)biggestFilePackageLocation;
- (void)forEachDescendantPerformProcedure:(id /* block */)procedure;
- (void)forEachAccessClaimOnItemPerformProcedure:(id /* block */)procedure;
- (void)_forEachRelevantAccessClaimExcludingClaimsFromSuperarbiter:(BOOL)superarbiter performProcedure:(id /* block */)procedure;
- (void)forEachRelevantAccessClaimForEvaluatingAgainstClaim:(id)claim performProcedure:(id /* block */)procedure;
- (void)forEachRelevantAccessClaimPerformProcedure:(id /* block */)procedure;
- (void)forEachReactorToItemOrContainedItemPerformProcedure:(id /* block */)procedure;
- (id)itemProvider;
- (void)forEachPresenterOfContainingFilePackagePerformProcedure:(id /* block */)procedure;
- (void)forEachPresenterOfItemPerformProcedure:(id /* block */)procedure;
- (void)forEachPresenterOfContainedItemPerformProcedure:(id /* block */)procedure;
- (void)forEachPresenterOfItemOrContainedItemPerformProcedure:(id /* block */)procedure;
- (void)forEachPresenterOfItemOrContainingItemPerformProcedure:(id /* block */)procedure;
- (void)forEachPresenterOfContainingItemPerformProcedure:(id /* block */)procedure;
- (void)forEachAccessClaimOnItemOrContainedItemPerformProcedure:(id /* block */)procedure;
- (void)setArbitrationBoundary;
- (BOOL)itemIsSubarbitrable;
- (BOOL)itemIsItemAtLocation:(id)location;
- (BOOL)itemIsInItemAtLocation:(id)location;
- (void)addPresenter:(id)presenter;
- (void)removePresenter:(id)presenter;
- (BOOL)setProvider:(id)provider;
- (void)removeProvider:(id)provider;
- (void)addAccessClaim:(id)claim;
- (void)removeAccessClaim:(id)claim;
- (id)url;
- (id)pathExceptPrivate;
- (id)standardizedURL;
- (id)name;
- (id)urlOfSubitemAtPath:(id)path plusPath:(id)path;
- (void)addProgressPublisher:(id)publisher;
- (void)removeProgressPublisher:(id)publisher;
- (void)addProgressSubscriber:(id)subscriber;
- (void)removeProgressSubscriber:(id)subscriber;
- (void)forEachProgressPublisherOfItemPerformProcedure:(id /* block */)procedure;
- (void)forEachProgressPublisherOfItemOrContainedItemPerformProcedure:(id /* block */)procedure;
- (void)forEachProgressSubscriberOfItemPerformProcedure:(id /* block */)procedure;
- (void)forEachProgressSubscriberOfItemOrContainingItemPerformProcedure:(id /* block */)procedure;
- (void)forEachProgressThingOfItemOrContainedItemPerformProcedure:(id /* block */)procedure;
- (id)parent;
- (void)assertDead;
- (void)assertLive;
- (void)assertDescendantsLive;
- (BOOL)_mayContainCriticalDebuggingInformationExcludingReactors:(BOOL)reactors;
- (id)_childrenExcludingExcessNodes:(BOOL)nodes excludingReactors:(BOOL)reactors;
- (id)descriptionWithIndenting:(id)indenting excludingExcessNodes:(BOOL)nodes excludingReactors:(BOOL)reactors;
- (id)sensitiveDescription;
- (id)description;
- (id)sensitiveSubarbiterDescription;
- (id)subarbiterDescription;
@end

#endif /* NSFileAccessNode_h */
