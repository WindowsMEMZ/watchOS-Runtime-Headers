//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSData_NSData_h
#define NSData_NSData_h
@import Foundation;

@interface NSData (NSData)
/* class methods */
+ (BOOL)_subclassesMustBeExplicitlyMentionedWhenDecoded;
+ (id)allocWithZone:(struct _NSZone *)zone;
+ (id)_alloc;
+ (id)data;
+ (id)dataWithBytes:(const void *)bytes length:(unsigned long long)length;
+ (id)dataWithBytesNoCopy:(void *)copy length:(unsigned long long)length;
+ (id)dataWithBytesNoCopy:(void *)copy length:(unsigned long long)length freeWhenDone:(BOOL)done;
+ (id)dataWithContentsOfFile:(id)file;
+ (id)dataWithContentsOfURL:(id)url;
+ (id)dataWithContentsOfMappedFile:(id)file;
+ (id)dataWithContentsOfFile:(id)file options:(unsigned long long)options error:(id *)error;
+ (id)dataWithContentsOfURL:(id)url options:(unsigned long long)options error:(id *)error;
+ (id)dataWithContentsOfURL:(id)url options:(unsigned long long)options maxLength:(unsigned long long)length error:(id *)error;
+ (id)dataWithData:(id)data;
+ (id)_newZeroingDataWithBytes:(const void *)bytes length:(unsigned long long)length;
+ (id)_newZeroingDataWithBytesNoCopy:(void *)copy length:(unsigned long long)length deallocator:(id /* block */)deallocator;
+ (BOOL)_base64DecodingAlwaysSucceedsForOptions:(unsigned long long)options;

/* instance methods */
- (id)replacementObjectForPortCoder:(id)coder;
- (BOOL)isNSData__;
- (id)_web_guessedMIMETypeForXML;
- (id)_web_guessedMIMEType;
- (id)_web_guessedMIMETypeForExtension:(id)extension;
- (id)_web_parseRFC822HeaderFields;
- (id)_replaceCString:(const char *)cstring withCString:(const char *)cstring;
- (BOOL)_getBPlistMarker:(char *)marker offset:(unsigned long long *)offset trailer:(struct { unsigned char x0[5] unsigned char x1; unsigned char x2; unsigned char x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; } *)trailer;
- (void)_produceDataWithCompressionOperation:(int)operation algorithm:(int)algorithm handler:(id /* block */)handler;
- (id)decompressedDataUsingAlgorithm:(long long)algorithm error:(id *)error;
- (id)compressedDataUsingAlgorithm:(long long)algorithm error:(id *)error;
- (id)_decompressedDataUsingCompressionAlgorithm:(int)algorithm error:(id *)error;
- (id)_compressedDataUsingCompressionAlgorithm:(int)algorithm error:(id *)error;
- (unsigned long long)length;
- (const void *)bytes;
- (unsigned long long)_cfTypeID;
- (id)description;
- (id)debugDescription;
- (id)_asciiDescription;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)_copyWillRetain;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (Class)classForCoder;
- (BOOL)_canReplaceWithDispatchDataForXPCCoder;
- (id)replacementObjectForCoder:(id)coder;
- (BOOL)_allowsDirectEncoding;
- (void)getBytes:(void *)bytes;
- (void)getBytes:(void *)bytes length:(unsigned long long)length;
- (void)enumerateByteRangesUsingBlock:(id /* block */)block;
- (void)getBytes:(void *)bytes range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (BOOL)_isDispatchData;
- (BOOL)_isCompact;
- (BOOL)isEqualToData:(id)data;
- (id)subdataWithRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (BOOL)writeToFile:(id)file options:(unsigned long long)options error:(id *)error;
- (BOOL)writeToURL:(id)url options:(unsigned long long)options error:(id *)error;
- (BOOL)writeToFile:(id)file atomically:(BOOL)atomically error:(id *)error;
- (BOOL)writeToFile:(id)file atomically:(BOOL)atomically;
- (BOOL)writeToURL:(id)url atomically:(BOOL)atomically;
- (id)initWithBytes:(void *)bytes length:(unsigned long long)length copy:(BOOL)copy freeWhenDone:(BOOL)done bytesAreVM:(BOOL)vm;
- (id)initWithBytes:(const void *)bytes length:(unsigned long long)length;
- (id)initWithBytesNoCopy:(void *)copy length:(unsigned long long)length;
- (id)initWithBytesNoCopy:(void *)copy length:(unsigned long long)length freeWhenDone:(BOOL)done;
- (id)initWithBytesNoCopy:(void *)copy length:(unsigned long long)length deallocator:(id /* block */)deallocator;
- (id)initWithBytes:(void *)bytes length:(unsigned long long)length copy:(BOOL)copy deallocator:(id /* block */)deallocator;
- (id)initWithContentsOfFile:(id)file;
- (id)initWithContentsOfFile:(id)file options:(unsigned long long)options maxLength:(unsigned long long)length error:(id *)error;
- (id)initWithContentsOfURL:(id)url options:(unsigned long long)options maxLength:(unsigned long long)length error:(id *)error;
- (id)initWithContentsOfFile:(id)file options:(unsigned long long)options error:(id *)error;
- (id)initWithContentsOfURL:(id)url options:(unsigned long long)options error:(id *)error;
- (id)initWithContentsOfURL:(id)url;
- (id)initWithContentsOfMappedFile:(id)file;
- (id)initWithContentsOfMappedFile:(id)file error:(id *)error;
- (id)initWithContentsOfFile:(id)file error:(id *)error;
- (id)initWithData:(id)data;
- (struct _NSRange { unsigned long long x0; unsigned long long x1; })rangeOfData:(id)data options:(unsigned long long)options range:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
- (id)_createDispatchData;
- (BOOL)_decodeBase64EncodedCharacterBuffer:(const char *)buffer length:(unsigned long long)length options:(unsigned long long)options buffer:(char *)buffer bufferLength:(unsigned long long)length state:(struct { BOOL x0; BOOL x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned int x5; } *)state;
- (id)_initWithBase64EncodedObject:(id)object options:(unsigned long long)options;
- (id)_base64EncodingAsString:(BOOL)string withOptions:(unsigned long long)options;
- (id)initWithBase64EncodedString:(id)string options:(unsigned long long)options;
- (id)base64EncodedStringWithOptions:(unsigned long long)options;
- (id)initWithBase64EncodedData:(id)data options:(unsigned long long)options;
- (id)base64EncodedDataWithOptions:(unsigned long long)options;
- (id)initWithBase64Encoding:(id)encoding;
- (id)base64Encoding;
- (BOOL)_providesConcreteBacking;
@end

#endif /* NSData_NSData_h */
