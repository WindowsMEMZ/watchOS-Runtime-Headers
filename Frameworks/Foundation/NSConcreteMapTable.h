//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSConcreteMapTable_h
#define NSConcreteMapTable_h
@import Foundation;

#include ".h"

@interface NSConcreteMapTable :  {
  /* instance variables */
  struct NSSlice { void * *items; struct NSSliceExternalAcquisitionProperties *acquisitionProps; struct NSSliceExternalPersonalityProperties *personalityProps; struct NSSliceInternalProperties *internalProps; } keys;
  struct NSSlice { void * *items; struct NSSliceExternalAcquisitionProperties *acquisitionProps; struct NSSliceExternalPersonalityProperties *personalityProps; struct NSSliceInternalProperties *internalProps; } values;
  unsigned long long count;
  unsigned long long capacity;
  unsigned long long keyOptions;
  unsigned long long valueOptions;
  unsigned long long mutations;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } growLock;
  BOOL shouldRehash;
  BOOL hasDynamicSlices;
}

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (void)raiseCountUnderflowException;
- (unsigned long long)realCount;
- (void)checkCount:(const char *)count;
- (void)_setBackingStore;
- (id)copy;
- (id)initWithKeyOptions:(unsigned long long)options valueOptions:(unsigned long long)options capacity:(unsigned long long)capacity;
- (id)initWithKeyPointerFunctions:(id)functions valuePointerFunctions:(id)functions capacity:(unsigned long long)capacity;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)keyPointerFunctions;
- (id)valuePointerFunctions;
- (unsigned long long)count;
- (unsigned long long)__capacity;
- (BOOL)containsKeys:(const void * *)keys values:(const void * *)values count:(unsigned long long)count;
- (id)dump;
- (void)grow;
- (void)assign:(unsigned long long)assign key:(const void *)key value:(const void *)value isNew:(BOOL)new;
- (id)objectForKey:(id)key;
- (void)setObject:(id)object forKey:(id)key;
- (void)setItem:(const void *)item forAbsentKey:(const void *)key;
- (void)setItem:(const void *)item forKnownAbsentKey:(const void *)key;
- (void *)existingItemForSetItem:(const void *)item forAbsentKey:(const void *)key;
- (BOOL)mapMember:(const void *)member originalKey:(const void * *)key value:(const void * *)value;
- (void)replaceItem:(const void *)item forExistingKey:(const void *)key;
- (unsigned long long)rehashAround:(unsigned long long)around;
- (void)rehash;
- (void)_reclaim;
- (void)removeObjectForKey:(id)key;
- (void)removeAllItems;
- (void)dealloc;
- (id)description;
- (unsigned long long)countByEnumeratingWithState:(struct { unsigned long long x0; id * x1; unsigned long long * x2; unsigned long long x3[5] } *)state objects:(id *)objects count:(unsigned long long)count;
- (id)keyEnumerator;
- (id)objectEnumerator;
- (unsigned long long)getKeys:(const void * *)keys values:(const void * *)values;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)allKeys;
- (id)allValues;
@end

#endif /* NSConcreteMapTable_h */
