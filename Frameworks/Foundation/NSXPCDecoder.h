//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSXPCDecoder_h
#define NSXPCDecoder_h
@import Foundation;

#include ".h"
#include "NSXPCConnection.h"
#include "NSXPCInterface.h"

@class SEL *;
@protocol OS_xpc_object;

@interface NSXPCDecoder :  {
  /* instance variables */
  unsigned long long _genericIndex;
  struct { char *data; unsigned long long dataLen; struct __CFDictionary *objectReferences; } _decoder;
  NSXPCConnection *_connection;
  struct  * _collections[272];
  struct { unsigned long long offset; int type; } _rootObject;
  Class expectedUnnestedCollectionType;
  BOOL _strictSecureDecodingEnabled;
  BOOL _enforceSubclassesMustBeExplicitlyMentionedWhenDecoded;
  unsigned int _collectionPointer;
  id _allowedClassesList[272];
  long long _allowedClassesIndex;
  NSObject<OS_xpc_object> *_oolObjects;
  NSXPCInterface *_interface;
}

@property NSXPCConnection *_connection;

/* instance methods */
- (id)connection;
- (id)initWithInterface:(id)interface;
- (void)_startReadingFromXPCObject:(id)xpcobject;
- (void)dealloc;
- (id)debugDescription;
- (BOOL)allowsKeyedCoding;
- (id)__decoderInfoForAllowedClassesWarning;
- (void)_enforceSubclassesMustBeExplicitlyMentionedWhenDecoded;
- (void)_validateAllowedClass:(Class)class forKey:(id)key allowingInvocations:(BOOL)invocations;
- (void)_validateAllowedXPCType:(struct _xpc_type_s *)xpctype forKey:(id)key;
- (void)decodeValueOfObjCType:(const char *)ctype at:(void *)at;
- (void)decodeValueOfObjCType:(const char *)ctype at:(void *)at size:(unsigned long long)size;
- (id)decodeObject;
- (BOOL)containsValueForKey:(id)key;
- (id)decodeObjectForKey:(id)key;
- (id)_decodeObjectOfClasses:(id)classes atObject:(struct { unsigned long long x0; int x1; } *)object;
- (id)decodeObjectOfClass:(Class)class forKey:(id)key;
- (id)decodeObjectOfClasses:(id)classes forKey:(id)key;
- (int)_decodeMessageFromXPCObject:(id)xpcobject allowingSimpleMessageSend:(BOOL)send outInvocation:(id *)invocation outArguments:(id *)arguments outArgumentsMaxCount:(unsigned long long)count outMethodSignature:(id *)signature outSelector:(SEL *)selector;
- (id)_decodeReplyFromXPCObject:(id)xpcobject forSelector:(SEL)selector;
- (int)__decodeXPCObject:(id)xpcobject allowingSimpleMessageSend:(BOOL)send outInvocation:(id *)invocation outArguments:(id *)arguments outArgumentsMaxCount:(unsigned long long)count outMethodSignature:(id *)signature outSelector:(SEL *)selector isReply:(BOOL)reply replySelector:(SEL)selector;
- (id)allowedClasses;
- (id)_decodeArrayOfObjectsForKey:(id)key;
- (BOOL)decodeBoolForKey:(id)key;
- (int)decodeIntForKey:(id)key;
- (int)decodeInt32ForKey:(id)key;
- (long long)decodeInt64ForKey:(id)key;
- (float)decodeFloatForKey:(id)key;
- (double)decodeDoubleForKey:(id)key;
- (long long)decodeIntegerForKey:(id)key;
- (const char *)decodeBytesForKey:(id)key returnedLength:(unsigned long long *)length;
- (const char *)_decodeCStringForKey:(id)key;
- (id)decodeXPCObjectForKey:(id)key;
- (id)_xpcObjectForIndex:(long long)index;
- (id)decodeXPCObjectOfType:(struct _xpc_type_s *)type forKey:(id)key;
- (id)_decodeCollectionOfClass:(Class)class allowedClasses:(id)classes forKey:(id)key;
- (id)decodeArrayOfObjectsOfClasses:(id)classes forKey:(id)key;
- (id)decodeDictionaryWithKeysOfClasses:(id)classes objectsOfClasses:(id)classes forKey:(id)key;
- (BOOL)_testClass:(Class)class isAllowedByAllowList:(id)list;
@end

#endif /* NSXPCDecoder_h */
