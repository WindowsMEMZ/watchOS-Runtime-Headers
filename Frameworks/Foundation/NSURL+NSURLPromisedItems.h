//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2202.0.0.0.0
//
#ifndef NSURL_NSURLPromisedItems_h
#define NSURL_NSURLPromisedItems_h
@import Foundation;

@interface NSURL (NSURLPromisedItems) <NSItemProviderReading, NSItemProviderWriting>
/* class methods */
+ (id)readableTypeIdentifiersForItemProvider;
+ (id)objectWithItemProviderData:(id)data typeIdentifier:(id)identifier error:(id *)error;
+ (id)writableTypeIdentifiersForItemProvider;
+ (id)_URLWithDataAsString:(id)string relativeToURL:(id)url;
+ (id)_URLWithData:(id)data relativeToURL:(id)url;
+ (id)_web_URLWithString:(id)string relativeToURL:(id)url;
+ (id)_web_URLWithComponents:(struct { id x0; id x1; id x2; id x3; long long x4; id x5; id x6; id x7; })components;
+ (id)_fileURLWithPath:(id)path cachingResourceValuesForKeys:(id)keys error:(id *)error;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (id)fileURLWithPathComponents:(id)components;
+ (id)allocWithZone:(struct _NSZone *)zone;
+ (id)URLWithString:(id)string;
+ (id)URLWithString:(id)string relativeToURL:(id)url;
+ (id)URLWithString:(id)string encodingInvalidCharacters:(BOOL)characters;
+ (id)URLWithDataRepresentation:(id)representation relativeToURL:(id)url;
+ (id)absoluteURLWithDataRepresentation:(id)representation relativeToURL:(id)url;
+ (id)fileURLWithPath:(id)path;
+ (id)fileURLWithPath:(id)path isDirectory:(BOOL)directory;
+ (id)fileURLWithPath:(id)path isDirectory:(BOOL)directory relativeToURL:(id)url;
+ (id)fileURLWithPath:(id)path relativeToURL:(id)url;
+ (id)fileURLWithFileSystemRepresentation:(const char *)representation isDirectory:(BOOL)directory relativeToURL:(id)url;
+ (id)URLByResolvingBookmarkData:(id)data options:(unsigned long long)options relativeToURL:(id)url bookmarkDataIsStale:(BOOL *)stale error:(id *)error;
+ (id)URLByResolvingAliasFileAtURL:(id)url options:(unsigned long long)options error:(id *)error;

/* instance methods */
- (id)_URLArchive;
- (id)writableTypeIdentifiersForItemProvider;
- (id)loadDataWithTypeIdentifier:(id)identifier forItemProviderCompletionHandler:(id /* block */)handler;
- (id)_web_URLByRemovingLastPathComponent_nowarn;
- (id)_web_URLByRemovingUserAndPath_nowarn;
- (id)_web_URLByRemovingUserAndQueryAndFragment_nowarn;
- (id)_URLByEscapingSpacesAndControlChars;
- (id)_hostString;
- (struct { id x0; id x1; id x2; id x3; long long x4; id x5; id x6; id x7; })_web_URLComponents;
- (id)_web_scriptIfJavaScriptURL;
- (id)_web_suggestedFilenameWithMIMEType:(id)mimetype;
- (BOOL)_web_isJavaScriptURL;
- (id)_initFileURLWithPath:(id)path cachingResourceValuesForKeys:(id)keys error:(id *)error;
- (id)pathComponents;
- (id)lastPathComponent;
- (id)pathExtension;
- (id)URLByAppendingPathComponent:(id)component isDirectory:(BOOL)directory;
- (id)URLByAppendingPathComponent:(id)component;
- (id)URLByDeletingLastPathComponent;
- (id)URLByAppendingPathExtension:(id)extension;
- (id)URLByDeletingPathExtension;
- (BOOL)checkResourceIsReachableAndReturnError:(id *)error;
- (id)URLByStandardizingPath;
- (id)URLByResolvingSymlinksInPath;
- (id)retain;
- (void)release;
- (unsigned long long)retainCount;
- (BOOL)_tryRetain;
- (BOOL)_isDeallocating;
- (BOOL)isKindOfClass:(Class)class;
- (BOOL)isMemberOfClass:(Class)class;
- (unsigned long long)_cfTypeID;
- (id)initWithString:(id)string relativeToURL:(id)url;
- (id)initWithString:(id)string relativeToURL:(id)url encodingInvalidCharacters:(BOOL)characters;
- (struct __CFURL *)_cfurl;
- (struct __CFDictionary *)_clientsCreatingIfNecessary:(BOOL)necessary;
- (void)_freeClients;
- (void)dealloc;
- (id)relativeString;
- (id)baseURL;
- (id)scheme;
- (BOOL)_isAbsolute;
- (id)resourceSpecifier;
- (id)init;
- (id)initWithString:(id)string;
- (id)initWithString:(id)string encodingInvalidCharacters:(BOOL)characters;
- (id)initWithScheme:(id)scheme host:(id)host path:(id)path;
- (id)initWithDataRepresentation:(id)representation relativeToURL:(id)url;
- (id)initAbsoluteURLWithDataRepresentation:(id)representation relativeToURL:(id)url;
- (id)dataRepresentation;
- (id)initFileURLWithPath:(id)path;
- (id)initFileURLWithPath:(id)path isDirectory:(BOOL)directory;
- (id)initFileURLWithPath:(id)path isDirectory:(BOOL)directory relativeToURL:(id)url;
- (id)initFileURLWithPath:(id)path relativeToURL:(id)url;
- (id)initFileURLWithFileSystemRepresentation:(const char *)representation isDirectory:(BOOL)directory relativeToURL:(id)url;
- (BOOL)getFileSystemRepresentation:(char *)representation maxLength:(unsigned long long)length;
- (const char *)fileSystemRepresentation;
- (id)initByResolvingBookmarkData:(id)data options:(unsigned long long)options relativeToURL:(id)url bookmarkDataIsStale:(BOOL *)stale error:(id *)error;
- (id)initByResolvingAliasFileAtURL:(id)url options:(unsigned long long)options error:(id *)error;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)description;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)absoluteString;
- (id)absoluteURL;
- (id)standardizedURL;
- (id)host;
- (id)port;
- (id)user;
- (id)password;
- (id)relativePath;
- (id)path;
- (id)parameterString;
- (id)_parameterString;
- (id)query;
- (id)fragment;
- (BOOL)isFileURL;
- (BOOL)hasDirectoryPath;
- (long long)_promiseExtensionConsume;
- (void)_promiseExtensionRelease:(long long)release;
- (void)_performWithPhysicalURL:(id /* block */)url;
- (id)_fixedUpSideFaultError:(id)error;
- (BOOL)checkPromisedItemIsReachableAndReturnError:(id *)error;
- (id)_valueFromFaultDictionary:(id)dictionary forKey:(id)key;
- (BOOL)getPromisedItemResourceValue:(out id *)value forKey:(id)key error:(out id *)error;
- (id)promisedItemResourceValuesForKeys:(id)keys error:(id *)error;
@end

#endif /* NSURL_NSURLPromisedItems_h */
