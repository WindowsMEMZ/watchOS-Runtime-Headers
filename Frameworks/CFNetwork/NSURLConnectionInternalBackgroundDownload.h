//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef NSURLConnectionInternalBackgroundDownload_h
#define NSURLConnectionInternalBackgroundDownload_h
@import Foundation;

#include "NSURLConnectionInternal.h"
#include "NSAsyncSSDownloadManager.h"
#include "NSURLConnectionRequired-Protocol.h"
#include "SSDownloadHandlerDelegate-Protocol.h"
#include "SSDownloadManagerObserver-Protocol.h"

@class NSCountedSet, NSMutableArray, NSString, NSTimer, SSDownloadHandler;

@interface NSURLConnectionInternalBackgroundDownload : NSURLConnectionInternal<NSURLConnectionRequired, SSDownloadManagerObserver, SSDownloadHandlerDelegate> {
  /* instance variables */
  struct __CFRunLoopSource * _source;
  NSMutableArray *_pendingOps;
  NSCountedSet *_runloops;
  SSDownloadHandler *_handler;
  NSAsyncSSDownloadManager *_manager;
  long long _downloadIdent;
  long long _ctLast;
  BOOL _terminated;
  NSTimer *_deferredStartTimer;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_enableLogging;

/* instance methods */
- (id)initWithInfo:(const struct InternalInit { id x0; id x1; id x2; id x3; BOOL x4; long long x5; } *)info;
- (void)invokeForDelegate:(id /* block */)delegate;
- (void)_invalidate;
- (void)dealloc;
- (void)_managerFailedToStartInTime;
- (void)start;
- (void)cancel;
- (void)scheduleInRunLoop:(id)loop forMode:(id)mode;
- (void)unscheduleFromRunLoop:(id)loop forMode:(id)mode;
- (void)downloadHandlerDidDisconnect:(id)disconnect;
- (void)downloadHandler:(id)handler cancelSession:(id)session;
- (BOOL)downloadHandler:(id)handler pauseSession:(id)session;
- (void)downloadHandler:(id)handler handleAuthenticationSession:(id)session;
- (long long)_getDownloadIdent;
- (void)_updateDownloadState:(id)state;
- (void)useCredential:(id)credential forAuthenticationChallenge:(id)challenge;
- (void)continueWithoutCredentialForAuthenticationChallenge:(id)challenge;
- (void)cancelAuthenticationChallenge:(id)challenge;
- (void)performDefaultHandlingForAuthenticationChallenge:(id)challenge;
- (void)rejectProtectionSpaceAndContinueWithChallenge:(id)challenge;
@end

#endif /* NSURLConnectionInternalBackgroundDownload_h */
