//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef NSHTTPCookie_h
#define NSHTTPCookie_h
@import Foundation;

#include "NSCoding-Protocol.h"
#include "NSHTTPCookieInternal.h"

@class NSArray, NSDate, NSDictionary, NSString, NSURL;

@interface NSHTTPCookie : NSObject<NSCoding> {
  /* instance variables */
  NSHTTPCookieInternal *_cookiePrivate;
}

@property (readonly, @dynamic) struct HTTPCookie { undefined * * x0; } * _inner;
@property (readonly, copy) NSDictionary *properties;
@property (readonly) unsigned long long version;
@property (readonly, copy) NSString *name;
@property (readonly, copy) NSString *value;
@property (readonly, copy) NSDate *expiresDate;
@property (readonly) BOOL sessionOnly;
@property (readonly, copy) NSString *domain;
@property (readonly, copy) NSString *path;
@property (readonly) BOOL secure;
@property (readonly) BOOL HTTPOnly;
@property (readonly, copy) NSString *comment;
@property (readonly, copy) NSURL *commentURL;
@property (readonly, copy) NSArray *portList;
@property (readonly, copy) NSString *sameSitePolicy;

/* class methods */
+ (id)cookieWithProperties:(id)properties;
+ (id)cookieWithCFHTTPCookie:(struct OpaqueCFHTTPCookie *)cfhttpcookie;
+ (id)_cf2nsCookies:(struct __CFArray *)cookies;
+ (struct __CFArray *)_ns2cfCookies:(id)cookies;
+ (id)requestHeaderFieldsWithCookies:(id)cookies;
+ (id)_parsedCookiesWithResponseHeaderFields:(id)fields forURL:(id)url;
+ (id)cookiesWithResponseHeaderFields:(id)fields forURL:(id)url;
+ (id)_cookieForSetCookieString:(id)string forURL:(id)url partition:(id)partition;

/* instance methods */
- (id)_initWithHeader:(const struct CompactCookieHeader *)header;
- (id)_initWithCookie:(id)cookie partition:(id)partition;
- (id)_initWithProperties:(id)properties fromString:(BOOL)string;
- (id)_initWithReference:(const struct CompactCookieArray *)reference index:(long long)index;
- (id)_initWithInternal:(id)internal;
- (id)initWithProperties:(id)properties;
- (id)initWithCFHTTPCookie:(struct OpaqueCFHTTPCookie *)cfhttpcookie;
- (id)init;
- (void)dealloc;
- (struct OpaqueCFHTTPCookie *)_GetInternalCFHTTPCookie;
- (struct OpaqueCFHTTPCookie *)_CFHTTPCookie;
- (BOOL)isSessionOnly;
- (BOOL)isSecure;
- (BOOL)isHTTPOnly;
- (id)_storagePartition;
- (id)Name;
- (id)Value;
- (id)Domain;
- (id)Path;
- (id)Expires;
- (id)Comment;
- (id)CommentURL;
- (id)StoragePartition;
- (id)SameSitePolicy;
- (id)OriginURL;
- (id)Version;
- (id)Secure;
- (id)Discard;
- (id)Port;
- (id)MaxAge;
- (long long)_compareForHeaderOrder:(id)order;
- (id)_key;
- (BOOL)_isExpired;
- (id)description;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* NSHTTPCookie_h */
