//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef __NSCFURLLocalStreamTask_h
#define __NSCFURLLocalStreamTask_h
@import Foundation;

#include "NSURLSessionStreamTask.h"
#include "NSURLRequest.h"
#include "NSURLResponse.h"

@class NSData, NSDictionary, NSError, NSMutableArray, NSString, NSUUID;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface __NSCFURLLocalStreamTask : NSURLSessionStreamTask {
  /* instance variables */
  struct BaseSocketStreamClient { undefined * * x0; } * _socketStreamClient;
  NSMutableArray *_extraWork;
  int _connectionState;
  NSObject<OS_dispatch_queue> *_workQueueForStreamTask;
  struct __CFReadStream * _readStream;
  struct __CFWriteStream * _writeStream;
  NSMutableArray *_pendingWork;
  BOOL _doingWorkOnThisQueue;
  NSData *_readBuffer;
  BOOL _readSignaled;
  BOOL _readEOF;
  struct { long long domain; int error; } _readError;
  NSData *_writeBuffer;
  BOOL _writeSignaled;
  BOOL _writeEOF;
  BOOL _deliveredConnectionEstablished;
  struct { long long domain; int error; } _writeError;
  long long _writeBufferAlreadyWrittenForNextWrite;
  NSMutableArray *_finalizationQueue;
  NSMutableArray *_afterConnectQueue;
  BOOL _goneSecure;
  NSObject<OS_dispatch_source> *_tickerTimeoutTimer;
  id /* block */ _disavow;
  double _timeWindowDelay;
  double _timeWindowDuration;
  double startTime;
  long long _priorityValue;
  double _loadingPriorityValue;
  NSString *_boundInterfaceIdentifier;
  BOOL _disallowCellular;
  int _allowsExpensiveOverride;
  int _allowsConstrainedOverride;
  int _allowsCellularOverride;
  int _networkServiceType;
  NSDictionary *_legacySocketStreamProperties;
  BOOL _betterRouteDiscovered;
  BOOL _didIssueCancel;
  NSUUID *_uniqueIdentifier;
  float priority;
}

@property (copy) NSData *_TCPConnectionMetadata;
@property (copy) NSData *_initialDataPayload;
@property unsigned long long taskIdentifier;
@property (copy) NSURLRequest *originalRequest;
@property (copy) NSURLRequest *currentRequest;
@property (copy) NSURLResponse *response;
@property long long countOfBytesClientExpectsToSend;
@property long long countOfBytesClientExpectsToReceive;
@property long long countOfBytesExpectedToSend;
@property long long countOfBytesExpectedToReceive;
@property long long countOfBytesReceived;
@property long long countOfBytesSent;
@property long long state;
@property (copy) NSString *taskDescription;
@property (copy) NSError *error;
@property (readonly) BOOL _goneSecure;
@property (@dynamic) double _timeoutIntervalForResource;
@property (readonly, copy) NSUUID *_uniqueIdentifier;

/* instance methods */
- (id)_effectiveConfiguration;
- (void)_adoptEffectiveConfiguration:(id)configuration;
- (id)_initWithExistingTask:(id)task disavow:(id /* block */)disavow;
- (id)initWithHost:(id)host port:(long long)port taskGroup:(id)group disavow:(id /* block */)disavow;
- (id)initWithNetService:(id)service taskGroup:(id)group disavow:(id /* block */)disavow;
- (id)workQueue;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (long long)computeAdjustedPoolPriority;
- (BOOL)_cacheOnly;
- (struct __CFDictionary *)_copySocketStreamProperties;
- (id)description;
- (void)suspend;
- (void)resume;
- (void)_onqueue_resume;
- (void)cancel;
- (void)readDataOfMinLength:(unsigned long long)length maxLength:(unsigned long long)length timeout:(double)timeout completionHandler:(id /* block */)handler;
- (void)writeData:(id)data timeout:(double)timeout completionHandler:(id /* block */)handler;
- (void)captureStreams;
- (void)closeWrite;
- (void)closeRead;
- (void)startSecureConnection;
- (void)stopSecureConnection;
- (void)copyStreamProperty:(id)property completionHandler:(id /* block */)handler;
- (void)_onSessionQueue_disavow;
- (void)_onSessionQueue_cleanupAndBreakCycles;
- (void)_task_onqueue_didFinish;
- (void)_task_onqueue_didReceiveDispatchData:(id)data completionHandler:(id /* block */)handler;
- (void)set_timeWindowDelay:(double)delay;
- (double)_timeWindowDelay;
- (void)set_timeWindowDuration:(double)duration;
- (double)_timeWindowDuration;
- (void)set_boundInterfaceIdentifier:(id)identifier;
- (id)_boundInterfaceIdentifier;
- (void)set_disallowCellular:(BOOL)cellular;
- (BOOL)_disallowCellular;
- (void)set_allowsExpensiveOverride:(int)override;
- (int)_allowsExpensiveOverride;
- (void)set_allowsConstrainedOverride:(int)override;
- (int)_allowsConstrainedOverride;
- (void)set_allowsCellularOverride:(int)override;
- (int)_allowsCellularOverride;
- (void)set_networkServiceType:(int)type;
- (int)_networkServiceType;
- (void)set_legacySocketStreamProperties:(id)properties;
- (id)_legacySocketStreamProperties;
- (float)priority;
- (void)setPriority:(float)priority;
@end

#endif /* __NSCFURLLocalStreamTask_h */
