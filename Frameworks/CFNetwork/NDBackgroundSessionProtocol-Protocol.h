//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef NDBackgroundSessionProtocol_Protocol_h
#define NDBackgroundSessionProtocol_Protocol_h
@import Foundation;

@protocol NDBackgroundSessionProtocol <NSObject>
/* instance methods */
- (void)pingForXPCObjectValidityWithReply:(id /* block */)reply;
- (void)downloadTaskWithRequest:(id)request originalRequest:(id)request downloadFilePath:(id)path identifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier reply:(id /* block */)reply;
- (void)uploadTaskWithRequest:(id)request originalRequest:(id)request fromFile:(id)file sandboxExtensionData:(id)data identifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier potentialCredentials:(id)credentials reply:(id /* block */)reply;
- (void)dataTaskWithRequest:(id)request originalRequest:(id)request identifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier reply:(id /* block */)reply;
- (void)downloadTaskWithResumeData:(id)data identifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier reply:(id /* block */)reply;
- (void)uploadTaskWithResumableUploadState:(id)state request:(id)request originalRequest:(id)request fromFile:(id)file sandboxExtensionData:(id)data identifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier potentialCredentials:(id)credentials reply:(id /* block */)reply;
- (void)cancelTaskWithIdentifier:(unsigned long long)identifier;
- (void)cancelTaskWithIdentifier:(unsigned long long)identifier byProducingResumeData:(id /* block */)data;
- (void)suspendTaskWithIdentifier:(unsigned long long)identifier;
- (void)resumeTaskWithIdentifier:(unsigned long long)identifier withProperties:(id)properties;
- (void)setDescription:(id)description forTask:(unsigned long long)task;
- (void)setPriority:(long long)priority forTaskWithIdentifier:(unsigned long long)identifier;
- (void)setLoadingPoolPriority:(double)priority forTaskWithIdentifier:(unsigned long long)identifier;
- (void)setBytesPerSecondLimit:(long long)limit forTaskWithIdentifier:(unsigned long long)identifier;
- (void)setExpectedProgressTarget:(unsigned long long)target forTaskWithIdentifier:(unsigned long long)identifier;
- (void)setTLSMinimumSupportedProtocolVersion:(unsigned short)version forTaskWithIdentifier:(unsigned long long)identifier;
- (void)setTLSMaximumSupportedProtocolVersion:(unsigned short)version forTaskWithIdentifier:(unsigned long long)identifier;
- (void)setDiscretionaryOverride:(long long)override forTaskWithIdentifier:(unsigned long long)identifier;
- (void)setTLSSessionCachePrefix:(id)prefix;
- (void)resetStorageWithReply:(id /* block */)reply;
- (void)invalidateWithReply:(id /* block */)reply;
- (void)setPropertyOnStreamWithIdentifier:(unsigned long long)identifier propDict:(id)dict propKey:(id)key withReply:(id /* block */)reply;
- (void)avAssetDownloadTaskWithDownloadToken:(unsigned long long)token URL:(id)url destinationURL:(id)url temporaryDestinationURL:(id)url assetTitle:(id)title assetArtworkData:(id)data options:(id)options assetOptions:(id)options identifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier taskKind:(unsigned long long)kind enableSPIDelegateCallbacks:(BOOL)callbacks reply:(id /* block */)reply;
- (void)avAggregateAssetDownloadTaskWithDownloadToken:(unsigned long long)token serializedMediaSelections:(id)selections assetTitle:(id)title assetArtworkData:(id)data options:(id)options assetOptions:(id)options childDownloadSessionIdentifier:(id)identifier identifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier reply:(id /* block */)reply;
@end

#endif /* NDBackgroundSessionProtocol_Protocol_h */
