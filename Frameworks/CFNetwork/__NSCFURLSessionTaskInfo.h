//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef __NSCFURLSessionTaskInfo_h
#define __NSCFURLSessionTaskInfo_h
@import Foundation;

#include "NSSecureCoding-Protocol.h"
#include "NSURLRequest.h"
#include "NSURLResponse.h"
#include "__CFN_TaskMetrics.h"

@class AVAssetDownloadConfiguration, AVURLAsset, NSData, NSDate, NSDictionary, NSError, NSString, NSURL, NSUUID;
@protocol STExtractor;

@interface __NSCFURLSessionTaskInfo : NSObject<NSSecureCoding>

@property unsigned long long identifier;
@property unsigned long long taskKind;
@property double creationTime;
@property long long state;
@property unsigned long long suspendCount;
@property (copy) NSString *taskDescription;
@property (copy) NSURLRequest *originalRequest;
@property (copy) NSURLRequest *currentRequest;
@property (copy) NSURLResponse *response;
@property (copy) NSDate *earliestBeginDate;
@property long long countOfBytesClientExpectsToSend;
@property long long countOfBytesClientExpectsToReceive;
@property BOOL resumedAndWaitingForEarliestBeginDate;
@property BOOL respondedToWillBeginDelayedRequestCallback;
@property (copy) NSError *error;
@property (copy) NSError *retryError;
@property (copy) NSURL *fileURL;
@property (copy) NSURL *downloadFileURL;
@property (copy) NSString *bundleID;
@property (copy) NSString *sessionID;
@property BOOL hasStarted;
@property BOOL expectingResumeCallback;
@property BOOL establishedConnection;
@property unsigned long long retryCount;
@property unsigned long long lowThroughputTimerRetryCount;
@property BOOL disablesRetry;
@property BOOL shouldCancelOnDisconnect;
@property long long basePriority;
@property BOOL basePrioritySetExplicitly;
@property BOOL discretionary;
@property long long discretionaryOverride;
@property unsigned int qos;
@property (copy) NSString *personaUniqueString;
@property (copy) NSUUID *uniqueIdentifier;
@property (copy) NSString *storagePartitionIdentifier;
@property long long bytesPerSecondLimit;
@property unsigned long long expectedProgressTarget;
@property double loadingPriority;
@property BOOL mayBeDemotedToDiscretionary;
@property (copy) NSString *pathToDownloadTaskFile;
@property BOOL forceWatchNoCellular;
@property unsigned short _TLSMinimumSupportedProtocolVersion;
@property unsigned short _TLSMaximumSupportedProtocolVersion;
@property (retain, nonatomic) NSObject<STExtractor> *_extractor;
@property (nonatomic) BOOL _hasSZExtractor;
@property (nonatomic) BOOL _doesSZExtractorConsumeExtractedData;
@property (nonatomic) BOOL _updatedStreamingZipModificationDate;
@property BOOL startedUserInitiated;
@property (copy) NSData *resumableUploadData;
@property unsigned long long AVAssetDownloadToken;
@property (copy) NSURL *URL;
@property (copy) NSURL *destinationURL;
@property (copy) NSString *assetTitle;
@property (copy) NSData *assetArtworkData;
@property (copy) NSDictionary *options;
@property (retain) AVURLAsset *AVURLAsset;
@property (copy) NSURL *AVAssetURL;
@property (retain) NSDictionary *assetOptionsPlist;
@property BOOL initializedWithAVAsset;
@property (copy) NSURL *temporaryDestinationURL;
@property (copy) NSDictionary *resolvedMediaSelectionPlist;
@property BOOL enableSPIDelegateCallbacks;
@property (retain) AVAssetDownloadConfiguration *downloadConfig;
@property (copy) NSString *avAssetDownloadChildDownloadSessionIdentifier;
@property long long countOfBytesReceived;
@property long long countOfBytesSent;
@property long long countOfBytesExpectedToSend;
@property long long countOfBytesExpectedToReceive;
@property (retain) NSDictionary *_backgroundTrailers;
@property (copy) NSDictionary *additionalProperties;
@property (retain) __CFN_TaskMetrics *taskMetrics;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)_loggableDescription;
- (void)_logTaskUUIDMapping;
- (id)initWithDataTask:(id)task uniqueIdentifier:(id)identifier bundleID:(id)id sessionID:(id)id;
- (id)initWithUploadTask:(id)task uniqueIdentifier:(id)identifier bundleID:(id)id sessionID:(id)id;
- (id)initWithDownloadTask:(id)task uniqueIdentifier:(id)identifier bundleID:(id)id sessionID:(id)id;
- (id)initWithAVAssetDownloadURL:(id)url destinationURL:(id)url assetTitle:(id)title assetArtworkData:(id)data options:(id)options taskIdentifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier bundleID:(id)id sessionID:(id)id downloadConfig:(id)config;
- (id)initWithAVAggregateDownloadTaskNoChildTaskKindWithURL:(id)url destinationURL:(id)url assetTitle:(id)title assetArtworkData:(id)data options:(id)options taskIdentifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier bundleID:(id)id sessionID:(id)id enableSPIDelegateCallbacks:(BOOL)callbacks;
- (id)initWithAVAggregateAssetDownloadChildDownloadSessionIdentifier:(id)identifier assetTitle:(id)title assetArtworkData:(id)data options:(id)options taskIdentifier:(unsigned long long)identifier uniqueIdentifier:(id)identifier bundleID:(id)id sessionID:(id)id;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (BOOL)isDiscretionary;
@end

#endif /* __NSCFURLSessionTaskInfo_h */
