//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef __NSCFTCPIOStreamTask_h
#define __NSCFTCPIOStreamTask_h
@import Foundation;

#include "NSURLSessionTask.h"
#include "CFNetworkTimer.h"
#include "__NSCFURLLocalStreamTaskWorkRead.h"
#include "__NSCFURLLocalStreamTaskWorkWrite.h"

@class NSData, NSMutableArray;
@protocol OS_dispatch_queue, {shared_ptr<HTTPProtocol>="__ptr_"^{HTTPProtocol}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<TCPIO_EstablishBase>="__ptr_"^{TCPIO_EstablishBase}"__cntrl_"^{__shared_weak_count}}, {shared_ptr<TransportConnectionObjCPP>="__ptr_"^{TransportConnectionObjCPP}"__cntrl_"^{__shared_weak_count}};

@interface __NSCFTCPIOStreamTask : NSURLSessionTask {
  /* instance variables */
  id /* block */ _disavow;
  struct shared_ptr<TCPIO_EstablishBase> { struct TCPIO_EstablishBase *__ptr_; struct __shared_weak_count *__cntrl_; } _establish;
  struct shared_ptr<TransportConnectionObjCPP> { struct TransportConnectionObjCPP *__ptr_; struct __shared_weak_count *__cntrl_; } _ios;
  unsigned char _captureStreamsUponCompletion;
  unsigned char _secure;
  struct shared_ptr<HTTPProtocol> { struct HTTPProtocol *__ptr_; struct __shared_weak_count *__cntrl_; } _httpProtocol;
  NSMutableArray *_pendingWork;
  NSMutableArray *_completedSuspendedWork;
  BOOL _doingWorkOnThisQueue;
  int _connectionState;
  BOOL _goneSecure;
  BOOL _streamsCaptured;
  struct { long long domain; int error; } _readError;
  BOOL _readInProgress;
  BOOL _readClosed;
  struct { long long domain; int error; } _writeError;
  BOOL _writeEOF;
  BOOL _writeInProgress;
  BOOL _writeClosed;
  BOOL _receivedServerTrustChallenge;
  BOOL _receivedEof;
  CFNetworkTimer *_writeTimer;
  CFNetworkTimer *_readTimer;
  __NSCFURLLocalStreamTaskWorkWrite *_currentWriteTask;
  __NSCFURLLocalStreamTaskWorkRead *_currentReadTask;
  NSObject<OS_dispatch_queue> *_workQueueForStreamTask;
}

@property (copy) NSData *_initialDataPayload;

/* instance methods */
- (BOOL)isKindOfClass:(Class)class;
- (id)initWithHost:(id)host port:(long long)port taskGroup:(id)group disavow:(id /* block */)disavow;
- (id)workQueue;
- (id)initWithTask:(id)task connection:(struct shared_ptr<TransportConnection> { struct TransportConnection * x0; struct __shared_weak_count * x1; })connection extraBytes:(id)bytes disavow:(id /* block */)disavow;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)readDataOfMinLength:(unsigned long long)length maxLength:(unsigned long long)length timeout:(double)timeout completionHandler:(id /* block */)handler;
- (void)writeData:(id)data timeout:(double)timeout completionHandler:(id /* block */)handler;
- (void)captureStreams;
- (void)closeWrite;
- (void)closeRead;
- (void)copyStreamProperty:(id)property completionHandler:(id /* block */)handler;
- (void)startSecureConnection;
- (void)stopSecureConnection;
- (void)_onqueue_stopSecureConnection;
- (void)_onqueue_startSecureConnection;
- (void)_onqueue_closeRead;
- (void)_onqueue_closeWrite;
- (void)_onqueue_captureStreams;
- (void)_onqueue_addBlockOp:(id /* block */)op description:(const char *)description;
- (void)_onqueue_addBlockOp:(id /* block */)op description:(const char *)description shouldWaitForTls:(BOOL)tls;
- (BOOL)shouldDoWorkConsideringTlsState;
- (void)_onqueue_ioTick;
- (void)_onqueue_timeoutOccured;
- (void)_onqueue_callbackCompletedWork;
- (void)_onqueue_processWriteWork:(id)work;
- (void)_onqueue_processReadWork:(id)work;
- (id)_onqueue_errorOrCancelError;
- (BOOL)_onqueue_usingProxy;
- (void)_onqueue_resume;
- (void)_onqueue_cancel;
- (void)_onqueue_checkForCompletion;
- (void)cancel;
- (void)_task_onqueue_didFinish;
- (void)_onqueue_preConnectionConfiguration:(id)configuration parameters:(id)parameters completionHandler:(id /* block */)handler;
- (void)_onqueue_dealWithSessionTrustAuth:(long long)auth credential:(id)credential completionHandler:(id /* block */)handler;
- (BOOL)_onqueue_sendSessionChallenge:(id)challenge completionHandler:(id /* block */)handler;
- (void)_onqueue_needServerTrust:(id)trust completionHandler:(id /* block */)handler;
- (void)_onqueue_needClientCert:(id)cert completionHandler:(id /* block */)handler;
- (void)_onqueue_dealWithSessionClientCertAuth:(long long)auth credential:(id)credential completionHandler:(id /* block */)handler;
- (void)_onqueue_postConnectConfiguration:(id)configuration parameters:(id)parameters completionHandler:(id /* block */)handler;
- (void)_onqueue_setTransportConnection:(struct shared_ptr<TransportConnection> { struct TransportConnection * x0; struct __shared_weak_count * x1; })connection;
- (void)_onqueue_tlsCompletion;
- (void)_onqueue_tlsDisabled;
- (void)_onqueue_cleanUpConnectionEstablishmentState;
- (void)_onqueue_connectionEstablishedWithError:(struct { long long x0; int x1; })error callbackReferent:(id)referent;
- (void)_onqueue_suspend;
- (void)_onqueue_adjustPoolPriority;
- (void)_onqueue_adjustLoadingPoolPriority;
- (void)_onSessionQueue_disavow;
- (void)_onSessionQueue_cleanupAndBreakCycles;
@end

#endif /* __NSCFTCPIOStreamTask_h */
