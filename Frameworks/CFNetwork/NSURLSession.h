//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef NSURLSession_h
#define NSURLSession_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSURLSession.h"
#include "NSURLSessionConfiguration.h"
#include "NSURLSessionDelegate-Protocol.h"
#include "__CFN_ConnectionContextManager.h"
#include "__NSCFURLSessionDelegateWrapper.h"
#include "__NSURLSessionTaskGroupForConfiguration-Protocol.h"

@class NSDictionary, NSMutableDictionary, NSOperationQueue, NSString, NSUUID;
@protocol OS_dispatch_queue, OS_nw_context, {shared_ptr<NSObject<OS_nw_context>>="__ptr_"@"NSObject<OS_nw_context>""__cntrl_"^{__shared_weak_count}};

@interface NSURLSession : NSObject<NSCopying, __NSURLSessionTaskGroupForConfiguration> {
  /* instance variables */
  __CFN_ConnectionContextManager *_nwContextManager;
  struct shared_ptr<NSObject<OS_nw_context>> { NSObject<OS_nw_context> *__ptr_; struct __shared_weak_count *__cntrl_; } _nwContext;
  NSDictionary *_atsState_ivar;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _lock;
  BOOL _invalid_ivar;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _sleepWakeLock;
  unsigned int _rootPort;
  struct IONotificationPort * _notifyPortRef;
  unsigned int _notifierObject;
  BOOL _isSharedSession_ivar;
  BOOL _sessionConnectionsNeedInvalidating;
  __NSCFURLSessionDelegateWrapper *_delegateWrapper;
  NSOperationQueue *_delegateQueue_ivar;
  NSObject<OS_dispatch_queue> *_delegateDispatchQueue;
  NSObject<NSURLSessionDelegate> *_delegate_ivar;
  NSString *_sessionDescription_ivar;
  NSURLSessionConfiguration *_local_immutable_configuration_ivar;
  NSObject<OS_dispatch_queue> *_workQueue;
  NSUUID *_uuid_ivar;
  NSString *_tlsSessionCachePrefix;
  NSMutableDictionary *_httpFallbackHosts;
  NSMutableDictionary *_coalescing;
}

@property (copy, nonatomic) NSString *_tlsSessionCachePrefix;
@property (readonly, @dynamic) unsigned long long nextSeed;
@property (readonly) NSObject<OS_nw_context> *_networkContext;
@property (readonly, retain, @dynamic) NSOperationQueue *delegateQueue;
@property (readonly, retain) NSObject<NSURLSessionDelegate> *delegate;
@property (readonly, copy) NSURLSessionConfiguration *configuration;
@property (copy) NSString *sessionDescription;
@property (readonly, weak, @dynamic) NSURLSessionConfiguration *_groupConfiguration;
@property (readonly, weak, @dynamic) NSURLSession *_groupSession;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)new;
+ (BOOL)_backgroundServiceAvailable;
+ (id)sharedSession;
+ (void)_sendPendingCallbacksForSessionIdentifier:(id)identifier;
+ (void)_releaseProcessAssertionForSessionIdentifier:(id)identifier;
+ (void)_getActiveSessionIdentifiersWithCompletionHandler:(id /* block */)handler;
+ (void)_obliterateAllBackgroundSessionsWithCompletionHandler:(id /* block */)handler;
+ (void)_strictTrustEvaluate:(id)evaluate queue:(id)queue completionHandler:(id /* block */)handler;
+ (void)_disableAppSSO;
+ (void)_disableATS;
+ (void)_enumerateHTTPHeaderFieldsWithCFHTTPMessage:(struct __CFHTTPMessage *)cfhttpmessage usingBlock:(id /* block */)block;
+ (void)_enumerateHTTPHeaderFieldsWithRequest:(id)request usingBlock:(id /* block */)block;
+ (id)sessionWithConfiguration:(id)configuration;
+ (id)sessionWithConfiguration:(id)configuration delegate:(id)delegate delegateQueue:(id)queue;
+ (id)_sessionWithConfiguration:(id)configuration delegate:(id)delegate delegateDispatchQueue:(id)queue;

/* instance methods */
- (id)init;
- (void)_useTLSSessionCacheFromSession:(id)session;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)dealloc;
- (void)invalidateAndCancel;
- (void)finishTasksAndInvalidate;
- (void)resetWithCompletionHandler:(id /* block */)handler;
- (void)flushWithCompletionHandler:(id /* block */)handler;
- (void)getTasksWithCompletionHandler:(id /* block */)handler;
- (void)getAllTasksWithCompletionHandler:(id /* block */)handler;
- (id)_dataTaskWithTaskForClass:(id)class;
- (id)dataTaskWithRequest:(id)request;
- (id)dataTaskWithRequest:(id)request uniqueIdentifier:(id)identifier;
- (id)dataTaskWithURL:(id)url;
- (id)dataTaskWithURL:(id)url completionHandler:(id /* block */)handler;
- (id)dataTaskWithRequest:(id)request completionHandler:(id /* block */)handler;
- (id)_dataTaskWithRequest:(id)request delegate:(id)delegate;
- (id)_dataTaskWithURL:(id)url delegate:(id)delegate;
- (id)_dataTaskWithURL:(id)url delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_dataTaskWithRequest:(id)request delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)webSocketTaskWithURL:(id)url;
- (id)webSocketTaskWithURL:(id)url protocols:(id)protocols;
- (id)webSocketTaskWithRequest:(id)request;
- (id)_uploadTaskWithTaskForClass:(id)class;
- (id)uploadTaskWithRequest:(id)request fromFile:(id)file;
- (id)uploadTaskWithRequest:(id)request fromData:(id)data;
- (id)uploadTaskWithStreamedRequest:(id)request;
- (id)uploadTaskWithResumeData:(id)data;
- (id)uploadTaskWithRequest:(id)request fromFile:(id)file completionHandler:(id /* block */)handler;
- (id)uploadTaskWithRequest:(id)request fromData:(id)data completionHandler:(id /* block */)handler;
- (id)uploadTaskWithResumeData:(id)data completionHandler:(id /* block */)handler;
- (id)_uploadTaskWithRequest:(id)request fromFile:(id)file delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_uploadTaskWithRequest:(id)request fromData:(id)data delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_uploadTaskWithResumeData:(id)data delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_downloadTaskWithTaskForClass:(id)class;
- (id)_downloadTaskWithRequest:(id)request downloadFilePath:(id)path;
- (id)downloadTaskWithRequest:(id)request;
- (id)downloadTaskWithURL:(id)url;
- (id)downloadTaskWithResumeData:(id)data;
- (id)downloadTaskWithRequest:(id)request completionHandler:(id /* block */)handler;
- (id)downloadTaskWithURL:(id)url completionHandler:(id /* block */)handler;
- (id)downloadTaskWithResumeData:(id)data completionHandler:(id /* block */)handler;
- (id)_downloadTaskWithRequest:(id)request delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_downloadTaskWithURL:(id)url delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_downloadTaskWithResumeData:(id)data delegate:(id)delegate completionHandler:(id /* block */)handler;
- (id)_AVAssetDownloadTaskWithURL:(id)url destinationURL:(id)url options:(id)options;
- (id)assetDownloadTaskWithURLAsset:(id)urlasset destinationURL:(id)url options:(id)options;
- (id)assetDownloadTaskWithURLAsset:(id)urlasset assetTitle:(id)title assetArtworkData:(id)data options:(id)options;
- (id)aggregateAssetDownloadTaskWithURLAsset:(id)urlasset mediaSelections:(id)selections assetTitle:(id)title assetArtworkData:(id)data options:(id)options;
- (id)assetDownloadTaskWithConfiguration:(id)configuration;
- (id)streamTaskWithHostName:(id)name port:(long long)port;
- (id)streamTaskWithNetService:(id)service;
- (id)initWithConfiguration:(id)configuration delegate:(id)delegate delegateQueue:(id)queue delegateDispatchQueue:(id)queue;
- (id)defaultTaskGroup;
- (id)taskGroupWithConfiguration:(id)configuration;
@end

#endif /* NSURLSession_h */
