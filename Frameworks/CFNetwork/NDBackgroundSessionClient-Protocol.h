//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1490.0.4.0.0
//
#ifndef NDBackgroundSessionClient_Protocol_h
#define NDBackgroundSessionClient_Protocol_h
@import Foundation;

@protocol NDBackgroundSessionClient <NSObject>
/* instance methods */
- (void)backgroundTaskDidResume:(unsigned long long)resume;
- (void)backgroundTaskDidSuspend:(unsigned long long)suspend;
- (void)backgroundTask:(unsigned long long)task didReceiveChallenge:(id)challenge reply:(id /* block */)reply;
- (void)backgroundTask:(unsigned long long)task willBeginDelayedRequest:(id)request reply:(id /* block */)reply;
- (void)backgroundTask:(unsigned long long)task willPerformHTTPRedirection:(id)httpredirection withNewRequest:(id)request reply:(id /* block */)reply;
- (void)backgroundTask:(unsigned long long)task _willSendRequestForEstablishedConnection:(id)connection reply:(id /* block */)reply;
- (void)backgroundTaskHasConnectionWaiting:(unsigned long long)waiting;
- (void)backgroundTask:(unsigned long long)task hasConnectionWaitingWithReason:(long long)reason;
- (void)backgroundTask:(unsigned long long)task hasConnectionWaitingWithError:(id)error;
- (void)backgroundTask:(unsigned long long)task didReceiveInformationalResponse:(id)response;
- (void)backgroundTask:(unsigned long long)task didReceiveResponse:(id)response transactionMetrics:(id)metrics;
- (void)backgroundTask:(unsigned long long)task didReceiveResponse:(id)response transactionMetrics:(id)metrics reply:(id /* block */)reply;
- (void)backgroundTask:(unsigned long long)task didSendBodyData:(long long)data totalBytesSent:(long long)sent totalBytesExpectedToSend:(long long)send;
- (void)backgroundTask:(unsigned long long)task needNewBodyStream:(BOOL)stream withReply:(id /* block */)reply;
- (void)backgroundTask:(unsigned long long)task didCompleteWithError:(id)error taskMetrics:(id)metrics info:(id)info reply:(id /* block */)reply;
- (void)backgroundDataTask:(unsigned long long)task didReceiveData:(id)data withReply:(id /* block */)reply;
- (void)backgroundTask:(unsigned long long)task getAuthHeadersForResponse:(id)response reply:(id /* block */)reply;
- (void)backgroundDataTaskDidBecomeDownloadTask:(unsigned long long)task;
- (void)willRetryBackgroundDataTask:(unsigned long long)task withError:(id)error transactionMetrics:(id)metrics;
- (void)backgroundDownloadTask:(unsigned long long)task didWriteData:(long long)data totalBytesWritten:(long long)written totalBytesExpectedToWrite:(long long)write;
- (void)backgroundDownloadTask:(unsigned long long)task didResumeAtOffset:(long long)offset expectedTotalBytes:(long long)bytes;
- (void)backgroundDownloadTask:(unsigned long long)task didFinishDownloadingToURL:(id)url response:(id)response reply:(id /* block */)reply;
- (void)openFileAtPath:(id)path mode:(int)mode withReply:(id /* block */)reply;
- (void)backgroundAVAssetDownloadTaskDidUpdateProgress:(unsigned long long)progress totalBytesWritten:(unsigned long long)written totalBytesExpectedToWrite:(unsigned long long)write;
- (void)backgroundAVAssetDownloadTask:(unsigned long long)task didReceiveDownloadToken:(unsigned long long)token;
- (void)backgroundAVAssetDownloadTask:(unsigned long long)task didLoadTimeRange:(id)range totalTimeRangesLoaded:(id)loaded timeRangeExpectedToLoad:(id)load forMediaSelectionPropertyList:(id)list;
- (void)backgroundAVAssetDownloadTask:(unsigned long long)task didResolveMediaSelectionProperyList:(id)list reply:(id /* block */)reply;
- (void)backgroundAVAssetDownloadTask:(unsigned long long)task willDownloadToURL:(id)url;
- (void)backgroundAVAssetDownloadTask:(unsigned long long)task willDownloadVariants:(id)variants reply:(id /* block */)reply;
- (void)backgroundAVAssetDownloadTask:(unsigned long long)task didFinishDownloadForMediaSelectionPropertyList:(id)list;
- (void)backgroundSessionDidStartAppWake:(id)wake reply:(id /* block */)reply;
- (void)backgroundSessionDidFinishAppWake:(id)wake reply:(id /* block */)reply;
- (void)credStorage_getInitialCredentialDictionariesWithReply:(id /* block */)reply;
- (void)credStorage_credentialsForProtectionSpace:(id)space reply:(id /* block */)reply;
- (void)credStorage_allCredentialsWithReply:(id /* block */)reply;
- (void)credStorage_setCredential:(id)credential forProtectionSpace:(id)space;
- (void)credStorage_removeCredential:(id)credential forProtectionSpace:(id)space;
- (void)credStorage_defaultCredentialForProtectionSpace:(id)space reply:(id /* block */)reply;
- (void)credStorage_setDefaultCredential:(id)credential forProtectionSpace:(id)space;
@end

#endif /* NDBackgroundSessionClient_Protocol_h */
