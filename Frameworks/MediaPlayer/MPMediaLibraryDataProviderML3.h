//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPMediaLibraryDataProviderML3_h
#define MPMediaLibraryDataProviderML3_h
@import Foundation;

#include "MPArtworkDataSource-Protocol.h"
#include "MPMediaEntityCache.h"
#include "MPMediaLibrary.h"
#include "MPMediaLibraryDataProviderPrivate-Protocol.h"
#include "MPUserIdentityConsuming-Protocol.h"

@class ICUserIdentity, ML3MusicLibrary, NSArray, NSOperationQueue, NSSet, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface MPMediaLibraryDataProviderML3 : NSObject<MPMediaLibraryDataProviderPrivate, MPUserIdentityConsuming> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_backgroundTaskQueue;
  NSObject<OS_dispatch_queue> *_cloudUpdateQueue;
  unsigned long long _backgroundTask;
  unsigned long long _backgroundTaskCount;
  BOOL _hasScheduledEventPosting;
  long long _refreshState;
  NSOperationQueue *_setValuesWidthLimitedQueue;
  NSObject<OS_dispatch_queue> *_entitiesAddedOrRemovedNotificationQueue;
  NSObject<OS_dispatch_source> *_entitiesAddedOrRemovedCoalescingTimer;
}

@property (retain, nonatomic) ML3MusicLibrary *library;
@property (weak, nonatomic) MPMediaLibrary *mediaLibrary;
@property (readonly, copy, nonatomic) NSString *accountDSID;
@property (readonly, nonatomic) NSString *databasePath;
@property (readonly, nonatomic) long long playbackHistoryPlaylistPersistentID;
@property (readonly, nonatomic) long long favoriteSongsPlaylistPersistentID;
@property (readonly, nonatomic) long long photosMemoriesPlaylistPersistentID;
@property (readonly, nonatomic) BOOL isGeniusEnabled;
@property (readonly, nonatomic) NSArray *preferredAudioLanguages;
@property (readonly, nonatomic) NSArray *preferredSubtitleLanguages;
@property (readonly, nonatomic) NSArray *localizedSectionIndexTitles;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *uniqueIdentifier;
@property (readonly, nonatomic) MPMediaEntityCache *entityCache;
@property (readonly, nonatomic) NSObject<MPArtworkDataSource> *artworkDataSource;
@property (readonly, nonatomic) BOOL requiresAuthentication;
@property (readonly, nonatomic) NSSet *propertiesToCache;
@property (readonly, nonatomic) NSString *syncValidity;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (copy, nonatomic) ICUserIdentity *userIdentity;

/* class methods */
+ (id)onDiskProviders;
+ (id)uniqueIdentifierForLibrary:(id)library;
+ (id)_unadjustedValueForItemPropertyVolumeNormalizationWithDefaultValue:(id)value;
+ (id)_unadjustedValueForItemPropertyVolumeAdjustmentWithDefaultValue:(id)value;
+ (id)_unadjustedValueForItemPropertyRatingWithDefaultValue:(id)value;
+ (id)_unadjustedValueForItemTimeWithDefaultValue:(id)value;
+ (id)_unadjustedValueForItemDateWithDefaultValue:(id)value;
+ (id)_unadjustedValueForMPProperty:(id)mpproperty withDefaultValue:(id)value;

/* instance methods */
- (id)initWithLibrary:(id)library;
- (void)dealloc;
- (id)lastModifiedDate;
- (unsigned long long)currentEntityRevision;
- (unsigned long long)syncGenerationID;
- (long long)playlistGeneration;
- (BOOL)writable;
- (BOOL)hasMediaOfType:(unsigned long long)type;
- (BOOL)hasGeniusMixes;
- (BOOL)hasUbiquitousBookmarkableItems;
- (BOOL)itemExistsWithPersistentID:(unsigned long long)id;
- (long long)itemPersistentIDForStoreID:(long long)id;
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)id;
- (BOOL)collectionExistsWithPersistentID:(unsigned long long)id groupingType:(long long)type;
- (BOOL)collectionExistsContainedWithinPersistentIDs:(const unsigned long long *)ids count:(unsigned long long)count groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithName:(id)name groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithStoreID:(long long)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithSagaID:(long long)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithCloudLibraryID:(id)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithCloudUniversalLibraryID:(id)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsContainedWithinSyncIDs:(id)ids groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (void)loadQueryCriteria:(id)criteria hasItemsWithCompletionBlock:(id /* block */)block;
- (void)loadQueryCriteria:(id)criteria hasCollectionsWithCompletionBlock:(id /* block */)block;
- (void)loadQueryCriteria:(id)criteria countOfItemsWithCompletionBlock:(id /* block */)block;
- (void)loadQueryCriteria:(id)criteria countOfCollectionsWithCompletionBlock:(id /* block */)block;
- (id)localizedSectionHeaderForSectionIndex:(unsigned long long)index;
- (id)valueForDatabaseProperty:(id)property;
- (BOOL)setValue:(id)value forDatabaseProperty:(id)property;
- (BOOL)deleteDatabaseProperty:(id)property;
- (id)multiverseIdentifierForTrackWithPersistentID:(long long)id;
- (id)multiverseIdentifierForCollectionWithPersistentID:(long long)id groupingType:(long long)type;
- (void)addTracksToMyLibrary:(id)library;
- (void)sdk_addItemWithOpaqueID:(id)id withCompletion:(id /* block */)completion;
- (id)_storePlatformRequestContext;
- (void)performStoreItemLibraryImport:(id)import withCompletion:(id /* block */)completion;
- (void)performStoreAlbumArtistLibraryImport:(id)import withCompletion:(id /* block */)completion;
- (void)addPlaylistStoreItemsForLookupItems:(id)items withCompletion:(id /* block */)completion;
- (void)_importStoreItemElements:(id)elements withReferralObject:(id)object addTracksToDeviceLibraryOnly:(BOOL)only andAddTracksToCloudLibrary:(BOOL)library usingCloudAdamID:(long long)id withCompletion:(id /* block */)completion;
- (void)_importStoreAlbumArtistElements:(id)elements withReferralObject:(id)object withCompletion:(id /* block */)completion;
- (void)importArtworkTokenForEntityPersistentID:(unsigned long long)id entityType:(long long)type artworkToken:(id)token artworkType:(long long)type sourceType:(long long)type;
- (BOOL)importOriginalArtworkFromImageData:(id)data withArtworkToken:(id)token artworkType:(long long)type sourceType:(long long)type mediaType:(unsigned long long)type;
- (void)removeArtworkForEntityPersistentID:(unsigned long long)id entityType:(long long)type artworkType:(long long)type sourceType:(long long)type;
- (void)addGlobalPlaylistWithID:(id)id andAddToCloudLibrary:(BOOL)library completion:(id /* block */)completion;
- (void)addToLocalDeviceLibraryGlobalPlaylistWithID:(id)id completion:(id /* block */)completion;
- (void)addNonLibraryOwnedPlaylistsWithGlobalIDs:(id)ids completion:(id /* block */)completion;
- (void)_addGlobalPlaylistsToLibraryDatabase:(id)database asLibraryOwned:(BOOL)owned completion:(id /* block */)completion;
- (void)enumerateItemIdentifiersForQueryCriteria:(id)criteria ordered:(BOOL)ordered cancelBlock:(id /* block */)block usingBlock:(id /* block */)block;
- (void)enumerateCollectionIdentifiersForQueryCriteria:(id)criteria ordered:(BOOL)ordered cancelBlock:(id /* block */)block usingBlock:(id /* block */)block;
- (void)loadValueForAggregateFunction:(id)function onItemsForProperty:(id)property queryCriteria:(id)criteria completionBlock:(id /* block */)block;
- (void)loadValueForAggregateFunction:(id)function onCollectionsForProperty:(id)property queryCriteria:(id)criteria completionBlock:(id /* block */)block;
- (void)loadProperties:(id)properties ofItemWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)loadProperties:(id)properties ofCollectionWithIdentifier:(long long)identifier groupingType:(long long)type completionBlock:(id /* block */)block;
- (BOOL)performTransactionWithBlock:(id /* block */)block;
- (void)performReadTransactionWithBlock:(id /* block */)block;
- (BOOL)isCurrentThreadInTransaction;
- (void)setValue:(id)value forProperty:(id)property ofItemWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)setValues:(id)values forProperties:(id)properties forItemPersistentIDs:(id)ids;
- (void)setValue:(id)value forProperty:(id)property ofCollectionWithIdentifier:(long long)identifier groupingType:(long long)type completionBlock:(id /* block */)block;
- (void)setValue:(id)value forProperty:(id)property ofPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (long long)addPlaylistWithValuesForProperties:(id)properties;
- (long long)sdk_addPlaylistWithValuesForProperties:(id)properties;
- (BOOL)removePlaylistWithIdentifier:(long long)identifier;
- (BOOL)deleteItemsWithIdentifiers:(long long *)identifiers count:(unsigned long long)count;
- (BOOL)removeItemsWithIdentifiers:(long long *)identifiers count:(unsigned long long)count;
- (void)_invalidatePersistentKeysForIdentifiers:(long long *)identifiers count:(unsigned long long)count;
- (void)setItemsWithIdentifiers:(id)identifiers forPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)setItemsWithIdentifiers:(id)identifiers andEntryProperties:(id)properties forPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)addItemWithIdentifier:(long long)identifier toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)addItemsWithIdentifiers:(id)identifiers toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)addItemsWithIdentifiers:(id)identifiers andEntryProperties:(id)properties toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)sdk_addItemWithOpaqueIdentifier:(id)identifier toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)removeItemsAtIndexes:(id)indexes inPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)sdk_addItemWithSagaIdentifier:(long long)identifier toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)removeAllItemsInPlaylistWithIdentifier:(long long)identifier;
- (void)removeFirstItemFromPlaylistWithIdentifier:(long long)identifier;
- (void)moveItemFromIndex:(unsigned long long)index toIndex:(unsigned long long)index inPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)setReactionText:(id)text onEntryAtPosition:(unsigned long long)position inPlaylistWithIdentifier:(long long)identifier completion:(id /* block */)completion;
- (void)enumerateEntityChangesAfterSyncAnchor:(id)anchor maximumRevisionType:(long long)type inUsersLibrary:(BOOL)library itemBlock:(id /* block */)block collectionBlock:(id /* block */)block;
- (id)collectionResultSetForQueryCriteria:(id)criteria;
- (id)itemResultSetForQueryCriteria:(id)criteria;
- (void)populateLocationPropertiesOfItemWithIdentifier:(long long)identifier withPath:(id)path assetProtectionType:(long long)type;
- (void)populateLocationPropertiesOfItemWithIdentifier:(long long)identifier withPath:(id)path assetProtectionType:(long long)type completionBlock:(id /* block */)block;
- (void)clearLocationPropertiesOfItemWithIdentifier:(long long)identifier;
- (void)setLibraryEntityFilterPredicatesWithCloudFilteringType:(long long)type additionalFilterPredicates:(id)predicates;
- (void)setLibraryContainerFilterPredicatesWithCloudFilteringType:(long long)type additionalFilterPredicates:(id)predicates;
- (void)setLibraryPublicEntityFilterPredicatesWithCloudFilteringType:(long long)type additionalFilterPredicates:(id)predicates;
- (void)setLibraryPublicContainerFilterPredicatesWithCloudFilteringType:(long long)type additionalFilterPredicates:(id)predicates;
- (id)systemFilterPredicatesWithGroupingType:(long long)type cloudTrackFilteringType:(long long)type subscriptionFilteringOptions:(long long)options;
- (id)ML3SystemFilterPredicatesWithGroupingType:(long long)type cloudTrackFilteringType:(long long)type subscriptionFilteringOptions:(long long)options additionalFilterPredicates:(id)predicates;
- (void)performBackgroundTaskWithBlock:(id /* block */)block;
- (id)_adjustedPlaylistPropertySeedItemsOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedPropertyMediaTypeOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemTimeOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyVolumeNormalizationOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyVolumeAdjustmentOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyRatingOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemDateOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyBookletsOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemNonnullDateOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyFilePathOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyMovieInfoOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyEpisodeNumberOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyChapterArtworkTimesOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertySeasonNumberOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertySeasonNameOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyChaptersOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyContentRatingOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyEQPresetOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyAssetURLOfEntity:(id)entity withDefaultValue:(id)value;
- (id)_adjustedItemPropertyVerifiedIntegrityOfEntity:(id)entity withDefaultValue:(id)value;
- (id)adjustedValueForMPProperty:(id)mpproperty ofEntity:(id)entity withDefaultValue:(id)value;
- (void)_updateArtworkDataSourceMediaLibraryUniqueIdentifier;
- (void)_coalesceEvents;
- (void)_postEvents;
- (BOOL)_dataProviderSupportsEntityChangeTracking;
- (void)_libraryContentsDidChange:(id)change;
- (void)_libraryPathDidChange:(id)change;
- (void)_libraryEntitiesAddedOrRemoved:(id)removed;
- (void)_dynamicPropertiesDidChange:(id)change;
- (void)_invisiblePropertiesDidChange:(id)change;
- (void)_displayValuesDidChange:(id)change;
- (void)_syncGenerationDidChange:(id)change;
- (void)_libraryUIDDidChange:(id)change;
- (void)_libraryCloudLibraryAvailabilityDidChange:(id)change;
- (void)_loadProperties:(id)properties ofEntityWithIdentifier:(long long)identifier ML3EntityClass:(Class)class completionBlock:(id /* block */)block;
- (void)_loadValueForAggregateFunction:(id)function entityClass:(Class)class property:(id)property query:(id)query completionBlock:(id /* block */)block;
- (BOOL)_removeEntitiesWithIdentifiers:(long long *)identifiers count:(unsigned long long)count entityClass:(Class)class;
- (id)_userSocialProflieID;
@end

#endif /* MPMediaLibraryDataProviderML3_h */
