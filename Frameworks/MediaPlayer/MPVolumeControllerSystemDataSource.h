//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPVolumeControllerSystemDataSource_h
#define MPVolumeControllerSystemDataSource_h
@import Foundation;

#include "MPVolumeControllerDataSource-Protocol.h"
#include "MPVolumeControllerDataSourceDelegate-Protocol.h"

@class AVSystemController, NSMutableArray, NSSet, NSString;
@protocol OS_dispatch_queue;

@interface MPVolumeControllerSystemDataSource : NSObject<MPVolumeControllerDataSource> {
  /* instance variables */
  BOOL _reloading;
  BOOL _needsReloading;
  BOOL _volumeInitialized;
  BOOL _volumeControlCapabilitiesInitialized;
  BOOL _volumeMutedInitialized;
  NSMutableArray *_pendingVolumeCompletions;
  NSObject<OS_dispatch_queue> *_avscQueue;
  AVSystemController *_avSystemController;
}

@property (copy, nonatomic) NSString *volumeAudioCategory;
@property (readonly, nonatomic) NSSet *volumeAudioCategories;
@property (nonatomic) BOOL forceAVSystemController;
@property (nonatomic) BOOL supportNativeMute;
@property (weak, nonatomic) NSObject<MPVolumeControllerDataSourceDelegate> *delegate;
@property (readonly, nonatomic) BOOL applicationShouldOverrideHardwareVolumeBehavior;
@property (readonly, copy, nonatomic) NSString *volumeControlLabel;
@property (readonly, nonatomic) BOOL volumeControlAvailable;
@property (readonly, nonatomic) unsigned int volumeControlCapabilities;
@property (nonatomic) float volume;
@property (nonatomic) BOOL muted;
@property (readonly, nonatomic) BOOL volumeWarningEnabled;
@property (readonly, nonatomic) long long volumeWarningState;
@property (readonly, nonatomic) float EUVolumeLimit;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initCommon;
- (id)initWithVolumeAudioCategory:(id)category;
- (id)initWithVolumeAudioCategories:(id)categories;
- (id)init;
- (void)dealloc;
- (void)initializeVolume;
- (void)_setVolumeAudioCategory:(id)category;
- (void)updateVolume:(float)volume silenceVolumeHUD:(BOOL)hud;
- (void)_notifyVolumeDidChage:(float)chage silenceVolumeHUD:(BOOL)hud;
- (void)updateVolumeControlCapabilities:(unsigned int)capabilities;
- (void)updateVolumeMuted:(BOOL)muted;
- (id)_mediaPlaybackVolumeAudioCategory;
- (id)_reloadQueue;
- (void)reload;
- (void)_reload;
- (void)adjustVolumeValue:(float)value;
- (void)getVolumeValueWithCompletion:(id /* block */)completion;
- (void)beginIncreasingRelativeVolume;
- (void)endIncreasingRelativeVolume;
- (void)beginDecreasingRelativeVolume;
- (void)endDecreasingRelativeVolume;
- (void)_mediaServerDiedNotification:(id)notification;
- (void)_routeDidChangeNotification:(id)notification;
- (void)_systemVolumeDidChange:(id)change;
- (void)_systemVolumeCapabilitiesDidChange:(id)change;
- (void)_systemMuteDidChange:(id)change;
- (id)_categoryForActiveCategory:(id)category currentCategory:(id)category categories:(id)categories;
- (void)_setup;
- (void)_tearDown;
- (BOOL)_supportsNativeMute;
- (float)_effectiveVolume;
- (BOOL)isVolumeControlAvailable;
- (BOOL)isMuted;
@end

#endif /* MPVolumeControllerSystemDataSource_h */
