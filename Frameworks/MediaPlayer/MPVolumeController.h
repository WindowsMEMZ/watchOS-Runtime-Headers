//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPVolumeController_h
#define MPVolumeController_h
@import Foundation;

#include "MPVolumeControllerDataSource-Protocol.h"
#include "MPVolumeControllerDataSourceDelegate-Protocol.h"
#include "MPVolumeControllerDelegate-Protocol.h"

@class NSString;

@interface MPVolumeController : NSObject<MPVolumeControllerDataSourceDelegate> {
  /* instance variables */
  int _volumeChangeCoalescingCount;
}

@property (weak, nonatomic) NSObject<MPVolumeControllerDelegate> *delegate;
@property (readonly, nonatomic) BOOL volumeControlAvailable;
@property (readonly, nonatomic) unsigned int volumeCapabilities;
@property (readonly, copy, nonatomic) NSString *volumeControlLabel;
@property (copy, nonatomic) NSString *volumeAudioCategory;
@property (nonatomic) float volumeValue;
@property (nonatomic) BOOL muted;
@property (retain, nonatomic) NSObject<MPVolumeControllerDataSource> *dataSource;
@property (readonly, nonatomic) BOOL volumeWarningEnabled;
@property (readonly, nonatomic) long long volumeWarningState;
@property (readonly, nonatomic) float EUVolumeLimit;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)descriptionForWarningState:(long long)state;

/* instance methods */
- (id)init;
- (id)initWithDataSource:(id)source;
- (BOOL)isVolumeControlAvailable;
- (BOOL)isMuted;
- (void)updateVolumeValue;
- (void)adjustVolumeValue:(float)value;
- (void)getVolumeValueWithCompletion:(id /* block */)completion;
- (void)setVolume:(float)volume withNotificationDelay:(float)delay;
- (void)beginIncreasingRelativeVolume;
- (void)endIncreasingRelativeVolume;
- (void)beginDecreasingRelativeVolume;
- (void)endDecreasingRelativeVolume;
- (void)increaseVolume;
- (void)decreaseVolume;
- (void)volumeControllerDataSource:(id)source didChangeMuted:(BOOL)muted;
- (void)volumeControllerDataSource:(id)source didChangeVolume:(float)volume;
- (void)volumeControllerDataSource:(id)source didChangeVolume:(float)volume silenceVolumeHUD:(BOOL)hud;
- (void)volumeControllerDataSource:(id)source didChangeVolumeControlAvailability:(BOOL)availability;
- (void)volumeControllerDataSource:(id)source didChangeVolumeCapabilities:(unsigned int)capabilities;
- (void)volumeControllerDataSource:(id)source didChangeVolumeLabel:(id)label;
- (void)volumeControllerDataSource:(id)source didChangeVolumeAudioCategory:(id)category;
- (void)updateVolumeWarningState;
- (void)setVolume:(float)volume withNoticationDelay:(float)delay;
@end

#endif /* MPVolumeController_h */
