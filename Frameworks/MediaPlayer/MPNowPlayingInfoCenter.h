//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPNowPlayingInfoCenter_h
#define MPNowPlayingInfoCenter_h
@import Foundation;

#include "MPArtworkResizeUtility.h"
#include "MPMediaRemoteEntityArtworkGenerator-Protocol.h"
#include "MPNowPlayingContentItem.h"
#include "MPNowPlayingInfoCenterArtworkContext.h"

@class MRPlayerPath, MSVLRUDictionary, MSVTimer, NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSString;
@protocol MPNowPlayingInfoLyricsDelegate, MPNowPlayingPlaybackQueueDataSource, MPNowPlayingPlaybackQueueDelegate, OS_dispatch_queue;

@interface MPNowPlayingInfoCenter : NSObject<MPMediaRemoteEntityArtworkGenerator> {
  /* instance variables */
  NSDictionary *_queuedNowPlayingInfo;
  NSDictionary *_convertedNowPlayingInfo;
  NSDate *_pushDate;
  NSObject<OS_dispatch_queue> *_accessQueue;
  NSObject<OS_dispatch_queue> *_calloutQueue;
  MPNowPlayingInfoCenterArtworkContext *_publishedContext;
  NSMutableDictionary *_mutatedContentItems;
  NSMutableDictionary *_mutatedPlaybackQueueRequests;
  struct _MSVSignedRange { long long location; long long length; } _loadedContentItemsRange;
  struct _MSVSignedRange { long long location; long long length; } _requestedContentItemsRange;
  NSMutableArray *_contentItemIdentifiers;
  MSVLRUDictionary *_contentItems;
  NSObject<OS_dispatch_queue> *_utilityQueue;
  MPArtworkResizeUtility *_artworkResizeUtility;
  MSVTimer *_contentItemInvalidationTimer;
  BOOL _isHighPriorityInvalidationTimer;
  struct { void *createPlaybackQueue; void *createContentItem; void *createChildItem; void *metadata; void *artwork; void *formattedArtwork; void *info; void *languageOptions; void *lyrics; } _callbacks;
  void * _fallbackActivity;
  BOOL _invalidated;
  unsigned long long _stateHandle;
}

@property (readonly, nonatomic) BOOL supportsArtworkCatalogLoading;
@property (weak, nonatomic) NSObject<MPNowPlayingPlaybackQueueDelegate> *playbackQueueDelegate;
@property (readonly, nonatomic) NSString *playerID;
@property (readonly, nonatomic) MRPlayerPath *playerPath;
@property (copy, nonatomic) NSString *representedApplicationBundleIdentifier;
@property (weak, nonatomic) NSObject<MPNowPlayingPlaybackQueueDataSource> *playbackQueueDataSource;
@property (retain, nonatomic) MPNowPlayingContentItem *nowPlayingContentItem;
@property (weak, nonatomic) NSObject<MPNowPlayingInfoLyricsDelegate> *lyricsDelegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *dataSourceQueue;
@property (copy, @dynamic, nonatomic) NSDictionary *nowPlayingInfo;
@property (nonatomic) unsigned long long playbackState;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)defaultCenter;
+ (id)infoCenterForPlayerID:(id)id;
+ (id)infoCenterForPlayerPath:(id)path;
+ (id)serviceQueue;

/* instance methods */
- (void)_initializeNowPlayingInfo;
- (void)_onQueue_pushNowPlayingInfoAndRetry:(BOOL)retry;
- (id)initWithPlayerID:(id)id;
- (id)initWithPlayerPath:(id)path;
- (id)init;
- (void)dealloc;
- (void)invalidate;
- (void)becomeActive;
- (void)invalidatePlaybackQueue;
- (void)invalidatePlaybackQueueWithCompletion:(id /* block */)completion;
- (id /* block */)artworkCatalogBlockForContentItem:(id)item;
- (BOOL)isInvalidated;
- (id)_artworkCatalogForContentItem:(id)item;
- (void)_becomeActiveWithCompletion:(id /* block */)completion;
- (void)_becomeActiveIfPossibleWithCompletion:(id /* block */)completion;
- (id)_childContentItemForContentItem:(id)item index:(long long)index;
- (id)_contentItemIDsInRange:(struct { long long x0; long long x1; })range itemsRange:(struct { long long x0; long long x1; } *)range;
- (id)_contentItemForIdentifier:(id)identifier;
- (id)_contentItemForIdentifier:(id)identifier alreadyOnDataSourceQueue:(BOOL)queue;
- (void *)_createPlaybackQueueForRequest:(void *)request;
- (void)_getMetadataForContentItem:(id)item completion:(id /* block */)completion;
- (void)_getTransportablePlaybackSessionRepresentationWithIdentifier:(id)identifier preferredSessionType:(id)type completion:(id /* block */)completion;
- (void)_invalidatePlaybackQueueImmediatelyWithCompletion:(id /* block */)completion;
- (id)_onDataSourceQueue_artworkCatalogForContentItem:(id)item;
- (void)_onDataSourceQueue_getContentItemIDsInRange:(struct _MSVSignedRange { long long x0; long long x1; })range completion:(id /* block */)completion;
- (void)_onQueue_clearPlaybackQueueDataSourceCallbacks;
- (void)_onQueue_registerLyricsDelegateCallbacks:(id)callbacks;
- (void)_onQueue_registerPlaybackQueueDataSourceCallbacks:(id)callbacks;
- (id)_onQueue_stateDictionary;
- (void)_contentItemChangedNotification:(id)notification;
- (void)_onQueue_pushContentItemsUpdate;
@end

#endif /* MPNowPlayingInfoCenter_h */
