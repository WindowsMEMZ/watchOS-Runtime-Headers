//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPAVOutputDeviceRoutingDataSource_h
#define MPAVOutputDeviceRoutingDataSource_h
@import Foundation;

#include "MPAVRoutingDataSource.h"
#include "MPAVEndpointRoute.h"
#include "MPMRAVOutputContextWrapper.h"

@class AVRoutingSessionManager, MRAVEndpoint, MRAVOutputDevice, MRAVRoutingDiscoverySession, MRAVRoutingDiscoverySessionConfiguration, NSArray, NSString;
@protocol OS_dispatch_queue;

@interface MPAVOutputDeviceRoutingDataSource : MPAVRoutingDataSource {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_serialQueue;
  NSObject<OS_dispatch_queue> *_discoverySessionQueue;
  BOOL _attemptedToInitializeAppOutputContext;
  id _companionCallbackToken;
  BOOL _didFindCompanion;
  id _callbackToken;
  BOOL _devicePresenceDetected;
  NSArray *_outputDeviceRoutes;
  BOOL _shouldSourceOutputDevicesFromAVODDS;
  AVRoutingSessionManager *_routingSessionManager;
  unsigned int _targetSessionID;
  long long _discoveryMode;
}

@property (retain, nonatomic) MPMRAVOutputContextWrapper *applicationOutputContext;
@property (retain, nonatomic) MRAVRoutingDiscoverySession *companionDiscoverySession;
@property (retain, nonatomic) MRAVRoutingDiscoverySession *discoverySession;
@property (nonatomic) BOOL didReceiveDiscoveryResults;
@property (readonly, nonatomic) MRAVRoutingDiscoverySessionConfiguration *discoverySessionConfiguration;
@property (readonly, nonatomic) MRAVEndpoint *endpoint;
@property (retain, nonatomic) MRAVOutputDevice *predictedDevice;
@property (copy, nonatomic) NSString *routingContextUID;
@property (nonatomic) BOOL supportsMultipleSelection;
@property (nonatomic) BOOL detachesRoutesToGroup;
@property (nonatomic) BOOL supportsQueueHandoff;
@property (copy, nonatomic) NSString *presentingAppBundleID;
@property (retain, nonatomic) MPAVEndpointRoute *endpointRoute;
@property (retain, nonatomic) NSString *initiator;
@property (nonatomic) BOOL supportsRoutePrediction;

/* class methods */
+ (id)_globalAudioSessionLock;

/* instance methods */
- (id)init;
- (id)initWithEndpointRoute:(id)route;
- (id)_initWithEndpointRoute:(id)route;
- (void)dealloc;
- (void)setTargetSessionID:(unsigned int)id;
- (id)routingSessionManager;
- (void)setDiscoveryMode:(long long)mode;
- (id)getRoutesForCategory:(id)category;
- (void)setPickedRoute:(id)route withPassword:(id)password completion:(id /* block */)completion;
- (void)createGroupFromOutputDevices:(id)devices queue:(id)queue completion:(id /* block */)completion;
- (void)addRouteToGroup:(id)group completion:(id /* block */)completion;
- (void)addRoutesToGroup:(id)group completion:(id /* block */)completion;
- (void)removeRouteFromGroup:(id)group completion:(id /* block */)completion;
- (void)removeRoutesFromGroup:(id)group completion:(id /* block */)completion;
- (BOOL)routeIsLeaderOfEndpoint:(id)endpoint;
- (void)_endpointsDidChangeNotification:(id)notification;
- (void)_outputDevicesDidChangeNotification:(id)notification;
- (void)_routeStatusDidChangeNotification:(id)notification;
- (id)outputDevicesForRoutes:(id)routes;
- (id)_detachableDevicesInOutputDevices:(id)devices;
- (BOOL)_shouldDetachOutputDevicesToGroup:(id)group;
- (BOOL)_shouldAddPredictedDeviceToOuputDevices:(id)devices;
- (BOOL)_isRemovingPredictedDevice:(id)device;
- (void)_registerNotifications;
- (void)_unregisterNotifications;
- (void)_personalRoutesDidChange;
- (void)_outputDevicesDidChange:(id)change;
- (id)_outputDeviceRouteWithUID:(id)uid;
- (void)_setShouldSourceOutputDevicesFromAVODDS:(BOOL)avodds;
- (void)_onDiscoverySessionQueue_generateDiscoverySession;
- (void)_generateDiscoverySession;
- (void)_onDiscoverySessionQueue_generateCompanionDiscoverySession;
- (void)_resetPredictedOutputDevice;
- (id)_stateDumpObject;
- (BOOL)devicePresenceDetected;
- (long long)discoveryMode;
- (unsigned int)targetSessionID;
@end

#endif /* MPAVOutputDeviceRoutingDataSource_h */
