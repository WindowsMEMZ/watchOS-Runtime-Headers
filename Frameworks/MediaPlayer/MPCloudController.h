//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPCloudController_h
#define MPCloudController_h
@import Foundation;

@class ICCloudClient, ICConnectionConfiguration, ICUserIdentity, MSVDistributedNotificationObserver;
@protocol ICCloudAvailability, OS_dispatch_queue;

@interface MPCloudController : NSObject

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *serialQueue;
@property (readonly, nonatomic) NSObject<ICCloudAvailability> *cloudAvailabilityController;
@property (readonly, nonatomic) ICConnectionConfiguration *configuration;
@property (nonatomic) long long activeCount;
@property (nonatomic) int preferencesChangedNotifyToken;
@property (nonatomic) BOOL preferencesChangedNotifyTokenIsValid;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *cloudClientCallbackQueue;
@property (readonly, nonatomic) MSVDistributedNotificationObserver *addToPlaylistBehaviorChangedObserver;
@property (readonly, nonatomic) MSVDistributedNotificationObserver *favoriteSongAddToLibraryBehaviorChangedObserver;
@property (nonatomic) BOOL canShowCloudDownloadButtons;
@property (nonatomic) BOOL canDefaultMediaLibraryShowCloudContent;
@property (nonatomic) BOOL canShowCloudMusic;
@property (nonatomic) BOOL canShowCloudVideo;
@property (nonatomic) BOOL cloudEnabledValid;
@property (nonatomic) BOOL cloudEnabled;
@property (nonatomic) BOOL cloudLockerAccount;
@property (nonatomic) BOOL purchaseHistoryAccount;
@property (nonatomic) BOOL updateInProgress;
@property (nonatomic) BOOL initialImport;
@property (nonatomic) BOOL cloudLibraryUpdateInProgress;
@property (nonatomic) BOOL cloudLibraryInitialImport;
@property (nonatomic) BOOL jaliscoUpdateInProgress;
@property (nonatomic) BOOL jaliscoInitialImport;
@property (readonly, nonatomic) BOOL active;
@property (readonly, nonatomic) BOOL enhancedAudioAvailable;
@property (readonly, nonatomic) ICCloudClient *cloudClient;
@property (readonly, nonatomic) ICUserIdentity *userIdentity;
@property (readonly, nonatomic) BOOL enablingCloudLibraryDestructive;
@property (readonly, nonatomic) BOOL isGeniusEnabled;

/* class methods */
+ (id)globalSerialQueue;
+ (id)controllers;
+ (BOOL)isMediaApplication;
+ (id)sharedCloudController;
+ (id)controllerWithUserIdentity:(id)identity;
+ (id)_controllerWithUserIdentity:(id)identity createIfRequired:(BOOL)required;
+ (void)migrateCellularDataPreferencesIfNeeded;
+ (void)_postNotificationName:(id)name controller:(id)controller;
+ (void)_postNotificationName:(id)name controller:(id)controller userInfo:(id)info;

/* instance methods */
- (id)init;
- (id)_initWithUserIdentity:(id)identity;
- (void)dealloc;
- (id)description;
- (void)canShowCloudDownloadButtonsDidChangeNotification:(id)notification;
- (void)canShowCloudTracksDidChangeNotification:(id)notification;
- (void)hasProperNetworkConditionsToShowCloudMediaDidChangeNotification:(id)notification;
- (void)isCellularDataRestrictedDidChangeNotification:(id)notification;
- (void)authenticatedDidChangeNotification:(id)notification;
- (void)activeUserDidChangeNotification:(id)notification;
- (void)enableICMLErrorReasonChange:(id)change;
- (BOOL)hasProperNetworkConditionsToPlayMedia;
- (BOOL)hasProperNetworkConditionsToShowCloudMedia;
- (BOOL)isCellularDataRestrictedForMusic;
- (BOOL)shouldProhibitMusicActionForCurrentNetworkConditions;
- (BOOL)isCellularDataRestrictedForVideos;
- (BOOL)shouldProhibitVideosActionForCurrentNetworkConditions;
- (BOOL)isCellularDataRestrictedForStoreApps;
- (BOOL)shouldProhibitStoreAppsActionForCurrentNetworkConditions;
- (BOOL)isCellularDataRestricted;
- (BOOL)shouldProhibitActionsForCurrentNetworkConditions;
- (BOOL)hasCloudLockerAccount;
- (BOOL)hasPurchaseHistoryAccount;
- (BOOL)isEnhancedAudioAvailable;
- (void)updateSubscribedPlaylistWithSagaID:(unsigned long long)id ignoreMinRefreshInterval:(BOOL)interval completionHandler:(id /* block */)handler;
- (void)createPlaylistWithPersistentID:(unsigned long long)id properties:(id)properties trackList:(id)list completionHandler:(id /* block */)handler;
- (void)sdk_createPlaylistWithPersistenID:(unsigned long long)id properties:(id)properties tracklist:(id)tracklist completionHandler:(id /* block */)handler;
- (void)addGeniusPlaylistWithPersistentID:(unsigned long long)id name:(id)name seedItemSagaIDs:(id)ids itemSagaIDs:(id)ids completionHandler:(id /* block */)handler;
- (BOOL)canSetPlaylistProperty:(id)property;
- (void)setPlaylistProperties:(id)properties trackList:(id)list forPlaylistWithPersistentID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)sdk_setPlaylistProperties:(id)properties trackList:(id)list forPlaylistWithPersistentID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)addStoreItemWithAdamID:(long long)id toPlaylistWithPersistentID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)addStoreItemWithAdamID:(long long)id referralObject:(id)object toPlaylistWithPersistentID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)addItemWithSagaID:(unsigned long long)id toPlaylistWithPersistentID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)sdk_addStoreItemWithOpaqueID:(id)id toPlaylistWithPersistentID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)sdk_addItemWithSagaID:(unsigned long long)id toPlaylistWithPersistentID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)uploadCloudPlaylistProperties;
- (void)removePlaylistsWithSagaIDs:(id)ids completionHandler:(id /* block */)handler;
- (void)publishPlaylistWithSagaID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)uploadArtworkForPlaylist:(id)playlist completionHandler:(id /* block */)handler;
- (void)favoriteEntityWithPersistentID:(long long)id storeID:(long long)id entityType:(long long)type time:(id)time completionHandler:(id /* block */)handler;
- (void)favoritePlaylistWithPersistentID:(long long)id globalID:(id)id time:(id)time completionHandler:(id /* block */)handler;
- (void)favoriteAlbumWithPersistentID:(long long)id cloudLibraryID:(id)id time:(id)time completionHandler:(id /* block */)handler;
- (void)favoriteArtistWithPersistentID:(long long)id cloudLibraryID:(id)id time:(id)time completionHandler:(id /* block */)handler;
- (void)favoriteEntityWithPersistentID:(long long)id sagaID:(long long)id entityType:(long long)type time:(id)time completionHandler:(id /* block */)handler;
- (void)beginCollaborationUsingPlaylistWithPersistentID:(long long)id sharingMode:(long long)mode completion:(id /* block */)completion;
- (void)endCollaborationWithPersistentID:(long long)id completion:(id /* block */)completion;
- (void)editCollaborationWithPersistentID:(long long)id properties:(id)properties trackEdits:(id)edits completion:(id /* block */)completion;
- (void)joinCollaborationWithGlobalPlaylistID:(id)id invitationURL:(id)url completion:(id /* block */)completion;
- (void)respondToPendingCollaborator:(id)collaborator onCollaborationWithPersistentID:(long long)id withApproval:(BOOL)approval completion:(id /* block */)completion;
- (void)removeCollaborators:(id)collaborators fromCollaborationWithPersistentID:(long long)id completion:(id /* block */)completion;
- (void)updateSharingMode:(long long)mode onCollaboratinWithPersistentID:(long long)id completion:(id /* block */)completion;
- (void)resetInvitationURLForCollaborationWithPersistentID:(long long)id completion:(id /* block */)completion;
- (BOOL)canSetItemProperty:(id)property;
- (void)setItemProperties:(id)properties forSagaID:(unsigned long long)id;
- (void)uploadCloudItemProperties;
- (void)setCollectionProperties:(id)properties forCollectionWithPersistentID:(long long)id groupingType:(long long)type completionHandler:(id /* block */)handler;
- (void)setAlbumProperties:(id)properties forEntityWithPersistentID:(long long)id cloudLibraryID:(id)id completionHandler:(id /* block */)handler;
- (void)setAlbumArtistProperties:(id)properties forEntityWithPersistentID:(long long)id completionHandler:(id /* block */)handler;
- (void)addStoreItemWithAdamID:(long long)id completionHandler:(id /* block */)handler;
- (void)addStoreItemWithAdamID:(long long)id referralObject:(id)object completionHandler:(id /* block */)handler;
- (void)sdk_addStoreItemWithOpaqueID:(id)id completionHandler:(id /* block */)handler;
- (void)addStorePlaylistWithGlobalID:(id)id completionHandler:(id /* block */)handler;
- (void)removeItemsWithSagaIDs:(id)ids completionHandler:(id /* block */)handler;
- (void)loadArtworkForEntityPersistentID:(long long)id entityType:(long long)type artworkType:(long long)type artworkSourceType:(long long)type completionHandler:(id /* block */)handler;
- (void)loadArtworkInfoForEntityPersistentID:(long long)id entityType:(long long)type artworkType:(long long)type artworkSourceType:(long long)type completionHandler:(id /* block */)handler;
- (void)deprioritizeArtworkRequestForEntityPersistentID:(long long)id entityType:(long long)type artworkType:(long long)type artworkSourceType:(long long)type;
- (void)becomeActive;
- (void)becomeActiveAndWaitUntilDone:(BOOL)done;
- (void)resignActive;
- (BOOL)isActive;
- (BOOL)isInitialImport;
- (BOOL)isCloudLibraryInitialImport;
- (BOOL)isJaliscoInitialImport;
- (BOOL)isUpdateInProgress;
- (BOOL)isCloudLibraryUpdateInProgress;
- (BOOL)isJaliscoUpdateInProgress;
- (void)loadGeniusItemsForSagaID:(unsigned long long)id completionHandler:(id /* block */)handler;
- (void)loadUpdateProgressWithCompletionHandler:(id /* block */)handler;
- (void)loadCloudMusicLibraryUpdateProgressWithCompletionHandler:(id /* block */)handler;
- (void)loadJaliscoLibraryUpdateProgressWithCompletionHandler:(id /* block */)handler;
- (void)loadLastKnownEnableICMLErrorStatusWithCompletionHander:(id /* block */)hander;
- (BOOL)isEnablingCloudLibraryDestructive;
- (BOOL)isCloudLibraryEnabled;
- (void)enableCloudLibraryWithOptions:(id)options completionHandler:(id /* block */)handler;
- (void)disableCloudLibraryWithCompletionHandler:(id /* block */)handler;
- (void)disableCloudLibraryWithReason:(long long)reason completionHandler:(id /* block */)handler;
- (BOOL)isAutomaticDownloadsEnabled;
- (BOOL)hasSetPreferenceForAutomaticDownloads;
- (void)enableAutomaticDownloadsWithCompletionHandler:(id /* block */)handler;
- (void)disableAutomaticDownloadsWithCompletionHandler:(id /* block */)handler;
- (long long)cloudAddToPlaylistBehavior;
- (void)setCloudAddToPlaylistBehavior:(long long)behavior completionHandler:(id /* block */)handler;
- (long long)favoriteSongAddToLibraryBehavior;
- (void)setCloudFavoriteSongAddToLibraryBehavior:(long long)behavior completionHandler:(id /* block */)handler;
- (void)hideItemsWithPurchaseHistoryIDs:(id)ids completionHandler:(id /* block */)handler;
- (void)setItemProperties:(id)properties forPurchaseHistoryID:(unsigned long long)id;
- (void)updateJaliscoMediaLibraryWithReason:(long long)reason completionHandler:(id /* block */)handler;
- (void)fetchRecommendedContentWithSeedTrackID:(long long)id seedTrackIDType:(long long)idtype count:(unsigned long long)count completion:(id /* block */)completion;
- (void)setLikedState:(long long)state forEntityWithStoreID:(long long)id withMediaType:(unsigned long long)type timeStamp:(id)stamp;
- (void)setLikedState:(long long)state forEntityWithStoreID:(long long)id withMediaType:(unsigned long long)type timeStamp:(id)stamp completion:(id /* block */)completion;
- (void)setLikedState:(long long)state forEntityWithStoreID:(long long)id persistentID:(long long)id timeStamp:(id)stamp completion:(id /* block */)completion;
- (void)setLikedState:(long long)state forAlbumWithStoreID:(long long)id;
- (void)setLikedState:(long long)state forAlbumWithStoreID:(long long)id completion:(id /* block */)completion;
- (void)setLikedState:(long long)state forAlbumWithStoreID:(long long)id persistentID:(long long)id timeStamp:(id)stamp completion:(id /* block */)completion;
- (void)setLikedState:(long long)state forPlaylistWithGlobalID:(id)id;
- (void)setLikedState:(long long)state forPlaylistWithGlobalID:(id)id completion:(id /* block */)completion;
- (void)setLikedState:(long long)state forPlaylistWithGlobalID:(id)id persistentID:(long long)id timeStamp:(id)stamp completion:(id /* block */)completion;
- (void)setLikedState:(long long)state forArtistWithStoreID:(long long)id persistentID:(long long)id timeStamp:(id)stamp completion:(id /* block */)completion;
- (void)processPendingKeyInvalidations;
- (void)_loadIsSagaAuthenticatedWithCompletion:(id /* block */)completion;
- (void)_initializeUpdateInProgressState;
- (id)_referralForModelObject:(id)object;
- (void)_setDateModified:(id)modified forPlaylistPersistentID:(long long)id;
- (long long)_icFavoriteEntityTypeFromMPEntityType:(long long)type;
- (void)_copyObservationStateFrom:(id)from;
- (BOOL)_handlesSameAccountAs:(id)as;
- (void)_performBlockOnControllerHandlingTheSameAccount:(id /* block */)account;
- (void)_becomeActiveAndWaitUntilDone:(BOOL)done;
- (void)_resignActive;
- (void)_addItemWithAdamID:(long long)id toCollaborationWithPersistentID:(long long)id completionHandler:(id /* block */)handler;
- (void)_addItemWithSagaID:(unsigned long long)id toCollaborationWithPersistentID:(long long)id completionHandler:(id /* block */)handler;
- (BOOL)_isCollaborativePlaylist:(unsigned long long)playlist;
- (long long)_storeAdamIDForItemWithSagaID:(unsigned long long)id;
- (BOOL)isCloudEnabled;
- (BOOL)isCloudEnabledValid;
@end

#endif /* MPCloudController_h */
