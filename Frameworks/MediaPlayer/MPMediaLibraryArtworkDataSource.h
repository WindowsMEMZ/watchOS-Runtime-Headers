//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPMediaLibraryArtworkDataSource_h
#define MPMediaLibraryArtworkDataSource_h
@import Foundation;

#include "MPArtworkDataSource-Protocol.h"
#include "MPArtworkDataSourceIdentifiable-Protocol.h"
#include "MPArtworkResizeUtility.h"

@class NSCache, NSString;

@interface MPMediaLibraryArtworkDataSource : NSObject<MPArtworkDataSource, MPArtworkDataSourceIdentifiable>

@property (retain, nonatomic) NSCache *fallbackCache;
@property (retain, nonatomic) MPArtworkResizeUtility *artworkResizeUtility;
@property (nonatomic) BOOL usesFallbackCache;
@property (copy, nonatomic) NSString *mediaLibraryUniqueIdentifier;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) NSString *artworkDataSourceIdentifier;

/* class methods */
+ (id)artworkDataSourceShortDescription;
+ (id)artworkDataSourceWithIdentifier:(id)identifier;

/* instance methods */
- (id)init;
- (BOOL)areRepresentationsAvailableForCatalog:(id)catalog;
- (id)existingRepresentationForArtworkCatalog:(id)catalog;
- (id)_existingRepresentationForArtworkCatalog:(id)catalog fromCacheOnly:(BOOL)only;
- (BOOL)isRepresentation:(id)representation bestRepresentationForArtworkCatalog:(id)catalog;
- (void)loadRepresentationForArtworkCatalog:(id)catalog completionHandler:(id /* block */)handler;
- (void)_resizeOriginalArtworkForArtworkCatalog:(id)catalog completionHandler:(id /* block */)handler;
- (void)cancelLoadingRepresentationForArtworkCatalog:(id)catalog;
- (id)visualIdenticalityIdentifierForCatalog:(id)catalog;
- (BOOL)hasExistingRepresentationOnDiskForArtworkCatalog:(id)catalog;
- (BOOL)hasExportableArtworkPropertiesForCatalog:(id)catalog;
- (void)getExportableArtworkPropertiesForCatalog:(id)catalog completionHandler:(id /* block */)handler;
- (id)existingArtworkEffectResultForEffectType:(long long)type catalog:(id)catalog options:(id)options;
- (void)loadArtworkEffectResultForEffectType:(long long)type catalog:(id)catalog options:(id)options systemEffectHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (void)_cacheRepresentation:(id)representation forCatalog:(id)catalog;
- (id)_cachedRepresentationForCatalog:(id)catalog;
- (BOOL)_isRepresentation:(id)representation validForCatalog:(id)catalog;
- (BOOL)_isRepresentationSize:(struct CGSize { double x0; double x1; })size validForFittingSize:(struct CGSize { double x0; double x1; })size;
- (id)_representationAtSize:(struct CGSize { double x0; double x1; })size forCatalog:(id)catalog;
- (id)_resizeArtwork:(id)artwork forCatalog:(id)catalog toSize:(struct CGSize { double x0; double x1; })size completionHandler:(id /* block */)handler;
- (void)_createColorAnalysisForArtwork:(id)artwork withCompletion:(id /* block */)completion;
- (void)_updateCachedColorAnalysis:(id)analysis forArtwork:(id)artwork;
@end

#endif /* MPMediaLibraryArtworkDataSource_h */
