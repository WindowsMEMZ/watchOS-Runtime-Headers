//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPContentTasteController_h
#define MPContentTasteController_h
@import Foundation;

@class ICUserIdentity, NSMutableDictionary;
@protocol OS_dispatch_queue;

@interface MPContentTasteController : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_accessQueue;
  NSMutableDictionary *_pendingUpdateRecordByPlaylistGlobalID;
  NSMutableDictionary *_pendingUpdateRecordByStoreAdamID;
}

@property (readonly, nonatomic) ICUserIdentity *userIdentity;

/* class methods */
+ (id)globalSerialQueue;
+ (id)controllers;
+ (id)_tasteControllerWithUserIdentity:(id)identity isSingleton:(BOOL)singleton createIfRequired:(BOOL)required;
+ (id)sharedController;
+ (id)controllerWithUserIdentity:(id)identity;
+ (void)_postNotificationName:(id)name controller:(id)controller;
+ (void)_postNotificationName:(id)name controller:(id)controller userInfo:(id)info;

/* instance methods */
- (id)init;
- (id)_initWithUserIdentity:(id)identity;
- (void)setTasteType:(long long)type forModel:(id)model withCompletionHandler:(id /* block */)handler;
- (void)setTasteType:(long long)type forMediaEntity:(id)entity withCompletionHandler:(id /* block */)handler;
- (void)setTasteType:(long long)type forPlaylistGlobalID:(id)id withCompletionHandler:(id /* block */)handler;
- (void)setTasteType:(long long)type forStoreAdamID:(long long)id withContentType:(long long)type completionHandler:(id /* block */)handler;
- (long long)tasteTypeForModel:(id)model;
- (long long)tasteTypeForMediaEntity:(id)entity;
- (long long)tasteTypeForPlaylistGlobalID:(id)id;
- (long long)tasteTypeForStoreAdamID:(long long)id;
- (void)_libraryPathDidChangeForTasteController:(id)controller;
- (void)_deviceMediaLibraryDidChangeNotification:(id)notification;
- (id)_mediaLibrary;
- (id)_libraryEntityForModel:(id)model;
- (id)_libraryPlaylistWithGlobalID:(id)id;
- (id)_libraryEntityWithStoreID:(long long)id contentType:(long long)type;
- (id)_ML3QueryWithEntityClass:(Class)class predicate:(id)predicate options:(long long)options;
- (id)_addPendingUpdateRecord:(id)record withKey:(id)key inDictionary:(id)dictionary;
- (id)_addPendingUpdateRecordForPlaylistGlobalID:(id)id contentTasteType:(long long)type;
- (id)_addPendingUpdateRecordForStoreAdamID:(long long)id contentTasteType:(long long)type;
- (void)_removePendingUpdateRecordForPlaylistGlobalID:(id)id token:(id)token;
- (void)_removePendingUpdateRecordForStoreAdamID:(long long)id token:(id)token;
- (id)_pendingUpdateRecordForKey:(id)key inDictionary:(id)dictionary;
- (id)_pendingUpdateRecordForStoreAdamID:(long long)id;
- (id)_pendingUpdateRecordForPlaylistGlobalID:(id)id;
@end

#endif /* MPContentTasteController_h */
