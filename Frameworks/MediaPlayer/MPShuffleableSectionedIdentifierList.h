//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPShuffleableSectionedIdentifierList_h
#define MPShuffleableSectionedIdentifierList_h
@import Foundation;

#include "MPSectionedIdentifierList.h"
#include "MPShuffleableSectionedIdentifierListDelegate-Protocol.h"
#include "_MPSSILDelegate-Protocol.h"
#include "_MPSSILImplementation.h"

@class NSString;

@interface MPShuffleableSectionedIdentifierList : MPSectionedIdentifierList<_MPSSILDelegate> {
  /* instance variables */
  _MPSSILImplementation *_shuffledList;
}

@property (copy, nonatomic) NSString *shuffleStartingSectionIdentifier;
@property (copy, nonatomic) NSString *shuffleStartingItemIdentifier;
@property (weak, @dynamic, nonatomic) NSObject<MPShuffleableSectionedIdentifierListDelegate> *delegate;
@property (nonatomic) long long shuffleType;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (long long)initialCandidateDequeueQuota;
+ (void)setInitialCandidateDequeueQuota:(long long)quota;
+ (long long)enumerationCandidateDequeueQuota;
+ (void)setEnumerationCandidateDequeueQuota:(long long)quota;

/* instance methods */
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder withExclusiveAccessToken:(id)token;
- (void)setShuffleType:(long long)type startingItem:(id)item inSection:(id)section;
- (void)setShuffleType:(long long)type startingItem:(id)item inSection:(id)section randomSource:(id)source;
- (void)safelyReshuffleAfterItem:(id)item inSection:(id)section;
- (BOOL)hasSection:(id)section;
- (id)enumeratorWithOptions:(unsigned long long)options startPosition:(id)position endPosition:(id)position withExclusiveAccessToken:(id)token;
- (void)addDataSourceAtStart:(id)start section:(id)section completion:(id /* block */)completion;
- (void)addDataSource:(id)source section:(id)section afterItem:(id)item inSection:(id)section completion:(id /* block */)completion;
- (void)addDataSource:(id)source section:(id)section afterTailOfSection:(id)section completion:(id /* block */)completion;
- (void)addDataSource:(id)source section:(id)section beforeTailOfSection:(id)section completion:(id /* block */)completion;
- (void)addDataSourceAtEnd:(id)end section:(id)section completion:(id /* block */)completion;
- (void)addDataSourceAtStart:(id)start section:(id)section sequentially:(BOOL)sequentially completion:(id /* block */)completion;
- (void)addDataSource:(id)source section:(id)section sequentially:(BOOL)sequentially afterItem:(id)item inSection:(id)section completion:(id /* block */)completion;
- (void)addDataSource:(id)source section:(id)section sequentially:(BOOL)sequentially afterTailOfSection:(id)section completion:(id /* block */)completion;
- (void)addDataSource:(id)source section:(id)section sequentially:(BOOL)sequentially beforeTailOfSection:(id)section completion:(id /* block */)completion;
- (void)addDataSourceAtEnd:(id)end section:(id)section sequentially:(BOOL)sequentially completion:(id /* block */)completion;
- (void)replaceDataSource:(id)source forSection:(id)section completion:(id /* block */)completion;
- (void)moveItemToStart:(id)start fromSection:(id)section;
- (void)moveItemToEnd:(id)end fromSection:(id)section;
- (void)moveItem:(id)item fromSection:(id)section afterItem:(id)item inSection:(id)section;
- (void)moveItem:(id)item fromSection:(id)section afterHeadOfSection:(id)section;
- (void)moveItem:(id)item fromSection:(id)section afterTailOfSection:(id)section;
- (void)removeItem:(id)item fromSection:(id)section;
- (long long)_itemCountWithExclusiveAccessToken:(id)token;
- (void)dataSourceInsertItemsAtHead:(id)head inSection:(id)section;
- (void)dataSourceInsertItems:(id)items afterItem:(id)item inSection:(id)section;
- (void)dataSourceInsertItemsAtTail:(id)tail inSection:(id)section;
- (void)dataSourceRemoveItems:(id)items fromSection:(id)section;
- (void)dataSourceReloadItems:(id)items inSection:(id)section;
- (void)didDequeueShuffledItemsInSSIL:(id)ssil;
- (id)_candidateItemsWithExclusiveAccessToken:(id)token;
- (void)_dequeueCandidatesWithQuota:(long long)quota withExclusiveAccessToken:(id)token;
- (id)_shuffledListWithExclusiveAccessToken:(id)token;
- (void)addDataSource:(id)source section:(id)section afterHeadOfSection:(id)section;
@end

#endif /* MPShuffleableSectionedIdentifierList_h */
