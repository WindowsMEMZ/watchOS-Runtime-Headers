//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 4023.330.3.0.0
//
#ifndef MPMediaLibraryDataProviderPrivate_Protocol_h
#define MPMediaLibraryDataProviderPrivate_Protocol_h
@import Foundation;

@protocol MPMediaLibraryDataProviderPrivate <MPMediaLibraryDataProvider>

@property (readonly, copy, nonatomic) NSString *accountDSID;
@property (readonly, nonatomic) NSString *databasePath;
@property (readonly, nonatomic) long long playbackHistoryPlaylistPersistentID;
@property (readonly, nonatomic) long long favoriteSongsPlaylistPersistentID;
@property (readonly, nonatomic) long long photosMemoriesPlaylistPersistentID;
@property (readonly, nonatomic) BOOL isGeniusEnabled;
@property (readonly, nonatomic) NSArray *preferredAudioLanguages;
@property (readonly, nonatomic) NSArray *preferredSubtitleLanguages;
@property (readonly, nonatomic) NSArray *localizedSectionIndexTitles;

@optional
/* instance methods */
- (id)lastModifiedDate;
- (BOOL)hasMediaOfType:(unsigned long long)type;
- (BOOL)hasGeniusMixes;
- (BOOL)hasUbiquitousBookmarkableItems;
- (BOOL)itemExistsWithPersistentID:(unsigned long long)id;
- (BOOL)playlistExistsWithPersistentID:(unsigned long long)id;
- (BOOL)collectionExistsWithPersistentID:(unsigned long long)id groupingType:(long long)type;
- (BOOL)collectionExistsContainedWithinPersistentIDs:(const unsigned long long *)ids count:(unsigned long long)count groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithName:(id)name groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithStoreID:(long long)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithSagaID:(long long)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithCloudLibraryID:(id)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsWithCloudUniversalLibraryID:(id)id groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (BOOL)collectionExistsContainedWithinSyncIDs:(id)ids groupingType:(long long)type existentPID:(unsigned long long *)pid;
- (long long)itemPersistentIDForStoreID:(long long)id;
- (BOOL)performTransactionWithBlock:(id /* block */)block;
- (void)performReadTransactionWithBlock:(id /* block */)block;
- (BOOL)isCurrentThreadInTransaction;
- (void)setValue:(id)value forProperty:(id)property ofItemWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)setValues:(id)values forProperties:(id)properties forItemPersistentIDs:(id)ids;
- (void)setValue:(id)value forProperty:(id)property ofPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)setValue:(id)value forProperty:(id)property ofCollectionWithIdentifier:(long long)identifier groupingType:(long long)type completionBlock:(id /* block */)block;
- (long long)addPlaylistWithValuesForProperties:(id)properties;
- (long long)sdk_addPlaylistWithValuesForProperties:(id)properties;
- (BOOL)deleteItemsWithIdentifiers:(long long *)identifiers count:(unsigned long long)count;
- (BOOL)removeItemsWithIdentifiers:(long long *)identifiers count:(unsigned long long)count;
- (BOOL)removePlaylistWithIdentifier:(long long)identifier;
- (void)setItemsWithIdentifiers:(id)identifiers forPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)setItemsWithIdentifiers:(id)identifiers andEntryProperties:(id)properties forPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)addItemWithIdentifier:(long long)identifier toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)addItemsWithIdentifiers:(id)identifiers toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)addItemsWithIdentifiers:(id)identifiers andEntryProperties:(id)properties toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)sdk_addItemWithOpaqueIdentifier:(id)identifier toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)sdk_addItemWithSagaIdentifier:(long long)identifier toPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)removeItemsAtIndexes:(id)indexes inPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)removeAllItemsInPlaylistWithIdentifier:(long long)identifier;
- (void)removeFirstItemFromPlaylistWithIdentifier:(long long)identifier;
- (void)moveItemFromIndex:(unsigned long long)index toIndex:(unsigned long long)index inPlaylistWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void)setReactionText:(id)text onEntryAtPosition:(unsigned long long)position inPlaylistWithIdentifier:(long long)identifier completion:(id /* block */)completion;
- (void)seedPlaylistWithIdentifier:(long long)identifier withItemWithIdentifier:(long long)identifier completionBlock:(id /* block */)block;
- (void *)createGeniusClusterPlaylistWithSeedItemIdentifiers:(long long *)identifiers count:(unsigned long long)count error:(id *)error;
- (long long *)generateItemIdentifiersForGeniusClusterPlaylist:(void *)playlist count:(unsigned long long *)count error:(id *)error;
- (void)releaseGeniusClusterPlaylist:(void *)playlist;
- (void)geniusItemsForSeedItem:(id)item completion:(id /* block */)completion;
- (void)populateLocationPropertiesOfItemWithIdentifier:(long long)identifier withPath:(id)path assetProtectionType:(long long)type;
- (void)populateLocationPropertiesOfItemWithIdentifier:(long long)identifier withPath:(id)path assetProtectionType:(long long)type completionBlock:(id /* block */)block;
- (void)clearLocationPropertiesOfItemWithIdentifier:(long long)identifier;
- (BOOL)supportsEntityChangeTrackingForMediaEntityType:(long long)type collectionGroupingType:(long long)type dataProviderClass:(out Class *)class;
- (void)updateEntitesToCurrentRevision;
- (id)localizedSectionHeaderForSectionIndex:(unsigned long long)index;
- (id)valueForDatabaseProperty:(id)property;
- (BOOL)setValue:(id)value forDatabaseProperty:(id)property;
- (BOOL)deleteDatabaseProperty:(id)property;
- (id)multiverseIdentifierForTrackWithPersistentID:(long long)id;
- (id)multiverseIdentifierForCollectionWithPersistentID:(long long)id groupingType:(long long)type;
- (void)performStoreItemLibraryImport:(id)import withCompletion:(id /* block */)completion;
- (void)performStoreAlbumArtistLibraryImport:(id)import withCompletion:(id /* block */)completion;
- (void)sdk_addItemWithOpaqueID:(id)id withCompletion:(id /* block */)completion;
- (void)addTracksToMyLibrary:(id)library;
- (void)addPlaylistStoreItemsForLookupItems:(id)items withCompletion:(id /* block */)completion;
- (void)addGlobalPlaylistWithID:(id)id andAddToCloudLibrary:(BOOL)library completion:(id /* block */)completion;
- (void)addToLocalDeviceLibraryGlobalPlaylistWithID:(id)id completion:(id /* block */)completion;
- (void)addNonLibraryOwnedPlaylistsWithGlobalIDs:(id)ids completion:(id /* block */)completion;
- (BOOL)importOriginalArtworkFromImageData:(id)data withArtworkToken:(id)token artworkType:(long long)type sourceType:(long long)type mediaType:(unsigned long long)type;
- (void)importArtworkTokenForEntityPersistentID:(unsigned long long)id entityType:(long long)type artworkToken:(id)token artworkType:(long long)type sourceType:(long long)type;
- (void)removeArtworkForEntityPersistentID:(unsigned long long)id entityType:(long long)type artworkType:(long long)type sourceType:(long long)type;
@end

#endif /* MPMediaLibraryDataProviderPrivate_Protocol_h */
