//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 617.1.17.12.4
//
#ifndef JSScript_h
#define JSScript_h
@import Foundation;

@protocol {RefPtr<JSC::CachedBytecode, WTF::RawPtrTraits<JSC::CachedBytecode>, WTF::DefaultRefDerefTraits<JSC::CachedBytecode>>="m_ptr"^{CachedBytecode}}, {RetainPtr<NSURL>="m_ptr"^v}, {String="m_impl"{RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>>="m_ptr"^{StringImpl}}}, {WeakObjCPtr<JSVirtualMachine>="m_weakReference"@};

@interface JSScript : NSObject {
  /* instance variables */
  struct WeakObjCPtr<JSVirtualMachine> { id m_weakReference; } m_virtualMachine;
  long long m_type;
  struct MappedFileData { void *m_fileData; unsigned int m_fileSize; } m_mappedSource;
  struct String { struct RefPtr<WTF::StringImpl, WTF::RawPtrTraits<WTF::StringImpl>, WTF::DefaultRefDerefTraits<WTF::StringImpl>> { struct StringImpl *m_ptr; } m_impl; } m_source;
  struct RetainPtr<NSURL> { void *m_ptr; } m_sourceURL;
  struct RetainPtr<NSURL> { void *m_ptr; } m_cachePath;
  struct RefPtr<JSC::CachedBytecode, WTF::RawPtrTraits<JSC::CachedBytecode>, WTF::DefaultRefDerefTraits<JSC::CachedBytecode>> { struct CachedBytecode *m_ptr; } m_cachedBytecode;
}

/* class methods */
+ (id)scriptOfType:(long long)type withSource:(id)source andSourceURL:(id)url andBytecodeCache:(id)cache inVirtualMachine:(id)machine error:(out id *)error;
+ (id)scriptOfType:(long long)type memoryMappedFromASCIIFile:(id)asciifile withSourceURL:(id)url andBytecodeCache:(id)cache inVirtualMachine:(id)machine error:(out id *)error;

/* instance methods */
- (id)init;
- (unsigned int)hash;
- (const void *)source;
- (struct RefPtr<JSC::CachedBytecode, WTF::RawPtrTraits<JSC::CachedBytecode>, WTF::DefaultRefDerefTraits<JSC::CachedBytecode>> { struct CachedBytecode * x0; })cachedBytecode;
- (struct SourceCode { struct RefPtr<JSC::SourceProvider, WTF::RawPtrTraits<JSC::SourceProvider>, WTF::DefaultRefDerefTraits<JSC::SourceProvider>> { struct SourceProvider * x0; } x0; int x1; int x2; struct OrdinalNumber { int x0; } x3; struct OrdinalNumber { int x0; } x4; })sourceCode;
- (void *)jsSourceCode;
- (BOOL)writeCache:(void *)cache;
- (void)readCache;
- (BOOL)cacheBytecodeWithError:(id *)error;
- (BOOL)isUsingBytecodeCache;
- (id)sourceURL;
- (long long)type;
@end

#endif /* JSScript_h */
