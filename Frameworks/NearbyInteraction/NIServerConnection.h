//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 417.0.4.0.0
//
#ifndef NIServerConnection_h
#define NIServerConnection_h
@import Foundation;

@class NSData, NSMutableDictionary, NSMutableSet, NSUUID;
@protocol OS_dispatch_queue, OS_os_log, OS_xpc_object;

@interface NIServerConnection : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  BOOL _resumed;
  BOOL _invalidated;
  NSObject<OS_xpc_object> *_conn;
  NSObject<OS_os_log> *_log;
  NSData *_tokenData;
  NSMutableSet *_peerTokens;
  NSMutableDictionary *_simulators;
  BOOL _xpcActive;
  BOOL _shouldInvalidateSessionOnXPCError;
  BOOL _isInterruptionReason_ApplicationNotVisible;
  BOOL _isDistanceUpdateRequestScheduled;
  BOOL _isAllowedToSimulateDirection;
}

@property (copy) id /* block */ interruptionHandler;
@property (copy) id /* block */ invalidationHandler;
@property (readonly) NSUUID *sessionID;
@property (retain) id exportedObject;

/* class methods */
+ (id)createOneShotConnectionAndResume:(BOOL)resume;

/* instance methods */
- (id)initWithSessionID:(id)id queue:(id)queue exportedObject:(id)object options:(unsigned long long)options;
- (void)dealloc;
- (id)remoteObjectProxy;
- (id)synchronousRemoteObjectProxy;
- (void)_simXPCSuspendIfAllowed;
- (void)_simXPCResumeIfAllowed;
- (void)_simXPCActivateIfAllowed;
- (void)_simXPCCancelAndInvalidateSessionOnError:(BOOL)error;
- (id)findUDIDForToken:(id)token;
- (void)resume;
- (void)invalidate;
- (struct { unsigned int x0[8] })auditTokenForConnection;
- (void)handleXPCConnectionError;
- (void)handleXPCConnectionInterrupted;
- (void)handleXPCConnectionTermination;
- (void)handleXPCConnectionInvalid;
- (BOOL)areContinuousUpdatesRequired;
- (id)_findSelfDeviceInUpdates:(id)updates;
- (id)_findRequestedPeerDevicesInUpdates:(id)updates;
- (void)_sendDistanceUpdateForRequestedPeer:(id)peer forPeer:(id)peer;
- (void)handleDistanceUpdate:(id)update;
- (void)requestDistanceUpdate;
- (id)discoveryTokenFromBase64EncodedString:(id)string;
- (id)nearbyObjectFromBase64EncodedString:(id)string;
- (void)removeFromPeerTokensAndNotifyIfNecessary:(id)necessary;
- (void)handleCancelToken:(id)token;
- (void)handleNewDevice:(id)device;
- (void)handleNewToken:(id)token;
- (void)handleDeviceShutdown:(id)shutdown;
- (void)handleEventFromSimulatorOnQueue:(id)queue;
- (void)handleErrorMessageFromSimulator:(id)simulator;
- (void)handleMessageFromSimulator:(id)simulator;
- (id)_internalDeviceCapabilities;
- (void)queryDeviceCapabilities:(id /* block */)capabilities;
- (void)_createAndActivateXPCConnectionToSimulatorIfNeededWithReply:(id /* block */)reply;
- (void)activate:(id /* block */)activate;
- (void)activateOnQueue:(id /* block */)queue;
- (void)runWithConfiguration:(id)configuration reply:(id /* block */)reply;
- (void)runWithConfigurationOnQueue:(id)queue reply:(id /* block */)reply;
- (void)pause:(id /* block */)pause;
- (void)pauseOnQueue:(id /* block */)queue;
- (void)generateDiscoveryToken;
- (void)notifySystemShutdownWithReason:(long long)reason reply:(id /* block */)reply;
- (void)_addObject:(id)object reply:(id /* block */)reply;
- (void)_removeObject:(id)object reply:(id /* block */)reply;
- (void)processDCKMessage:(id)dckmessage reply:(id /* block */)reply;
- (void)processBluetoothEventWithType:(long long)type btcClockTicks:(unsigned long long)ticks eventCounter:(unsigned long long)counter reply:(id /* block */)reply;
- (void)getRangingPriorityPolicy:(id /* block */)policy;
- (void)setRangingPriorityPolicy:(long long)policy reply:(id /* block */)reply;
- (double)simulateRangeError;
- (double)simulateAngleError;
- (double)randomUnivariateGaussian:(double)gaussian sigma:(double)sigma;
- (double)simulateErrorWithMaximum:(double)maximum sigma:(double)sigma maximum:(double)maximum;
@end

#endif /* NIServerConnection_h */
