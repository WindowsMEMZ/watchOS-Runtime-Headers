//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 447.0.0.0.0
//
#ifndef EAAccessoryManager_h
#define EAAccessoryManager_h
@import Foundation;

#include "EABluetoothAccessoryPicker.h"
#include "EABluetoothAccessoryPickerDelegate-Protocol.h"

@class NSArray, NSMutableArray, NSRecursiveLock, NSString, NSTimer;
@protocol OS_dispatch_queue;

@interface EAAccessoryManager : NSObject<EABluetoothAccessoryPickerDelegate> {
  /* instance variables */
  NSMutableArray *_sequesteredAccessories;
  NSString *_selectedBluetoothAddress;
  id /* block */ _pickerCompletion;
  BOOL _sequesterNewAccessories;
  NSTimer *_pickerTimer;
  NSRecursiveLock *_pickerLock;
  NSObject<OS_dispatch_queue> *_connectionQueue;
  NSString *_managerInstanceUUID;
  EABluetoothAccessoryPicker *_picker;
}

@property (readonly, nonatomic) NSArray *connectedAccessories;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)sharedAccessoryManager;
+ (void)registerCapabilities:(unsigned int)capabilities;
+ (void)accessibilityStartListening;
+ (void)accessibilityStopListening;
+ (BOOL)isLoggingEnabled;
+ (id)accessoryDictionaryForLogging:(id)logging;

/* instance methods */
- (id)init;
- (id)_initFromSingletonCreationMethod;
- (void)dealloc;
- (void)showBluetoothAccessoryPickerWithNameFilter:(id)filter completion:(id /* block */)completion;
- (void)registerForLocalNotifications;
- (void)unregisterForLocalNotifications;
- (void)_notifyObserversThatAccessoryDisconnectedWithUserInfo:(id)info;
- (void)_iapServerDied:(id)died;
- (void)_applicationDidEnterBackground:(id)background;
- (id)_findExtraAccessoriesContainedOnlyIniAP:(id)ap;
- (id)_findExtraAccessoriesContainedOnlyInEA:(id)ea;
- (void)_checkForConnectedAccessories:(BOOL)accessories backgroundTaskIdentifier:(unsigned long long)identifier;
- (void)_cleanUpForTaskSuspendWithTaskIdentifier:(unsigned long long)identifier;
- (void)_applicationWillEnterForeground:(id)foreground;
- (void)_externalAccessoryReconnected:(id)reconnected;
- (void)_removeAlliAPAccessoriesFromArray:(id)array notifyClients:(BOOL)clients;
- (void)_externalAccessoryConnectedNotificationHandler:(id)handler;
- (void)_externalAccessoryConnected:(id)connected;
- (void)_externalAccessoryUpdated:(id)updated;
- (void)_pointOfInterestStatusReceived:(id)received;
- (void)_OOBBTPairingCompletionStatusReceived:(id)received;
- (void)_externalAccessoryDisconnected:(id)disconnected;
- (id)availableAccessories;
- (void)_locationNmeaDataAvailable:(id)available;
- (void)_locationPointDataAvailable:(id)available;
- (void)_ephemerisURLAvailable:(id)urlavailable;
- (void)_nmeaFilteringSupportChanged:(id)changed;
- (void)_gpsTimeRequested:(id)requested;
- (void)_vehicleDataUpdated:(id)updated;
- (void)_cameraInfoUpdated:(id)updated;
- (void)_integrateSequesteredAccessories;
- (void)_handleAccessoryNotificationTimeout:(id)timeout;
- (void)_timeSyncInfoUpdated:(id)updated;
- (void)openCompleteForSession:(unsigned int)session connectionID:(unsigned int)id;
- (void)endSession:(unsigned int)session forConnectionID:(unsigned int)id;
- (void)wakeAccessoryWithToken:(id)token;
- (BOOL)appDeclaresProtocol:(id)protocol;
- (id)_connectedAccessories;
- (BOOL)shouldAllowInternalProtocols;
- (void)setShouldAllowInternalProtocols:(BOOL)protocols;
- (BOOL)shouldAllowCppRuntime;
- (void)setShouldAllowCppRuntime:(BOOL)runtime;
- (void)accessibilityAction:(id)action;
- (void)accessibilityContextChange:(id)change;
- (void)accessibilityItemPropertyRequest:(id)request;
- (void)accessibilitySystemPropertyChange:(id)change;
- (void)accessibilitySystemPropertyRequest:(id)request;
- (BOOL)areLocationAccessoriesEnabled;
- (void)setAreLocationAccessoriesEnabled:(BOOL)enabled;
- (void)sendGPRMCDataStatus:(BOOL)status ValueV:(BOOL)v ValueX:(BOOL)x forUUID:(id)uuid;
- (void)pointOfInterestSelection:(id)selection;
- (BOOL)destinationInformation:(id)information forAccessoryUUID:(id)uuid;
- (void)initiateConnectionToIPAccessory:(id)ipaccessory;
- (void)disconnectIPAccessory:(id)ipaccessory;
- (void)startIPAccessoryDiscovery;
- (void)stopIPAccessoryDiscovery;
- (void)devicePicker:(id)picker didSelectAddress:(id)address errorCode:(long long)code;
- (void)createEASessionForProtocol:(id)protocol accessoryUUID:(id)uuid withReply:(id /* block */)reply;
- (void)closeEASessionForEASessionUUID:(id)uuid;
- (void)accessoryClosedEASession:(id)easession;
- (void)handleIncomingExternalAccessoryData:(id)data forEASessionIdentifier:(id)identifier withReply:(id /* block */)reply;
- (void)closeInputStreamForEASessionUUID:(id)uuid;
- (void)resumeEASessionData:(id)data;
- (void)saveEASession:(id)easession forEASessionUUID:(id)uuid;
- (void)sendOutgoingEAData:(id)eadata forSessionUUID:(id)uuid;
- (void)openSessionFromAccessoryToApp:(id)app;
- (void)openSessionFromAppToAccessory:(id)accessory;
- (void)startLocationForConnectedAccessories;
- (void)sendNMEAFilterList:(id)list forUUID:(id)uuid;
- (void)stopLocationForConnectedAccessories;
- (BOOL)processIDIsUsingAccessory:(struct __CFString *)accessory;
- (id)authCertForLegacyConnectionID:(unsigned int)id;
- (id)authCertSerialNumberForLegacyConnectionID:(unsigned int)id;
- (void)requestIAPAccessoryWiFiCredentials:(id)credentials;
- (id)currentVehicleInformation:(id)information;
- (void)sendDeviceIdentifierNotification:(id)notification usbIdentifier:(id)identifier forUUID:(id)uuid;
- (void)sendWiredCarPlayAvailable:(id)available usbIdentifier:(id)identifier wirelessCarPlayAvailable:(id)available bluetoothIdentifier:(id)identifier forUUID:(id)uuid;
@end

#endif /* EAAccessoryManager_h */
