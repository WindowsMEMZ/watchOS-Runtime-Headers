//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKUserLocationView_h
#define MKUserLocationView_h
@import Foundation;

#include "MKAnnotationView.h"
#include "_MKUserLocationView.h"

@interface MKUserLocationView : MKAnnotationView {
  /* instance variables */
  BOOL _selected;
}

@property (retain, nonatomic) _MKUserLocationView *mkUserLocationView;

/* instance methods */
- (id)initWithAnnotation:(id)annotation reuseIdentifier:(id)identifier;
- (void)setAnnotation:(id)annotation;
- (float)_selectionPriority;
- (void)_setSelectionPriority:(float)priority;
- (struct CGPoint { double x0; double x1; })centerOffset;
- (void)setCenterOffset:(struct CGPoint { double x0; double x1; })offset;
- (BOOL)canShowCallout;
- (void)setCanShowCallout:(BOOL)callout;
- (struct CGPoint { double x0; double x1; })calloutOffset;
- (void)setCalloutOffset:(struct CGPoint { double x0; double x1; })offset;
- (struct CGPoint { double x0; double x1; })leftCalloutOffset;
- (void)setLeftCalloutOffset:(struct CGPoint { double x0; double x1; })offset;
- (struct CGPoint { double x0; double x1; })rightCalloutOffset;
- (void)setRightCalloutOffset:(struct CGPoint { double x0; double x1; })offset;
- (id)leftCalloutAccessoryView;
- (void)setLeftCalloutAccessoryView:(id)view;
- (id)rightCalloutAccessoryView;
- (void)setRightCalloutAccessoryView:(id)view;
- (id)detailCalloutAccessoryView;
- (void)setDetailCalloutAccessoryView:(id)view;
- (BOOL)_allowedToShowCallout;
- (BOOL)isSelected;
- (void)_setSelected:(BOOL)selected animated:(BOOL)animated;
- (BOOL)isDraggable;
- (void)prepareForReuse;
- (void)prepareForDisplay;
- (void)_setMapType:(unsigned long long)type;
- (void)_setMapDisplayStyle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; })style;
- (void)_updateFromMap;
- (void)_setMapPitchRadians:(double)radians;
- (void)_setMapRotationRadians:(double)radians;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_mapkit_visibleRect;
- (id)_lastLocation;
- (void)_updateStateFromLocation:(id)location duration:(double)duration;
- (void)_locationManagerFailedToUpdateLocation;
- (BOOL)_isStale;
- (BOOL)_shouldDisplayHeading;
- (void)_setShouldDisplayHeading:(BOOL)heading;
- (BOOL)_canShowHeadingIndicator;
- (void)_setCanShowHeadingIndicator:(BOOL)indicator;
- (double)_heading;
- (void)_setHeading:(double)heading;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_annotationTrackingInsets;
- (long long)_headingIndicatorStyle;
- (void)_setHeadingIndicatorStyle:(long long)style;
- (BOOL)_allowsPulse;
- (void)_setAllowsPulse:(BOOL)pulse;
- (BOOL)_shouldInnerPulse;
- (void)_setShouldInnerPulse:(BOOL)pulse;
- (BOOL)_shouldShowOuterRing;
- (void)_setShouldShowOuterRing:(BOOL)ring;
- (BOOL)_allowsAccuracyRing;
- (void)_setAllowsAccuracyRing:(BOOL)ring;
- (double)_maxRadiusToShowAccuracyRing;
- (void)_setMaxRadiusToShowAccuracyRing:(double)ring;
- (double)_puckAlpha;
- (void)_setPuckAlpha:(double)alpha;
- (double)_accuracyRingAlpha;
- (void)_setAccuracyRingAlpha:(double)alpha;
- (void)_setPuckScale:(double)scale;
- (id)_innerImageMask;
- (void)_setInnerImageMask:(id)mask;
- (BOOL)_rotateInnerImageToMatchCourse;
- (void)_setRotateInnerImageToMatchCourse:(BOOL)course;
- (id)_mkUserLocationView;
- (void)_setMKUserLocationView:(id)view;
@end

#endif /* MKUserLocationView_h */
