//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef _MKUserTrackingButton_h
#define _MKUserTrackingButton_h
@import Foundation;

#include "UIButton.h"
#include "MKMapView.h"
#include "MKUserTrackingButtonTarget-Protocol.h"
#include "_MKUserTrackingButtonController.h"

@class NSMutableDictionary, NSString;
@protocol MKUserTrackingView;

@interface _MKUserTrackingButton : UIButton<MKUserTrackingButtonTarget> {
  /* instance variables */
  NSMutableDictionary *_customImages;
  NSMutableDictionary *_customLandscapeImagePhones;
  NSMutableDictionary *_customImageEdgeInsets;
  BOOL _explicitlyEnabled;
  BOOL _internallyEnabled;
  BOOL _applyDefaultImageIfNeeded;
}

@property (readonly, nonatomic) _MKUserTrackingButtonController *controller;
@property (nonatomic) BOOL selectsWhenTracking;
@property (weak, nonatomic) MKMapView *mapView;
@property (weak, nonatomic) NSObject<MKUserTrackingView> *userTrackingView;
@property (readonly, nonatomic) BOOL inMiniBar;
@property (readonly, nonatomic) unsigned long long behavior;
@property (nonatomic) unsigned long long controlSize;
@property (nonatomic) BOOL disablesStateChangeAnimations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)buttonWithMapView:(id)view;
+ (id)buttonWithMapView:(id)view applyDefaultImageIfNeeded:(BOOL)needed;
+ (id)buttonWithUserTrackingView:(id)view;
+ (id)buttonWithUserTrackingView:(id)view withType:(long long)type;
+ (id)buttonWithUserTrackingView:(id)view withType:(long long)type applyDefaultImageIfNeeded:(BOOL)needed;
+ (Class)_activityIndicatorClass;

/* instance methods */
- (void)traitEnvironment:(id)environment didChangeTraitCollection:(id)collection;
- (id)_imageForState:(long long)state controlState:(unsigned long long)state;
- (id)_defaultImageForUserTrackingMode:(long long)mode controlState:(unsigned long long)state;
- (id)_imageForUserTrackingMode:(long long)mode controlState:(unsigned long long)state;
- (void)_setImage:(id)image forUserTrackingMode:(long long)mode controlState:(unsigned long long)state;
- (id)_defaultLandscapeImagePhoneForUserTrackingMode:(long long)mode controlState:(unsigned long long)state;
- (id)_landscapeImagePhoneForUserTrackingMode:(long long)mode controlState:(unsigned long long)state;
- (void)_setLandscapeImagePhone:(id)phone forUserTrackingMode:(long long)mode controlState:(unsigned long long)state;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_imageEdgeInsetsForUserTrackingMode:(long long)mode;
- (void)_setImageEdgeInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets forUserTrackingMode:(long long)mode;
- (long long)_activityIndicatorStyle;
- (BOOL)_isHighlightedForState:(long long)state;
- (void)_updateForState:(long long)state;
- (long long)_state;
- (void)_setState:(long long)state;
- (void)_repositionViews;
- (struct CGSize { double x0; double x1; })sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (void)updateForMiniBarState:(BOOL)state;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_selectedIndicatorBounds;
- (void)setEnabled:(BOOL)enabled;
- (void)_setInternallyEnabled:(BOOL)enabled;
- (BOOL)_selectsWhenTracking;
- (void)_setSelectsWhenTracking:(BOOL)tracking;
@end

#endif /* _MKUserTrackingButton_h */
