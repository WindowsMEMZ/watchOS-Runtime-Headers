//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKWalkingRadiusView_h
#define MKWalkingRadiusView_h
@import Foundation;

#include "UIView.h"
#include "WalkingRadiusDelegate-Protocol.h"

@class NSMeasurement, NSMutableAttributedString, NSString, UIImage, UILabel;
@protocol UIView<MKWalkingRadiusTextUpdatable;

@interface MKWalkingRadiusView : UIView {
  /* instance variables */
  double _walkingSpeed;
  long long _upperBound;
  long long _lowerBound;
  double _radius;
  struct CGSize { double width; double height; } _lastSize;
  UILabel *_imageLabel;
  NSMutableAttributedString *_attributedString;
  id _modeListener;
  id _speedListener;
  id _upperBoundListener;
  id _lowerBoundListener;
  id /* block */ _contentDrawnBlock;
  struct CGSize { double width; double height; } _lastDrawnSize;
  double _lastDrawnRadius;
  double _lastStartAngle;
  double _lastEndAngle;
  NSMeasurement *_measurement;
}

@property (retain, nonatomic) UIImage *image;
@property (nonatomic) unsigned long long mode;
@property (nonatomic) double distance;
@property (copy, nonatomic) NSString *text;
@property (weak, nonatomic) NSObject<WalkingRadiusDelegate> *delegate;
@property (nonatomic) BOOL visible;
@property (retain, nonatomic) UIView<MKWalkingRadiusTextUpdatable> *textView;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame contentDrawnBlock:(id /* block */)block;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (void)willMoveToSuperview:(id)superview;
- (void)layoutSubviews;
- (void)updateHostingTextViewIfNeeded;
- (void)drawRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)_setMode:(unsigned long long)mode;
- (void)_updateWalkingSpeed:(double)speed;
- (void)_updateUpperBound:(long long)bound;
- (void)_updateLowerBound:(long long)bound;
- (void)_updateTextIfNecessary;
- (void)_updateText;
- (id)clampMeasurement:(double)measurement;
- (BOOL)isWithinDistanceBoundsForDistance:(double)distance;
- (BOOL)isVisible;
@end

#endif /* MKWalkingRadiusView_h */
