//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKMapCamera_h
#define MKMapCamera_h
@import Foundation;

#include "MKMapView.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@interface MKMapCamera : NSObject<NSSecureCoding, NSCopying> {
  /* instance variables */
  MKMapView *_mapView;
  BOOL _pitchAdjustsAltitude;
  BOOL _needsStateUpdate;
}

@property (nonatomic) double precisePitch;
@property (nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } centerCoordinate;
@property (nonatomic) double centerCoordinateDistance;
@property (nonatomic) double heading;
@property (nonatomic) double pitch;
@property (nonatomic) double altitude;

/* class methods */
+ (id)camera;
+ (id)cameraLookingAtCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate fromEyeCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate eyeAltitude:(double)altitude;
+ (id)cameraLookingAtCenterCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate fromDistance:(double)distance pitch:(double)pitch heading:(double)heading;
+ (id)cameraLookingAtMapItem:(id)item forViewSize:(struct CGSize { double x0; double x1; })size allowPitch:(BOOL)pitch;
+ (struct CLLocationCoordinate2D { double x0; double x1; })_adjustCoordinateForPitch:(struct CLLocationCoordinate2D { double x0; double x1; })pitch heading:(double)heading pitch:(double)pitch minimumPitchRequiredForAdjustment:(double)adjustment tolerance:(double)tolerance;
+ (unsigned long long)_sizeCategoryForViewSize:(struct CGSize { double x0; double x1; })size;
+ (id)_cameraLookingAtGEOMapRect:(const struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } *)rect aspectRatio:(float)ratio;
+ (id)_cameraLookingAtMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect forViewSize:(struct CGSize { double x0; double x1; })size;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })_enclosingGEOMapRectForAspectRatio:(float)ratio;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })enclosingMapRectForAspectRatio:(float)ratio;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isEqual:(id)equal;
- (id)_mapView;
- (void)_setMapView:(id)view;
- (void)_mapViewStateChanged;
- (void)_setPrecisePitch:(double)pitch;
- (void)_updateState;
- (id)description;
- (BOOL)_validate;
- (double)_precisePitch;
@end

#endif /* MKMapCamera_h */
