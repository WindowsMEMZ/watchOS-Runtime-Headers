//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKOverlayPathRenderer_h
#define MKOverlayPathRenderer_h
@import Foundation;

#include "MKOverlayRenderer.h"
#include "MKUsageCounter.h"

@class NSArray, NSMutableDictionary, UIColor;

@interface MKOverlayPathRenderer : MKOverlayRenderer {
  /* instance variables */
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _runningVectorGeometryAnimationsLock;
  NSMutableDictionary *_runningVectorGeometryAnimations;
}

@property (readonly, nonatomic) BOOL externalSubclassOverridesDrawingMethods;
@property (weak, nonatomic) MKUsageCounter *usageCounter;
@property (retain) UIColor *fillColor;
@property (retain) UIColor *strokeColor;
@property double lineWidth;
@property int lineJoin;
@property int lineCap;
@property double miterLimit;
@property double lineDashPhase;
@property (copy) NSArray *lineDashPattern;
@property (nonatomic) BOOL shouldRasterize;
@property struct CGPath * path;

/* class methods */
+ (Class)_mapkitLeafClass;
+ (BOOL)_externalSubclassOverridesDrawingMethods;

/* instance methods */
- (BOOL)_canProvideVectorGeometry;
- (void)_performInitialConfiguration;
- (void)_animateVectorGeometryIfNecessaryForKey:(id)key withStepHandler:(id /* block */)handler;
- (void)_decodePropertiesWithCoder:(id)coder;
- (void)_encodePropertiesWithCoder:(id)coder;
- (id)initWithOverlay:(id)overlay;
- (void)createPath;
- (void)invalidatePath;
- (void)applyStrokePropertiesToContext:(struct CGContext *)context atZoomScale:(double)scale;
- (void)applyFillPropertiesToContext:(struct CGContext *)context atZoomScale:(double)scale;
- (void)strokePath:(struct CGPath *)path inContext:(struct CGContext *)context;
- (void)fillPath:(struct CGPath *)path inContext:(struct CGContext *)context;
- (void)drawMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect zoomScale:(double)scale inContext:(struct CGContext *)context;
- (BOOL)canDrawMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect zoomScale:(double)scale;
- (void)dealloc;
- (BOOL)_externalSubclassOverridesDrawingMethods;
- (id)_usageCounter;
- (void)_setUsageCounter:(id)counter;
@end

#endif /* MKOverlayPathRenderer_h */
