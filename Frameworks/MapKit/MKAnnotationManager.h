//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKAnnotationManager_h
#define MKAnnotationManager_h
@import Foundation;

#include "MKAnnotation-Protocol.h"
#include "MKAnnotationManagerDelegate-Protocol.h"
#include "MKAnnotationMarkerContainer-Protocol.h"
#include "MKAnnotationRepresentation-Protocol.h"
#include "MKAnnotationView.h"
#include "MKQuadTrie.h"

@class NSArray, NSHashTable, NSMapTable, NSMutableDictionary, NSMutableSet, NSTimer;

@interface MKAnnotationManager : NSObject {
  /* instance variables */
  NSTimer *_updateVisibleTimer;
  NSHashTable *_visibleAnnotations;
  NSMutableSet *_pendingAnnotations;
  NSMutableSet *_disallowAnimationAnnotations;
  NSMutableSet *_invalidCoordinateAnnotations;
  NSObject<MKAnnotation> *_selectedAnnotation;
  NSMapTable *_annotationsToRepresentations;
  NSMapTable *_reusableAnnotationRepresentations;
  NSMutableSet *_pendingRemovalAnnotationRepresentations;
  NSMutableDictionary *_registeredIdentifierToRepresentationClasses;
  NSHashTable *_allClusterAnnotations;
  BOOL _isChangingCoordinate;
  BOOL _isDeferringContainerSelection;
  BOOL _deferredContainerSelectionAnimated;
  MKAnnotationView *_userLocationView;
}

@property (weak, nonatomic) NSObject<MKAnnotationMarkerContainer> *container;
@property (weak, nonatomic) NSObject<MKAnnotationManagerDelegate> *delegate;
@property (nonatomic) BOOL annotationRepresentationsAreAddedImmediately;
@property (weak, nonatomic) NSObject<MKAnnotation> *draggedAnnotation;
@property (readonly, weak, nonatomic) NSObject<MKAnnotationRepresentation> *selectedAnnotationRepresentation;
@property (readonly, nonatomic) NSArray *annotationRepresentations;
@property (readonly, nonatomic) NSArray *annotations;

/* instance methods */
- (id)init;
- (void)dealloc;
- (void)_setupUpdateVisibleAnnotationsTimer;
- (void)_addAnnotation:(id)annotation updateVisible:(BOOL)visible;
- (void)addAnnotation:(id)annotation;
- (void)addAnnotation:(id)annotation allowAnimation:(BOOL)animation;
- (void)addAnnotations:(id)annotations;
- (id)addRepresentationForAnnotation:(id)annotation;
- (void)_removeAnnotation:(id)annotation updateVisible:(BOOL)visible removeFromContainer:(BOOL)container;
- (void)removeAnnotation:(id)annotation;
- (void)removeAnnotation:(id)annotation updateVisible:(BOOL)visible;
- (void)removeAnnotations:(id)annotations;
- (void)replaceAnnotation:(id)annotation withAnnotation:(id)annotation;
- (void)addRepresentationsForAnnotations:(id)annotations;
- (id)dequeueReusableAnnotationRepresentationWithIdentifier:(id)identifier;
- (void)registerClass:(Class)class forRepresentationReuseIdentifier:(id)identifier;
- (BOOL)containsAnnotation:(id)annotation;
- (id)annotationsInMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (void)showAnnotationsInMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (void)updateVisibleAnnotations;
- (void)selectAnnotation:(id)annotation animated:(BOOL)animated;
- (void)_annotationDidChangeState:(id)state animated:(BOOL)animated;
- (void)deselectAnnotation:(id)annotation animated:(BOOL)animated;
- (id)representationForAnnotation:(id)annotation;
- (BOOL)annotationIsInternal:(id)internal;
- (id)newInternalAnnotationRepresentationForInternalAnnotation:(id)annotation;
- (void)configureAnnotationRepresentation:(id)representation forAnnotation:(id)annotation;
- (void)configureDefaultAnnotationRepresentation:(id)representation forAnnotation:(id)annotation;
- (id)_addRepresentationForAnnotation:(id)annotation;
- (void)cleanUpAnnotationRepresentationForRemoval:(id)removal;
- (void)_removeRepresentationForAnnotation:(id)annotation fromCull:(BOOL)cull;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
@end

#endif /* MKAnnotationManager_h */
