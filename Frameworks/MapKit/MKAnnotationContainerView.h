//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKAnnotationContainerView_h
#define MKAnnotationContainerView_h
@import Foundation;

#include "UIView.h"
#include "MKAnnotationContainerViewDelegate-Protocol.h"
#include "MKAnnotationView.h"
#include "MKPinAnnotationView.h"
#include "MKPriorityToIndexMap.h"
#include "VKCustomFeatureDataSource-Protocol.h"
#include "_MKPinAnnotationViewDelegate-Protocol.h"

@class NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString;

@interface MKAnnotationContainerView : UIView<VKCustomFeatureDataSource, _MKPinAnnotationViewDelegate> {
  /* instance variables */
  NSMutableDictionary *_clusteringAnnotationViews;
  NSMutableArray *_customFeatureDataSourceObservers;
  NSMutableArray *_awaitingDropPins;
  MKAnnotationView *_selectedAnnotationView;
  MKAnnotationView *_annotationViewToSelect;
  struct CGPoint { double x; double y; } _previousMouseDragPoint;
  double _previousMouseDragTimeStamp;
  struct CGPoint { double x; double y; } _mouseDownPoint;
  struct CGPoint { double x; double y; } _draggingAnnotationViewCenter;
  BOOL _clickedOnAnnotationView;
  BOOL _didDragAnnotationView;
  double _annotationViewsRotationRadians;
  struct CGAffineTransform { double a; double b; double c; double d; double tx; double ty; } _mapTransform;
  NSMutableArray *_pinsToAnimate;
  double _mapPitchRadians;
  struct { unsigned char timePeriod; unsigned char overlayType; unsigned char applicationState; unsigned char searchResultsType; BOOL mapHasLabels; } _mapDisplayStyle;
  BOOL _suppress;
  BOOL _isUpdating;
  NSMutableDictionary *_existingClusterAnnotationViews;
  MKPriorityToIndexMap *_priorityMap;
  NSMutableSet *_prioritiesToAdd;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) MKPinAnnotationView *bubblePin;
@property (nonatomic) BOOL suppressCallout;
@property (readonly, nonatomic) MKAnnotationView *userLocationView;
@property (readonly, nonatomic) MKAnnotationView *draggingAnnotationView;
@property (weak, nonatomic) NSObject<MKAnnotationContainerViewDelegate> *delegate;
@property (readonly, nonatomic) NSMutableOrderedSet *annotationViews;
@property (nonatomic) unsigned long long mapType;
@property (readonly, nonatomic) struct { long long x0; struct CLLocationCoordinate2D { double x0; double x1; } x1; struct CGPoint { double x0; double x1; } x2; struct CGPoint { double x0; double x1; } x3; id x4; BOOL x5; } currentComparisonContext;
@property (readonly, nonatomic) BOOL hasDroppingPins;
@property (readonly, nonatomic) BOOL hasPendingAnimations;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (void)invalidateCustomFeatureDataSourceRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (void)invalidateCustomFeatureDataSource;
- (void)addObserver:(id)observer;
- (void)removeObserver:(id)observer;
- (BOOL)isClusteringEnabled;
- (id)clusterStyleAttributes;
- (void)getClusterAnnotationTextForClusterFeatureCount:(unsigned long long)count text:(id *)text locale:(id *)locale;
- (void)getClusterImageTextForClusterFeatureCount:(unsigned long long)count text:(id *)text locale:(id *)locale;
- (unsigned char)sceneID;
- (unsigned char)sceneState;
- (id)annotationsInMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (id)globalAnnotations;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)dealloc;
- (void)setMapPitchRadians:(double)radians;
- (void)setMapDisplayStyle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; })style;
- (BOOL)calloutContainsPoint:(struct CGPoint { double x0; double x1; })point;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleCenteringRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleCenteringRectInView:(id)view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_visibleRect;
- (void)visibleCenteringRectChanged;
- (void)setAnnotationViewsRotationRadians:(double)radians animation:(id)animation;
- (void)removeAnnotationViewsRotationAnimations;
- (void)updateCalloutStateForSelectedAnnotationView:(id)view;
- (void)deselectAnnotationView:(id)view animated:(BOOL)animated;
- (void)updateAnnotationViewsForReason:(long long)reason;
- (void)_updateAnnotationViewsForReason:(long long)reason updatePositions:(BOOL)positions;
- (struct CLLocationCoordinate2D { double x0; double x1; })coordinateForAnnotationView:(id)view;
- (struct CGPoint { double x0; double x1; })pointForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate;
- (void)updateAnnotationView:(id)view;
- (void)updateUserLocationView;
- (id)_annotationViewForSelectionAtPoint:(struct CGPoint { double x0; double x1; })point avoidCurrent:(BOOL)current maxDistance:(double)distance;
- (id)annotationViewForPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_liftForDragging:(id)dragging mouseDownPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_draggingAnnotationViewDidPause:(id)pause;
- (void)draggingTouchMovedToPoint:(struct CGPoint { double x0; double x1; })point edgeInsets:(struct UIEdgeInsets { double x0; double x1; double x2; double x3; })insets;
- (struct CGPoint { double x0; double x1; })draggingAnnotationViewDropPoint;
- (struct CGPoint { double x0; double x1; })draggingAnnotationViewDropPointForPoint:(struct CGPoint { double x0; double x1; })point;
- (void)_dropDraggingAnnotationViewAnimated:(BOOL)animated;
- (void)pinDidDrop:(id)drop animated:(BOOL)animated;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })accessoryPadding;
- (void)_dropPinsIfNeeded:(BOOL)needed;
- (void)_willRemoveInternalAnnotationView:(id)view;
- (void)addAnnotationView:(id)view allowAnimation:(BOOL)animation;
- (void)finishAddingAndRemovingAnnotationViews;
- (void)removeAnnotationView:(id)view;
- (void)dropPinsIfNeeded;
- (void)selectAnnotationView:(id)view animated:(BOOL)animated;
- (void)annotationViewDidChangeZPriority:(id)zpriority;
- (void)annotationViewDidChangeHidden:(id)hidden;
- (void)annotationViewDidChangeMetrics:(id)metrics;
- (void)_updateZPositionForAnnotationView:(id)view inBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)_addPrioritiesForAnnotationViewIfNeeded:(id)needed;
- (BOOL)_updatePriorityMapIfNeeded;
- (void)transitionTo:(long long)to;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })_mapRectWithFraction:(double)fraction ofVisible:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })visible;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (void)_updateAnnotationView:(id)view;
- (BOOL)_updateAnnotationViews:(id)views;
- (void)suppressUpdates;
- (void)stopSuppressingUpdates;
- (BOOL)_updateAnnotationViewPositions;
- (void)_performStateUpdatesIfNeeded;
@end

#endif /* MKAnnotationContainerView_h */
