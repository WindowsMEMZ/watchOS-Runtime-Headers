//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKOverlayContainerView_h
#define MKOverlayContainerView_h
@import Foundation;

#include "UIView.h"
#include "MKMapView.h"
#include "MKOverlayContainerViewDelegate-Protocol.h"

@class NSArray, NSMapTable;

@interface MKOverlayContainerView : UIView {
  /* instance variables */
  NSMapTable *_internalOverlayToProvider;
  NSMapTable * _overlayToDrawable[2];
  NSMutableArray * _drawables[2];
  NSMutableArray * _vkOverlays[2];
  UIView * _viewContainers[2];
}

@property (weak, nonatomic) NSObject<MKOverlayContainerViewDelegate> *delegate;
@property (weak, nonatomic) MKMapView *mapView;
@property (nonatomic) double mapZoomScale;
@property (readonly, nonatomic) BOOL supportsElevation;
@property (readonly, nonatomic) BOOL requiresModernMap;
@property (readonly, nonatomic) NSArray *overlays;
@property (readonly, nonatomic) NSArray *allDrawables;

/* class methods */
+ (long long)_defaultOverlayLevel;

/* instance methods */
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (BOOL)pointInside:(struct CGPoint { double x0; double x1; })inside withEvent:(id)event;
- (id)_viewContainerForLevel:(long long)level;
- (long long)_drawableIndexForDrawable:(id)drawable level:(long long)level;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })_mapRectWithFractionOfVisible:(double)visible;
- (void)_configureAndAddDrawable:(id)drawable forOverlay:(id)overlay level:(long long)level;
- (id)_considerAddingDrawable:(id)drawable inAddRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect level:(long long)level;
- (void)addAndRemoveOverlayViews;
- (void)addOverlay:(id)overlay level:(long long)level;
- (void)addInternalOverlay:(id)overlay level:(long long)level provider:(id)provider;
- (void)addOverlays:(id)overlays level:(long long)level;
- (void)addOverlay:(id)overlay;
- (void)addOverlays:(id)overlays;
- (long long)_levelForOverlay:(id)overlay exists:(BOOL *)exists;
- (void)removeOverlay:(id)overlay;
- (void)removeOverlays:(id)overlays;
- (void)insertOverlay:(id)overlay atIndex:(unsigned long long)index level:(long long)level;
- (void)insertOverlay:(id)overlay atIndex:(unsigned long long)index;
- (void)_exchangeOverlayAtIndex:(unsigned long long)index withOverlayAtIndex:(unsigned long long)index level:(long long)level;
- (void)exchangeOverlayAtIndex:(unsigned long long)index withOverlayAtIndex:(unsigned long long)index;
- (void)exchangeOverlay:(id)overlay withOverlay:(id)overlay;
- (void)insertOverlay:(id)overlay aboveOverlay:(id)overlay;
- (void)insertOverlay:(id)overlay belowOverlay:(id)overlay;
- (unsigned long long)_overlayCount;
- (id)overlaysInLevel:(long long)level;
- (id)drawableForOverlay:(id)overlay;
- (void)_removeDrawable:(id)drawable forOverlay:(id)overlay level:(long long)level;
- (void)_updateContentScale:(id)scale;
- (void)_insertDrawable:(id)drawable forOverlay:(id)overlay atIndex:(long long)index level:(long long)level;
- (void)didMoveToWindow;
- (void)_flexTerrainIfNeeded;
- (void)_unFlexTerrainIfNeeded;
- (id)_allOverlays;
@end

#endif /* MKOverlayContainerView_h */
