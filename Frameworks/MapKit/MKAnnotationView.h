//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKAnnotationView_h
#define MKAnnotationView_h
@import Foundation;

#include "UIView.h"
#include "MKAnnotation-Protocol.h"
#include "MKAnnotationRepresentation-Protocol.h"
#include "MKAnnotationView.h"
#include "MKCalloutView.h"
#include "MKLocatableObject-Protocol.h"
#include "MKUsageCounter.h"
#include "MKUserLocationAnnotationViewProxy.h"
#include "_MKAnnotationViewAnchor.h"
#include "_MKAnnotationViewCustomFeatureAnnotation.h"
#include "_MKKVOProxy.h"
#include "_MKKVOProxyDelegate-Protocol.h"
#include "_MKStaticMapView.h"

@class CALayer, GEORouteMatch, NSMutableArray, NSString, UIImage, UIView, VKAnchorWrapper;

@interface MKAnnotationView : UIView<_MKKVOProxyDelegate, MKAnnotationRepresentation, MKLocatableObject> {
  /* instance variables */
  struct CLLocationCoordinate2D { double latitude; double longitude; } _presentationCoordinate;
  double _presentationCourse;
  id /* block */ _presentationCoordinateChangedCallback;
  MKUserLocationAnnotationViewProxy *_userLocationProxy;
  double _rotationRadians;
  GEORouteMatch *_routeMatch;
  unsigned long long _hiddenReasons;
  NSMutableArray *_hiddenCompletionBlocks;
  double _realAlpha;
  struct CGPoint { double x; double y; } _realOffset;
  _MKKVOProxy *_annotationObserver;
  _MKAnnotationViewCustomFeatureAnnotation *_customFeatureAnnotation;
  BOOL _subclassImplementsAlignmentRectInsets;
  BOOL _wantsViewBasedPositioning;
  MKCalloutView *_calloutView;
  unsigned long long _mapType;
  unsigned long long _zIndex;
  struct { unsigned int x :1 pendingSelectionAnimated; unsigned int x :1 disabled; unsigned int x :1 selected; unsigned int x :1 canShowCallout; unsigned int x :1 isHighlighted; unsigned int x :1 canDisplayDisclosureInCallout; unsigned int x :1 canDisplayPlacemarkInCallout; unsigned int x :1 draggable; unsigned int x :1 customTransformApplied; unsigned int x :1 internalTransformApplied; unsigned int x :1 animatingToCoordinate; unsigned int x :1 tracking; unsigned int x :1 pendingOffsetAnimation; unsigned int x :1 pendingHideAnimation; unsigned int x :2 setSelectState; } _flags;
  CALayer *_imageLayer;
  BOOL _animatingToCoordinate;
  BOOL _tracking;
  double _direction;
}

@property (retain, nonatomic) MKCalloutView *_calloutView;
@property (nonatomic) BOOL pendingSelectionAnimated;
@property (weak, nonatomic) _MKStaticMapView *staticMapView;
@property (readonly, nonatomic) BOOL allowedToShowCallout;
@property (readonly, nonatomic) VKAnchorWrapper *anchor;
@property (readonly, nonatomic) struct CGPoint { double x0; double x1; } anchorPoint;
@property (weak, nonatomic) MKUsageCounter *usageCounter;
@property (retain, nonatomic) GEORouteMatch *_routeMatch;
@property (readonly, nonatomic) MKUserLocationAnnotationViewProxy *_userLocationProxy;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } collisionAlignmentRectInsets;
@property (readonly, nonatomic) BOOL selectable;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } significantBounds;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } _significantFrame;
@property (nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } annotationTrackingInsets;
@property (nonatomic) unsigned long long allowedCalloutEdges;
@property (nonatomic) struct CGPoint { double x0; double x1; } bottomCalloutOffset;
@property (nonatomic) BOOL shouldKeepCalloutVisible;
@property (nonatomic) double _direction;
@property (nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } _presentationCoordinate;
@property (copy, nonatomic) id /* block */ _presentationCoordinateChangedCallback;
@property (nonatomic) double _presentationCourse;
@property (nonatomic) BOOL _animatingToCoordinate;
@property (nonatomic) BOOL _tracking;
@property (nonatomic) struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; } mapDisplayStyle;
@property (nonatomic) float selectionPriority;
@property (nonatomic) double mapRotationRadians;
@property (nonatomic) double mapPitchRadians;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } collisionFrame;
@property (readonly, nonatomic) struct UIEdgeInsets { double x0; double x1; double x2; double x3; } defaultCollisionAlignmentRectInsets;
@property (nonatomic) BOOL skipDrawingForSnapshots;
@property (nonatomic) long long calloutStyle;
@property (nonatomic) long long titleVisibility;
@property (nonatomic) long long subtitleVisibility;
@property (nonatomic) unsigned long long featureId;
@property (readonly, nonatomic) NSString *reuseIdentifier;
@property (retain, nonatomic) NSObject<MKAnnotation> *annotation;
@property (retain, nonatomic) UIImage *image;
@property (nonatomic) struct CGPoint { double x0; double x1; } centerOffset;
@property (nonatomic) struct CGPoint { double x0; double x1; } calloutOffset;
@property (nonatomic) struct CGPoint { double x0; double x1; } leftCalloutOffset;
@property (nonatomic) struct CGPoint { double x0; double x1; } rightCalloutOffset;
@property (nonatomic) BOOL enabled;
@property (nonatomic) BOOL highlighted;
@property (nonatomic) BOOL selected;
@property (nonatomic) BOOL canShowCallout;
@property (retain, nonatomic) UIView *leftCalloutAccessoryView;
@property (retain, nonatomic) UIView *rightCalloutAccessoryView;
@property (retain, nonatomic) UIView *detailCalloutAccessoryView;
@property (nonatomic) BOOL draggable;
@property (nonatomic) unsigned long long dragState;
@property (copy, nonatomic) NSString *clusteringIdentifier;
@property (readonly, weak, nonatomic) MKAnnotationView *clusterAnnotationView;
@property (nonatomic) float displayPriority;
@property (nonatomic) float zPriority;
@property (nonatomic) float selectedZPriority;
@property (nonatomic) long long collisionMode;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } coordinate;

/* class methods */
+ (BOOL)_wantsViewBasedPositioning;
+ (Class)_mapkitLeafClass;
+ (Class)calloutViewClass;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (unsigned long long)_zIndex;
+ (unsigned long long)_selectedZIndex;
+ (id)_disclosureCalloutButton;
+ (BOOL)_isInitiallyHiddenWhenAdded;
+ (BOOL)_followsTerrain;

/* instance methods */
- (id)customFeatureAnnotation;
- (BOOL)isProvidingCustomFeature;
- (void)invalidateCustomFeatureForced:(BOOL)forced;
- (void)_invalidateCustomFeatureForced:(BOOL)forced coordinates:(struct CLLocationCoordinate2D { double x0; double x1; } *)coordinates count:(unsigned long long)count;
- (id)_effectiveTitleIsCollidable:(BOOL *)collidable;
- (id)_effectiveSubtitlesIsCollidable:(BOOL *)collidable;
- (void)configureCustomFeature:(id)feature;
- (BOOL)shouldShowCallout;
- (BOOL)_isSelectable;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_annotationTrackingInsets;
- (void)setBounds:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })bounds;
- (void)_metricsDidChange;
- (void)_updateAnchorPosition:(struct CGPoint { double x0; double x1; })position alignToPixels:(BOOL)pixels;
- (void)_mapVisibleCenteringRectChanged;
- (long long)compareForClustering:(id)clustering;
- (long long)compareForCollision:(id)collision;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)_commonInit;
- (id)initWithCoder:(id)coder;
- (id)initWithAnnotation:(id)annotation reuseIdentifier:(id)identifier;
- (void)dealloc;
- (id)viewRepresentation;
- (void)prepareForReuse;
- (void)prepareForDisplay;
- (void)_unhideForDisplay;
- (id)_getPopover:(id)popover;
- (void)_removePopover;
- (id)hitTest:(struct CGPoint { double x0; double x1; })test withEvent:(id)event;
- (id)_contentLayer;
- (float)_clampZPriority:(float)zpriority;
- (void)_setZPriority:(float)zpriority;
- (void)_setSelectedZPriority:(float)zpriority;
- (float)_defaultZPriority;
- (float)_defaultSelectedZPriority;
- (BOOL)isSelected;
- (void)setSelected:(BOOL)selected animated:(BOOL)animated;
- (void)_setSelected:(BOOL)selected animated:(BOOL)animated;
- (long long)_effectiveCalloutStyle;
- (BOOL)_shouldShowCalloutIfSelected;
- (BOOL)_allowedToShowCallout;
- (BOOL)updateCalloutViewIfNeededAnimated:(BOOL)animated;
- (void)_showCallout:(BOOL)callout;
- (void)_dismissCallout:(BOOL)callout;
- (struct CGPoint { double x0; double x1; })_draggingDropOffset;
- (void)_didDragWithVelocity:(struct CGPoint { double x0; double x1; })velocity;
- (void)_setMapRotationRadians:(double)radians;
- (void)_setDirection:(double)direction;
- (void)_setPresentationCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate;
- (void)_invalidateCachedCoordinate;
- (BOOL)_shouldDeselectWhenDragged;
- (void)_setAnimatingToCoordinate:(BOOL)coordinate;
- (void)_setTracking:(BOOL)tracking;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_mapkit_visibleRect;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_significantBounds;
- (BOOL)isEnabled;
- (BOOL)isHighlighted;
- (BOOL)isDraggable;
- (void)setDragState:(unsigned long long)state animated:(BOOL)animated;
- (void)_setDragState:(unsigned long long)state animated:(BOOL)animated;
- (BOOL)_canDisplayDisclosureInCallout;
- (void)_setCanDisplayDisclosureInCallout:(BOOL)callout;
- (BOOL)_canDisplayPlacemarkInCallout;
- (void)_setCanDisplayPlacemarkInCallout:(BOOL)callout;
- (BOOL)isPersistent;
- (unsigned long long)_mapType;
- (void)_setMapType:(unsigned long long)type;
- (unsigned long long)_zIndex;
- (void)_setZIndex:(unsigned long long)zindex;
- (float)_effectiveZPriority;
- (void)_updateEffectiveZPriority;
- (void)didMoveToSuperview;
- (id)snapshotViewAfterScreenUpdates:(BOOL)updates;
- (void)setHidden:(BOOL)hidden;
- (BOOL)isHidden;
- (void)_setHiddenForOffscreen:(BOOL)offscreen;
- (void)setAlpha:(double)alpha;
- (double)alpha;
- (BOOL)_isHiddenForReason:(unsigned long long)reason;
- (void)_performHideAnimationIfNeeded;
- (void)_performOffsetAnimationIfNeeded;
- (void)_performStateUpdatesIfNeeded;
- (void)_setHidden:(BOOL)hidden forReason:(unsigned long long)reason animated:(BOOL)animated;
- (void)_setHidden:(BOOL)hidden forReason:(unsigned long long)reason animated:(BOOL)animated completion:(id /* block */)completion;
- (void)_setPositionOffset:(struct CGPoint { double x0; double x1; })offset animated:(BOOL)animated;
- (struct CGPoint { double x0; double x1; })_offsetToAnnotationView:(id)view;
- (id)_annotationContainer;
- (void)_enableRotationForHeadingMode:(double)mode;
- (void)_userTrackingModeDidChange:(id)change;
- (void)_setRotationRadians:(double)radians withAnimation:(id)animation;
- (void)_transitionTo:(long long)to;
- (BOOL)_hasAlternateOrientation;
- (unsigned long long)_orientationCount;
- (BOOL)_canChangeOrientation;
- (id)_containerView;
- (id)_mapView;
- (void)_setVKNavigationPuckMarker:(id)marker;
- (id)_vkNavigationPuckMarker;
- (double)_pointsForDistance:(double)distance;
- (void)_updateFromMap;
- (void)_didUpdatePosition;
- (id)_customFeatureAnnotation;
- (void)_addAnnotationObservation;
- (void)_removeAnnotationObservation;
- (void)_mkObserveValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (BOOL)isCollidingWithAnnotationView:(id)view previouslyCollided:(BOOL)collided;
- (void)prepareForSnapshotting;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })alignmentRectInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_collisionAlignmentRectInsets;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_defaultCollisionAlignmentRectInsets;
- (void)_setPresentationCoordinateChangedCallback:(id /* block */)callback;
- (void)_setPresentationCourse:(double)course;
- (BOOL)_isAnimatingToCoordinate;
- (BOOL)_isTracking;
- (void)_setCalloutView:(id)view;
- (BOOL)_shouldKeepCalloutVisible;
- (void)_setShouldKeepCalloutVisible:(BOOL)visible;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_collisionFrame;
- (struct CGPoint { double x0; double x1; })_bottomCalloutOffset;
- (void)_setBottomCalloutOffset:(struct CGPoint { double x0; double x1; })offset;
- (unsigned long long)_allowedCalloutEdges;
- (void)_setAllowedCalloutEdges:(unsigned long long)edges;
- (void)_setRouteMatch:(id)match;
- (double)_mapRotationRadians;
- (double)_mapPitchRadians;
- (void)_setMapPitchRadians:(double)radians;
- (struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; })_mapDisplayStyle;
- (void)_setMapDisplayStyle:(struct { unsigned char x0; unsigned char x1; unsigned char x2; unsigned char x3; BOOL x4; })style;
- (float)_selectionPriority;
- (void)_setSelectionPriority:(float)priority;
- (id)_staticMapView;
- (void)_setStaticMapView:(id)view;
- (BOOL)_isPendingSelectionAnimated;
- (void)_setPendingSelectionAnimated:(BOOL)animated;
- (long long)_calloutStyle;
- (void)_setCalloutStyle:(long long)style;
- (BOOL)_skipDrawingForSnapshots;
- (void)_setSkipDrawingForSnapshots:(BOOL)snapshots;
- (struct CGPoint { double x0; double x1; })_anchorPoint;
- (id)_usageCounter;
- (void)_setUsageCounter:(id)counter;
- (unsigned long long)_featureId;
- (void)_setFeatureId:(unsigned long long)id;
@end

#endif /* MKAnnotationView_h */
