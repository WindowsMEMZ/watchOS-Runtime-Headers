//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKMapItem_h
#define MKMapItem_h
@import Foundation;

#include "GEOMapItem-Protocol.h"
#include "GEOURLSerializable-Protocol.h"
#include "MKMapItemIdentifier.h"
#include "MKMapItemMetadata.h"
#include "MKPlacemark.h"
#include "MKTransitInfoPreload-Protocol.h"
#include "NSObject-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "_MKMapItemAttribution.h"
#include "_MKMapItemPhotosAttribution.h"
#include "_MKMapItemPlaceAttribution.h"
#include "_MKMapItemReviewsAttribution.h"

@class GEOAddress, GEOBusinessAssets, GEOBusinessHours, GEOEVChargerAvailability, GEOEnhancedPlacement, GEOEnrichmentData, GEOEnrichmentInfo, GEOExploreGuides, GEOFactoid, GEOFeatureStyleAttributes, GEOLabelGeometry, GEOMapItemDetourInfo, GEOMapItemStorage, GEOMapItemStorageUserValues, GEOMapRegion, GEOMiniBrowseCategories, GEOModuleLayoutEntry, GEOPDFlyover, GEOPOIClaim, GEOPlace, GEOTrailHead, GEOViewportFrame, NSArray, NSData, NSDate, NSDictionary, NSNumber, NSNumberFormatter, NSString, NSTimeZone, NSURL, UIColor, _MKPlaceReservationInfo, geo_isolater;
@protocol GEOAnnotatedItemList, GEOEncyclopedicInfo, GEOMapItemPrivate, GEOMapItemTransitInfo, GEOMapItemVenueInfo, GEOTransitAttribution;

@interface MKMapItem : NSObject<NSSecureCoding, GEOURLSerializable> {
  /* instance variables */
  BOOL _isTransitInfoUpdated;
  NSObject<GEOMapItemTransitInfo> *_updatedTransitInfo;
  NSObject<GEOMapItemTransitInfo> *_defaultTransitInfo;
  NSObject<GEOTransitAttribution> *_updatedTransitAttribution;
  BOOL _useCustomPOICategory;
  NSString *_customPOICategory;
  GEOEVChargerAvailability *_chargerAvailability;
  NSObject<NSObject> *_didResolveAttributionToken;
  BOOL _hasLoadedAttribution;
  NSNumberFormatter *_numberFormatterForAdamId;
  NSDictionary *_cachedHoursBuilder;
  geo_isolater *_isolation;
}

@property (readonly, nonatomic) NSString *formattedNumberOfReviews;
@property (readonly, nonatomic) NSString *formattedNumberOfReviewsIncludingProvider;
@property (readonly, nonatomic) NSDate *transitInfoUpdatedDate;
@property (readonly) BOOL isEmptyContactMapItem;
@property (nonatomic) BOOL isCurrentLocation;
@property (readonly, nonatomic) GEOMapItemStorageUserValues *userValues;
@property (readonly, nonatomic) MKMapItemMetadata *metadata;
@property (readonly, nonatomic) GEOPlace *place;
@property (readonly, nonatomic) NSObject<GEOMapItemPrivate> *geoMapItem;
@property (readonly, nonatomic) GEOMapItemStorage *geoMapItemStorageForPersistence;
@property (readonly, nonatomic) GEOMapItemStorage *geoMapItemStorageForDragAndDrop;
@property (readonly, nonatomic) NSString *yelpID;
@property (readonly, nonatomic) BOOL isPlaceHolder;
@property (readonly, nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } coordinate;
@property (readonly, nonatomic) struct CLLocationCoordinate2D { double x0; double x1; } labelCoordinate;
@property (readonly, nonatomic) GEOMapRegion *displayMapRegion;
@property (readonly, nonatomic) BOOL hasDisplayMinZoom;
@property (readonly, nonatomic) float displayMinZoom;
@property (readonly, nonatomic) BOOL hasDisplayMaxZoom;
@property (readonly, nonatomic) float displayMaxZoom;
@property (readonly, nonatomic) GEOMapRegion *geoFenceMapRegion;
@property (readonly, nonatomic) BOOL hasTransit;
@property (readonly, nonatomic) BOOL hasTransitDisplayName;
@property (readonly, nonatomic) NSString *transitDisplayName;
@property (readonly, nonatomic) BOOL hasTransitLabels;
@property (readonly, nonatomic) NSObject<GEOTransitAttribution> *transitAttribution;
@property (readonly, nonatomic) NSObject<GEOMapItemTransitInfo> *transitInfo;
@property (readonly, nonatomic) NSObject<MKTransitInfoPreload> *preloadedTransitInfo;
@property (readonly, nonatomic) GEOAddress *geoAddress;
@property (readonly, nonatomic) BOOL hasFlyover;
@property (readonly, nonatomic) GEOPDFlyover *flyover;
@property (readonly, nonatomic) NSString *flyoverAnnouncementMessage;
@property (readonly, nonatomic) MKMapItemIdentifier *identifier;
@property (readonly, nonatomic) BOOL hasMUID;
@property (readonly, nonatomic) unsigned long long muid;
@property (readonly, nonatomic) BOOL hasResultProviderID;
@property (readonly, nonatomic) int resultProviderID;
@property (readonly, nonatomic) BOOL phoneNumberOptsOutOfAds;
@property (readonly, nonatomic) NSString *firstLocalizedCategoryName;
@property (readonly, nonatomic) BOOL hasUserRatingScore;
@property (readonly, nonatomic) unsigned int sampleSizeForUserRatingScore;
@property (readonly, nonatomic) NSString *localizedSampleSizeForUserRatingScoreString;
@property (readonly, nonatomic) float normalizedUserRatingScore;
@property (readonly, nonatomic) BOOL hasPriceDescription;
@property (readonly, nonatomic) NSString *priceDescription;
@property (readonly, nonatomic) BOOL hasPriceRange;
@property (readonly, nonatomic) NSString *priceRangeString;
@property (readonly, nonatomic) NSString *shortAddress;
@property (readonly, nonatomic) BOOL hasAnyAmenities;
@property (readonly, nonatomic) BOOL hasAcceptsApplePayAmenity;
@property (readonly, nonatomic) BOOL acceptsApplePay;
@property (readonly, nonatomic) NSArray *amenities;
@property (readonly, nonatomic) BOOL hasResolvablePartialInformation;
@property (readonly, nonatomic) BOOL responseStatusIncomplete;
@property (readonly, nonatomic) BOOL hasOperatingHours;
@property (readonly, nonatomic) BOOL hasLocalizedOperatingHours;
@property (readonly, nonatomic) int parsecSectionType;
@property (readonly, nonatomic) BOOL isStandAloneBrand;
@property (readonly, nonatomic) BOOL hasBrandMUID;
@property (readonly, nonatomic) unsigned long long brand;
@property (readonly, nonatomic) BOOL isMapItemTypeUnknown;
@property (readonly, nonatomic) BOOL isMapItemTypeBusiness;
@property (readonly, nonatomic) BOOL isMapItemTypeSettlement;
@property (readonly, nonatomic) BOOL isMapItemTypeAddress;
@property (nonatomic) BOOL isMapItemTypeTransit;
@property (readonly, nonatomic) BOOL isMapItemTypeBrand;
@property (readonly, nonatomic) NSString *localizedResponseTime;
@property (readonly, nonatomic) GEOBusinessHours *messageBusinessHours;
@property (readonly, nonatomic) BOOL hasEncyclopedicInfo;
@property (readonly, nonatomic) NSObject<GEOEncyclopedicInfo> *encyclopedicInfo;
@property (readonly, nonatomic) BOOL hasChargerNumberString;
@property (readonly, nonatomic) NSString *chargerNumberString;
@property (readonly, nonatomic) GEOEVChargerAvailability *realTimeAvailableEVCharger;
@property (readonly, nonatomic) unsigned long long openingHoursOptions;
@property (readonly, nonatomic) NSData *placeDataAsData;
@property (readonly, nonatomic) NSString *poiSurveyURLString;
@property (readonly, nonatomic) NSString *poiPinpointURLString;
@property (readonly, nonatomic) BOOL hasCorrectedHomeWorkCoordinate;
@property (readonly, nonatomic) BOOL hasCorrectedHomeWorkAddress;
@property (readonly, nonatomic) BOOL hasVenueFeatureType;
@property (readonly, nonatomic) long long venueFeatureType;
@property (readonly, nonatomic) NSObject<GEOMapItemVenueInfo> *venueInfo;
@property (readonly, nonatomic) NSArray *browseCategories;
@property (readonly, nonatomic) GEOMiniBrowseCategories *miniBrowseCategories;
@property (readonly, nonatomic) int placeDisplayStyle;
@property (readonly, nonatomic) NSObject<GEOAnnotatedItemList> *annotatedItemList;
@property (readonly, nonatomic) BOOL needsAttribution;
@property (readonly, copy, nonatomic) NSURL *webURL;
@property (readonly, copy, nonatomic) NSURL *providerURL;
@property (readonly, copy, nonatomic) NSString *vendorID;
@property (readonly, nonatomic) NSString *reviewsDisplayName;
@property (readonly, nonatomic) _MKMapItemPlaceAttribution *attribution;
@property (readonly, nonatomic) NSArray *allPhotoAttributions;
@property (readonly, nonatomic) _MKMapItemPhotosAttribution *photosAttribution;
@property (readonly, nonatomic) _MKMapItemReviewsAttribution *reviewsAttribution;
@property (readonly, nonatomic) _MKMapItemAttribution *encyclopedicInfoAttribution;
@property (readonly, nonatomic) GEOFeatureStyleAttributes *styleAttributes;
@property (readonly, nonatomic) unsigned long long customIconID;
@property (readonly, nonatomic) NSArray *reviews;
@property (readonly, nonatomic) NSArray *tips;
@property (readonly, nonatomic) NSString *reviewsProviderDisplayName;
@property (readonly, nonatomic) NSData *handle;
@property (retain, nonatomic) _MKPlaceReservationInfo *reservationInfo;
@property (readonly, nonatomic) GEOMapItemDetourInfo *detourInfo;
@property (readonly, nonatomic) NSData *externalTransitStationCode;
@property (readonly, nonatomic) NSString *messageID;
@property (readonly, nonatomic) NSString *messageURLString;
@property (readonly, nonatomic) BOOL isMessageIDVerified;
@property (readonly, nonatomic) NSArray *quickLinks;
@property (readonly, nonatomic) NSArray *secondaryQuickLinks;
@property (readonly, nonatomic) NSArray *placeCollections;
@property (readonly, nonatomic) GEOExploreGuides *exploreGuides;
@property (readonly, nonatomic) NSArray *collectionIds;
@property (readonly, nonatomic) NSArray *relatedPlaceLists;
@property (readonly, nonatomic) NSNumber *preferedAppAdamID;
@property (readonly, nonatomic) NSArray *alternativeAppAdamIds;
@property (readonly, nonatomic) GEOModuleLayoutEntry *placecardLayout;
@property (readonly, nonatomic) BOOL isPartiallyClientized;
@property (readonly, nonatomic) UIColor *navTintBrandColor;
@property (readonly, nonatomic) UIColor *navBackgroundbrandColor;
@property (readonly, nonatomic) NSString *secondaryName;
@property (readonly, nonatomic) NSString *secondarySpokenName;
@property (readonly, nonatomic) BOOL hasBusinessHours;
@property (readonly, nonatomic) NSArray *businessHours;
@property (readonly, nonatomic) BOOL hasLinkedServices;
@property (readonly, nonatomic) NSArray *linkedServices;
@property (readonly, nonatomic) GEOBusinessAssets *businessAssets;
@property (readonly, nonatomic) BOOL isClaimed;
@property (readonly, nonatomic) BOOL canBeClaimed;
@property (readonly, nonatomic) BOOL hasPOIClaim;
@property (readonly, nonatomic) GEOPOIClaim *poiClaim;
@property (readonly, nonatomic) GEOEnhancedPlacement *enhancedPlacement;
@property (readonly, nonatomic) GEOLabelGeometry *labelGeometry;
@property (readonly, nonatomic) GEOViewportFrame *viewportFrame;
@property (readonly, nonatomic) GEOEnrichmentInfo *enrichmentInfo;
@property (readonly, nonatomic) GEOEnrichmentData *enrichmentData;
@property (readonly, nonatomic) NSArray *externalActionLinks;
@property (readonly, nonatomic) GEOTrailHead *trailHead;
@property (readonly, nonatomic) GEOFactoid *hikingTrailDifficultyFactoid;
@property (readonly, nonatomic) GEOFactoid *hikingTrailPointToPointFactoid;
@property (readonly, nonatomic) GEOFactoid *hikingTrailLengthFactoid;
@property (readonly, nonatomic) int placeCategoryType;
@property (readonly, nonatomic) MKPlacemark *placemark;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *phoneNumber;
@property (retain, nonatomic) NSURL *url;
@property (copy, nonatomic) NSTimeZone *timeZone;
@property (copy, nonatomic) NSString *pointOfInterestCategory;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)_fillOutRequest:(id)request withMapsDataString:(id)string;
+ (id)ticketForMapsDataString:(id)string name:(id)name;
+ (BOOL)supportsSecureCoding;
+ (id)_mapItemWithWithLocation:(id)location addressDictionary:(id)dictionary name:(id)name businessURL:(id)url phoneNumber:(id)number sessionID:(id)id muid:(unsigned long long)muid attributionID:(id)id sampleSizeForUserRatingScore:(unsigned int)score normalizedUserRatingScore:(float)score;
+ (id)_itemWithGeoMapItem:(id)item;
+ (id)_itemWithContact:(id)contact geoMapItem:(id)item;
+ (id)mapItemWithSerializedPlaceData:(id)data;
+ (id)mapItemWithSerializedPlaceData:(id)data serializedDetourInfo:(id)info currentLocation:(BOOL)location;
+ (void)_mapItemsWithSerializedPlaceDataResponse:(id)response handler:(id /* block */)handler;
+ (id)mapItemForCurrentLocation;
+ (id)_localizedNextOpeningHoursFormatter;
+ (id)_localizedNextOpeningDayOftheWeekFormatter;
+ (BOOL)openMapsWithItems:(id)items launchOptions:(id)options;
+ (void)openMapsWithItems:(id)items launchOptions:(id)options completionHandler:(id /* block */)handler;
+ (id)plistCompatibleDictionaryFromStandardOptions:(id)options;
+ (id)standardOptionsFromPlistCompatibleDictionary:(id)dictionary;
+ (id)mapItemWithDictionary:(id)dictionary;
+ (id)_sharedSessionURLForPunchoutURL:(id)url;
+ (id)_sharedSessionUserInfoForPunchoutUserInfo:(id)info;
+ (id)_sourceAppIdFromLaunchURL:(id)url;
+ (id)_sourceAppIdFromLaunchUserInfo:(id)info;
+ (void)_mapItemFromHandle:(id)handle completionHandler:(id /* block */)handler;
+ (void)_mapItemsFromHandleURL:(id)url completionHandler:(id /* block */)handler;
+ (id)_deserializeResourceOptionsFromURL:(id)url error:(out id *)error;
+ (id)_launchOptionsFromResourceOptionsDictionary:(id)dictionary;
+ (id)launchOptionsFromURL:(id)url;
+ (BOOL)valueIsValid:(id)valid forKey:(id)key;
+ (id)sanitizeObject:(id)object forKey:(id)key;
+ (id)sanitizeArray:(id)array forKey:(id)key;
+ (id)sanitizeDictionary:(id)dictionary;
+ (id)mapItemsFromURL:(id)url options:(id *)options;
+ (id)_mapItemBackedByURL:(id)url;
+ (id)urlForMapItem:(id)item options:(id)options;
+ (id)urlForMapItems:(id)items options:(id)options;
+ (id)_urlForMapItemHandles:(id)handles options:(id)options;
+ (id)_urlForLocation:(id)location address:(id)address label:(id)label options:(id)options;
+ (id)_launchOptionsWithOptions:(id)options;

/* instance methods */
- (id)_bestWalletHeroImageForSize:(struct CGSize { double x0; double x1; })size allowSmaller:(BOOL)smaller;
- (id)_walletHeroImageProviderName;
- (BOOL)_isEmptyContactMapItem;
- (id)_initWithLabelMarker:(id)marker;
- (id)_mapsDataString;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)_transitInfoUpdatedDate;
- (void)_markTransitInfoUpdated;
- (void)_updateTransitInfoWithMapItem:(id)item;
- (id)_reviewForIdentifier:(id)identifier;
- (id)formattedNumberOfReviewsIncludingProvider:(BOOL)provider formatter:(id)formatter;
- (id)_mk_nano_placecardIcon;
- (id)_mk_nano_formattedSingleLineAddress;
- (BOOL)_mapkit_supportsFullScreenExperience;
- (BOOL)_mapkit_hasFlatListOfPhotos;
- (BOOL)_mapkit_hasSinglePhotoVendor;
- (BOOL)_mapkit_hasMultiplePhotoVendors;
- (id)_mapkit_preferredFirstPhotoVendor;
- (id)_mapkit_resolvedFlatPhotoList;
- (unsigned long long)_mapkit_numberOfPhotosAvailableForFlatList;
- (BOOL)_mapkit_canAtLeastOneAttributionShowPhotosLocally;
- (BOOL)_mapkit_canAtLeastOneAttributionShowAddPhotosLocally;
- (id)init;
- (id)initWithGeoMapItemAsCurrentLocation:(id)location;
- (id)initWithGeoMapItem:(id)item isPlaceHolderPlace:(BOOL)place;
- (id)initWithPlace:(id)place;
- (id)initWithPlace:(id)place isPlaceHolderPlace:(BOOL)place;
- (id)initWithAddressDictionary:(id)dictionary;
- (id)initWithCLLocation:(id)cllocation placeType:(int)type;
- (id)initWithCLLocation:(id)cllocation;
- (id)initWithPlacemark:(id)placemark;
- (void)dealloc;
- (id)_isolatedPlace;
- (id)_attribution;
- (id)_photosAttribution;
- (id)_allPhotoAttributions;
- (id)_reviewsAttribution;
- (id)_encyclopedicInfoAttribution;
- (void)_refreshAttribution;
- (BOOL)isEqual:(id)equal;
- (id)_geoMapItem;
- (id)_geoMapItemStorageForPersistence;
- (id)_geoMapItemStorageForDragAndDrop;
- (id)_secondaryName;
- (id)_secondarySpokenName;
- (BOOL)_phoneNumberOptsOutOfAds;
- (id)_getBusiness;
- (struct CLLocationCoordinate2D { double x0; double x1; })_coordinate;
- (struct CLLocationCoordinate2D { double x0; double x1; })_labelCoordinate;
- (id)_displayMapRegion;
- (BOOL)_hasDisplayMinZoom;
- (float)_displayMinZoom;
- (BOOL)_hasDisplayMaxZoom;
- (float)_displayMaxZoom;
- (id)_geoFenceMapRegion;
- (BOOL)_isMapItemTypeTransit;
- (BOOL)_isPartiallyClientized;
- (BOOL)_hasTransit;
- (BOOL)_hasTransitDisplayName;
- (id)_transitDisplayName;
- (BOOL)_hasTransitLabels;
- (id)_transitAttribution;
- (id)_formatterForAdamId;
- (id)_transitInfo;
- (void)preloadTransitInfoWithCompletion:(id /* block */)completion;
- (BOOL)_hasFlyover;
- (id)_flyover;
- (id)_flyoverAnnouncementMessage;
- (BOOL)_hasVenueFeatureType;
- (long long)_venueFeatureType;
- (id)_venueInfo;
- (id)_browseCategories;
- (id)_miniBrowseCategories;
- (int)_placeDisplayStyle;
- (id)_annotatedItemList;
- (id)_identifier;
- (BOOL)_hasMUID;
- (unsigned long long)_muid;
- (BOOL)_hasResultProviderID;
- (int)_resultProviderID;
- (BOOL)_hasUserRatingScore;
- (unsigned int)_sampleSizeForUserRatingScore;
- (id)_localizedSampleSizeForUserRatingScoreString;
- (BOOL)_hasPriceDescription;
- (id)_priceDescription;
- (float)_normalizedUserRatingScore;
- (BOOL)_hasPriceRange;
- (id)_priceRangeString;
- (id)_geoAddress;
- (id)_shortAddress;
- (id)_localizedCategoryNamesForType:(unsigned int)type;
- (BOOL)_hasLocalizedCategoryNamesForType:(unsigned int)type;
- (id)_firstLocalizedCategoryName;
- (BOOL)_hasAnyAmenities;
- (id)_amenities;
- (BOOL)hasAmenityType:(int)type;
- (BOOL)valueForAmenityType:(int)type;
- (BOOL)_hasAcceptsApplePayAmenity;
- (BOOL)_acceptsApplePay;
- (BOOL)_hasResolvablePartialInformation;
- (BOOL)_responseStatusIsIncomplete;
- (BOOL)_hasOperatingHours;
- (BOOL)_hasLocalizedOperatingHours;
- (id)defaultHoursBuilderForSearchResultCell;
- (id)hoursBuilderForSearchResultCellForOptions:(unsigned long long)options;
- (id)_localizedNextOpeningStringShort:(BOOL)short;
- (id)_messageBusinessHours;
- (id)_localizedResponseTime;
- (BOOL)_hasEncyclopedicInfo;
- (id)_encyclopedicInfo;
- (unsigned long long)_openingHoursOptions;
- (id)_placeDataAsData;
- (id)_poiSurveyURLString;
- (id)_poiPinpointURLString;
- (BOOL)_hasChargerNumberString;
- (id)_chargerNumberString;
- (id)_factoidWithSemantic:(int)semantic;
- (id)_realTimeAvailableEVCharger;
- (id)_businessAssets;
- (BOOL)_isClaimed;
- (BOOL)_canBeClaimed;
- (BOOL)openInMapsWithLaunchOptions:(id)options;
- (void)openInMapsWithLaunchOptions:(id)options completionHandler:(id /* block */)handler;
- (id)_handle;
- (id)dictionaryRepresentation;
- (id)urlRepresentation;
- (id)initWithUrlRepresentation:(id)representation;
- (BOOL)_isEquivalentURLRepresentationTo:(id)to;
- (id)_fullAddressWithMultiline:(BOOL)multiline;
- (id)_weatherDisplayName;
- (id)_weatherLocationName;
- (id)_activityURL;
- (id)_urlExtraStorage;
- (BOOL)_canGetDirections;
- (id)_bestBrandIconURLForSize:(struct CGSize { double x0; double x1; })size allowSmaller:(BOOL)smaller;
- (id)_bestNavbarBrandIconURLForSize:(struct CGSize { double x0; double x1; })size allowSmaller:(BOOL)smaller;
- (id)_addressOrNil:(id)nil;
- (id)_addressFormattedAsCity;
- (id)_addressFormattedAsStreetOnly;
- (id)_postalAddressFromMeCardUsingAddressIdentifier:(id)identifier;
- (id)_addressFormattedAsMultilineAddress;
- (id)_addressFormattedAsName;
- (id)_addressFormattedAsShortenedAddress;
- (id)_addressFormattedAsSinglelineAddress;
- (id)_addressFormattedAsWeatherDisplayName;
- (id)_addressFormattedAsWeatherLocationName;
- (id)_addressFormattedAsTitlesForMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (id)_addressFormattedAsLocation;
- (id)_cnPostalAddress;
- (id)venueLabelWithContext:(unsigned long long)context;
- (id)_preferedAppAdamID;
- (id)_alternativeAppAdamIds;
- (BOOL)_hasBusinessHours;
- (id)_businessHours;
- (BOOL)_hasLinkedServices;
- (id)_linkedServices;
- (void)_updateRealTimeEVChargerAvailability:(id)availability;
- (BOOL)_needsAttribution;
- (id)_webURL;
- (id)_providerURL;
- (id)_vendorID;
- (id)_reviewsDisplayName;
- (id)_attributionWithDisplayName:(id)name attributionFormat:(id)format logo:(id)logo isSnippetLogo:(BOOL)logo;
- (id)_attributionFor:(id)for sourceStringFormat:(id)format moreSourceStringFormat:(id)format imageTintColor:(id)color;
- (id)_styleAttributes;
- (unsigned long long)_customIconID;
- (BOOL)_isMapItemTypeUnknown;
- (BOOL)_isMapItemTypeBusiness;
- (BOOL)_isMapItemTypeSettlement;
- (BOOL)_isMapItemTypeAddress;
- (BOOL)_isMapItemTypeBrand;
- (int)_parsecSectionType;
- (BOOL)_isStandAloneBrand;
- (BOOL)_hasBrandMUID;
- (unsigned long long)_brandMUID;
- (id)_messageID;
- (id)_messageURLString;
- (BOOL)_isMessageIDVerified;
- (id)_placecardLayout;
- (id)_navBackgroundbrandColor;
- (id)_navTintBrandColor;
- (id)_quickLinks;
- (id)_secondaryQuickLinks;
- (id)_placeCollections;
- (id)_exploreGuides;
- (id)_placeCollectionIds;
- (id)_relatedPlaceLists;
- (id)_relatedPlaceListForComponentIdentifier:(int)identifier;
- (id)_firstRelatedPlaceListForType:(int)type;
- (id)_reviews;
- (id)_tips;
- (BOOL)_hasPOIClaim;
- (id)_poiClaim;
- (id)_detourInfo;
- (id)_externalTransitStationCode;
- (BOOL)_hasCorrectedHomeWorkCoordinate;
- (BOOL)_hasCorrectedHomeWorkAddress;
- (id)_enhancedPlacement;
- (id)_labelGeometry;
- (id)_viewportFrame;
- (id)_enrichmentInfo;
- (id)_enrichmentData;
- (id)_externalActionLinks;
- (id)_trailHead;
- (id)_hikingTrailDifficultyFactoid;
- (id)_hikingTrailPointToPointFactoid;
- (id)_hikingTrailLengthFactoid;
- (int)_placeCategoryType;
- (id)_preloadedTransitInfo;
@end

#endif /* MKMapItem_h */
