//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKMapCameraBoundary_h
#define MKMapCameraBoundary_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class VKCameraRegionRestriction;

@interface MKMapCameraBoundary : NSObject<NSSecureCoding, NSCopying> {
  /* instance variables */
  VKCameraRegionRestriction *_vkRestriction;
}

@property (readonly, nonatomic) BOOL _empty;
@property (readonly, nonatomic) struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; } mapRect;
@property (readonly, nonatomic) struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; } region;

/* class methods */
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initWithMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (id)initWithCoordinateRegion:(struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; })region;
- (id)copyWithZone:(struct _NSZone *)zone;
- (BOOL)isValidMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (BOOL)isValidCoordinateRegion:(struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; })region;
- (struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })_clampedMapRectForMapRect:(struct { struct { double x0; double x1; } x0; struct { double x0; double x1; } x1; })rect;
- (struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; })_clampedCoordinateRegionForCoordinateRegion:(struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; })region;
- (BOOL)isEqual:(id)equal;
- (BOOL)isEqualToMapCameraBoundary:(id)boundary;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (BOOL)_isEmpty;
- (id)_vkRegionRestriction;
- (BOOL)_containsCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate;
- (struct CLLocationCoordinate2D { double x0; double x1; })_clampedCoordinateForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate;
@end

#endif /* MKMapCameraBoundary_h */
