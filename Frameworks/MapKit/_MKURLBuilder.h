//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef _MKURLBuilder_h
#define _MKURLBuilder_h
@import Foundation;

@class GEOMapURLBuilder;

@interface _MKURLBuilder : NSObject {
  /* instance variables */
  GEOMapURLBuilder *_realBuilder;
}

/* class methods */
+ (id)URLForSearch:(id)search;
+ (id)URLForSearch:(id)search near:(struct CLLocationCoordinate2D { double x0; double x1; })near;
+ (id)URLForSearch:(id)search at:(struct CLLocationCoordinate2D { double x0; double x1; })at span:(struct { double x0; double x1; })span;
+ (id)URLForSearch:(id)search at:(struct CLLocationCoordinate2D { double x0; double x1; })at zoomLevel:(double)level;
+ (id)URLForAddress:(id)address;
+ (id)URLForAddress:(id)address label:(id)label;
+ (id)URLForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate;
+ (id)URLForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate label:(id)label;
+ (id)URLForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address label:(id)label;
+ (id)URLForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address label:(id)label useWebPlaceCard:(BOOL)card;
+ (id)URLForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address label:(id)label extraStorage:(id)storage;
+ (id)URLForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address label:(id)label extraStorage:(id)storage useWebPlaceCard:(BOOL)card;
+ (id)URLForDirectionsFrom:(id)from to:(id)to;
+ (id)URLForDirectionsFrom:(id)from toDestinations:(id)destinations;
+ (id)URLForDirectionsFrom:(id)from to:(id)to transport:(unsigned long long)transport;
+ (id)URLForDirectionsFrom:(id)from toDestinations:(id)destinations transport:(unsigned long long)transport;
+ (id)URLForDirectionsFromHereTo:(id)to;
+ (id)URLForDirectionsFromHereToDestinations:(id)destinations;
+ (id)URLForDirectionsFromHereTo:(id)to transport:(unsigned long long)transport;
+ (id)URLForDirectionsFromHereToDestinations:(id)destinations transport:(unsigned long long)transport;
+ (id)URLForDirectionsFromHereTo:(id)to label:(id)label muid:(unsigned long long)muid provider:(int)provider transport:(unsigned long long)transport;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address extraStorage:(id)storage;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address extraStorage:(id)storage useWebPlaceCard:(BOOL)card;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address extraStorage:(id)storage useWebPlaceCard:(BOOL)card enrichmentInfo:(id)info;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address useWebPlaceCard:(BOOL)card;
+ (id)URLForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider coordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address useWebPlaceCard:(BOOL)card mapItemData:(id)data;
+ (id)URLForExternalBusiness:(id)business id:(id)id ofContentProvider:(id)provider;
+ (id)URLForCollectionStorage:(id)storage;

/* instance methods */
- (id)initForSearch:(id)search;
- (void)setNear:(struct CLLocationCoordinate2D { double x0; double x1; })near;
- (void)setSearchLocation:(struct CLLocationCoordinate2D { double x0; double x1; })location span:(struct { double x0; double x1; })span;
- (void)setSearchLocation:(struct CLLocationCoordinate2D { double x0; double x1; })location zoomLevel:(double)level;
- (id)initForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate address:(id)address label:(id)label;
- (id)initForCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate label:(id)label;
- (id)initForAddress:(id)address label:(id)label;
- (void)setDisplayRegion:(struct { struct CLLocationCoordinate2D { double x0; double x1; } x0; struct { double x0; double x1; } x1; })region;
- (id)initForDirectionsTo:(id)to;
- (id)initForDirectionsToAddresses:(id)addresses;
- (void)setStartAddress:(id)address;
- (void)setTransportType:(unsigned long long)type;
- (void)setDestinationMUID:(unsigned long long)muid provider:(int)provider;
- (void)setDestinationLabel:(id)label;
- (id)initForInternalBusiness:(id)business id:(unsigned long long)id provider:(int)provider;
- (id)initForExternalBusiness:(id)business id:(id)id ofContentProvider:(id)provider;
- (void)setBusinessCoordinate:(struct CLLocationCoordinate2D { double x0; double x1; })coordinate;
- (void)setBusinessAddress:(id)address;
- (id)build;
- (id)buildForWeb;
- (void)setMapType:(unsigned long long)type;
- (void)setContentProvider:(id)provider;
@end

#endif /* _MKURLBuilder_h */
