//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef UIView_MapKitExtras_h
#define UIView_MapKitExtras_h
@import Foundation;

@interface UIView (MapKitExtras) <MKStackingViewControllerSizableView, MKInfoCardThemeListener>
/* class methods */
+ (void)_maps_setDoesNotTranslateAutoresizingConstraintsForViewsDictionary:(id)dictionary;
+ (void)_mapkit_animateWithDuration:(double)duration animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_mapkit_animateFromCurrentStateWithDuration:(double)duration animations:(id /* block */)animations completion:(id /* block */)completion;
+ (void)_mapkit_performWithoutAnimation:(id /* block */)animation;
+ (BOOL)_mapkit_shouldAdoptImplicitAnimationParameters;
+ (id)_mapkit_currentAnimationTimingFunction;
+ (double)_mapkit_currentAnimationDuration;

/* instance methods */
- (id)mk_theme;
- (void)infoCardThemeChanged;
- (void)_mapkit_setNeedsUpdateConstraints;
- (void)_mapkit_setNeedsLayout;
- (void)_mapkit_updateConstraintsIfNeeded;
- (void)_mapkit_layoutIfNeeded;
- (void)_mapkit_layoutBelowIfNeeded;
- (void)_mapkit_setBackgroundColor:(id)color;
- (struct CGSize { double x0; double x1; })_mapkit_fittingSize;
- (void)_mapKit_setNeedsDisplay;
- (BOOL)_mapkit_isRTL;
- (void)_mapkit_insertSubviewAboveAllOtherSubviews:(id)subviews;
- (void)_mapkit_insertSubviewBelowAllOtherSubviews:(id)subviews;
- (void)_mapkit_sizeToFit;
- (struct CGSize { double x0; double x1; })_mapkit_sizeThatFits:(struct CGSize { double x0; double x1; })fits;
- (float)_mapkit_contentCompressionResistancePriorityForAxis:(long long)axis;
- (void)_mapkit_setContentCompressionResistancePriority:(float)priority forAxis:(long long)axis;
- (float)_mapkit_contentHuggingPriorityForAxis:(long long)axis;
- (void)_mapkit_setContentHuggingPriority:(float)priority forAxis:(long long)axis;
- (BOOL)_mapkit_isDescendantOfView:(id)view;
- (id)_mapkit_constraintsPinningSubviewToBounds:(id)bounds;
- (double)_mapkit_YCoordinateAtDistance:(double)distance inDirection:(long long)direction fromEdge:(long long)edge;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_mapkit_rectWithSize:(struct CGSize { double x0; double x1; })size XCoordinate:(double)xcoordinate atDistance:(double)distance inDirection:(long long)direction fromEdge:(long long)edge;
- (double)_mapkit_YCoordinateAtDistance:(double)distance inDirection:(long long)direction fromYCoordinate:(double)ycoordinate;
- (BOOL)_mapkit_YCoordinate:(double)ycoordinate liesInDirection:(long long)direction startingFromYCoordinate:(double)ycoordinate;
- (long long)_mapkit_userInterfaceDirection;
- (id)_mapkit_accessoryControlToExtendWithCallout;
- (double)_mapkit_leadingMargin;
- (double)_mapkit_trailingMargin;
- (void)_mapkit_insertSubview:(id)subview aboveSubview:(id)subview;
- (void)_mapkit_insertSubview:(id)subview atIndex:(long long)index;
- (void)_mapkit_bringSubviewToFront:(id)front;
- (BOOL)_mapkit_isDarkModeEnabled;
- (struct UIEdgeInsets { double x0; double x1; double x2; double x3; })_mapkit_userInterfaceOnlySafeAreaInsets;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_mapkit_translateRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect ifNeededFromSingleEdge:(unsigned long long)edge;
- (id)_mapkit_currentLayer;
- (id)_mapKit_mapView;
- (unsigned long long)_mapkit_countOfSet:(id)set minusSubset:(id)subset;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })_mapkit_doubleFrame;
- (id)_findNearestViewController;
@end

#endif /* UIView_MapKitExtras_h */
