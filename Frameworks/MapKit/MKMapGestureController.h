//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2417.42.9.28.9
//
#ifndef MKMapGestureController_h
#define MKMapGestureController_h
@import Foundation;

#include "MKBasicMapView.h"
#include "MKCompassView.h"
#include "MKMapGestureControllerDelegate-Protocol.h"
#include "MKRotationFilter.h"
#include "MKScaleView.h"
#include "MKTiltGestureRecognizer.h"
#include "MKVariableDelayTapRecognizer.h"
#include "MKVariableDelayTapRecognizerDelegate-Protocol.h"
#include "UIGestureRecognizerDelegate-Protocol.h"
#include "_MKDirectionalArrowRecognizer.h"
#include "_MKOneHandedZoomGestureRecognizer.h"
#include "_MKUserInteractionGestureRecognizer.h"
#include "_MKUserInteractionGestureRecognizerTouchObserver-Protocol.h"
#include "_MKZoomingCrownSequencer.h"
#include "_MKZoomingGestureControlConfiguration.h"

@class NSString, PUICCrownInputSequencer, UIGestureRecognizer, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UITapGestureRecognizer, UITraitCollection, VKCompoundAnimation, VKDynamicAnimation, VKTimedAnimation;

@interface MKMapGestureController : NSObject<MKVariableDelayTapRecognizerDelegate, _MKUserInteractionGestureRecognizerTouchObserver, UIGestureRecognizerDelegate> {
  /* instance variables */
  _MKZoomingGestureControlConfiguration *_zoomConfiguration;
  _MKDirectionalArrowRecognizer *_activeArrowGestureRecognizer;
  _MKDirectionalArrowRecognizer *_arrowZoomGestureRecognizer;
  _MKDirectionalArrowRecognizer *_arrowRotateGestureRecognizer;
  _MKDirectionalArrowRecognizer *_arrowPanGestureRecognizer;
  VKTimedAnimation *_currentArrowAnimation;
  double _arrowZoomSpeed;
  double _arrowZoomStartTimestamp;
  double _pinchFactorAverageInGesture;
  double _lastPinchUpdateTimestamp;
  double _lastScale;
  VKDynamicAnimation *_pinchDecelerationAnimation;
  VKCompoundAnimation *_panDecelerationAnimationGroup;
  long long _gestureCount;
  _MKUserInteractionGestureRecognizer *_touchGestureRecognizer;
  VKDynamicAnimation *_rotationDecelerationAnimation;
  MKTiltGestureRecognizer *_tiltGestureRecognizer;
  VKDynamicAnimation *_tiltDecelerationAnimation;
  BOOL _didStartLongPress;
  BOOL _isPanning;
  BOOL _isPinching;
  UITraitCollection *_traitCollection;
  struct CLLocationCoordinate2D { double latitude; double longitude; } _previousZoomingLocationCoordinate;
  double _timestampForPreviousZoomingLocationCoordinate;
  struct CGPoint { double x; double y; } _scrollTranslation;
  struct CGPoint { double x; double y; } _lastArrowScrollTranslationDelta;
  BOOL _isFullRotatingFromArrows;
  double _lastRotationInGestureDelta;
  double _lastRotation;
}

@property (readonly, nonatomic) MKBasicMapView *mapView;
@property (weak, nonatomic) NSObject<MKMapGestureControllerDelegate> *delegate;
@property (retain, nonatomic) MKScaleView *scaleView;
@property (retain, nonatomic) MKCompassView *compassView;
@property (retain, nonatomic) MKRotationFilter *rotationFilter;
@property (nonatomic) BOOL rotationSnappingEnabled;
@property (nonatomic) BOOL zoomEnabled;
@property (nonatomic) BOOL scrollEnabled;
@property (nonatomic) BOOL rotationEnabled;
@property (nonatomic) BOOL tiltEnabled;
@property (nonatomic) BOOL panWithMomentum;
@property (readonly, nonatomic) UITapGestureRecognizer *doubleTapGestureRecognizer;
@property (readonly, nonatomic) UITapGestureRecognizer *twoFingerTapGestureRecognizer;
@property (readonly, nonatomic) UILongPressGestureRecognizer *twoFingerLongPressGestureRecognizer;
@property (readonly, nonatomic) UIPinchGestureRecognizer *pinchGestureRecognizer;
@property (readonly, nonatomic) UIPanGestureRecognizer *panGestureRecognizer;
@property (readonly, nonatomic) UIRotationGestureRecognizer *rotationGestureRecognizer;
@property (readonly, nonatomic) UIGestureRecognizer *oneHandedZoomGestureRecognizer;
@property (readonly, nonatomic) PUICCrownInputSequencer *zoomingCrownSequencer;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithMapView:(id)view gestureTargetView:(id)view doubleTapTargetView:(id)view;
- (id)initWithMapView:(id)view gestureTargetView:(id)view;
- (void)_setOneHandedZoomGestureConfiguration:(id)configuration;
- (BOOL)isRotationEnabled;
- (BOOL)isTiltEnabled;
- (void)dealloc;
- (BOOL)isZoomEnabled;
- (BOOL)isScrollEnabled;
- (void)stopDynamicAnimations;
- (void)beginGesturing;
- (void)endGesturing;
- (void)startUserInteractionFromExternalGesture;
- (void)stopUserInteractionFromExternalGesture;
- (void)_clearGesture:(id)gesture;
- (void)clearGestureRecognizersInFlight;
- (void)_setTraitCollection:(id)collection;
- (void)_handleStandardTilt:(id)tilt;
- (void)handleTilt:(id)tilt;
- (void)handleRotation:(id)rotation;
- (void)_updateRotationGestureForState:(long long)state focusPoint:(struct CGPoint { double x0; double x1; })point rotation:(double)rotation velocity:(double)velocity;
- (void)handleDoubleTap:(id)tap;
- (void)handleTwoFingerTap:(id)tap;
- (void)handleTwoFingerLongPress:(id)press;
- (void)handlePinch:(id)pinch;
- (void)handlePanZoom:(id)zoom;
- (void)handleZoomingCrownSequencer:(id)sequencer;
- (void)_resetCrownZoomingFocusPoint;
- (void)_updateZoomGestureForState:(long long)state focusPoint:(struct CGPoint { double x0; double x1; })point scale:(double)scale velocity:(double)velocity gestureType:(long long)type configuration:(id)configuration;
- (struct CGPoint { double x0; double x1; })_snapPointToDevicePixels:(struct CGPoint { double x0; double x1; })pixels;
- (void)handlePan:(id)pan;
- (void)handleTouch:(id)touch;
- (void)gestureRecognizerTouchesBegan:(id)began;
- (void)gestureRecognizerTouchesEnded:(id)ended;
- (void)gestureRecognizerTouchesCanceled:(id)canceled;
- (double)variableDelayTapRecognizer:(id)recognizer shouldWaitForNextTapForDuration:(double)duration afterTouch:(id)touch;
- (void)handleZoomArrowMask:(long long)mask speed:(double)speed;
- (void)zoomIn;
- (void)zoomOut;
- (void)cancelZoomInOrOut;
- (void)handleArrowPan:(id)pan;
- (void)handleArrowRotate:(id)rotate;
- (void)handleArrowZoom:(id)zoom;
- (BOOL)gestureRecognizerShouldBegin:(id)begin;
- (BOOL)tiltGestureRecognizerShouldBegin:(id)begin;
- (BOOL)gestureRecognizer:(id)recognizer shouldReceiveTouch:(id)touch;
- (BOOL)gestureRecognizer:(id)recognizer shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)recognizer;
@end

#endif /* MKMapGestureController_h */
