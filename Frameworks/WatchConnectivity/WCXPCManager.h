//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 207.0.0.0.0
//
#ifndef WCXPCManager_h
#define WCXPCManager_h
@import Foundation;

#include "NSXPCConnectionDelegate-Protocol.h"
#include "WCXPCManagerClientProtocol-Protocol.h"
#include "WCXPCManagerDaemonProtocol-Protocol.h"
#include "WCXPCManagerDelegate-Protocol.h"

@class NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface WCXPCManager : NSObject<NSXPCConnectionDelegate, WCXPCManagerClientProtocol, WCXPCManagerDaemonProtocol>

@property (readonly) NSXPCConnection *connection;
@property (readonly) NSObject<OS_dispatch_queue> *workQueue;
@property int listenerResumedToken;
@property BOOL connectionInvalidated;
@property BOOL reconnectFailed;
@property unsigned long long reconnectRetryCount;
@property (weak) NSObject<WCXPCManagerDelegate> *delegate;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (void)initialize;
+ (id)daemonInterface;
+ (id)clientInterface;
+ (id)sharedManager;

/* instance methods */
- (id)init;
- (void)setupConnection;
- (void)onqueue_retryConnectIfNecessary;
- (void)onqueue_reconnect;
- (void)interruptionHandler;
- (void)handleInterruptedConnection;
- (void)connection:(id)connection handleInvocation:(id)invocation isReply:(BOOL)reply;
- (void)sessionReadyForInitialStateForClientPairingID:(id)id supportsActiveDeviceSwitch:(BOOL)switch withErrorHandler:(id /* block */)handler;
- (void)sendMessage:(id)message clientPairingID:(id)id acceptanceHandler:(id /* block */)handler;
- (void)sendMessage:(id)message clientPairingID:(id)id acceptanceHandler:(id /* block */)handler errorHandler:(id /* block */)handler;
- (void)updateApplicationContext:(id)context clientPairingID:(id)id errorHandler:(id /* block */)handler;
- (void)transferFile:(id)file sandboxToken:(id)token clientPairingID:(id)id errorHandler:(id /* block */)handler;
- (void)transferUserInfo:(id)info withURL:(id)url clientPairingID:(id)id errorHandler:(id /* block */)handler;
- (void)cancelSendWithIdentifier:(id)identifier;
- (void)cancelAllOutstandingMessages;
- (void)acknowledgeFileIndexWithIdentifier:(id)identifier clientPairingID:(id)id;
- (void)acknowledgeFileResultIndexWithIdentifier:(id)identifier clientPairingID:(id)id;
- (void)acknowledgeUserInfoIndexWithIdentifier:(id)identifier clientPairingID:(id)id;
- (void)acknowledgeUserInfoResultIndexWithIdentifier:(id)identifier clientPairingID:(id)id;
- (void)invalidateConnection;
- (void)handleMessageSendingAllowed;
- (void)handleSentMessageWithIdentifier:(id)identifier error:(id)error;
- (void)handleRequest:(id)request;
- (void)handleResponse:(id)response;
- (void)handleApplicationContextWithPairingID:(id)id;
- (void)handleIncomingFileWithPairingID:(id)id;
- (void)handleIncomingUserInfoWithPairingID:(id)id;
- (void)handleFileResultWithPairingID:(id)id;
- (void)handleUserInfoResultWithPairingID:(id)id;
- (void)handleSessionStateChanged:(id)changed;
- (void)handleActiveDeviceSwitchStarted;
@end

#endif /* WCXPCManager_h */
