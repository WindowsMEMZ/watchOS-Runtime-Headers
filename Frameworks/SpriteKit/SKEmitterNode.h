//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 50.0.6.0.0
//
#ifndef SKEmitterNode_h
#define SKEmitterNode_h
@import Foundation;

#include "SKNode.h"
#include "SKAction.h"
#include "SKKeyframeSequence.h"
#include "SKNode.h"
#include "SKShader.h"
#include "SKTexture.h"

@class NSDictionary, UIColor;

@interface SKEmitterNode : SKNode {
  /* instance variables */
  void * _skcEmitterNode;
  SKNode *_target;
  SKKeyframeSequence *_colorSequence;
  SKKeyframeSequence *_colorBlendSequence;
  SKKeyframeSequence *_alphaSequence;
  SKKeyframeSequence *_scaleSequence;
  SKKeyframeSequence *_rotationSequence;
  SKKeyframeSequence *_fieldInfluenceSequence;
  SKKeyframeSequence *_particleSpeedSequence;
}

@property (retain, nonatomic) SKTexture *particleTexture;
@property (nonatomic) long long particleBlendMode;
@property (retain, nonatomic) UIColor *particleColor;
@property (nonatomic) double particleColorRedRange;
@property (nonatomic) double particleColorGreenRange;
@property (nonatomic) double particleColorBlueRange;
@property (nonatomic) double particleColorAlphaRange;
@property (nonatomic) double particleColorRedSpeed;
@property (nonatomic) double particleColorGreenSpeed;
@property (nonatomic) double particleColorBlueSpeed;
@property (nonatomic) double particleColorAlphaSpeed;
@property (retain, nonatomic) SKKeyframeSequence *particleColorSequence;
@property (nonatomic) double particleColorBlendFactor;
@property (nonatomic) double particleColorBlendFactorRange;
@property (nonatomic) double particleColorBlendFactorSpeed;
@property (retain, nonatomic) SKKeyframeSequence *particleColorBlendFactorSequence;
@property (nonatomic) struct CGPoint { double x0; double x1; } particlePosition;
@property (nonatomic) struct CGVector { double x0; double x1; } particlePositionRange;
@property (nonatomic) double particleSpeed;
@property (nonatomic) double particleSpeedRange;
@property (nonatomic) double emissionAngle;
@property (nonatomic) double emissionAngleRange;
@property (nonatomic) double xAcceleration;
@property (nonatomic) double yAcceleration;
@property (nonatomic) double particleBirthRate;
@property (nonatomic) unsigned long long numParticlesToEmit;
@property (nonatomic) double particleLifetime;
@property (nonatomic) double particleLifetimeRange;
@property (nonatomic) double particleRotation;
@property (nonatomic) double particleRotationRange;
@property (nonatomic) double particleRotationSpeed;
@property (nonatomic) struct CGSize { double x0; double x1; } particleSize;
@property (nonatomic) double particleScale;
@property (nonatomic) double particleScaleRange;
@property (nonatomic) double particleScaleSpeed;
@property (retain, nonatomic) SKKeyframeSequence *particleScaleSequence;
@property (nonatomic) double particleAlpha;
@property (nonatomic) double particleAlphaRange;
@property (nonatomic) double particleAlphaSpeed;
@property (retain, nonatomic) SKKeyframeSequence *particleAlphaSequence;
@property (copy, nonatomic) SKAction *particleAction;
@property (nonatomic) unsigned int fieldBitMask;
@property (weak, nonatomic) SKNode *targetNode;
@property (retain, nonatomic) SKShader *shader;
@property (copy, @dynamic, nonatomic) NSDictionary *attributeValues;
@property (nonatomic) double particleZPosition;
@property (nonatomic) unsigned long long particleRenderOrder;
@property (nonatomic) double particleZPositionRange;
@property (nonatomic) double particleZPositionSpeed;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)debugHierarchyPropertyDescriptions;
+ (id)debugHierarchyValueForPropertyWithName:(id)name onObject:(id)object outOptions:(id *)options outError:(id *)error;

/* instance methods */
- (void *)_makeBackingNode;
- (void)_didMakeBackingNode;
- (id)subEmitterNode;
- (id)fieldInfluenceSequence;
- (void)setFieldInfluenceSequence:(id)sequence;
- (id)particleSpeedSequence;
- (void)setParticleSpeedSequence:(id)sequence;
- (BOOL)isEqualToNode:(id)node;
- (id)physicsWorld;
- (void)setPhysicsWorld:(id)world;
- (id)description;
- (void)setParticleRotationSequence:(id)sequence;
- (unsigned int)activeParticleCount;
- (id)particleRotationSequence;
- (void)setEmissionDistance:(double)distance;
- (double)emissionDistance;
- (void)setEmissionDistanceRange:(double)range;
- (double)emissionDistanceRange;
- (void)setWantsNewParticles:(BOOL)particles;
- (BOOL)wantsNewParticles;
- (void)setDensityBased:(BOOL)based;
- (BOOL)densityBased;
- (void)setUsesPointSprites:(BOOL)sprites;
- (BOOL)usesPointSprites;
- (void)setParticleDensity:(double)density;
- (double)particleDensity;
- (void)setZPosition:(double)zposition;
- (void)resetSimulation;
- (void)commonInit;
- (id)init;
- (id)initWithMinimumParticleCapacity:(unsigned long long)capacity;
- (id)initWithMinimumParticleCapacity:(unsigned long long)capacity minimumPositionBufferCapacity:(unsigned long long)capacity;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (void)copyParticlePropertiesToNode:(id)node;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)advanceSimulationTime:(double)time;
- (void)dealloc;
- (id)valueForAttributeNamed:(id)named;
- (void)setValue:(id)value forAttributeNamed:(id)named;
@end

#endif /* SKEmitterNode_h */
