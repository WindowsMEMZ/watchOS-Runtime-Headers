//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 50.0.6.0.0
//
#ifndef SKUniform_h
#define SKUniform_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "SKTexture.h"

@class NSMutableArray, NSString;

@interface SKUniform : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  long long _type;
  unsigned long long _seed;
  NSMutableArray *_targetShaders;
  union { float _floatValue; " _floatVector2Value; _ x0; float x1; long x2; out a x3; int128 x4; one way e x5; char x6; int128 x7; out const 3 x8; one way a x9; long x10; u x11; e x12; _ x13; float x14; long x15; out a x16; int128 x17; one way e x18; char x19; int128 x20; out const 4 x21; one way a x22; long x23; u x24; e x25; _ x26; float x27; long x28; out a x29; int128 x30; M x31; a x32; int128 x33; const int x34; x x35; 2 x36; one way a x37; long x38; u x39; e x40; char {?=; out long x41; u x42; m x43; in short x44; _ [2]}; float x45; long x46; out a x47; int128 x48; M x49; a x50; int128 x51; const int x52; x x53; 3 x54; one way a x55; long x56; u x57; e x58; char {?=; out long x59; u x60; m x61; in short x62; _ [3]}; float x63; long x64; out a x65; int128 x66; M x67; a x68; int128 x69; const int x70; x x71; 4 x72; one way a x73; long x74; u x75; e x76; char {?=; out long x77; u x78; m x79; in short x80; " x81; x82[4] } x83; } _value;
}

@property unsigned long long _seed;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) long long uniformType;
@property (retain, nonatomic) SKTexture *textureValue;
@property (nonatomic) float floatValue;
@property (nonatomic)  vectorFloat2Value;
@property (nonatomic)  vectorFloat3Value;
@property (nonatomic)  vectorFloat4Value;
@property (nonatomic) struct { x0[2] } matrixFloat2x2Value;
@property (nonatomic) struct { x0[3] } matrixFloat3x3Value;
@property (nonatomic) struct { x0[4] } matrixFloat4x4Value;
@property union _GLKVector2 { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; float x2[2] } floatVector2Value;
@property union _GLKVector3 { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; float x3[3] } floatVector3Value;
@property union _GLKVector4 { struct { float x0; float x1; float x2; float x3; } x0; struct { float x0; float x1; float x2; float x3; } x1; struct { float x0; float x1; float x2; float x3; } x2; float x3[4] } floatVector4Value;
@property union _GLKMatrix2 { struct { float x0; float x1; float x2; float x3; } x0; f] x1[2[2] float x2[4] } floatMatrix2Value;
@property union _GLKMatrix3 { struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; } x0; float x1[9] } floatMatrix3Value;
@property union _GLKMatrix4 { struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } x0; float x1[16] } floatMatrix4Value;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)uniformWithName:(id)name;
+ (id)uniformWithName:(id)name float:(float)float;
+ (id)uniformWithName:(id)name;
+ (id)uniformWithName:(id)name;
+ (id)uniformWithName:(id)name;
+ (id)uniformWithName:(id)name matrixFloat2x2:(struct { x0[2] })float2x2;
+ (id)uniformWithName:(id)name matrixFloat3x3:(struct { x0[3] })float3x3;
+ (id)uniformWithName:(id)name matrixFloat4x4:(struct { x0[4] })float4x4;
+ (id)uniformWithName:(id)name floatVector2:(union _GLKVector2 { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; float x2[2] })vector2;
+ (id)uniformWithName:(id)name floatVector3:(union _GLKVector3 { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; float x3[3] })vector3;
+ (id)uniformWithName:(id)name floatVector4:(union _GLKVector4 { struct { float x0; float x1; float x2; float x3; } x0; struct { float x0; float x1; float x2; float x3; } x1; struct { float x0; float x1; float x2; float x3; } x2; float x3[4] })vector4;
+ (id)uniformWithName:(id)name floatMatrix2:(union _GLKMatrix2 { struct { float x0; float x1; float x2; float x3; } x0; f] x1[2[2] float x2[4] })matrix2;
+ (id)uniformWithName:(id)name floatMatrix3:(union _GLKMatrix3 { struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; } x0; float x1[9] })matrix3;
+ (id)uniformWithName:(id)name floatMatrix4:(union _GLKMatrix4 { struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } x0; float x1[16] })matrix4;
+ (id)uniformWithName:(id)name texture:(id)texture;

/* instance methods */
- (id)description;
- (id)initWithName:(id)name;
- (id)initWithName:(id)name float:(float)float;
- (id)initWithName:(id)name texture:(id)texture;
- (id)initWithName:(id)name;
- (id)initWithName:(id)name;
- (id)initWithName:(id)name;
- (id)initWithName:(id)name matrixFloat2x2:(struct { x0[2] })float2x2;
- (id)initWithName:(id)name matrixFloat3x3:(struct { x0[3] })float3x3;
- (id)initWithName:(id)name matrixFloat4x4:(struct { x0[4] })float4x4;
- (id)initWithName:(id)name floatVector2:(union _GLKVector2 { struct { float x0; float x1; } x0; struct { float x0; float x1; } x1; float x2[2] })vector2;
- (id)initWithName:(id)name floatVector3:(union _GLKVector3 { struct { float x0; float x1; float x2; } x0; struct { float x0; float x1; float x2; } x1; struct { float x0; float x1; float x2; } x2; float x3[3] })vector3;
- (id)initWithName:(id)name floatVector4:(union _GLKVector4 { struct { float x0; float x1; float x2; float x3; } x0; struct { float x0; float x1; float x2; float x3; } x1; struct { float x0; float x1; float x2; float x3; } x2; float x3[4] })vector4;
- (id)initWithName:(id)name floatMatrix2:(union _GLKMatrix2 { struct { float x0; float x1; float x2; float x3; } x0; f] x1[2[2] float x2[4] })matrix2;
- (id)initWithName:(id)name floatMatrix3:(union _GLKMatrix3 { struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; } x0; float x1[9] })matrix3;
- (id)initWithName:(id)name floatMatrix4:(union _GLKMatrix4 { struct { float x0; float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; } x0; float x1[16] })matrix4;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqualToUniform:(id)uniform;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)_propagateChange;
- (void)_addTargetShader:(id)shader;
- (void)_removeTargetShader:(id)shader;
@end

#endif /* SKUniform_h */
