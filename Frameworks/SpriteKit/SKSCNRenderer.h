//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 50.0.6.0.0
//
#ifndef SKSCNRenderer_h
#define SKSCNRenderer_h
@import Foundation;

#include "SKLabelNode.h"
#include "SKScene.h"

@class BOOL *, NSMutableDictionary;

@interface SKSCNRenderer : NSObject {
  /* instance variables */
  double _timePreviousUpdate;
  void * _skcRenderer;
  NSMutableDictionary *_viewRenderOptions;
  SKLabelNode *_statsLabel;
  double _prevViewAspect;
  unsigned int _spritesRendered;
  unsigned int _spritesSubmitted;
  int _frames;
  unsigned int _prevSpritesRendered;
  unsigned int _prevSpritesRenderedSubmitted;
  double _timeBeginFrameCount;
  float _fps;
  BOOL _hasRenderedOnce;
  BOOL _hasRenderedForCurrentUpdate;
  BOOL _isInTransition;
  BOOL _disableInput;
  float _prevBackingScaleFactor;
}

@property (retain, nonatomic) SKScene *scene;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } bounds;
@property (nonatomic) double backingScaleFactor;
@property (nonatomic) BOOL showsFPS;
@property (nonatomic) BOOL showsDrawCount;
@property (nonatomic) BOOL showsNodeCount;
@property (nonatomic) BOOL showsPhysics;
@property (nonatomic) BOOL showsFields;
@property (nonatomic) BOOL ignoresSiblingOrder;

/* class methods */
+ (int)getOpenGLFramebuffer:(id)glframebuffer;
+ (void)restoreDefaultOpenGLState:(id)glstate frameBuffer:(int)buffer;
+ (id)rendererWithDevice:(id)device options:(id)options;
+ (void)setPrefersOpenGL:(BOOL)gl;
+ (id)rendererWithContext:(id)context options:(id)options;

/* instance methods */
- (void)dealloc;
- (id)initWithSKCRenderer:(void *)skcrenderer;
- (void)_initialize;
- (void)setupContext;
- (void)updateAtTime:(double)time;
- (void)renderWithEncoder:(id)encoder pass:(id)pass commandQueue:(id)queue;
- (void)renderTransition:(id)transition withInputTexture:(id)texture outputTexture:(id)texture time:(float)time encoder:(id)encoder pass:(id)pass commandQueue:(id)queue;
- (void)renderToTexture:(id)texture commandQueue:(id)queue;
- (void)renderToFramebuffer:(int)framebuffer shouldClear:(BOOL)clear;
- (void)render:(BOOL)render;
- (void)settingsForTransition:(id)transition atTime:(double)time renderIncomingToTexture:(BOOL *)texture renderOutgoingToTexture:(BOOL *)texture renderIncomingToScreen:(BOOL *)screen renderOutgoingToScreen:(BOOL *)screen;
- (void)renderTransition:(id)transition withInputTexture:(unsigned int)texture outputTexture:(unsigned int)texture inputTextureSize:(struct CGSize { double x0; double x1; })size outputTextureSize:(struct CGSize { double x0; double x1; })size time:(float)time;
- (void)renderTransition:(id)transition toFramebuffer:(int)framebuffer withInputTexture:(unsigned int)texture outputTexture:(unsigned int)texture inputTextureSize:(struct CGSize { double x0; double x1; })size outputTextureSize:(struct CGSize { double x0; double x1; })size time:(float)time;
- (struct CGSize { double x0; double x1; })pixelSize;
- (void)setShowsSpriteBounds:(BOOL)bounds;
- (BOOL)showsSpriteBounds;
- (void)setShowsQuadCount:(BOOL)count;
- (BOOL)showsQuadCount;
- (void)set_showsOutlineInterior:(BOOL)interior;
- (BOOL)_showsOutlineInterior;
- (id)init;
- (void)set_showsSpriteBounds:(BOOL)bounds;
- (BOOL)_showsSpriteBounds;
- (void)set_shouldCenterStats:(BOOL)stats;
- (BOOL)_shouldCenterStats;
- (void)set_showsCoreAnimationFPS:(BOOL)fps;
- (BOOL)_showsCoreAnimationFPS;
- (void)set_showsCPUStats:(BOOL)cpustats;
- (BOOL)_showsCPUStats;
- (void)set_showsGPUStats:(BOOL)gpustats;
- (BOOL)_showsGPUStats;
- (BOOL)_showsCulledNodesInNodeCount;
- (void)set_showsCulledNodesInNodeCount:(BOOL)count;
- (BOOL)_showsTotalAreaRendered;
- (void)set_showsTotalAreaRendered:(BOOL)rendered;
- (void)_showAllStats;
- (void)_update:(double)_update;
- (1)_getViewport;
- (1)_getDestBounds;
- (struct { x0[4] })_getMatrix;
- (id)_getOptions;
- (id)_scene;
- (double)_fps;
- (int)_spriteRenderCount;
- (int)_spriteSubmitCount;
@end

#endif /* SKSCNRenderer_h */
