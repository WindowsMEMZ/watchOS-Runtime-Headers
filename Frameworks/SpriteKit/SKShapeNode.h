//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 50.0.6.0.0
//
#ifndef SKShapeNode_h
#define SKShapeNode_h
@import Foundation;

#include "SKNode.h"
#include "SKShader.h"
#include "SKTexture.h"

@class NSDictionary, UIColor;

@interface SKShapeNode : SKNode {
  /* instance variables */
  void * _skcShapeNode;
}

@property (nonatomic) double renderQualityRatio;
@property (nonatomic) struct CGPath * path;
@property (retain, nonatomic) UIColor *strokeColor;
@property (retain, nonatomic) UIColor *fillColor;
@property (nonatomic) long long blendMode;
@property (nonatomic) BOOL antialiased;
@property (nonatomic) double lineWidth;
@property (nonatomic) double glowWidth;
@property (nonatomic) int lineCap;
@property (nonatomic) int lineJoin;
@property (nonatomic) double miterLimit;
@property (readonly, nonatomic) double lineLength;
@property (retain, nonatomic) SKTexture *fillTexture;
@property (retain, nonatomic) SKShader *fillShader;
@property (retain, nonatomic) SKTexture *strokeTexture;
@property (retain, nonatomic) SKShader *strokeShader;
@property (copy, @dynamic, nonatomic) NSDictionary *attributeValues;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)shapeNodeWithPath:(struct CGPath *)path;
+ (id)shapeNodeWithPath:(struct CGPath *)path centered:(BOOL)centered;
+ (id)shapeNodeWithEllipseInRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
+ (id)shapeNodeWithEllipseOfSize:(struct CGSize { double x0; double x1; })size;
+ (id)shapeNodeWithCircleOfRadius:(double)radius;
+ (id)shapeNodeWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
+ (id)shapeNodeWithRectOfSize:(struct CGSize { double x0; double x1; })size;
+ (id)shapeNodeWithRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect cornerRadius:(double)radius;
+ (id)shapeNodeWithRectOfSize:(struct CGSize { double x0; double x1; })size cornerRadius:(double)radius;
+ (id)shapeNodeWithTriangleA:(struct CGPoint { double x0; double x1; })a B:(struct CGPoint { double x0; double x1; })b C:(struct CGPoint { double x0; double x1; })c;
+ (id)shapeNodeWithPoints:(struct CGPoint { double x0; double x1; } *)points count:(unsigned long long)count;
+ (id)shapeNodeWithSplinePoints:(struct CGPoint { double x0; double x1; } *)points count:(unsigned long long)count;
+ (id)debugHierarchyPropertyDescriptions;
+ (id)debugHierarchyValueForPropertyWithName:(id)name onObject:(id)object outOptions:(id *)options outError:(id *)error;

/* instance methods */
- (void *)_makeBackingNode;
- (void)_didMakeBackingNode;
- (BOOL)isEqualToNode:(id)node;
- (void)_initialize;
- (id)init;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)description;
- (BOOL)containsPoint:(struct CGPoint { double x0; double x1; })point;
- (BOOL)isAntialiased;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)valueForAttributeNamed:(id)named;
- (void)setValue:(id)value forAttributeNamed:(id)named;
@end

#endif /* SKShapeNode_h */
