//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 50.0.6.0.0
//
#ifndef SKShader_h
#define SKShader_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSPointerArray, NSString;
@protocol struct shared_ptr<jet_command_buffer> { struct jet_command_buffer * x0; struct __shared_weak_count * x1; }, struct shared_ptr<jet_program> { struct jet_program * x0; struct __shared_weak_count * x1; }, {map<std::string, std::shared_ptr<jet_buffer_pool>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<jet_buffer_pool>>>>="__tree_"{__tree<std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, std::less<std::string>>>="__value_"Q}}}, {shared_ptr<jet_program>="__ptr_"^{jet_program}"__cntrl_"^{__shared_weak_count}};

@interface SKShader : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  NSMutableDictionary *_uniformData;
  NSString *_fileName;
  BOOL _isPrecompiledMetal;
  NSString *_compileLog;
  BOOL _programDirty;
  BOOL _programWithTransformDirty;
  NSPointerArray *_targetNodes;
  BOOL _usesTimeUniform;
  BOOL _usesPathLengthUniform;
  BOOL _usesSpriteSizeUniform;
  struct shared_ptr<jet_program> { struct jet_program *__ptr_; struct __shared_weak_count *__cntrl_; } _backingProgram;
  struct shared_ptr<jet_program> { struct jet_program *__ptr_; struct __shared_weak_count *__cntrl_; } _backingProgramWithTransform;
  struct map<std::string, std::shared_ptr<jet_buffer_pool>, std::less<std::string>, std::allocator<std::pair<const std::string, std::shared_ptr<jet_buffer_pool>>>> { struct __tree<std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, std::less<std::string>>, std::allocator<std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>>> { void *__begin_node_; struct __compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, void *>>> { struct __tree_end_node<std::__tree_node_base<void *> *> { void *__left_; } __value_; } __pair1_; struct __compressed_pair<unsigned long, std::__map_value_compare<std::string, std::__value_type<std::string, std::shared_ptr<jet_buffer_pool>>, std::less<std::string>>> { unsigned long long __value_; } __pair3_; } __tree_; } _attributeBuffers;
}

@property (readonly) NSArray *_textureUniforms;
@property (readonly) void * _attributeBuffers;
@property (readonly) struct shared_ptr<jet_program> { struct jet_program * x0; struct __shared_weak_count * x1; } _backingProgram;
@property (readonly) struct shared_ptr<jet_program> { struct jet_program * x0; struct __shared_weak_count * x1; } _backingProgramWithTransform;
@property (readonly) struct shared_ptr<jet_command_buffer> { struct jet_command_buffer * x0; struct __shared_weak_count * x1; } _commands;
@property BOOL performFullCapture;
@property (copy) NSString *source;
@property (copy) NSArray *uniforms;
@property (copy, nonatomic) NSArray *attributes;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)shader;
+ (id)shaderWithSource:(id)source;
+ (id)shaderWithSource:(id)source uniforms:(id)uniforms;
+ (id)shaderWithFileNamed:(id)named;
+ (id)precompiledMetalShaderWithFile:(id)file uniforms:(id)uniforms;

/* instance methods */
- (id)init;
- (id)initWithSource:(id)source;
- (id)initWithSource:(id)source uniforms:(id)uniforms;
- (id)fragmentPrelude;
- (id)fragmentPreludeMetal;
- (void)generateVertexAttributeDeclares:(id *)declares statements:(id *)statements;
- (void)generateFragmentAttributeDeclares:(id *)declares;
- (id)fullVertexSource;
- (id)fullVertexWithTransformSource;
- (id)_fullVertexSourceWithImplementation:(long long)implementation;
- (id)fullFragmentSource;
- (id)fullMetalVertexSource;
- (id)fullMetalVertexWithTransformSource;
- (id)_fullMetalVertexSourceWithImplementation:(BOOL)implementation;
- (id)fullMetalFragmentSource;
- (void)addUniform:(id)uniform;
- (id)uniformNamed:(id)named;
- (void)removeUniformNamed:(id)named;
- (BOOL)isValid;
- (BOOL)_backingProgramIsDirty;
- (struct shared_ptr<jet_program> { struct jet_program * x0; struct __shared_weak_count * x1; })_makeBackingProgramWithImplementation:(long long)implementation;
- (struct shared_ptr<jet_command_buffer> { struct jet_command_buffer * x0; struct __shared_weak_count * x1; })_commandsForBatchOffset:(int)offset count:(int)count;
- (id)_generateMetalSource;
- (id)_getMetalVertexOutDefinition;
- (id)_getMetalFragmentFunctionName;
- (id)_getShaderCompilationLog;
- (id)_getMetalVertexShaderSource:(BOOL)source;
- (id)_getMetalFragmentShaderSource;
- (BOOL)_usesTimeUniform;
- (BOOL)_usesPathLengthUniform;
- (void)_setUniformsDirty;
- (void)_addTargetNode:(id)node;
- (void)_removeTargetNode:(id)node;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (BOOL)isEqualToShader:(id)shader;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)_getLegacyUniformData;
@end

#endif /* SKShader_h */
