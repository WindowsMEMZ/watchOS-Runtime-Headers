//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 50.0.6.0.0
//
#ifndef SKScene_h
#define SKScene_h
@import Foundation;

#include "SKEffectNode.h"
#include "SKCameraNode.h"
#include "SKNode.h"
#include "SKPhysicsBody.h"
#include "SKPhysicsWorld.h"
#include "SKView.h"

@class AVAudioEngine, AVAudioEnvironmentNode, NSMapTable, NSMutableArray, PKPhysicsWorld, UIColor;
@protocol SKSceneDelegate;

@interface SKScene : SKEffectNode {
  /* instance variables */
  double _lastUpdate;
  double _pausedTime;
  NSMapTable *_touchMap;
  NSMutableArray *_allChildenWithConstraints;
  struct CGRect { struct CGPoint { double x; double y; } origin; struct CGSize { double width; double height; } size; } _bounds;
  BOOL _isSetup;
  BOOL _usesExplicitUpdate;
  BOOL _usesExplicitRender;
  SKPhysicsBody *_scenePinBody;
  void * _skcSceneNode;
}

@property BOOL _usesExplicitUpdate;
@property BOOL _usesExplicitRender;
@property BOOL _needsUpdate;
@property BOOL _needsRender;
@property (nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } visibleRect;
@property (nonatomic) struct CGSize { double x0; double x1; } visibleRectSize;
@property (nonatomic) struct CGPoint { double x0; double x1; } visibleRectCenter;
@property (retain, nonatomic) AVAudioEnvironmentNode *avAudioEnvironmentNode;
@property (retain, nonatomic) PKPhysicsWorld *_pkPhysicsWorld;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (nonatomic) long long scaleMode;
@property (weak, nonatomic) SKCameraNode *camera;
@property (weak, nonatomic) SKNode *listener;
@property (readonly, retain, nonatomic) AVAudioEngine *audioEngine;
@property (retain, nonatomic) UIColor *backgroundColor;
@property (weak, nonatomic) NSObject<SKSceneDelegate> *delegate;
@property (nonatomic) struct CGPoint { double x0; double x1; } anchorPoint;
@property (readonly, nonatomic) SKPhysicsWorld *physicsWorld;
@property (readonly, weak, nonatomic) SKView *view;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)sceneWithSize:(struct CGSize { double x0; double x1; })size;
+ (id)sceneWithContentsOfFile:(id)file;
+ (id)sceneWithContentsOfFile:(id)file size:(struct CGSize { double x0; double x1; })size;
+ (id)debugHierarchyPropertyDescriptions;
+ (id)debugHierarchyValueForPropertyWithName:(id)name onObject:(id)object outOptions:(id *)options outError:(id *)error;

/* instance methods */
- (void)_willMoveFromView:(id)view;
- (void)willRenderContent;
- (void)didContinueContact:(id)contact;
- (void)_setNeedsUpdate;
- (void)_setNeedsRender;
- (BOOL)_isDirty;
- (void)_setDirty;
- (void)_notifyNextDirtyState;
- (void)_setBackgroundContentsWithBuffer:(struct __CVBuffer *)buffer;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)init;
- (id)initWithSize:(struct CGSize { double x0; double x1; })size;
- (id)initWithCoder:(id)coder;
- (void)sceneDidLoad;
- (void)dealloc;
- (BOOL)_hasConstraints;
- (void)_registerConstraintsForNode:(id)node;
- (void)_removeConstraintsForNode:(id)node;
- (struct CGPoint { double x0; double x1; })convertPointFromParent:(struct CGPoint { double x0; double x1; })parent;
- (struct CGPoint { double x0; double x1; })convertPointToParent:(struct CGPoint { double x0; double x1; })parent;
- (void)handleAVAudioEngineInterruption:(id)interruption;
- (void)set_anchorPoint:(struct CGPoint { double x0; double x1; })point;
- (void *)_makeBackingNode;
- (void)_didMakeBackingNode;
- (struct CGPoint { double x0; double x1; })position;
- (void)setPosition:(struct CGPoint { double x0; double x1; })position;
- (void)setScale:(double)scale;
- (double)xScale;
- (void)setXScale:(double)xscale;
- (double)yScale;
- (void)setYScale:(double)yscale;
- (double)zRotation;
- (void)setZRotation:(double)zrotation;
- (double)zPosition;
- (void)setZPosition:(double)zposition;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqualToNode:(id)node;
- (id)description;
- (struct CGPoint { double x0; double x1; })convertPointFromView:(struct CGPoint { double x0; double x1; })view;
- (struct CGPoint { double x0; double x1; })convertPointToView:(struct CGPoint { double x0; double x1; })view;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })frame;
- (void)checkAudioEngine;
- (void)_didMoveToView:(id)view;
- (void)didMoveToView:(id)view;
- (void)willMoveFromView:(id)view;
- (void)didChangeSize:(struct CGSize { double x0; double x1; })size;
- (void)update:(double)update;
- (void)_update:(double)_update;
- (void)didEvaluateActions;
- (void)didSimulatePhysics;
- (void)didApplyConstraints;
- (void)didFinishUpdate;
- (void)setPaused:(BOOL)paused;
- (id)parentFocusEnvironment;
- (id)_getFocusNodes;
@end

#endif /* SKScene_h */
