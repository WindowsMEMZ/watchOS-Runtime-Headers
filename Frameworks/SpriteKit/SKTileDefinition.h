//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 50.0.6.0.0
//
#ifndef SKTileDefinition_h
#define SKTileDefinition_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"
#include "SKTileGroupRule.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSString;

@interface SKTileDefinition : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  NSMutableArray *_normals;
  unsigned long long _orientation;
}

@property (weak, nonatomic) SKTileGroupRule *parentRule;
@property (retain, nonatomic) NSString *uid;
@property (nonatomic) unsigned short currentFrameIndex;
@property (nonatomic) double lastTargetTime;
@property (nonatomic) float currentFrameTime;
@property (nonatomic) BOOL frameDidChange;
@property (nonatomic) BOOL nextFrameAffectsVertexBuffer;
@property (copy, nonatomic) NSArray *textures;
@property (copy, nonatomic) NSArray *normalTextures;
@property (retain, nonatomic) NSMutableDictionary *userData;
@property (copy, nonatomic) NSString *name;
@property (nonatomic) struct CGSize { double x0; double x1; } size;
@property (nonatomic) double timePerFrame;
@property (nonatomic) unsigned long long placementWeight;
@property (nonatomic) unsigned long long rotation;
@property (nonatomic) BOOL flipVertically;
@property (nonatomic) BOOL flipHorizontally;

/* class methods */
+ (BOOL)supportsSecureCoding;
+ (id)tileDefinitionWithTexture:(id)texture;
+ (id)tileDefinitionWithTexture:(id)texture size:(struct CGSize { double x0; double x1; })size;
+ (id)tileDefinitionWithTexture:(id)texture normalTexture:(id)texture size:(struct CGSize { double x0; double x1; })size;
+ (id)tileDefinitionWithTextures:(id)textures size:(struct CGSize { double x0; double x1; })size timePerFrame:(double)frame;
+ (id)tileDefinitionWithTextures:(id)textures normalTextures:(id)textures size:(struct CGSize { double x0; double x1; })size timePerFrame:(double)frame;

/* instance methods */
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (BOOL)isEqualToNode:(id)node;
- (id)copy;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)setDataWithTexture:(id)texture normalTexture:(id)texture tileName:(id)name size:(struct CGSize { double x0; double x1; })size;
- (void)setDataWithTextures:(id)textures normalTextures:(id)textures timePerFrame:(double)frame tileName:(id)name size:(struct CGSize { double x0; double x1; })size;
- (id)init;
- (id)initWithTexture:(id)texture;
- (id)initWithTexture:(id)texture size:(struct CGSize { double x0; double x1; })size;
- (id)initWithTexture:(id)texture normalTexture:(id)texture size:(struct CGSize { double x0; double x1; })size;
- (id)initWithTextures:(id)textures size:(struct CGSize { double x0; double x1; })size timePerFrame:(double)frame;
- (id)initWithTextures:(id)textures normalTextures:(id)textures size:(struct CGSize { double x0; double x1; })size timePerFrame:(double)frame;
@end

#endif /* SKTileDefinition_h */
