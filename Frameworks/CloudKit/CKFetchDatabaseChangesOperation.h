//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKFetchDatabaseChangesOperation_h
#define CKFetchDatabaseChangesOperation_h
@import Foundation;

#include "CKDatabaseOperation.h"
#include "CKFetchDatabaseChangesOperationCallbacks-Protocol.h"
#include "CKFetchDatabaseChangesOperationInfo.h"
#include "CKServerChangeToken.h"

@class NSMutableSet;

@interface CKFetchDatabaseChangesOperation : CKDatabaseOperation<CKFetchDatabaseChangesOperationCallbacks>

@property (retain, nonatomic) CKServerChangeToken *serverChangeToken;
@property (nonatomic) long long status;
@property (retain, nonatomic) NSMutableSet *zoneIDsForMetrics;
@property (readonly, @dynamic, nonatomic) NSObject<CKFetchDatabaseChangesOperationCallbacks> *clientOperationCallbackProxy;
@property (readonly, @dynamic, nonatomic) CKFetchDatabaseChangesOperationInfo *operationInfo;
@property (copy, nonatomic) id /* block */ recordZoneWithIDChangedBlock_wrapper;
@property (copy, nonatomic) id /* block */ recordZoneWithIDWasDeletedBlock_wrapper;
@property (copy, nonatomic) id /* block */ recordZoneWithIDWasPurgedBlock_wrapper;
@property (copy, nonatomic) id /* block */ recordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock_wrapper;
@property (copy, nonatomic) id /* block */ fetchDatabaseChangesCompletionBlock_wrapper;
@property (copy, nonatomic) CKServerChangeToken *previousServerChangeToken;
@property (nonatomic) unsigned long long resultsLimit;
@property (nonatomic) BOOL fetchAllChanges;
@property (copy, nonatomic) id /* block */ recordZoneWithIDChangedBlock;
@property (copy, nonatomic) id /* block */ recordZoneWithIDWasDeletedBlock;
@property (copy, nonatomic) id /* block */ recordZoneWithIDWasPurgedBlock;
@property (copy, nonatomic) id /* block */ recordZoneWithIDWasDeletedDueToUserEncryptedDataResetBlock;
@property (copy, nonatomic) id /* block */ changeTokenUpdatedBlock;
@property (copy, nonatomic) id /* block */ fetchDatabaseChangesCompletionBlock;

/* class methods */
+ (SEL)daemonInvocationSelector;
+ (void)applyDaemonCallbackInterfaceTweaks:(id)tweaks;

/* instance methods */
- (id)init;
- (id)initWithPreviousServerChangeToken:(id)token;
- (void)fillOutOperationInfo:(id)info;
- (void)fillFromOperationInfo:(id)info;
- (BOOL)hasCKOperationCallbacksSet;
- (void)performCKOperation;
- (void)handleChangeForRecordZoneID:(id)id;
- (void)handleDeleteForRecordZoneID:(id)id;
- (void)handlePurgeForRecordZoneID:(id)id;
- (void)handleEncryptedDataResetForRecordZoneID:(id)id;
- (void)handleChangeSetCompletionWithServerChangeToken:(id)token databaseChangesStatus:(long long)status error:(id)error reply:(id /* block */)reply;
- (void)_finishOnCallbackQueueWithError:(id)error;
- (void)ckSignpostBegin;
- (void)ckSignpostEndWithError:(id)error;
- (id)activityCreate;
@end

#endif /* CKFetchDatabaseChangesOperation_h */
