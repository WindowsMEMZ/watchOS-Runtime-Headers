//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKContainerImplementation_h
#define CKContainerImplementation_h
@import Foundation;

#include "CKContainer.h"
#include "CKContainerID.h"
#include "CKContainerOptions.h"
#include "CKContainerSetupInfo.h"
#include "CKDatabaseImplementation.h"
#include "CKEntitlements.h"
#include "CKRecordID.h"
#include "CKUploadRequestManager.h"
#include "CKXPCContainerScopedClient-Protocol.h"
#include "CKXPCContainerScopedDaemon-Protocol.h"
#include "NSObject-Protocol.h"

@class NSLock, NSMutableArray, NSNumber, NSOperationQueue, NSString, NSXPCConnection;
@protocol OS_dispatch_queue;

@interface CKContainerImplementation : NSObject<CKXPCContainerScopedClient> {
  /* instance variables */
  CKRecordID *_containerScopedUserID_locked;
  CKRecordID *_orgAdminUserID_locked;
  NSString *_sourceApplicationBundleIdentifier_locked;
  NSString *_sourceApplicationSecondaryIdentifier_locked;
  BOOL _hasValidContainerScopedDaemonProxyCreator;
  BOOL _hasValidDiscretionaryXPCConnection;
  NSObject<CKXPCContainerScopedDaemon> *_containerScopedDaemonProxyCreator;
  NSObject<NSObject> *_connectionInterruptedObserver;
  NSOperationQueue *_convenienceOperationQueue;
  NSMutableArray *_sandboxExtensionHandles;
  NSLock *_daemonConnectionLock;
}

@property (readonly, weak, nonatomic) CKContainer *unconfiguredWrappingContainer;
@property (readonly, copy, nonatomic) CKContainerID *containerID;
@property (readonly, copy, nonatomic) CKContainerOptions *options;
@property (readonly, nonatomic) CKDatabaseImplementation *privateCloudDatabaseImplementation;
@property (readonly, nonatomic) CKDatabaseImplementation *publicCloudDatabaseImplementation;
@property (readonly, nonatomic) CKDatabaseImplementation *sharedCloudDatabaseImplementation;
@property (readonly, nonatomic) CKDatabaseImplementation *organizationCloudDatabaseImplementation;
@property (readonly, nonatomic) NSMutableArray *codeServiceImplementations;
@property (readonly, nonatomic) CKUploadRequestManager *uploadRequestManager;
@property (readonly, nonatomic) NSXPCConnection *discretionaryXPCConnection;
@property (readonly, nonatomic) NSOperationQueue *throttlingOperationQueue;
@property (readonly, nonatomic) NSOperationQueue *backgroundThrottlingOperationQueue;
@property (readonly, nonatomic) NSOperationQueue *discretionaryThrottlingOperationQueue;
@property (readonly, nonatomic) int statusReportToken;
@property (readonly, nonatomic) CKContainerSetupInfo *cachedSetupInfo;
@property (nonatomic) BOOL hasCachedSetupInfo;
@property (readonly, nonatomic) CKEntitlements *resolvedEntitlements;
@property (copy) NSNumber *fakeDeviceToDeviceEncryptionAvailability;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *underlyingDispatchQueue;
@property (copy) CKRecordID *containerScopedUserID;
@property (readonly, copy, nonatomic) NSString *containerIdentifier;
@property (copy) CKRecordID *orgAdminUserID;
@property (copy) NSString *personaIdentifier;

/* class methods */
+ (void)initialize;

/* instance methods */
- (id)initWithContainerID:(id)id options:(id)options unconfiguredWrappingContainer:(id)container;
- (id)codeServiceImplementationWithName:(id)name;
- (id)codeServiceImplementationWithName:(id)name databaseScope:(long long)scope;
- (id)codeServiceImplementationWithName:(id)name serviceInstanceURL:(id)url;
- (id)codeServiceImplementationWithName:(id)name databaseScope:(long long)scope serviceInstanceURL:(id)url;
- (void)dealloc;
- (id)CKPropertiesDescription;
- (id)description;
- (id)setupInfo;
- (id)deviceContext;
- (id)_discretionaryDaemonMachServiceConnection;
- (void)consumeSandboxExtensions:(id)extensions reply:(id /* block */)reply;
- (void)handleSharingUIUpdatedShare:(id)share recordID:(id)id isDeleted:(BOOL)deleted error:(id)error reply:(id /* block */)reply;
- (void)_addPreparedConvenienceOperation:(id)operation;
- (void)addOperation:(id)operation wrappingContainer:(id)container convenienceConfiguration:(id)configuration;
- (void)_scheduleConvenienceOperation:(id)operation wrappingContainer:(id)container convenienceConfiguration:(id)configuration;
- (void)statusGroupsForApplicationPermission:(unsigned long long)permission completionHandler:(id /* block */)handler;
- (void)setApplicationPermission:(unsigned long long)permission enabled:(BOOL)enabled completionHandler:(id /* block */)handler;
- (void)resetAllApplicationPermissionsWithCompletionHandler:(id /* block */)handler;
- (void)tossConfigWithCompletionHandler:(id /* block */)handler;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(id /* block */)handler;
- (id)serverPreferredPushEnvironmentWithError:(id *)error;
- (void)serverPreferredPushEnvironmentSynchronous:(BOOL)synchronous withCompletionHandler:(id /* block */)handler;
- (void)setFakeError:(id)error forNextRequestOfClassName:(id)name;
- (void)setFakeResponseOperationResult:(id)result forNextRequestOfClassName:(id)name forItemID:(id)id withLifetime:(int)lifetime;
- (void)getOutstandingOperationCountWithCompletionHandler:(id /* block */)handler;
- (void)dropDetachedContainersWithCompletionHandler:(id /* block */)handler;
- (void)fetchSignatureGeneratorForCurrentUserBoundaryKeyWithCompletionHandler:(id /* block */)handler;
- (void)fetchCurrentUserBoundaryKeyWithCompletionHandler:(id /* block */)handler;
- (id)untrustedEntitlements;
- (id)sourceApplicationBundleIdentifier;
- (void)setSourceApplicationBundleIdentifier:(id)identifier;
- (id)sourceApplicationSecondaryIdentifier;
- (void)setSourceApplicationSecondaryIdentifier:(id)identifier;
- (void)wipeAllCachesAndDie;
- (void)clearContainerFromMetadataCache;
- (void)clearPILSCacheForLookupInfos:(id)infos;
- (void)representativeDataclassEnabledWithCompletionHandler:(id /* block */)handler;
- (void)fetchServerEnvironment:(id /* block */)environment;
- (void)fetchCurrentDeviceIDWithCompletionHandler:(id /* block */)handler;
- (void)fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:(id /* block */)handler;
- (void)fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:(id /* block */)handler;
- (void)submitEventMetric:(id)metric;
- (void)submitEventMetric:(id)metric completionHandler:(id /* block */)handler;
- (void)_submitEventMetric:(id)metric completionHandler:(id /* block */)handler;
- (long long)lastKnownDeviceCount;
- (id)networkTransferEndpointWithError:(id *)error;
- (id)recordChangeProvider;
- (void)handleRecordChanged:(id)changed changeType:(long long)type record:(id)record error:(id)error;
- (void)fetchFrameworkCachesDirectoryWithCompletionHandler:(id /* block */)handler;
- (id)CKStatusReportArray;
- (void)dumpDaemonStatusReportToFileHandle:(id)handle completionHandler:(id /* block */)handler;
- (void)dumpDaemonStatusReport;
- (id)primaryIdentifier;
- (id)applicationBundleIdentifierForPush;
- (void)addPreparedOperationToThrottlingOperationQueue:(id)queue;
- (void)addPreparedOperationToBackgroundThrottlingOperationQueue:(id)queue;
- (void)addPreparedOperationToDiscretionaryThrottlingOperationQueue:(id)queue;
- (void)fetchUserRecordIDWithCompletionHandler:(id /* block */)handler;
- (void)fetchOrgAdminUserRecordIDWithCompletionHandler:(id /* block */)handler;
- (void)discoverAllIdentitiesWithWrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)discoverUserIdentityWithEmailAddress:(id)address wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)discoverUserIdentityWithPhoneNumber:(id)number wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)discoverUserIdentityWithUserRecordID:(id)id wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithLookupInfo:(id)info wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithEmailAddress:(id)address wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithPhoneNumber:(id)number wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithUserRecordID:(id)id wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)fetchShareMetadataWithURL:(id)url wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)acceptShareMetadata:(id)metadata wrappingContainer:(id)container convenienceConfiguration:(id)configuration completionHandler:(id /* block */)handler;
- (void)decryptPersonalInfoOnShare:(id)share completionHandler:(id /* block */)handler;
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(id /* block */)handler;
- (void)accountStatusWithCompletionHandler:(id /* block */)handler;
- (void)accountInfoWithCompletionHandler:(id /* block */)handler;
- (void)reloadAccountWithCompletionHandler:(id /* block */)handler;
- (void)statusForApplicationPermission:(unsigned long long)permission completionHandler:(id /* block */)handler;
- (void)requestApplicationPermission:(unsigned long long)permission completionHandler:(id /* block */)handler;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(id /* block */)handler;
- (void)fetchLongLivedOperationWithID:(id)id wrappingContainer:(id)container completionHandler:(id /* block */)handler;
- (void)registerForAssetUploadRequests:(id /* block */)requests;
- (void)registerForAssetUploadRequests:(id /* block */)requests machServiceName:(id)name;
- (void)registerForPackageUploadRequests:(id /* block */)requests;
- (void)registerForPackageUploadRequests:(id /* block */)requests machServiceName:(id)name;
- (void)unregisterFromUploadRequests;
- (void)unregisterFromUploadRequestsWithMachServiceName:(id)name;
- (void)manuallyTriggerUploadRequests;
- (void)cancelUploadRequests;
- (void)registerForAssetRequests:(id /* block */)requests packageRequests:(id /* block */)requests machServiceName:(id)name;
@end

#endif /* CKContainerImplementation_h */
