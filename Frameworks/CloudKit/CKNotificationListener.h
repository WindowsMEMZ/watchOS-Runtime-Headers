//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKNotificationListener_h
#define CKNotificationListener_h
@import Foundation;

#include "APSConnectionDelegate-Protocol.h"
#include "CKPKPushRegistryDelegate-Protocol.h"
#include "CKPropertiesDescription-Protocol.h"

@class APSConnection, NSArray, NSMutableDictionary, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface CKNotificationListener : NSObject<APSConnectionDelegate, CKPKPushRegistryDelegate, CKPropertiesDescription> {
  /* instance variables */
  NSString *_apsEnvironment;
  NSMutableDictionary *_subscriptionInfos;
  NSObject<OS_dispatch_queue> *_callbackQueue;
  NSOperationQueue *_operationQueue;
  APSConnection *_apsConnection;
  unsigned long long _strategy;
}

@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (retain) NSArray *notificationObservers;
@property (readonly, copy, nonatomic) NSString *machServiceName;
@property BOOL useOpportunisticPushTopics;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithStrategy:(unsigned long long)strategy;
- (id)initWithMachServiceName:(id)name;
- (id)initWithStrategy:(unsigned long long)strategy machServiceName:(id)name;
- (void)dealloc;
- (void)CKDescribePropertiesUsing:(id)using;
- (id)redactedDescription;
- (BOOL)hasInitializedAPSConnection;
- (void)registerForSubscriptionWithID:(id)id inDatabase:(id)database handler:(id /* block */)handler;
- (void)unregisterForSubscriptionWithID:(id)id inDatabase:(id)database;
- (BOOL)isRegisteredForSubscriptionWithID:(id)id inDatabase:(id)database;
- (id)uniqueKeyForSubscriptionID:(id)id inDatabase:(id)database;
- (id)apsConnectionOnQueue;
- (void)connection:(id)connection didReceivePublicToken:(id)token;
- (void)connection:(id)connection didReceiveIncomingMessage:(id)message;
- (void)handlePushNotificationWithPayload:(id)payload completionHandler:(id /* block */)handler;
- (void)connection:(id)connection didChangeConnectedStatus:(BOOL)status;
- (void)connectionDidReconnect:(id)reconnect;
- (void)didReceiveIncomingPushWithPayload:(id)payload withCompletionHandler:(id /* block */)handler;
@end

#endif /* CKNotificationListener_h */
