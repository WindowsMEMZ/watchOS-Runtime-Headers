//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKStreamingAssetAppendContext_h
#define CKStreamingAssetAppendContext_h
@import Foundation;

#include "C2RequestDelegate-Protocol.h"
#include "CKStreamingAsset.h"
#include "OS_os_activity-Protocol.h"

@class NSString, NSURLSessionDataTask;
@protocol OS_dispatch_queue;

@interface CKStreamingAssetAppendContext : NSObject<C2RequestDelegate>

@property (readonly, nonatomic) CKStreamingAsset *streamingAsset;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *appendQueue;
@property (readonly, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic) BOOL appending;
@property (nonatomic) BOOL currentAppendCancelled;
@property (nonatomic) unsigned long long currentSegmentLength;
@property (retain, nonatomic) NSURLSessionDataTask *dataTask;
@property (retain, nonatomic) NSString *requestUUID;
@property (retain, nonatomic) NSObject<OS_os_activity> *osActivity;
@property (copy, nonatomic) id /* block */ completionHandler;
@property (nonatomic) BOOL fakeMissingUploadReceipt;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)requestToAppendSegmentData:(id)data uploadURL:(id)url requestUUID:(id)uuid offset:(unsigned long long)offset;

/* instance methods */
- (id)init;
- (id)initWithStreamingAsset:(id)asset;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (BOOL)appendSegmentWithData:(id)data error:(id *)error;
- (BOOL)appendSegmentWithData:(id)data newStreamingAsset:(id *)asset error:(id *)error;
- (void)appendSegmentWithData:(id)data completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession task:(id)task didCompleteWithError:(id)error;
- (void)URLSession:(id)urlsession task:(id)task didSendBodyData:(long long)data totalBytesSent:(long long)sent totalBytesExpectedToSend:(long long)send;
- (void)URLSession:(id)urlsession task:(id)task willPerformHTTPRedirection:(id)httpredirection newRequest:(id)request completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession task:(id)task needNewBodyStream:(id /* block */)stream;
- (void)URLSession:(id)urlsession task:(id)task _willSendRequestForEstablishedConnection:(id)connection completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession _taskIsWaitingForConnection:(id)connection;
- (void)URLSession:(id)urlsession task:(id)task _conditionalRequirementsChanged:(BOOL)changed;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveResponse:(id)response completionHandler:(id /* block */)handler;
- (void)URLSession:(id)urlsession dataTask:(id)task didReceiveData:(id)data;
- (void)URLSession:(id)urlsession _willRetryBackgroundDataTask:(id)task withError:(id)error;
- (void)abort;
- (BOOL)isAppending;
- (BOOL)isCurrentAppendCancelled;
@end

#endif /* CKStreamingAssetAppendContext_h */
