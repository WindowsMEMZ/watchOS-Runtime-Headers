//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKIntervalMapRangeMapContainer_h
#define CKIntervalMapRangeMapContainer_h
@import Foundation;

@protocol {RangeDataVector<unsigned long, unsigned long, id, 0U, std::less<id>>="m_entries"{vector<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id>, std::allocator<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id> *, std::allocator<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id>>>="__value_"^v}}"m_compare"{less<id>=}};

@interface CKIntervalMapRangeMapContainer : NSObject {
  /* instance variables */
  struct RangeDataVector<unsigned long, unsigned long, id, 0U, std::less<id>> { struct vector<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id>, std::allocator<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id>>> { void *__begin_; void *__end_; struct __compressed_pair<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id> *, std::allocator<lldb_private::AugmentedRangeData<unsigned long, unsigned long, id>>> { void *__value_; } __end_cap_; } m_entries; struct less<id> m_compare; } rangeMap;
}

/* instance methods */
@end

#endif /* CKIntervalMapRangeMapContainer_h */
