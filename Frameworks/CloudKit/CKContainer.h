//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKContainer_h
#define CKContainer_h
@import Foundation;

#include "CKContainerID.h"
#include "CKContainerImplementation.h"
#include "CKContainerOptions.h"
#include "CKContainerSetupInfo.h"
#include "CKConvenienceConfiguration.h"
#include "CKDatabase.h"

@class NSMutableArray, NSString;

@interface CKContainer : NSObject

@property (readonly, nonatomic) CKDatabase *privateCloudDatabase;
@property (readonly, nonatomic) CKDatabase *publicCloudDatabase;
@property (readonly, nonatomic) CKDatabase *sharedCloudDatabase;
@property (retain, nonatomic) NSMutableArray *codeServices;
@property (readonly, nonatomic) int scopedIdentityUpdateToken;
@property (readonly, nonatomic) CKContainerImplementation *implementation;
@property (readonly, nonatomic) CKConvenienceConfiguration *convenienceConfiguration;
@property (readonly, copy, nonatomic) CKContainerID *containerID;
@property (readonly, copy, nonatomic) CKContainerOptions *options;
@property (copy) NSString *sourceApplicationBundleIdentifier;
@property (copy) NSString *sourceApplicationSecondaryIdentifier;
@property (readonly, copy, nonatomic) CKContainerSetupInfo *setupInfo;
@property (readonly, nonatomic) CKDatabase *organizationCloudDatabase;
@property (readonly, copy, nonatomic) NSString *containerIdentifier;

/* class methods */
+ (BOOL)currentProcessCanUseCloudKit;
+ (void)initialize;
+ (id)allocWithZone:(struct _NSZone *)zone;
+ (id)defaultContainer;
+ (id)containersByIdentifier;
+ (id)containerWithIdentifier:(id)identifier;
+ (void)removeIdentifierFromContainersWithIdentifier:(id)identifier;
+ (id)containerIDForContainerIdentifier:(id)identifier environment:(long long)environment;
+ (id)containerIDForContainerIdentifier:(id)identifier;
+ (long long)containerEnvironmentForContainerID:(id)id entitlements:(id)entitlements;
+ (id)matterhornName;
+ (id)uploadRequestFetchAllNotificationName;
+ (void)populateXPCInterfaceOnClientToDaemonContainerScopedInterfaceForSelector:(SEL)selector generateInterfaceBlock:(id /* block */)block;
+ (void)_populateXPCInterfaceOnClientToDaemonContainerScopedInterfaceForOptionalSelector:(SEL)selector generateInterfaceBlock:(id /* block */)block;
+ (id)_CKXPCClientToDiscretionaryDaemonInterface;
+ (id)importantUserRecordAccessQueue;
+ (id)instanceMethodSignatureForSelector:(SEL)selector;

/* instance methods */
- (void)discoverAllContactUserInfosWithCompletionHandler:(id /* block */)handler;
- (void)discoverUserInfoWithEmailAddress:(id)address completionHandler:(id /* block */)handler;
- (void)discoverUserInfoWithUserRecordID:(id)id completionHandler:(id /* block */)handler;
- (id)_initWithContainerIdentifier:(id)identifier;
- (id)initWithContainerSetupInfo:(id)info;
- (id)initWithContainerID:(id)id options:(id)options;
- (id)initWithContainerID:(id)id;
- (id)_initUnconfiguredContainerWithImplementation:(id)implementation;
- (void)dealloc;
- (id)initWithImplementation:(id)implementation convenienceConfiguration:(id)configuration;
- (void)getSynchronousContainerScopedDaemonProxyWithErrorHandler:(id /* block */)handler daemonProxyHandler:(id /* block */)handler;
- (id)databaseWithDatabaseScope:(long long)scope;
- (id)codeServiceWithName:(id)name;
- (id)codeServiceWithName:(id)name databaseScope:(long long)scope;
- (id)codeServiceWithName:(id)name serviceInstanceURL:(id)url;
- (id)codeServiceWithName:(id)name databaseScope:(long long)scope serviceInstanceURL:(id)url;
- (id)forwardingTargetForSelector:(SEL)selector;
- (void)addOperation:(id)operation;
- (void)accountStatusWithCompletionHandler:(id /* block */)handler;
- (void)statusForApplicationPermission:(unsigned long long)permission completionHandler:(id /* block */)handler;
- (void)requestApplicationPermission:(unsigned long long)permission completionHandler:(id /* block */)handler;
- (void)fetchUserRecordIDWithCompletionHandler:(id /* block */)handler;
- (void)discoverAllIdentitiesWithCompletionHandler:(id /* block */)handler;
- (void)discoverUserIdentityWithEmailAddress:(id)address completionHandler:(id /* block */)handler;
- (void)discoverUserIdentityWithPhoneNumber:(id)number completionHandler:(id /* block */)handler;
- (void)discoverUserIdentityWithUserRecordID:(id)id completionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithEmailAddress:(id)address completionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithPhoneNumber:(id)number completionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithUserRecordID:(id)id completionHandler:(id /* block */)handler;
- (void)fetchShareMetadataWithURL:(id)url completionHandler:(id /* block */)handler;
- (void)acceptShareMetadata:(id)metadata completionHandler:(id /* block */)handler;
- (void)fetchAllLongLivedOperationIDsWithCompletionHandler:(id /* block */)handler;
- (void)fetchLongLivedOperationWithID:(id)id completionHandler:(id /* block */)handler;
- (void)getNewWebSharingIdentityDataWithCompletionHandler:(id /* block */)handler;
- (void)fetchShareParticipantWithLookupInfo:(id)info completionHandler:(id /* block */)handler;
- (void)submitEventMetric:(id)metric;
- (void)submitEventMetric:(id)metric completionHandler:(id /* block */)handler;
- (void)setApplicationPermission:(unsigned long long)permission enabled:(BOOL)enabled completionHandler:(id /* block */)handler;
- (void)statusGroupsForApplicationPermission:(unsigned long long)permission completionHandler:(id /* block */)handler;
- (void)accountInfoWithCompletionHandler:(id /* block */)handler;
- (void)serverPreferredPushEnvironmentWithCompletionHandler:(id /* block */)handler;
- (id)serverPreferredPushEnvironmentWithError:(id *)error;
- (void)wipeAllCachesAndDie;
- (void)fetchCurrentDeviceIDWithCompletionHandler:(id /* block */)handler;
- (void)fetchSignatureGeneratorForCurrentUserBoundaryKeyWithCompletionHandler:(id /* block */)handler;
- (void)fetchFullNameAndPrimaryEmailOnAccountWithCompletionHandler:(id /* block */)handler;
- (void)fetchFullNameAndFormattedUsernameOfAccountWithCompletionHandler:(id /* block */)handler;
- (void)setFakeError:(id)error forNextRequestOfClassName:(id)name;
- (void)fetchOrgAdminUserRecordIDWithCompletionHandler:(id /* block */)handler;
- (void)registerForAssetUploadRequests:(id /* block */)requests;
- (void)registerForAssetUploadRequests:(id /* block */)requests machServiceName:(id)name;
- (void)registerForPackageUploadRequests:(id /* block */)requests;
- (void)registerForPackageUploadRequests:(id /* block */)requests machServiceName:(id)name;
- (void)unregisterFromUploadRequests;
- (void)unregisterFromUploadRequestsWithMachServiceName:(id)name;
- (void)manuallyTriggerUploadRequests;
- (void)cancelUploadRequests;
@end

#endif /* CKContainer_h */
