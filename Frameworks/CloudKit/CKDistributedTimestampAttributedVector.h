//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKDistributedTimestampAttributedVector_h
#define CKDistributedTimestampAttributedVector_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSMutableDictionary;

@interface CKDistributedTimestampAttributedVector : NSObject<NSSecureCoding, NSCopying>

@property (readonly, nonatomic) NSMutableDictionary *mutableAttributeToSparseVector;
@property (readonly, copy) NSDictionary *attributeToSparseVector;

/* class methods */
+ (id)pDistributedTimestampsFromAttributedVector:(id)vector;
+ (id)attributedVectorFromPDistributedTimestamps:(id)timestamps error:(id *)error;
+ (id)pVersionVectorFromAttributedVector:(id)vector siteIdentifier:(id)identifier;
+ (int)pClockTypeAndAtomStateFromClockType:(unsigned char)type atomState:(unsigned char)state;
+ (unsigned char)clockTypeFromPClockTypeAndAtomState:(int)state;
+ (unsigned char)atomStateFromPClockTypeAndAtomState:(int)state;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)winningLWWTimestampForModifier:(id)modifier winningAttribute:(unsigned short *)attribute;
- (unsigned long long)timestampCountForAtomState:(unsigned char)state;
- (id)vectorFilteredByClockType:(unsigned char)type;
- (id)vectorFilteredByAtomState:(unsigned char)state;
- (id)vectorFillingInImplicitClockValuesWithAtomState:(unsigned char)state usingSiteIdentifiers:(id)identifiers;
- (id)init;
- (id)initWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)swapContentsWithVector:(id)vector;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)allSiteIdentifiers;
- (unsigned long long)timestampCount;
- (unsigned long long)timestampCountForSiteIdentifier:(id)identifier;
- (unsigned short)attributeForTimestamp:(id)timestamp;
- (void)intersectVector:(id)vector;
- (void)minusVector:(id)vector;
- (void)minusVector:(id)vector forAttribute:(unsigned short)attribute;
- (void)addAllClockValuesFromVector:(id)vector;
- (void)intersectAttributedVector:(id)vector;
- (void)addClockValuesInIndexSet:(id)set withAttribute:(unsigned short)attribute forSiteIdentifier:(id)identifier;
- (void)removeClockValuesInIndexSet:(id)set forSiteIdentifier:(id)identifier;
- (void)_maintainInvariants;
- (id)clockValuesForSiteIdentifier:(id)identifier;
- (void)enumerateClockValuesForSiteIdentifier:(id)identifier usingBlock:(id /* block */)block;
- (void)enumerateAllClockValuesUsingBlock:(id /* block */)block;
- (id)vectorWithoutAttributes;
- (id)vectorFilteredBySiteIdentifiers:(id)identifiers;
- (id)vectorFilteredByModifier:(id)modifier;
- (id)vectorFilteredByAttribute:(unsigned short)attribute;
- (id)vectorWithAttributeReplacementBlock:(id /* block */)block;
- (id)descriptionWithStringSiteIdentifiers:(BOOL)identifiers;
- (id)descriptionWithStringSiteIdentifiers;
- (id)description;
@end

#endif /* CKDistributedTimestampAttributedVector_h */
