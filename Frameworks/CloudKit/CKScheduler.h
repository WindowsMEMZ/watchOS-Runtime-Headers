//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKScheduler_h
#define CKScheduler_h
@import Foundation;

@class NSMutableDictionary, NSNumber;
@protocol OS_dispatch_queue;

@interface CKScheduler : NSObject {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSObject<OS_dispatch_queue> *_callbackQueue;
  NSObject<OS_dispatch_queue> *_xpcActivityRegisterQueue;
}

@property (readonly, nonatomic) NSMutableDictionary *xpcActivitiesByCKActivityIdentifier;
@property (copy) NSNumber *fakeDeviceCount;
@property double delayAfterXPCActivityRegister;
@property (readonly, nonatomic) NSMutableDictionary *handlersByCKActivityIdentifier;

/* class methods */
+ (id)sharedScheduler;
+ (id)xpcActivityIdentifierForCKActivityIdentifier:(id)identifier;
+ (id)activityFromXPCActivity:(id)xpcactivity;
+ (id)identifierWithImmediateInvocationForIdentifier:(id)identifier;

/* instance methods */
- (id)initInternal;
- (id)init;
- (void)submitActivity:(id)activity;
- (void)submitActivity:(id)activity completionHandler:(id /* block */)handler;
- (void)setXPCActivity:(id)xpcactivity forActivityIdentifier:(id)identifier;
- (void)registerActivityIdentifier:(id)identifier handler:(id /* block */)handler;
- (void)registerActivityIdentifier:(id)identifier replaceExistingHandler:(BOOL)handler handler:(id /* block */)handler;
- (void)unregisterActivityIdentifier:(id)identifier;
- (void)unregisterHandlerForActivityIdentifier:(id)identifier;
- (void)cancelActivityWithIdentifier:(id)identifier;
- (id)xpcActivityForActivityWithIdentifier:(id)identifier;
- (id)suggestedXPCActivityCriteriaForActivity:(id)activity;
- (BOOL)hasPendingActivityWithActivityIdentifier:(id)identifier;
- (BOOL)isXPCActivityPending:(id)pending;
- (id)activityForActivityIdentifier:(id)identifier;
- (long long)currentPriorityForActivityIdentifier:(id)identifier;
- (void)performAsyncOnQueue:(id /* block */)queue;
@end

#endif /* CKScheduler_h */
