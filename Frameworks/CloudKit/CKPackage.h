//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKPackage_h
#define CKPackage_h
@import Foundation;

#include "CKPackageReference.h"
#include "CKRecord.h"
#include "CKRecordValue-Protocol.h"
#include "CKSQLite.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSData, NSString;

@interface CKPackage : NSObject<NSSecureCoding, CKRecordValue>

@property (nonatomic) long long state;
@property (copy, nonatomic) NSData *archiverInfo;
@property (retain, nonatomic) CKSQLite *sqlite;
@property (nonatomic) unsigned long long nextItemIndex;
@property (nonatomic) BOOL open;
@property (nonatomic) struct _OpaquePCSShareProtection * recordPCS;
@property (copy, nonatomic) NSString *UUID;
@property (nonatomic) unsigned long long size;
@property (nonatomic) BOOL wasCached;
@property (nonatomic) BOOL uploaded;
@property (nonatomic) BOOL downloaded;
@property (nonatomic) BOOL hasSize;
@property (nonatomic) BOOL shouldReadRawEncryptedData;
@property (nonatomic) long long storageGroupingPolicy;
@property (nonatomic) long long uploadRank;
@property (nonatomic) long long packageID;
@property (copy, nonatomic) NSArray *assets;
@property (weak, nonatomic) CKRecord *record;
@property (copy, nonatomic) NSString *recordKey;
@property (retain, nonatomic) CKPackageReference *packageReference;
@property (copy, nonatomic) NSString *databaseBasePath;
@property (copy, nonatomic) NSString *rootDatabasePath;
@property (copy, nonatomic) NSData *signature;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)packageWithError:(id *)error;
+ (id)packageWithPackage:(id)package error:(id *)error;
+ (id)clonedPackageWithRecordID:(id)id databaseScope:(long long)scope fieldName:(id)name error:(id *)error;
+ (id)packageInClientWithBasePath:(id)path error:(id *)error;
+ (id)packageInDaemonWithBasePath:(id)path error:(id *)error;
+ (id)stagingPathSuffixForCloudKitCachesDirectoryWithBundleIdentifier:(id)identifier;
+ (id)packageProcessBasePath;
+ (id)clientPackageDatabaseDirectory;
+ (void)destroyClientPackageWithDatabaseBasePath:(id)path UUID:(id)uuid;
+ (BOOL)supportsSecureCoding;
+ (void)gcPackagesInDirectory:(id)directory dbInUseBlock:(id /* block */)block;

/* instance methods */
- (id)clonedPackageInDaemonWithBasePath:(id)path filesDuplicatedIntoDirectory:(id)directory error:(id *)error;
- (BOOL)removeDBAndDeleteFilesWithError:(id *)error;
- (id)init;
- (id)_initWithBasePath:(id)path UUID:(id)uuid;
- (id)initUnreachablePackageWithUUID:(id)uuid;
- (BOOL)isReference;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)dealloc;
- (id)_packageDatabasePathWithState:(long long)state;
- (id)_packageDatabasePath;
- (BOOL)movePackagesDatabaseInDirection:(BOOL)direction error:(id *)error;
- (BOOL)handleChangeStateAction:(long long)action error:(id *)error;
- (void)handleChangeStateAction:(long long)action;
- (BOOL)setArchiverInfo:(id)info error:(id *)error;
- (BOOL)prepareDBWithError:(id *)error;
- (void)releaseDBWithRemove:(BOOL)remove;
- (void)removeDB;
- (void)releaseDB;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (BOOL)openWithError:(id *)error;
- (void)close;
- (unsigned long long)itemCount;
- (unsigned long long)itemCountWithError:(id *)error;
- (id)_itemWithColumnsByName:(id)name;
- (id)_itemOrNilAtIndex:(unsigned long long)index;
- (id)itemAtIndex:(unsigned long long)index;
- (id)itemEnumerator;
- (id)itemEnumeratorForSectionAtIndex:(unsigned long long)index;
- (BOOL)addItem:(id)item;
- (BOOL)updateItemAtIndex:(long long)index withSignature:(id)signature size:(unsigned long long)size itemID:(unsigned long long)id sectionIndex:(unsigned long long)index;
- (BOOL)updateItemAtIndex:(long long)index withFileURL:(id)url;
- (BOOL)updateItemsAtIndexes:(id)indexes fileURLs:(id)urls;
- (unsigned long long)sectionCount;
- (id)sectionAtIndex:(unsigned long long)index;
- (BOOL)addSection:(id)section;
- (id)testAddSectionConstraintViolation:(id)violation;
- (id)performTransactionBlock:(id /* block */)block;
- (BOOL)claimOwnershipWithError:(id *)error;
- (double)earliestUploadReceiptExpiration;
- (BOOL)isOpen;
@end

#endif /* CKPackage_h */
