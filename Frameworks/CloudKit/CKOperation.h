//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKOperation_h
#define CKOperation_h
@import Foundation;

#include "NSOperation.h"
#include "CKEventMetric.h"
#include "CKLogicalDeviceContext.h"
#include "CKOperationCallbackProxy.h"
#include "CKOperationCallbacks-Protocol.h"
#include "CKOperationConfiguration.h"
#include "CKOperationGroup.h"
#include "CKOperationInfo.h"
#include "CKOperationMMCSRequestOptions.h"
#include "CKOperationMetrics.h"
#include "CKPlaceholderOperation.h"
#include "CKSignpost.h"
#include "CKThrottlingCriteria-Protocol.h"
#include "OS_os_activity-Protocol.h"

@class NSDictionary, NSError, NSMutableDictionary, NSString;
@protocol CKTestResultOverlayBox, OS_dispatch_queue, OS_dispatch_source, OS_os_transaction, OS_voucher;

@interface CKOperation : NSOperation<CKOperationCallbacks, CKThrottlingCriteria> {
  /* instance variables */
  NSObject<OS_os_transaction> *_executingTransaction;
  NSObject<OS_voucher> *_clientVoucher;
  NSObject<OS_os_activity> *_osActivity;
  int _executionState;
  BOOL _scheduledDiscretionaryOperation;
  BOOL _startedDiscretionaryOperation;
  BOOL _failedToScheduleDiscretionaryOperation;
  BOOL _startedDaemonOperation;
  BOOL _clouddConnectionInterrupted;
  BOOL _isDiscretionarySuspended;
  NSError *_cancelError;
  NSObject<OS_dispatch_source> *_timeoutSource;
  struct _xpc_activity_eligibility_changed_handler_s * _xpcActivityEligibilityChangedHandler;
  unsigned long long _duetPreClearedMode;
  unsigned long long _discretionaryWhenBackgroundedState;
  unsigned long long _systemScheduler;
  NSString *_xpcActivityIdentifier;
  CKPlaceholderOperation *_placeholderOperation;
  CKSignpost *_signpost;
  id _signpostIntervalState;
}

@property (copy, nonatomic) NSString *operationID;
@property (copy) CKOperationMetrics *metrics;
@property (nonatomic) BOOL usesBackgroundSession;
@property (retain, nonatomic) NSMutableDictionary *lifecycleCallbacks;
@property BOOL isOutstandingOperation;
@property (copy) CKOperationConfiguration *convenienceOperationConfiguration;
@property (retain) CKOperationGroup *convenienceOperationGroup;
@property (retain, nonatomic) NSError *error;
@property (readonly, nonatomic) BOOL isFinishingOnCallbackQueue;
@property (nonatomic) BOOL canDropItemResultsEarly;
@property (readonly, nonatomic) CKOperationInfo *operationInfo;
@property (readonly, nonatomic) CKLogicalDeviceContext *deviceContext;
@property (readonly, nonatomic) CKOperationCallbackProxy *clientOperationCallbackProxy;
@property (readonly, nonatomic) CKEventMetric *operationMetric;
@property BOOL queueHasStarted;
@property (nonatomic) BOOL _ckRaiseInGeneratedCallbackImplementation;
@property (retain, nonatomic) CKOperationMMCSRequestOptions *MMCSRequestOptions;
@property (retain, nonatomic) NSObject<CKTestResultOverlayBox> *appliedOverlayProtocol;
@property (nonatomic) unsigned long long requestOriginator;
@property (nonatomic) BOOL preferAnonymousRequests;
@property BOOL isFinished;
@property (readonly, copy) CKOperationConfiguration *resolvedConfiguration;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue;
@property (copy, nonatomic) id /* block */ requestCompletedBlock;
@property (copy, nonatomic) NSDictionary *additionalRequestHTTPHeaders;
@property (copy, nonatomic) CKOperationConfiguration *configuration;
@property (retain, nonatomic) CKOperationGroup *group;
@property (copy, nonatomic) id /* block */ longLivedOperationWasPersistedBlock;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)assetInfoForOperation:(id)operation recordID:(id)id recordKey:(id)key arrayIndex:(long long)index;
+ (BOOL)_wireUpAssetContentForOperation:(id)operation inRecord:(id)record checkSignatures:(BOOL)signatures outError:(id *)error;
+ (SEL)daemonInvocationSelector;
+ (Class)operationInfoClass;
+ (Class)operationClass;
+ (void)applyDaemonCallbackInterfaceTweaks:(id)tweaks;
+ (id)operationDaemonCallbackProtocol;
+ (SEL)daemonCallbackCompletionSelector;
+ (id)exportedDaemonCallbackInterface;
+ (void)setOperationIDPrefix:(id)idprefix;
+ (id)operationIDPrefix;
+ (id)requestOriginatorStringRepresentation:(unsigned long long)representation;

/* instance methods */
- (void)setQoSFromSwiftTaskPriority;
- (id)init;
- (void)dealloc;
- (id)activityCreate;
- (void)start;
- (void)validateXPCActivityCriteria:(id)criteria;
- (void)performCKOperation;
- (void)ckSignpostBegin;
- (void)ckSignpostEndWithError:(id)error;
- (BOOL)hasCKOperationCallbacksSet;
- (BOOL)CKOperationShouldRun:(id *)run;
- (id)_createPlaceholderOperation;
- (void)main;
- (void)setCompletionBlock:(id /* block */)block;
- (BOOL)isConcurrent;
- (void)fillOutOperationInfo:(id)info;
- (void)fillFromOperationInfo:(id)info;
- (void)cancelWithUnderlyingError:(id)error;
- (void)cancelWithUnderlyingError:(id)error message:(id)message;
- (void)cancelWithError:(id)error;
- (void)_cancelDaemonOperation;
- (void)_finishDiscretionaryOperation;
- (void)cancel;
- (BOOL)isExecuting;
- (BOOL)transitionToExecuting;
- (BOOL)transitionToFinished;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (id)ckShortDescription;
- (id)CKShortDescriptionRedact:(BOOL)redact;
- (id)zoneIDsToZoneNamesString:(id)string;
- (void)configureConvenience:(id)convenience;
- (void)withContainerScopedDaemon:(id /* block */)daemon;
- (void)handleLongLivedOperationDidPersist;
- (void)handleSystemDidImposeInfo:(id)info;
- (void)handleRequestDidComplete:(id)complete;
- (void)openFileWithOpenInfo:(id)info reply:(id /* block */)reply;
- (void)handleFinishWithAssetDownloadStagingInfo:(id)info reply:(id /* block */)reply;
- (void)handleDiscretionaryOperationShouldStart:(BOOL)start nonDiscretionary:(BOOL)discretionary error:(id)error;
- (void)handleDiscretionaryOperationShouldSuspend;
- (void)handleDaemonOperationWillStartWithClassName:(id)name isTopLevelDaemonOperation:(BOOL)operation replyBlock:(id /* block */)block;
- (void)handleDaemonRequestWillSendWithClassName:(id)name testRequestProperties:(id)properties replyBlock:(id /* block */)block;
- (void)handleDaemonRequestWillReceiveWithClassName:(id)name testRequestProperties:(id)properties replyBlock:(id /* block */)block;
- (void)handleOperationDidCompleteWithMetrics:(id)metrics error:(id)error;
- (void)_handleRemoteProxyFailureWithError:(id)error;
- (void)finishWithError:(id)error;
- (void)_performErrorRateMitigation;
- (void)_finishOnCallbackQueueWithError:(id)error;
- (id)resolvedConfigurationIfNotNil;
- (void)setQualityOfService:(long long)service;
- (long long)qualityOfService;
- (id)containerID;
- (id)unitTestOverrides;
- (void)addUnitTestOverrides:(id)overrides;
- (BOOL)_BOOLForUnitTestOverride:(id)override defaultValue:(BOOL)value;
- (id)applicationBundleIdentifierForContainerAccess;
- (id)operationGroupName;
- (void)applyConvenienceConfiguration:(id)configuration;
- (void)setupBGSystemTaskExpirationHandler;
- (id)container;
- (void)setContainer:(id)container;
- (BOOL)allowsCellularAccess;
- (void)setAllowsCellularAccess:(BOOL)access;
- (BOOL)isLongLived;
- (void)setLongLived:(BOOL)lived;
- (double)timeoutIntervalForRequest;
- (void)setTimeoutIntervalForRequest:(double)request;
- (double)timeoutIntervalForResource;
- (void)setTimeoutIntervalForResource:(double)resource;
@end

#endif /* CKOperation_h */
