//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKAssetRepairScheduler_h
#define CKAssetRepairScheduler_h
@import Foundation;

#include "CKAssetRepairSchedulerDelegate-Protocol.h"
#include "CKContainer.h"
#include "CKUploadRequestConfiguration.h"

@class NSMutableDictionary, NSMutableSet, NSOperationQueue, NSURL;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface CKAssetRepairScheduler : NSObject {
  /* instance variables */
  NSMutableDictionary *_remainingAssetsToRequestCallbacks;
  NSMutableDictionary *_assetCache;
  NSMutableSet *_confirmedMissingAssets;
  NSMutableSet *_assetsBeingRequested;
  NSMutableSet *_assetsBeingUploaded;
  CKContainer *_container;
  CKUploadRequestConfiguration *_repairContainerOverrides;
  NSObject<OS_dispatch_queue> *_internalQueue;
  NSObject<OS_dispatch_queue> *_callbackQueue;
  NSOperationQueue *_requestOperationQueue;
  NSOperationQueue *_uploadOperationQueue;
  NSObject<OS_dispatch_source> *_uploadPendingRequestTimer;
  NSObject<OS_dispatch_source> *_uploadSuspensionTimer;
  NSMutableDictionary *_retryCountForAssets;
}

@property (readonly, copy) NSURL *temporaryAssetDirectory;
@property (nonatomic) double requestTimeout;
@property (nonatomic) long long repairBatchCountLimit;
@property (nonatomic) long long cacheCountLimit;
@property (nonatomic) double defaultSuspensionTime;
@property (nonatomic) long long repairRetryCount;
@property (weak) NSObject<CKAssetRepairSchedulerDelegate> *delegate;

/* class methods */
+ (id)nameForEvent:(long long)event;
+ (long long)estimatedSizeForAssetOrPackage:(id)package;
+ (long long)canCopyFromFileURL:(id)url toDirectoryURL:(id)url;
+ (unsigned long long)remainingCapacityAtURL:(id)url error:(id *)error;

/* instance methods */
- (void)dealloc;
- (id)initWithContainer:(id)container repairContainerOverrides:(id)overrides;
- (void)addUploadRequestsWithMetadata:(id)metadata requestBlocks:(id)blocks;
- (void)removeUploadRequestWithRecordID:(id)id;
- (void)tickle;
- (void)clearAssetCache;
- (void)cancelAllOperations;
- (id)clonedAsset:(id)asset withError:(id *)error;
- (BOOL)hasPendingWork;
- (id)allRemainingRequestableAssets;
- (id)allRemainingUploadableAssets;
@end

#endif /* CKAssetRepairScheduler_h */
