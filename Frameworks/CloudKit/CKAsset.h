//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKAsset_h
#define CKAsset_h
@import Foundation;

#include "CKAssetDownloadPreauthorization.h"
#include "CKAssetReference.h"
#include "CKAssetRereferenceInfo.h"
#include "CKAssetTransferOptions.h"
#include "CKMediaItemMaker.h"
#include "CKMergeableDeltaID.h"
#include "CKRecord.h"
#include "CKRecordID.h"
#include "CKRecordValue-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSData, NSDate, NSDictionary, NSFileHandle, NSNumber, NSString, NSURL;

@interface CKAsset : NSObject<CKRecordValue, NSSecureCoding>

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy, nonatomic) NSNumber *deviceID;
@property (readonly, copy, nonatomic) NSNumber *fileID;
@property (copy) NSURL *fileURL;
@property (copy) NSData *assetContent;
@property (copy) NSString *itemTypeHint;
@property (copy) NSDate *downloadURLExpiration;
@property (copy) NSString *uploadReceipt;
@property double uploadReceiptExpiration;
@property long long storageGroupingPolicy;
@property BOOL shouldReadRawEncryptedData;
@property (copy) CKAssetTransferOptions *assetTransferOptions;
@property (copy) CKAssetReference *assetReference;
@property (copy) NSDictionary *assetChunkerOptions;
@property (copy) NSString *downloadURLTemplate;
@property (weak) CKRecord *record;
@property (copy) NSString *recordKey;
@property (copy) NSURL *contentBaseURL;
@property (copy) NSString *owner;
@property (copy) NSString *requestor;
@property (copy) NSString *authToken;
@property (retain) CKAssetDownloadPreauthorization *downloadPreauthorization;
@property (copy) NSString *downloadBaseURL;
@property unsigned long long downloadTokenExpiration;
@property (copy) NSData *boundaryKey;
@property (retain) NSFileHandle *fileHandle;
@property (copy) NSURL *constructedAssetDownloadURL;
@property (copy) NSString *constructedAssetDownloadURLTemplate;
@property (retain) CKMediaItemMaker *mediaItemMaker;
@property unsigned long long constructedAssetEstimatedSize;
@property (copy) NSData *constructedAssetDownloadParameters;
@property (readonly) BOOL isConstructedAsset;
@property (copy) NSURL *realPathURL;
@property (retain) CKAssetRereferenceInfo *assetRereferenceInfo;
@property (copy) NSData *signature;
@property unsigned long long size;
@property unsigned long long paddedFileSize;
@property (copy) NSURL *nullableFileURL;
@property (copy) NSString *UUID;
@property (copy) NSNumber *generationCountToSave;
@property (readonly, nonatomic) BOOL shouldReadAssetContentUsingClientProxy;
@property BOOL exposeAssetKey;
@property (copy) NSData *assetKey;
@property (copy) NSData *wrappedAssetKey;
@property (copy) NSData *clearAssetKey;
@property (copy) NSData *referenceSignature;
@property BOOL wasCached;
@property BOOL hasSize;
@property BOOL uploaded;
@property BOOL downloaded;
@property long long arrayIndex;
@property (copy) CKRecordID *recordID;
@property (copy) CKMergeableDeltaID *mergeableDeltaID;
@property long long uploadRank;
@property BOOL isV2RereferenceDownloadedAsset;

/* class methods */
+ (void)initialize;
+ (id)assetWithFileURL:(id)url;
+ (int)errorCodeFromPOSIXCode:(int)posixcode;
+ (id)_openUnencryptedWithOpenInfo:(id)info genCountCheck:(BOOL)check error:(id *)error;
+ (id)openWithOpenInfo:(id)info error:(id *)error;
+ (id)getFileSizeWithOpenInfo:(id)info error:(id *)error;
+ (id)getFileMetadataWithFileHandle:(id)handle openInfo:(id)info error:(id *)error;
+ (id)getFileMetadataAtPath:(id)path error:(id *)error;
+ (id)_expandTemplateURL:(id)url fieldValues:(id)values;
+ (id)_canonicalizeTemplateURL:(id)url;
+ (BOOL)_templateURLRequiresAssetKey:(id)key;
+ (id)_downloadURLWithTemplate:(id)template fileName:(id)name;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initInternal;
- (id)initWithFileURL:(id)url signature:(id)signature;
- (id)initWithFileURL:(id)url signature:(id)signature assetHandleUUID:(id)uuid;
- (id)initWithFileURL:(id)url;
- (id)initWithAssetReference:(id)reference;
- (id)initWithDeviceID:(id)id fileID:(id)id generationID:(id)id;
- (id)initWithFileDescriptor:(int)descriptor;
- (id)initWithAssetContent:(id)content itemTypeHint:(id)hint;
- (id)assetHandleUUID;
- (BOOL)isRereferencedAssetUpload;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (id)openWithError:(id *)error;
- (id)downloadURLWithFileName:(id)name;
- (id)downloadURL;
- (void)setDeviceID_modelMutation:(id)mutation;
- (void)setFileID_modelMutation:(id)mutation;
- (void)setAssetContent_modelMutation:(id)mutation;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* CKAsset_h */
