//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKSQLiteTableGroup_h
#define CKSQLiteTableGroup_h
@import Foundation;

#include "CKSQLiteTableGroupEntry.h"
#include "CKSQLiteDatabase.h"
#include "CKSQLiteDatabaseKeyValueProperties-Protocol.h"
#include "CKSQLiteDatabaseManager.h"
#include "CKSQLiteTOCTableGroup.h"

@class NSError, NSMutableDictionary, NSObject;

@interface CKSQLiteTableGroup : CKSQLiteTableGroupEntry<CKSQLiteDatabaseKeyValueProperties> {
  /* instance variables */
  struct { struct _opaque_pthread_mutex_t { long long __sig; char x[56] __opaque; } lock; struct _opaque_pthread_cond_t { long long __sig; char x[40] __opaque; } waitCond; atomic  accessThread; unsigned long long x0; } _serializerBacking;
  struct { struct _opaque_pthread_mutex_t { long long x0; char x1[56] } x0; struct _opaque_pthread_cond_t { long long x0; char x1[40] } x1; atomic  x2; unsigned long long x3; } * _serializer;
  BOOL _valid;
  NSMutableDictionary *_pendingTables;
  NSError *_addTableError;
  CKSQLiteDatabaseManager *_databaseManager;
  NSMutableDictionary *_tablesByName;
  BOOL _deleteTablesOnDealloc;
}

@property (readonly, nonatomic) CKSQLiteTOCTableGroup *tocTableGroup;
@property (retain, nonatomic) NSObject *databaseManagerData;
@property (readonly, nonatomic) CKSQLiteDatabase *db;
@property (readonly, nonatomic) BOOL isNew;
@property (readonly, nonatomic) BOOL isFirstInstance;
@property (readonly, nonatomic) unsigned long long options;
@property (retain, nonatomic) CKSQLiteDatabase *activityPersistenceDatabase;

/* class methods */
+ (id)groupNameWithDomain:(int)domain domainIdentifier:(id)identifier groupName:(id)name;
+ (void)purgeGroup:(id)group;
+ (void)purgeGroupWithName:(id)name inDatabase:(id)database;
+ (id)groupEntryInDatabase:(id)database withGroupName:(id)name error:(id *)error;
+ (id)tableGroupInDatabase:(id)database withName:(id)name error:(id *)error;
+ (void)enumerateGroupsInDatabase:(id)database block:(id /* block */)block;
+ (id)tableGroupWithEntry:(id)entry database:(id)database options:(unsigned long long)options;
+ (id)lookupTableGroupInstanceInCache:(id)cache withName:(id)name options:(unsigned long long)options;
+ (id)lookupTableGroupInstanceInDatabase:(id)database withName:(id)name options:(unsigned long long)options error:(id *)error;
+ (id)createTableGroupInstanceInDatabase:(id)database withName:(id)name options:(unsigned long long)options error:(id *)error;
+ (id)tableGroupInDatabase:(id)database withName:(id)name options:(unsigned long long)options error:(id *)error;
+ (id)tableGroupInDatabase:(id)database withID:(id)id error:(id *)error;
+ (BOOL)rebootShouldClearData;
+ (void)groupWillExpire:(id)expire;
+ (void)expireGroup:(id)group reason:(id)reason database:(id)database;

/* instance methods */
- (void)_setupActivityEntry:(id)entry;
- (id)numberValueForKey:(id)key error:(id *)error;
- (id)setNumberValue:(id)value forKey:(id)key;
- (id)stringValueForKey:(id)key error:(id *)error;
- (id)setStringValue:(id)value forKey:(id)key;
- (id)dataValueForKey:(id)key error:(id *)error;
- (id)setDataValue:(id)value forKey:(id)key;
- (id)dateValueForKey:(id)key error:(id *)error;
- (id)setDateValue:(id)value forKey:(id)key;
- (id)UUIDValueForKey:(id)key error:(id *)error;
- (id)setUUIDValue:(id)uuidvalue forKey:(id)key;
- (id)objectValueForKey:(id)key error:(id *)error;
- (id)setObjectValue:(id)value forKey:(id)key;
- (void)groupWillPurge;
- (id)_purge;
- (id)init;
- (id)tocTableGroupInitValue;
- (id)initWithName:(id)name options:(unsigned long long)options database:(id)database;
- (id)finishInitializing;
- (void)_finishConstruction;
- (void)dealloc;
- (BOOL)shouldUseDBSerializer;
- (void *)serializer;
- (id)tocTableGroupTable;
- (id)tocTable;
- (void)updateLastUsedDate;
- (id)createTables:(id *)tables;
- (id)dbTableNameForLogicalTableName:(id)name;
- (id)prepareNewTables;
- (id)prepareExistingTables;
- (void)_addExtraTablesForTable:(id)table;
- (id)prepareTables;
- (id)createDBTable:(id)dbtable;
- (long long)validateTableMatchesTOCEntry:(id)tocentry;
- (id)allTables;
- (id)tableWithName:(id)name;
- (id)performDataMigration:(id)migration;
- (id)migrateDataFromGroup:(id)group;
- (id)updateGroupData:(id)data;
- (void)assertSerialized;
- (void)assertNotSerialized;
- (void)serialize:(id /* block */)serialize;
- (id)databaseManager:(id *)manager;
- (id)requestCallbackForTarget:(id)target withDate:(id)date coalescingInterval:(double)interval minimumSeparation:(double)separation;
- (id)requestCallbackWithDate:(id)date coalescingInterval:(double)interval minimumSeparation:(double)separation;
- (void)activityTriggered:(id)triggered;
- (void)activityTriggerWasRolledBack;
@end

#endif /* CKSQLiteTableGroup_h */
