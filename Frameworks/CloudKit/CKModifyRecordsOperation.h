//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKModifyRecordsOperation_h
#define CKModifyRecordsOperation_h
@import Foundation;

#include "CKDatabaseOperation.h"
#include "CKModifyRecordsOperationCallbacks-Protocol.h"
#include "CKModifyRecordsOperationInfo.h"

@class NSArray, NSData, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet;

@interface CKModifyRecordsOperation : CKDatabaseOperation<CKModifyRecordsOperationCallbacks>

@property (retain, nonatomic) NSMutableArray *savedRecords;
@property (retain, nonatomic) NSMutableArray *deletedRecordIDs;
@property (retain, nonatomic) NSMutableDictionary *recordsByRecordIDs;
@property (retain, nonatomic) NSMutableDictionary *recordErrors;
@property (retain, nonatomic) NSMutableDictionary *assetsByRecordIDAndRecordKey;
@property (nonatomic) BOOL shouldReportRecordsInFlight;
@property (retain, nonatomic) NSMutableSet *packagesToDestroy;
@property (readonly, @dynamic, nonatomic) NSObject<CKModifyRecordsOperationCallbacks> *clientOperationCallbackProxy;
@property (readonly, @dynamic, nonatomic) CKModifyRecordsOperationInfo *operationInfo;
@property (copy, nonatomic) id /* block */ recordsInFlightBlock_wrapper;
@property (copy, nonatomic) id /* block */ perRecordProgressBlock_wrapper;
@property (copy, nonatomic) id /* block */ perRecordSaveBlock_wrapper;
@property (copy, nonatomic) id /* block */ perRecordDeleteBlock_wrapper;
@property (copy, nonatomic) id /* block */ modifyRecordsCompletionBlock_wrapper;
@property (nonatomic) BOOL alwaysFetchPCSFromServer;
@property (nonatomic) BOOL shouldOnlySaveAssetContent;
@property (nonatomic) BOOL markAsParticipantNeedsNewInvitationToken;
@property (copy, nonatomic) NSDictionary *recordIDsToDeleteToEtags;
@property (copy, nonatomic) NSDictionary *conflictLosersToResolveByRecordID;
@property (copy, nonatomic) NSDictionary *pluginFieldsForRecordDeletesByID;
@property (copy, nonatomic) id /* block */ recordsInFlightBlock;
@property (nonatomic) BOOL shouldCloneFileInAssetCache;
@property (copy, nonatomic) NSArray *recordsToSave;
@property (copy, nonatomic) NSArray *recordIDsToDelete;
@property (nonatomic) long long savePolicy;
@property (copy, nonatomic) NSData *clientChangeTokenData;
@property (nonatomic) BOOL atomic;
@property (copy, nonatomic) id /* block */ perRecordProgressBlock;
@property (copy, nonatomic) id /* block */ perRecordCompletionBlock;
@property (copy, nonatomic) id /* block */ perRecordSaveBlock;
@property (copy, nonatomic) id /* block */ perRecordDeleteBlock;
@property (copy, nonatomic) id /* block */ modifyRecordsCompletionBlock;

/* class methods */
+ (SEL)daemonInvocationSelector;
+ (void)applyDaemonCallbackInterfaceTweaks:(id)tweaks;

/* instance methods */
- (id)init;
- (id)initWithRecordsToSave:(id)save recordIDsToDelete:(id)delete;
- (void)setModifyRecordsCompletionBlockIVar:(id /* block */)ivar;
- (void)fillOutOperationInfo:(id)info;
- (void)fillFromOperationInfo:(id)info;
- (BOOL)hasCKOperationCallbacksSet;
- (void)destroyPackages:(id)packages;
- (void)destroyPackagesInRecords:(id)records;
- (BOOL)CKOperationShouldRun:(id *)run;
- (BOOL)_prepareFieldValuesForUploadWithError:(id *)error;
- (void)performCKOperation;
- (BOOL)claimPackagesInRecord:(id)record error:(id *)error;
- (void)handleRecordIDsInFlight:(id)flight reply:(id /* block */)reply;
- (void)handleRecordModificationForRecordID:(id)id didProgress:(double)progress;
- (void)handleDeleteForRecordID:(id)id error:(id)error;
- (void)handleSaveForRecordID:(id)id recordMetadata:(id)metadata error:(id)error;
- (void)handleRecordUploadForRecordID:(id)id recordKey:(id)key arrayIndex:(long long)index signature:(id)signature size:(unsigned long long)size paddedFileSize:(unsigned long long)size uploaded:(BOOL)uploaded uploadReceipt:(id)receipt uploadReceiptExpiration:(double)expiration wrappedAssetKey:(id)key clearAssetKey:(id)key referenceSignature:(id)signature;
- (void)_finishOnCallbackQueueWithError:(id)error;
- (void)ckSignpostBegin;
- (void)ckSignpostEndWithError:(id)error;
- (id)activityCreate;
@end

#endif /* CKModifyRecordsOperation_h */
