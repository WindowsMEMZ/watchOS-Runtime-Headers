//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKSyncEngineState_h
#define CKSyncEngineState_h
@import Foundation;

#include "CKRecordID.h"
#include "CKServerChangeToken.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSMutableDictionary, NSMutableOrderedSet, NSOrderedSet, NSString;
@protocol OS_dispatch_queue;

@interface CKSyncEngineState : NSObject<NSSecureCoding> {
  /* instance variables */
  NSObject<OS_dispatch_queue> *_queue;
  NSMutableOrderedSet *_zoneIDsNeedingToFetchChangesSet;
  NSMutableOrderedSet *_pendingDatabaseChangesSet;
  NSMutableOrderedSet *_pendingRecordZoneChangesSet;
  NSMutableOrderedSet *_inFlightRecordChangesSet;
  unsigned long long _internalChangeCount;
}

@property (readonly, nonatomic) NSMutableDictionary *mServerChangeTokensByZoneID;
@property (copy) NSOrderedSet *fakeRecordIDsToSaveForSerializationTests;
@property (copy) NSOrderedSet *fakeRecordIDsToDeleteForSerializationTests;
@property (copy) NSDictionary *fakeZonesToSaveForSerializationTests;
@property (copy) NSOrderedSet *fakeZoneIDsToSaveForSerializationTests;
@property (copy) NSOrderedSet *fakeZoneIDsToDeleteForSerializationTests;
@property (copy) CKRecordID *mockNextKnownUserRecordID;
@property BOOL useMockNextKnownUserRecordID;
@property (copy, nonatomic) id /* block */ changeHandler;
@property (readonly, nonatomic) unsigned long long changeCount;
@property (copy) NSArray *pendingRecordZoneChanges;
@property (copy) NSArray *pendingDatabaseChanges;
@property BOOL needsToFetchDatabaseChanges;
@property BOOL needsToSaveDatabaseSubscription;
@property (copy) NSDate *lastFetchDatabaseChangesDate;
@property (copy, nonatomic) NSString *existingDatabaseSubscriptionID;
@property (readonly, nonatomic) NSArray *inFlightRecordChanges;
@property (copy) CKRecordID *lastKnownUserRecordID;
@property BOOL didPerformInitialUserRecordIDFetch;
@property BOOL hasInFlightUntrackedChanges;
@property (copy) NSString *loggingID;
@property (retain) CKServerChangeToken *serverChangeTokenForDatabase;
@property BOOL hasPendingUntrackedChanges;
@property (readonly, copy) NSArray *zoneIDsWithUnfetchedServerChanges;

/* class methods */
+ (id)emptyState;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)initWithStateSerialization:(id)serialization error:(id *)error;
- (id)initWithData:(id)data error:(id *)error;
- (id)init;
- (id)initInternal;
- (void)reset;
- (void)setInitialValues;
- (id)description;
- (id)redactedDescription;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (id)shortDescription;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)getDataRepresentation:(id /* block */)representation;
- (void)notifyChangeHandlerWithCoalescing:(BOOL)coalescing scheduleSync:(BOOL)sync;
- (void)addPendingRecordZoneChanges:(id)changes;
- (void)markRecordZoneChanges:(id)changes inFlight:(BOOL)flight;
- (void)removePendingRecordZoneChanges:(id)changes;
- (void)removeInFlightRecordChanges:(id)changes;
- (BOOL)containsInFlightRecordZoneChange:(id)change;
- (BOOL)containsPendingRecordZoneChange:(id)change;
- (void)setServerChangeToken:(id)token forZoneID:(id)id;
- (id)serverChangeTokensByZoneID;
- (id)serverChangeTokenForZoneID:(id)id;
- (void)setNeedsToFetchChanges:(BOOL)changes forRecordZoneID:(id)id;
- (BOOL)needsToFetchChangesForZoneID:(id)id;
- (void)addPendingDatabaseChanges:(id)changes;
- (void)removePendingDatabaseChanges:(id)changes;
- (BOOL)needsToSaveZoneID:(id)id;
- (BOOL)needsToDeleteZoneID:(id)id;
@end

#endif /* CKSyncEngineState_h */
