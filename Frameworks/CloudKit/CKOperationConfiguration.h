//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKOperationConfiguration_h
#define CKOperationConfiguration_h
@import Foundation;

#include "CKAssetDownloadStagingManager.h"
#include "CKContainer.h"
#include "CKSchedulerActivity.h"
#include "CKXPCActivity.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSMutableArray, NSNumber, NSString;

@interface CKOperationConfiguration : NSObject<NSSecureCoding, NSCopying> {
  /* instance variables */
  BOOL _hasContainer;
  BOOL _hasAllowsCellularAccess;
  BOOL _hasLongLived;
  BOOL _hasTimeoutIntervalForRequest;
  BOOL _hasTimeoutIntervalForResource;
  BOOL _hasCKXPCActivity;
  BOOL _hasXPCActivityAutomaticallyDefer;
  BOOL _hasSchedulerActivity;
  BOOL _hasSystemTask;
  BOOL _hasDiscretionarySchedulingForEntireOperation;
  BOOL _hasPreferAnonymousRequests;
  BOOL _hasSourceApplicationBundleIdentifier;
  BOOL _hasSourceApplicationSecondaryIdentifier;
  BOOL _hasApplicationBundleIdentifierOverrideForContainerAccess;
  BOOL _hasApplicationBundleIdentifierOverrideForNetworkAttribution;
  BOOL _hasAdditionalRequestHTTPHeaders;
  BOOL _hasIsCloudKitSupportOperation;
  BOOL _hasCacheDeleteAvailableSpaceClass;
  BOOL _hasAssetDownloadStagingManager;
}

@property BOOL hasQualityOfService;
@property BOOL hasAllowsExpensiveNetworkAccess;
@property BOOL hasAutomaticallyRetryNetworkFailures;
@property BOOL hasDiscretionaryNetworkBehavior;
@property (readonly, copy) NSDictionary *unitTestOverrides;
@property (readonly, copy) NSMutableArray *mTestErrorInducerBoxes;
@property (readonly, copy) NSMutableArray *mTestResultOverlayBoxes;
@property (copy) CKXPCActivity *ckXPCActivity;
@property BOOL xpcActivityAutomaticallyDefer;
@property BOOL discretionarySchedulingForEntireOperation;
@property (copy) NSString *_sourceApplicationSecondaryIdentifier;
@property BOOL allowsExpensiveNetworkAccess;
@property BOOL automaticallyRetryNetworkFailures;
@property (copy) CKSchedulerActivity *schedulerActivity;
@property unsigned long long discretionaryNetworkBehavior;
@property BOOL preferAnonymousRequests;
@property (copy) NSString *applicationBundleIdentifierOverrideForContainerAccess;
@property (copy) NSString *applicationBundleIdentifierOverrideForNetworkAttribution;
@property (copy) NSString *sourceApplicationBundleIdentifier;
@property (copy) NSString *sourceApplicationSecondaryIdentifier;
@property (copy) NSDictionary *additionalRequestHTTPHeaders;
@property BOOL isCloudKitSupportOperation;
@property (copy) NSNumber *cacheDeleteAvailableSpaceClass;
@property (copy) CKAssetDownloadStagingManager *assetDownloadStagingManager;
@property (retain) CKContainer *container;
@property long long qualityOfService;
@property BOOL allowsCellularAccess;
@property BOOL longLived;
@property double timeoutIntervalForRequest;
@property double timeoutIntervalForResource;

/* class methods */
+ (void)initialize;
+ (id)defaultConvenienceOperationConfiguration;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)_commonInit;
- (id)init;
- (id)resolveAgainstGenericConfiguration:(id)configuration;
- (BOOL)isLongLived;
- (void)setCKXPCActivity:(id)ckxpcactivity;
- (void)setXpcActivity:(id)activity;
- (BOOL)hasXPCActivity;
- (void)setXPCActivity:(id)xpcactivity;
- (void)setApplicationBundleIdentifierOverride:(id)override;
- (void)addUnitTestOverrides:(id)overrides;
- (void)removeUnitTestOverride:(id)override;
- (id)testErrorInducerBoxes;
- (void)addTestErrorInducerBox:(id)box;
- (void)removeTestErrorInducerBoxWithID:(id)id;
- (id)testResultOverlayBoxes;
- (void)addTestResultOverlayBox:(id)box;
- (void)removeTestResultOverlayBoxWithID:(id)id;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)description;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
@end

#endif /* CKOperationConfiguration_h */
