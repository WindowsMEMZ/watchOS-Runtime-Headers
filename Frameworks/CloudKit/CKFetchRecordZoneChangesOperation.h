//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKFetchRecordZoneChangesOperation_h
#define CKFetchRecordZoneChangesOperation_h
@import Foundation;

#include "CKDatabaseOperation.h"
#include "CKFetchRecordZoneChangesOperationCallbacks-Protocol.h"
#include "CKFetchRecordZoneChangesOperationInfo.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSMutableSet;

@interface CKFetchRecordZoneChangesOperation : CKDatabaseOperation<CKFetchRecordZoneChangesOperationCallbacks> {
  /* instance variables */
  unsigned long long _mergeableValueCount;
  unsigned long long _mergeableDeltaCount;
  unsigned long long _assetBackedMergeableDeltaCount;
}

@property (copy, nonatomic) NSDictionary *optionsByRecordZoneID;
@property (retain, nonatomic) NSMutableDictionary *statusByZoneID;
@property (retain, nonatomic) NSMutableSet *zoneIDsWithPendingArchivedRecords;
@property (retain, nonatomic) NSMutableSet *zoneIDsWithSyncObligations;
@property (nonatomic) BOOL shouldFetchAssetContents;
@property (retain, nonatomic) NSMutableDictionary *perItemErrors;
@property (retain, nonatomic) NSDictionary *assetTransferOptionsByRecordTypeAndKey;
@property (copy, nonatomic) NSDictionary *supplementalChangeTokenByZoneID;
@property (copy, nonatomic) id /* block */ perRecordChangeCompletionBlock;
@property (nonatomic) BOOL shouldReportAllPerItemFailures;
@property (readonly, @dynamic, nonatomic) NSObject<CKFetchRecordZoneChangesOperationCallbacks> *clientOperationCallbackProxy;
@property (readonly, @dynamic, nonatomic) CKFetchRecordZoneChangesOperationInfo *operationInfo;
@property (copy, nonatomic) id /* block */ recordWasChangedBlock_wrapper;
@property (copy, nonatomic) id /* block */ recordWithIDWasDeletedBlock_wrapper;
@property (copy, nonatomic) id /* block */ recordZoneFetchCompletionBlock_wrapper;
@property (copy, nonatomic) id /* block */ fetchRecordZoneChangesCompletionBlock_wrapper;
@property (nonatomic) long long errorReportingStyle;
@property (copy, nonatomic) NSArray *recordZoneIDs;
@property (copy, nonatomic) NSDictionary *configurationsByRecordZoneID;
@property (nonatomic) BOOL fetchAllChanges;
@property (copy, nonatomic) id /* block */ recordChangedBlock;
@property (copy, nonatomic) id /* block */ recordWasChangedBlock;
@property (copy, nonatomic) id /* block */ recordWithIDWasDeletedBlock;
@property (copy, nonatomic) id /* block */ recordZoneChangeTokensUpdatedBlock;
@property (copy, nonatomic) id /* block */ recordZoneFetchCompletionBlock;
@property (copy, nonatomic) id /* block */ fetchRecordZoneChangesCompletionBlock;

/* class methods */
+ (SEL)daemonInvocationSelector;
+ (void)applyDaemonCallbackInterfaceTweaks:(id)tweaks;

/* instance methods */
- (id)initWithRecordZoneIDs:(id)ids optionsByRecordZoneID:(id)id;
- (id)init;
- (id)initWithRecordZoneIDs:(id)ids configurationsByRecordZoneID:(id)id;
- (void)setRecordZoneFetchCompletionBlockIVar:(id /* block */)ivar;
- (id)recordZoneChangesStatusByZoneID;
- (id)recordZoneIDsWithPendingArchivedRecords;
- (id)recordZoneIDsWithSyncObligations;
- (id)relevantZoneIDs;
- (void)fillOutOperationInfo:(id)info;
- (void)fillFromOperationInfo:(id)info;
- (long long)changeTypesFromSetCallbacks;
- (BOOL)hasCKOperationCallbacksSet;
- (BOOL)CKOperationShouldRun:(id *)run;
- (void)performCKOperation;
- (void)handleChangeForRecordID:(id)id record:(id)record error:(id)error;
- (void)handleDeleteForRecordID:(id)id recordType:(id)type;
- (void)handleChangeSetCompletionForRecordZoneID:(id)id serverChangeToken:(id)token clientChangeTokenData:(id)data recordChangesStatus:(long long)status hasPendingArchivedRecords:(BOOL)records syncObligationZoneIDs:(id)ids error:(id)error reply:(id /* block */)reply;
- (id)partialFailureForItemsInZone:(id)zone;
- (void)_finishOnCallbackQueueWithError:(id)error;
- (void)ckSignpostBegin;
- (void)ckSignpostEndWithError:(id)error;
- (id)activityCreate;
@end

#endif /* CKFetchRecordZoneChangesOperation_h */
