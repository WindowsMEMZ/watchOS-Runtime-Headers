//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKRecord_h
#define CKRecord_h
@import Foundation;

#include "CKContainerAssignment-Protocol.h"
#include "CKContainerID.h"
#include "CKEncryptedData.h"
#include "CKEncryptedRecordValueStore.h"
#include "CKPropertiesDescription-Protocol.h"
#include "CKRecordID.h"
#include "CKRecordKeyValueSetting-Protocol.h"
#include "CKRecordValueStore.h"
#include "CKReference.h"
#include "CKRoughlyEquivalent-Protocol.h"
#include "CKRoughlyEquivalentProperties.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSData, NSDate, NSDictionary, NSNumber, NSSet, NSString, NSURL;

@interface CKRecord : NSObject<CKContainerAssignment, CKPropertiesDescription, CKRoughlyEquivalent, NSSecureCoding, NSCopying>

@property (copy) CKContainerID *containerID;
@property (copy) CKRecordValueStore *valueStore;
@property (copy) CKEncryptedRecordValueStore *encryptedValueStore;
@property BOOL hasUpdatedExpirationTimeInterval;
@property (copy) NSNumber *updatedExpirationTimeInterval;
@property (copy) NSDate *expirationDate;
@property BOOL expired;
@property (readonly, nonatomic) unsigned long long assetCount;
@property (readonly, nonatomic) unsigned long long assetDiskSize;
@property (readonly, nonatomic) BOOL containsPackageValues;
@property (readonly, nonatomic) BOOL hasPropertiesRequiringEncryption;
@property (readonly, nonatomic) BOOL hasModifiedPropertiesRequiringEncryption;
@property (readonly, nonatomic) BOOL hasPropertiesRequiringDecryption;
@property (readonly, nonatomic) BOOL hasEncryptedData;
@property (readonly, nonatomic) BOOL hasModifiedEncryptedData;
@property (readonly, nonatomic) BOOL containsIndexedKeys;
@property BOOL requiresRecordSaveForMergeableDeltas;
@property BOOL serializeProtectionData;
@property (copy) NSData *zoneishKeyID;
@property (copy) NSString *previousProtectionEtag;
@property (copy) NSString *protectionEtag;
@property (copy) NSString *zoneProtectionEtag;
@property (copy) NSString *shareEtag;
@property (readonly, nonatomic) NSString *fullToken;
@property (readonly, nonatomic) NSData *shortSharingTokenData;
@property (readonly, nonatomic) NSData *shortSharingTokenHashData;
@property (readonly, nonatomic) NSData *encryptedFullTokenData;
@property BOOL isMergeableValueDeltaRecord;
@property (copy) NSString *previousProtectionEtagFromUnitTest;
@property (copy) NSData *pcsKeyID;
@property (copy) NSArray *allPCSKeyIDs;
@property (copy) CKReference *share;
@property (retain) CKReference *previousShare;
@property BOOL hasUpdatedShare;
@property (retain) CKReference *previousParent;
@property BOOL hasUpdatedParent;
@property struct _PCSIdentityData * signingPCSIdentity;
@property (copy) CKEncryptedData *chainPrivateKey;
@property (copy) CKEncryptedData *mutableEncryptedPSK;
@property (copy) NSData *chainProtectionInfo;
@property (copy) NSData *chainParentPublicKeyID;
@property (copy) NSArray *tombstonedPublicKeyIDs;
@property (readonly) NSString *privateToken;
@property (copy) NSURL *mutableURL;
@property (copy) CKRecordID *creatorUserRecordID;
@property (copy) CKRecordID *lastModifiedUserRecordID;
@property (copy) NSDate *creationDate;
@property (copy) NSDate *modificationDate;
@property BOOL knownToServer;
@property BOOL wasCached;
@property (readonly, nonatomic) unsigned long long size;
@property long long permission;
@property (copy) NSDictionary *pluginFields;
@property (copy) CKRecordID *recordID;
@property (copy) NSString *etag;
@property (copy) NSArray *conflictLoserEtags;
@property (copy) NSString *modifiedByDevice;
@property (readonly) BOOL containsAssetValues;
@property (copy) NSData *protectionData;
@property BOOL wantsChainPCS;
@property (readonly, nonatomic) BOOL hasChainPCS;
@property BOOL useLightweightPCS;
@property (copy) NSString *routingKey;
@property (copy) NSString *baseToken;
@property (readonly, copy, nonatomic) NSString *shortToken;
@property BOOL wantsPublicSharingKey;
@property (readonly, copy) NSData *encryptedPublicSharingKey;
@property (copy) CKEncryptedData *mutableEncryptedPublicSharingKey;
@property (copy) NSData *mutableEncryptedPublicSharingKeyData;
@property (readonly, copy) NSURL *URL;
@property (readonly, copy, nonatomic) NSURL *uncachedURL;
@property (copy) NSString *displayedHostname;
@property (readonly, copy) NSDictionary *values;
@property (readonly, copy) NSDictionary *originalValues;
@property (copy) NSSet *changedKeysSet;
@property BOOL trackChanges;
@property (readonly, copy) NSObject<CKRecordKeyValueSetting> *encryptedValuesByKey;
@property (readonly, copy) NSObject<CKRecordKeyValueSetting> *valuesByKey;
@property (readonly, copy) NSString *recordType;
@property (readonly, copy) NSString *recordChangeTag;
@property (copy) CKReference *parent;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, nonatomic) CKRoughlyEquivalentProperties *equivalencyProperties;

/* class methods */
+ (void)initialize;
+ (id)recordWithDuplicatedPackagesOfRecord:(id)record error:(id *)error;
+ (id)fullTokenFromBaseToken:(id)token privateToken:(id)token;
+ (id)encryptFullToken:(id)token shortSharingTokenData:(id)data;
+ (id)decryptFullToken:(id)token shortSharingTokenData:(id)data;
+ (id)shareURLWithShortToken:(id)token shareTitle:(id)title shareType:(id)type containerID:(id)id displayedHostname:(id)hostname;
+ (BOOL)accessInstanceVariablesDirectly;
+ (BOOL)supportsSecureCoding;
+ (id)keyForListField:(id)field withIndexRange:(struct _NSRange { unsigned long long x0; unsigned long long x1; })range;
+ (id)keyForInsertingIntoListField:(id)field atIndex:(long long)index;
+ (id)keyForAppendingToListField:(id)field;
+ (id)keyForFetchingItems:(unsigned long long)items atEndOfListField:(id)field;

/* instance methods */
- (id)initWithRecordTransport:(id)transport;
- (id)init;
- (id)initInternalSkippingValidationWithRecordType:(id)type recordID:(id)id;
- (id)_initSkippingValidationWithRecordType:(id)type recordID:(id)id;
- (id)initWithRecordType:(id)type recordID:(id)id;
- (id)initWithRecordType:(id)type;
- (id)initWithRecordType:(id)type zoneID:(id)id;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)copyWithZone:(struct _NSZone *)zone userFields:(BOOL)fields;
- (id)copyWithZone:(struct _NSZone *)zone recordID:(id)id userFields:(BOOL)fields;
- (id)copyWithZone:(struct _NSZone *)zone recordID:(id)id userFields:(BOOL)fields systemFields:(BOOL)fields;
- (id)copyWithOriginalValues;
- (id)_copyWithOptions:(long long)options;
- (void)dealloc;
- (void)updateWithSavedRecordXPCMetadata:(id)xpcmetadata shouldOnlySaveAssetContent:(BOOL)content;
- (void)updateMergeablesForSuccessfulSave;
- (void)copyStreamingAssetServerFieldsFromServerRecord:(id)record;
- (id)shortSharingToken;
- (id)decryptFullToken:(id)token;
- (BOOL)canHostServerURLInfo;
- (void)CKDescribePropertiesUsing:(id)using;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (id)redactedDescription;
- (id)conciseDescription;
- (BOOL)isMoreRecentThanRecord:(id)record;
- (id)encryptedValues;
- (id)changedKeys;
- (void)resetChangedKeys;
- (void)replaceRecordIDWith:(id)idwith;
- (id)objectForKeyedSubscript:(id)subscript;
- (id)objectForKey:(id)key;
- (id)valueForKey:(id)key;
- (void)setNilValueForKey:(id)key;
- (void)setObjectNoValidate:(id)validate forKey:(id)key;
- (void)setObject:(id)object forKey:(id)key;
- (void)setObject:(id)object forKeyedSubscript:(id)subscript;
- (void)setValue:(id)value forKey:(id)key;
- (id)allKeys;
- (id)allValues;
- (id)_allStrings;
- (id)allTokens;
- (void)setRecordChangeTag_modelMutation:(id)mutation;
- (void)setRecordID_modelMutation:(id)mutation;
- (void)setChangedKeysSet_modelMutation:(id)mutation;
- (void)CKAssignToContainerWithID:(id)id;
- (void)setParentReferenceFromRecord:(id)record;
- (void)setParentReferenceFromRecordID:(id)id;
- (void)encodeSystemFieldsWithCoder:(id)coder;
- (void)preTiboEncodeWithCoder:(id)coder;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)setStreamingAssetRequestOptions:(id)options;
- (void)releasePackages;
- (void)removePackages;
- (void)claimPackagesWithSuccessBlock:(id /* block */)block failureBlock:(id /* block */)block completionBlock:(id /* block */)block;
- (BOOL)containsMergeableValues;
- (BOOL)containsAssetBackedMergeableDeltas;
- (BOOL)canSkipRecordSaveForMergeables;
- (BOOL)containsMergeableValuesWithDeltasToSave;
- (BOOL)prepareMergeablesForUploadInContainer:(id)container useAssetsIfNecessary:(BOOL)necessary error:(id *)error;
- (void)countMergeableValueMetrics:(id /* block */)metrics;
- (void)setExpirationAfterTimeInterval:(id)interval;
- (BOOL)containsValueOfClasses:(id)classes options:(unsigned long long)options passingTest:(id /* block */)test;
- (BOOL)containsValueOfClasses:(id)classes passingTest:(id /* block */)test;
- (BOOL)containsValuePassingTest:(id /* block */)test;
- (void)enumerateKeysAndValuesOfClasses:(id)classes options:(unsigned long long)options usingBlock:(id /* block */)block;
- (void)enumerateKeysAndValuesOfClasses:(id)classes usingBlock:(id /* block */)block;
- (void)enumerateKeysAndValuesUsingBlock:(id /* block */)block;
- (BOOL)isExpired;
- (BOOL)isKnownToServer;
@end

#endif /* CKRecord_h */
