//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKShareMetadata_h
#define CKShareMetadata_h
@import Foundation;

#include "CKContainerAssignment-Protocol.h"
#include "CKContainerID.h"
#include "CKDeviceToDeviceShareInvitationToken.h"
#include "CKRecord.h"
#include "CKRecordID.h"
#include "CKRecordZone.h"
#include "CKRoughlyEquivalent-Protocol.h"
#include "CKRoughlyEquivalentProperties.h"
#include "CKShare.h"
#include "CKShareParticipant.h"
#include "CKUserIdentity.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSData, NSString;

@interface CKShareMetadata : NSObject<CKContainerAssignment, CKRoughlyEquivalent, NSCopying, NSSecureCoding>

@property (readonly, copy) CKContainerID *containerID;
@property (copy, nonatomic) CKShareParticipant *callingParticipant;
@property (copy, nonatomic) NSArray *sharedItemHierarchyIDs;
@property (copy, nonatomic) NSString *rootRecordType;
@property (copy) CKDeviceToDeviceShareInvitationToken *invitationToken;
@property (copy, nonatomic) NSData *protectedFullToken;
@property (copy) NSData *publicToken;
@property (readonly) NSString *baseToken;
@property (copy) NSData *privateToken;
@property (retain, nonatomic) CKRecordZone *sharedZone;
@property long long participantRole;
@property long long participantStatus;
@property long long participantPermission;
@property (copy, nonatomic) NSArray *outOfNetworkMatches;
@property (copy) CKRecordID *hierarchicalRootRecordID;
@property (copy) CKRecord *rootRecord;
@property BOOL acceptedInProcess;
@property (copy) NSData *encryptedData;
@property (copy) CKUserIdentity *ownerIdentity;
@property (copy) CKShare *share;
@property (readonly, copy) NSString *containerIdentifier;
@property (readonly) long long participantType;
@property (readonly, copy) CKRecordID *rootRecordID;
@property (readonly, nonatomic) CKRoughlyEquivalentProperties *equivalencyProperties;

/* class methods */
+ (void)initialize;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (id)init;
- (id)initInternal;
- (id)initWithShare:(id)share containerID:(id)id;
- (id)CKDescriptionPropertiesWithPublic:(BOOL)public private:(BOOL)private shouldExpand:(BOOL)expand;
- (id)description;
- (id)ckShortDescription;
- (void)CKAssignToContainerWithID:(id)id;
- (long long)environment;
- (void)fillAnonymousCKUserID:(id)id;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (void)setContainerID_modelMutation:(id)mutation;
@end

#endif /* CKShareMetadata_h */
