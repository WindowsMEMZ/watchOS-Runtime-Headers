//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2130.14.1.0.0
//
#ifndef CKModifyRecordZonesOperation_h
#define CKModifyRecordZonesOperation_h
@import Foundation;

#include "CKDatabaseOperation.h"
#include "CKModifyRecordZonesOperationCallbacks-Protocol.h"
#include "CKModifyRecordZonesOperationInfo.h"

@class NSArray, NSMutableArray, NSMutableDictionary;

@interface CKModifyRecordZonesOperation : CKDatabaseOperation<CKModifyRecordZonesOperationCallbacks> {
  /* instance variables */
  NSMutableArray *_savedRecordZones;
  NSMutableArray *_deletedRecordZoneIDs;
  NSMutableDictionary *_recordZonesByZoneIDs;
  NSMutableDictionary *_recordZoneErrors;
}

@property (readonly, @dynamic, nonatomic) NSObject<CKModifyRecordZonesOperationCallbacks> *clientOperationCallbackProxy;
@property (readonly, @dynamic, nonatomic) CKModifyRecordZonesOperationInfo *operationInfo;
@property (copy, nonatomic) id /* block */ perRecordZoneSaveBlock_wrapper;
@property (copy, nonatomic) id /* block */ perRecordZoneDeleteBlock_wrapper;
@property (copy, nonatomic) id /* block */ modifyRecordZonesCompletionBlock_wrapper;
@property (nonatomic) BOOL markZonesAsUserPurged;
@property (copy, nonatomic) NSArray *recordZonesToSave;
@property (copy, nonatomic) NSArray *recordZoneIDsToDelete;
@property (copy, nonatomic) id /* block */ perRecordZoneSaveBlock;
@property (copy, nonatomic) id /* block */ perRecordZoneDeleteBlock;
@property (copy, nonatomic) id /* block */ modifyRecordZonesCompletionBlock;

/* class methods */
+ (SEL)daemonInvocationSelector;
+ (void)applyDaemonCallbackInterfaceTweaks:(id)tweaks;

/* instance methods */
- (id)init;
- (id)initWithRecordZonesToSave:(id)save recordZoneIDsToDelete:(id)delete;
- (void)setModifyRecordZonesCompletionBlockIVar:(id /* block */)ivar;
- (id)relevantZoneIDs;
- (void)fillOutOperationInfo:(id)info;
- (void)fillFromOperationInfo:(id)info;
- (BOOL)hasCKOperationCallbacksSet;
- (BOOL)CKOperationShouldRun:(id *)run;
- (void)performCKOperation;
- (void)handleSaveForRecordZoneID:(id)id recordZone:(id)zone error:(id)error;
- (void)handleDeleteForRecordZoneID:(id)id error:(id)error;
- (void)_finishOnCallbackQueueWithError:(id)error;
- (void)ckSignpostBegin;
- (void)ckSignpostEndWithError:(id)error;
- (id)activityCreate;
@end

#endif /* CKModifyRecordZonesOperation_h */
