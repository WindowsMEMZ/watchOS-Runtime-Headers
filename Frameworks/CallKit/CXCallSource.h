//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1228.300.81.0.0
//
#ifndef CXCallSource_h
#define CXCallSource_h
@import Foundation;

#include "CXCallSourceDelegate-Protocol.h"
#include "CXProviderHostProtocol-Protocol.h"
#include "CXProviderVendorProtocol-Protocol.h"

@class NSString, NSURL;
@protocol OS_dispatch_queue;

@interface CXCallSource : NSObject<CXProviderHostProtocol, CXProviderVendorProtocol>

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (readonly, nonatomic) NSObject<CXProviderVendorProtocol> *vendorProtocolDelegate;
@property (nonatomic) BOOL connected;
@property (weak, nonatomic) NSObject<CXCallSourceDelegate> *delegate;
@property (readonly, copy, nonatomic) NSString *identifier;
@property (readonly, copy, nonatomic) NSString *bundleIdentifier;
@property (readonly, copy, nonatomic) NSURL *bundleURL;
@property (readonly, copy, nonatomic) NSString *localizedName;
@property (readonly, nonatomic) int processIdentifier;
@property (readonly, nonatomic) struct { unsigned int x0[8] } auditToken;
@property (readonly, nonatomic) BOOL permittedToUsePublicAPI;
@property (readonly, nonatomic) BOOL permittedToUsePrivateAPI;
@property (readonly, nonatomic) BOOL permittedToUseBluetoothAccessories;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)initWithIdentifier:(id)identifier;
- (BOOL)isPermittedToUsePublicAPI;
- (BOOL)isPermittedToUsePrivateAPI;
- (BOOL)isPermittedToUseBluetoothAccessories;
- (void)beginWithCompletionHandler:(id /* block */)handler;
- (void)registerWithConfiguration:(id)configuration;
- (void)reportNewIncomingCallWithUUID:(id)uuid update:(id)update reply:(id /* block */)reply;
- (void)reportCallWithUUID:(id)uuid updated:(id)updated;
- (void)reportCallWithUUID:(id)uuid updated:(id)updated reply:(id /* block */)reply;
- (void)reportCallWithUUID:(id)uuid endedAtDate:(id)date privateReason:(long long)reason failureContext:(id)context;
- (void)reportCallWithUUID:(id)uuid endedAtDate:(id)date privateReason:(long long)reason failureContext:(id)context reply:(id /* block */)reply;
- (void)reportOutgoingCallWithUUID:(id)uuid sentInvitationAtDate:(id)date;
- (void)reportOutgoingCallWithUUID:(id)uuid sentInvitationAtDate:(id)date reply:(id /* block */)reply;
- (void)reportOutgoingCallWithUUID:(id)uuid startedConnectingAtDate:(id)date;
- (void)reportOutgoingCallWithUUID:(id)uuid startedConnectingAtDate:(id)date reply:(id /* block */)reply;
- (void)reportNewOutgoingCallWithUUID:(id)uuid update:(id)update;
- (void)reportOutgoingCallWithUUID:(id)uuid connectedAtDate:(id)date;
- (void)reportOutgoingCallWithUUID:(id)uuid connectedAtDate:(id)date reply:(id /* block */)reply;
- (void)reportAudioFinishedForCallWithUUID:(id)uuid;
- (void)reportAudioFinishedForCallWithUUID:(id)uuid reply:(id /* block */)reply;
- (void)reportCallWithUUID:(id)uuid changedFrequencyData:(id)data forDirection:(long long)direction;
- (void)reportCallWithUUID:(id)uuid changedFrequencyData:(id)data forDirection:(long long)direction reply:(id /* block */)reply;
- (void)reportCallWithUUID:(id)uuid changedMeterLevel:(float)level forDirection:(long long)direction;
- (void)reportCallWithUUID:(id)uuid changedMeterLevel:(float)level forDirection:(long long)direction reply:(id /* block */)reply;
- (void)reportCallWithUUID:(id)uuid crossDeviceIdentifier:(id)identifier changedBytesOfDataUsed:(long long)used;
- (void)reportCallWithUUID:(id)uuid crossDeviceIdentifier:(id)identifier changedBytesOfDataUsed:(long long)used reply:(id /* block */)reply;
- (void)requestTransaction:(id)transaction completionHandler:(id /* block */)handler;
- (void)actionCompleted:(id)completed completionHandler:(id /* block */)handler;
- (void)commitTransaction:(id)transaction;
- (void)handleActionTimeout:(id)timeout;
- (void)handleAudioSessionActivationStateChangedTo:(id)to;
- (BOOL)isConnected;
@end

#endif /* CXCallSource_h */
