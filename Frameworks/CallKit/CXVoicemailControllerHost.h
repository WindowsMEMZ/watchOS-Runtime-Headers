//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1228.300.81.0.0
//
#ifndef CXVoicemailControllerHost_h
#define CXVoicemailControllerHost_h
@import Foundation;

#include "CXVoicemailControllerHostConnectionDelegate-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSString, NSXPCListener;
@protocol CXVoicemailControllerHostDelegate, OS_dispatch_queue;

@interface CXVoicemailControllerHost : NSObject<NSXPCListenerDelegate, CXVoicemailControllerHostConnectionDelegate>

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (weak, nonatomic) NSObject<CXVoicemailControllerHostDelegate> *delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (retain, nonatomic) NSXPCListener *xpcListener;
@property (retain, nonatomic) NSMutableDictionary *voicemailUUIDToVoicemailMap;
@property (retain, nonatomic) NSMutableSet *connections;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithVoicemails:(id)voicemails delegate:(id)delegate queue:(id)queue;
- (void)addOrUpdateVoicemails:(id)voicemails;
- (void)removeVoicemails:(id)voicemails;
- (void)_performDelegateCallback:(id /* block */)callback;
- (id)_voicemailsForVoicemailControllerHostConnection:(id)connection;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)voicemailControllerHostConnectionInvalidated:(id)invalidated;
- (void)voicemailControllerHostConnection:(id)connection requestVoicemails:(id /* block */)voicemails;
- (void)voicemailControllerHostConnection:(id)connection requestTransaction:(id)transaction completion:(id /* block */)completion;
@end

#endif /* CXVoicemailControllerHost_h */
