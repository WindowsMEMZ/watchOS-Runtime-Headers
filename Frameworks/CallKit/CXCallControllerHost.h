//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1228.300.81.0.0
//
#ifndef CXCallControllerHost_h
#define CXCallControllerHost_h
@import Foundation;

#include "CXCallControllerHostConnectionDelegate-Protocol.h"
#include "NSXPCListenerDelegate-Protocol.h"

@class NSMutableDictionary, NSMutableSet, NSString, NSXPCListener;
@protocol CXCallControllerHostDelegate, OS_dispatch_queue;

@interface CXCallControllerHost : NSObject<NSXPCListenerDelegate, CXCallControllerHostConnectionDelegate>

@property (retain, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property (weak, nonatomic) NSObject<CXCallControllerHostDelegate> *delegate;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *delegateQueue;
@property (retain, nonatomic) NSXPCListener *xpcListener;
@property (retain, nonatomic) NSMutableDictionary *callUUIDToCallMap;
@property (retain, nonatomic) NSMutableDictionary *callUUIDToPublicCallUUIDMap;
@property (retain, nonatomic) NSMutableSet *connections;
@property (readonly, nonatomic) int clientsShouldConnectToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* instance methods */
- (id)init;
- (id)initWithCalls:(id)calls delegate:(id)delegate queue:(id)queue;
- (id)initWithDelegate:(id)delegate delegateQueue:(id)queue;
- (void)dealloc;
- (void)addOrUpdateCall:(id)call;
- (void)removeCall:(id)call;
- (void)_performDelegateCallback:(id /* block */)callback;
- (id)_sanitizedCallFromCall:(id)call forCallControllerHostConnection:(id)connection;
- (id)_callsForCallControllerHostConnection:(id)connection;
- (BOOL)listener:(id)listener shouldAcceptNewConnection:(id)connection;
- (void)callControllerHostConnectionInvalidated:(id)invalidated;
- (void)callControllerHostConnection:(id)connection requestCalls:(id /* block */)calls;
- (void)callControllerHostConnection:(id)connection requestTransaction:(id)transaction completion:(id /* block */)completion;
@end

#endif /* CXCallControllerHost_h */
