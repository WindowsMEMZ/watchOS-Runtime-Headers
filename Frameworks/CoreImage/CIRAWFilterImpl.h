//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1420.3.0.0.0
//
#ifndef CIRAWFilterImpl_h
#define CIRAWFilterImpl_h
@import Foundation;

#include "CIFilter.h"
#include "CIFilter.h"
#include "CIImage.h"
#include "CIVector.h"

@class NSArray, NSDictionary, NSNumber, NSObject, NSString;

@interface CIRAWFilterImpl : CIFilter {
  /* instance variables */
  struct CGImageSource * _inputImageSource;
  NSArray *_inputImageAndProperties;
  CIImage *_inputImage;
  BOOL _calledDealloc;
  NSString *_matteOption;
  NSDictionary *_baseImageProperties;
  NSArray *_supportedSushiModes;
  NSArray *_supportedDecoderVersions;
  NSObject *_typeIdentifierHint;
  NSNumber *_defaultOrientation;
  NSString *inputRequestedSushiMode;
  NSNumber *inputNeutralChromaticityX;
  NSNumber *inputNeutralChromaticityY;
  NSNumber *inputNeutralTemperature;
  NSNumber *inputNeutralTint;
  CIVector *inputNeutralLocation;
  NSNumber *inputEV;
  NSNumber *inputBoost;
  NSNumber *inputDraftMode;
  NSNumber *inputScaleFactor;
  NSNumber *inputIgnoreOrientation;
  NSNumber *inputImageOrientation;
  NSNumber *inputEnableSharpening;
  NSNumber *inputEnableNoiseTracking;
  NSNumber *inputEnableVendorLensCorrection;
  NSNumber *inputNoiseReductionAmount;
  NSNumber *inputLuminanceNoiseReductionAmount;
  NSNumber *inputColorNoiseReductionAmount;
  NSNumber *inputNoiseReductionSharpnessAmount;
  NSNumber *inputNoiseReductionContrastAmount;
  NSNumber *inputNoiseReductionDetailAmount;
  NSNumber *inputMoireAmount;
  NSString *inputDecoderVersion;
  NSNumber *inputBoostShadowAmount;
  NSNumber *inputBias;
  NSNumber *inputBaselineExposure;
  NSNumber *inputDisableGamutMap;
  NSNumber *inputHueMagMR;
  NSNumber *inputHueMagRY;
  NSNumber *inputHueMagYG;
  NSNumber *inputHueMagGC;
  NSNumber *inputHueMagCB;
  NSNumber *inputHueMagBM;
  CIFilter *inputLinearSpaceFilter;
  NSNumber *inputEnableEDRMode;
  NSNumber *inputLocalToneMapAmount;
  NSNumber *inputReturnDemosaiced;
}

@property (readonly, retain) NSDictionary *rawDictionary;
@property (readonly, retain) NSDictionary *rawReconstructionDefaultsDictionary;
@property (readonly, retain) NSNumber *sushiMode;
@property (readonly) int rawMajorVersion;
@property (readonly, retain) NSArray *filters;
@property (readonly) int subsampling;
@property (readonly) struct CGSize { double x0; double x1; } nativeSize;
@property (readonly) BOOL isRawSource;

/* class methods */
+ (void)convertNeutralX:(id)x y:(id)y toTemperature:(id *)temperature tint:(id *)tint;
+ (void)convertNeutralTemperature:(id)temperature tint:(id)tint toX:(id *)x y:(id *)y;
+ (BOOL)automaticallyNotifiesObserversForKey:(id)key;
+ (id)applyMatrix:(const double *)matrix toCIImage:(id)ciimage;
+ (id)optionKeys;
+ (id)matteOptionNameFromOptions:(id)options;
+ (id)keyPathsForValuesAffectingValueForKey:(id)key;
+ (id)filterWithImageData:(id)data options:(id)options;
+ (id)filterWithImageURL:(id)url options:(id)options;
+ (id)filterWithCVPixelBuffer:(struct __CVBuffer *)buffer properties:(id)properties options:(id)options;
+ (id)supportedRawCameraModels;
+ (id)customAttributes;

/* instance methods */
- (void)updateTemperatureAndTint;
- (void)updateChomaticityXAndY;
- (id)defaultNeutralTemperature;
- (id)inputNeutralTemperature;
- (void)setInputNeutralTemperature:(id)temperature;
- (id)inputNeutralTint;
- (id)defaultNeutralTint;
- (void)setInputNeutralTint:(id)tint;
- (id)defaultNeutralChromaticityX;
- (id)inputNeutralChromaticityX;
- (void)setInputNeutralChromaticityX:(id)x;
- (id)defaultNeutralChromaticityY;
- (id)inputNeutralChromaticityY;
- (void)setInputNeutralChromaticityY:(id)y;
- (void)setInputRequestedSushiMode:(id)mode;
- (id)whitePoint;
- (id)whitePointArray;
- (void)getWhitePointVectorsR:(id *)r g:(id *)g b:(id *)b;
- (id)RAWFiltersValueForKeyPath:(id)path;
- (id)inputImage;
- (void)setInputImage:(id)image;
- (id)defaultImageOrientation;
- (id)inputNeutralLocation;
- (void)setInputNeutralLocation:(id)location;
- (void)setInputScaleFactor:(id)factor;
- (void)setInputDraftMode:(id)mode;
- (void)setInputEnableSharpening:(id)sharpening;
- (void)setInputEnableNoiseTracking:(id)tracking;
- (void)setInputNoiseReductionAmount:(id)amount;
- (void)setInputEnableVendorLensCorrection:(id)correction;
- (void)setInputLuminanceNoiseReductionAmount:(id)amount;
- (void)setInputColorNoiseReductionAmount:(id)amount;
- (void)setInputNoiseReductionSharpnessAmount:(id)amount;
- (void)setInputNoiseReductionContrastAmount:(id)amount;
- (void)setInputNoiseReductionDetailAmount:(id)amount;
- (void)setInputMoireAmount:(id)amount;
- (void)setInputEV:(id)ev;
- (void)setInputBoost:(id)boost;
- (void)setInputDecoderVersion:(id)version;
- (void)setInputImageOrientation:(id)orientation;
- (void)setInputIgnoreOrientation:(id)orientation;
- (void)setInputReturnDemosaiced:(id)demosaiced;
- (id)defaultInputReturnDemosaiced;
- (void)setInputEnableEDRMode:(id)edrmode;
- (id)defaultInputLocalToneMapAmount;
- (void)setInputLocalToneMapAmount:(id)amount;
- (id)defaultInputLuminanceNoiseReductionAmount;
- (id)defaultInputColorNoiseReductionAmount;
- (id)defaultInputNoiseReductionContrastAmount;
- (id)defaultInputNoiseReductionDetailAmount;
- (id)defaultInputNoiseReductionSharpnessAmount;
- (id)defaultInputMoireAmount;
- (id)defaultInputEnableVendorLensCorrection;
- (id)defaultDecoderVersion;
- (id)defaultInputEnableEDRMode;
- (id)supportedSushiModes;
- (id)supportedDecoderVersions;
- (void)setInputBias:(id)bias;
- (id)defaultInputBiasAmount;
- (id)inputBias;
- (void)setInputBaselineExposure:(id)exposure;
- (id)defaultInputBaselineExposureAmount;
- (id)inputBaselineExposure;
- (void)setInputHueMagMR:(id)mr;
- (id)defaultInputHueMagMRAmount;
- (id)inputHueMagMR;
- (void)setInputHueMagRY:(id)ry;
- (id)defaultInputHueMagRYAmount;
- (id)inputHueMagRY;
- (void)setInputHueMagYG:(id)yg;
- (id)defaultInputHueMagYGAmount;
- (id)inputHueMagYG;
- (void)setInputHueMagGC:(id)gc;
- (id)defaultInputHueMagGCAmount;
- (id)inputHueMagGC;
- (void)setInputHueMagCB:(id)cb;
- (id)defaultInputHueMagCBAmount;
- (id)inputHueMagCB;
- (void)setInputHueMagBM:(id)bm;
- (id)defaultInputHueMagBMAmount;
- (id)inputHueMagBM;
- (void)setInputDisableGamutMap:(id)map;
- (id)inputDisableGamutMap;
- (void)setInputLinearSpaceFilter:(id)filter;
- (id)inputLinearSpaceFilter;
- (void)setInputBoostShadowAmount:(id)amount;
- (id)defaultBoostShadowAmount;
- (id)activeKeys;
- (id)properties;
- (id)outputNativeSize;
- (id)initWithCVPixelBuffer:(struct __CVBuffer *)buffer properties:(id)properties options:(id)options;
- (id)initWithImageSource:(struct CGImageSource *)source options:(id)options;
- (void)invalidateFilters;
- (void)invalidateInputImage;
- (id)rawOptions;
- (id)rawOptionsWithSubsampling:(BOOL)subsampling;
- (void)setTempTintAtPoint:(struct CGPoint { double x0; double x1; })point;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })getScaleTransform:(id)transform;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })getOrientationTransform:(id)transform;
- (id)transformedImageIgnoringOrientation:(BOOL)orientation andIgnoringScaleFactor:(BOOL)factor;
- (id)outputImage;
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)setDefaults;
- (id)outputKeys;
@end

#endif /* CIRAWFilterImpl_h */
