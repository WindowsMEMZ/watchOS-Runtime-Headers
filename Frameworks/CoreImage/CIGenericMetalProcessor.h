//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1420.3.0.0.0
//
#ifndef CIGenericMetalProcessor_h
#define CIGenericMetalProcessor_h
@import Foundation;

#include "CIImageProcessorKernel.h"

@interface CIGenericMetalProcessor : CIImageProcessorKernel
/* class methods */
+ (BOOL)skipFormatChecks;
+ (id)applyWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent shader:(id)shader inputs:(id)inputs roiMethods:(id)methods insetRects:(id)rects scaleFactors:(id)factors arguments:(id)arguments error:(id *)error;
+ (id)applyWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent shader:(id)shader inputs:(id)inputs insetRects:(id)rects arguments:(id)arguments error:(id *)error;
+ (id)applyWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent shader:(id)shader inputs:(id)inputs scaleFactors:(id)factors arguments:(id)arguments error:(id *)error;
+ (id)applyWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent shader:(id)shader inputs:(id)inputs arguments:(id)arguments error:(id *)error;
+ (id)applyWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent shader:(id)shader inputs:(id)inputs className:(id)name arguments:(id)arguments error:(id *)error;
+ (BOOL)processWithInputs:(id)inputs arguments:(id)arguments output:(id)output error:(id *)error;
+ (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })roiForInput:(int)input arguments:(id)arguments outputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
+ (int)formatForInputAtIndex:(int)index;
+ (BOOL)outputIsOpaque;
+ (BOOL)synchronizeInputs;
+ (id)applyWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent inputs:(id)inputs arguments:(id)arguments error:(id *)error;
@end

#endif /* CIGenericMetalProcessor_h */
