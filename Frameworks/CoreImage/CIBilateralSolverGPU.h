//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1420.3.0.0.0
//
#ifndef CIBilateralSolverGPU_h
#define CIBilateralSolverGPU_h
@import Foundation;

@protocol MTLBuffer, MTLCommandBuffer, MTLDevice, MTLTexture, OS_dispatch_group, [2@"<MTLBuffer>"], [9@"<MTLComputePipelineState>"];

@interface CIBilateralSolverGPU : NSObject {
  /* instance variables */
  NSObject<MTLCommandBuffer> *_commandBuffer;
  NSObject<MTLDevice> *_metalDevice;
  <MTLComputePipelineState> * _computePipelines[9];
  NSObject<OS_dispatch_group> *_computePipelinesGroup;
  struct { struct { unsigned long long width; unsigned long long height; unsigned long long depth; } dispatchThreadgroups; struct { unsigned long long width; unsigned long long height; unsigned long long depth; } threadsPerThreadgroup; } _threadGroupInfo;
  struct { float lambda; unsigned int N; unsigned short dims; float sigma_s; float sigma_r_luma; } _params;
  struct { " reference; char x0; out in float x1; int x2; double x3; e x4; in char x5; e x6; double x7; int x8; short x9; p x10; a x11; const int x12; int128 x13; y x14; out u x15; int128 x16; p x17; u x18; int128 x19; " x20; } _offsets;
  int _width;
  int _height;
  unsigned long long _maxVertices;
  NSObject<MTLBuffer> *_gridHashBuffer;
  NSObject<MTLBuffer> *_gridBlurBuffer;
  NSObject<MTLBuffer> *_gridCoordIndicesBuffer;
  NSObject<MTLBuffer> *_gridCoordTableBuffer;
  NSObject<MTLTexture> *_gridHashMatrix;
  NSObject<MTLBuffer> *_gridInterpIndicesBuffer;
  NSObject<MTLBuffer> *_gridInterpTableBuffer;
  NSObject<MTLBuffer> *_gridInterpPadBuffer;
  NSObject<MTLBuffer> *_A_buf;
  NSObject<MTLBuffer> *_b_buf;
  NSObject<MTLBuffer> *_s_buf;
  NSObject<MTLBuffer> *_q_buf;
  <MTLBuffer> * _Dn_buf[2];
  <MTLBuffer> * _x_buf[2];
  <MTLBuffer> * _r_buf[2];
  <MTLBuffer> * _d_buf[2];
  int _idxDnBufIn;
  int _idxSwapBufIn;
}

@property (nonatomic) BOOL useTrilinearInterpolation;

/* instance methods */
- (void)_setupPipelineCache;
- (id)initWithWidth:(int)width height:(int)height maxVertices:(unsigned long long)vertices commandBuffer:(id)buffer;
- (int)doSolveWithBilateralGridhash:(id)gridhash reference:(id)reference disparity:(id)disparity confidence:(id)confidence output:(id)output lambda:(float)lambda maxIterations:(int)iterations offsets:(struct  *)offsets;
- (void)_setupMetal;
- (void)_setupPipelinesAsync:(id /* block */)async;
- (void)_setupBuffer;
- (void)_prepareResources:(id)resources;
- (int)_doBistochastizeWithCommandBuffer:(id)buffer t_tex:(id)t_tex c_tex:(id)c_tex lambda:(float)lambda nIterations:(int)iterations;
- (int)_doPCGWithCommandBuffer:(id)buffer nIterations:(int)iterations;
- (int)_doSliceWithCommandBuffer:(id)buffer o_tex:(id)o_tex;
- (int)_doSliceTrilinearWithCommandBuffer:(id)buffer ref_tex:(id)ref_tex o_tex:(id)o_tex;
@end

#endif /* CIBilateralSolverGPU_h */
