//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1420.3.0.0.0
//
#ifndef CIImage_h
#define CIImage_h
@import Foundation;

#include "CIFilterShape.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class AVDepthData, AVPortraitEffectsMatte, AVSemanticSegmentationMatte, NSDictionary, NSURL;

@interface CIImage : NSObject<NSSecureCoding, NSCopying> {
  /* instance variables */
  void * _priv;
}

@property (readonly, nonatomic) AVDepthData *depthData;
@property (readonly, nonatomic) AVPortraitEffectsMatte *portraitEffectsMatte;
@property (readonly, nonatomic) AVSemanticSegmentationMatte *semanticSegmentationMatte;
@property (readonly, nonatomic) struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } extent;
@property (readonly) NSDictionary *properties;
@property (readonly) CIFilterShape *definition;
@property (readonly) NSURL *url;
@property (readonly) struct CGColorSpace * colorSpace;
@property (readonly, nonatomic) struct __CVBuffer * pixelBuffer;
@property (readonly, nonatomic) struct CGImage * CGImage;

/* class methods */
+ (id)smartToneAdjustmentsForValue:(double)value andStatistics:(id)statistics;
+ (id)smartToneAdjustmentsForValue:(double)value localLightAutoValue:(double)value andStatistics:(id)statistics;
+ (id)smartColorAdjustmentsForValue:(double)value andStatistics:(id)statistics;
+ (id)imageWithYCCImage:(id)yccimage matrix:(int)matrix fullRange:(BOOL)range colorSpace:(struct CGColorSpace *)space;
+ (id)imageWithYCCImage:(id)yccimage matrix:(int)matrix fullRange:(BOOL)range precision:(int)precision colorSpace:(struct CGColorSpace *)space;
+ (id)imageWithYImage:(id)yimage CrCbImage:(id)image CrCbScale:(int)scale matrix:(int)matrix fullRange:(BOOL)range colorSpace:(struct CGColorSpace *)space;
+ (id)imageWithYImage:(id)yimage CrCbImage:(id)image CrCbScale:(int)scale matrix:(int)matrix fullRange:(BOOL)range precision:(int)precision colorSpace:(struct CGColorSpace *)space;
+ (id)imageYCC444:(id)ycc444 matrix:(int)matrix fullRange:(BOOL)range colorSpace:(struct CGColorSpace *)space;
+ (id)imageYCC444:(id)ycc444 matrix:(int)matrix fullRange:(BOOL)range precision:(int)precision colorSpace:(struct CGColorSpace *)space;
+ (id)imageWithImageProvider:(id)provider userInfo:(id)info size:(struct CGSize { double x0; double x1; })size format:(int)format flipped:(BOOL)flipped colorSpace:(struct CGColorSpace *)space;
+ (id)imageWithImageProvider:(id)provider size:(unsigned long long)size;
+ (id)clearImage:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })image;
+ (id)imageWithAttributedString:(id)string format:(int)format;
+ (id)imageWithAttributedString:(id)string format:(int)format options:(id)options;
+ (id)imageWithSemanticSegmentationMatte:(id)matte options:(id)options;
+ (id)imageWithSemanticSegmentationMatte:(id)matte;
+ (id)imageWithPortaitEffectsMatte:(id)matte options:(id)options;
+ (id)imageWithPortaitEffectsMatte:(id)matte;
+ (id)imageWithPortraitEffectsMatte:(id)matte options:(id)options;
+ (id)imageWithPortraitEffectsMatte:(id)matte;
+ (id)imageWithDepthData:(id)data options:(id)options;
+ (id)imageWithDepthData:(id)data;
+ (id)blackImage;
+ (id)whiteImage;
+ (id)grayImage;
+ (id)redImage;
+ (id)greenImage;
+ (id)blueImage;
+ (id)cyanImage;
+ (id)magentaImage;
+ (id)yellowImage;
+ (id)clearImage;
+ (id)nullImage;
+ (id)imageWithIOSurface:(struct __IOSurface *)iosurface;
+ (id)imageWithIOSurface:(struct __IOSurface *)iosurface options:(id)options;
+ (id)imageWithCGImage:(struct CGImage *)cgimage;
+ (id)imageWithCGImage:(struct CGImage *)cgimage options:(id)options;
+ (id)imageWithCGImageSource:(struct CGImageSource *)source index:(unsigned long long)index options:(id)options;
+ (id)imageWithCGLayer:(struct CGLayer *)cglayer;
+ (id)imageWithCGLayer:(struct CGLayer *)cglayer options:(id)options;
+ (id)imageWithBitmapData:(id)data bytesPerRow:(unsigned long long)row size:(struct CGSize { double x0; double x1; })size format:(int)format options:(id)options;
+ (id)imageWithBitmapData:(id)data bytesPerRow:(unsigned long long)row size:(struct CGSize { double x0; double x1; })size format:(int)format colorSpace:(struct CGColorSpace *)space;
+ (id)imageWithTexture:(unsigned int)texture size:(struct CGSize { double x0; double x1; })size flipped:(BOOL)flipped colorSpace:(struct CGColorSpace *)space;
+ (id)imageWithTexture:(unsigned int)texture size:(struct CGSize { double x0; double x1; })size options:(id)options;
+ (id)imageWithTexture:(unsigned int)texture size:(struct CGSize { double x0; double x1; })size flipped:(BOOL)flipped options:(id)options;
+ (id)imageWithMTLTexture:(id)mtltexture options:(id)options;
+ (id)imageWithCVPixelBuffer:(struct __CVBuffer *)buffer;
+ (id)imageWithCVPixelBuffer:(struct __CVBuffer *)buffer options:(id)options;
+ (id)imageWithCVImageBuffer:(struct __CVBuffer *)buffer;
+ (id)imageWithCVImageBuffer:(struct __CVBuffer *)buffer options:(id)options;
+ (id)imageWithColor:(id)color;
+ (id)noiseImage;
+ (id)noiseImageNearest;
+ (id)noiseImagePadded;
+ (id)emptyImage;
+ (id)imageWithData:(id)data;
+ (id)imageWithData:(id)data options:(id)options;
+ (id)imageWithContentsOfURL:(id)url;
+ (id)imageWithContentsOfURL:(id)url options:(id)options;
+ (id)imageWithContentsOfFile:(id)file;
+ (id)imageWithContentsOfFile:(id)file options:(id)options;
+ (id)imageForRenderingWithMetal:(id)metal orNonMetal:(id)metal;
+ (id)imageForRenderingWithMPS:(id)mps orNonMPS:(id)mps;
+ (id)imageForRenderingWithMetalContext:(id)context orOpenGLContextUsingMetal:(id)metal orNonMetalContext:(id)context;
+ (id)imageWithArrayOfImages:(id)images selector:(id /* block */)selector;
+ (BOOL)supportsSecureCoding;
+ (id)imageWithInternalRepresentation:(void *)representation;

/* instance methods */
- (id)metalImageByApplyingFilter:(id)filter withInputParameters:(id)parameters;
- (id)metalImageByApplyingFilter:(id)filter;
- (id)smartToneStatistics;
- (id)smartColorStatistics;
- (id)smartToneAdjustmentsForValue:(double)value andStatistics:(id)statistics;
- (id)smartToneAdjustmentsForValue:(double)value localLightAutoValue:(double)value andStatistics:(id)statistics;
- (id)smartColorAdjustmentsForValue:(double)value andStatistics:(id)statistics;
- (id)smartBlackAndWhiteStatistics;
- (id)smartBlackAndWhiteAdjustmentsForValue:(double)value andStatistics:(id)statistics;
- (id)localLightStatisticsWithProxy:(BOOL)proxy;
- (id)localLightStatistics;
- (id)localLightStatisticsNoProxy;
- (id)initWithImageProvider:(id)provider userInfo:(id)info size:(struct CGSize { double x0; double x1; })size format:(int)format flipped:(BOOL)flipped colorSpace:(struct CGColorSpace *)space;
- (id)initWithImageProvider:(id)provider size:(unsigned long long)size;
- (id)initWithImageProvider:(id /* block */)provider width:(unsigned long long)width height:(unsigned long long)height format:(int)format colorSpace:(struct CGColorSpace *)space options:(id)options;
- (id)_initWithImageProvider:(id /* block */)provider width:(unsigned long long)width height:(unsigned long long)height format:(int)format colorSpace:(struct CGColorSpace *)space surfaceCache:(BOOL)cache options:(id)options;
- (id)imageWithExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent processorDescription:(id)description argumentDigest:(unsigned long long)digest inputFormat:(int)format outputFormat:(int)format options:(id)options roiCallback:(id /* block */)callback processor:(id /* block */)processor;
- (struct CGPoint { double x0; double x1; })calcIntersection:(struct CGPoint { double x0; double x1; })intersection slope1:(struct CGPoint { double x0; double x1; })slope1 pt2:(struct CGPoint { double x0; double x1; })pt2 slope2:(struct CGPoint { double x0; double x1; })slope2;
- (id)getAutoRotateFilter:(id)filter ciImage:(id)image inputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect rotateCropRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect minTiltAngle:(float)angle maxTiltAngle:(float)angle detectVerticalLines:(BOOL)lines thrVertAngle:(float)angle thrDomAngleDiff:(float)diff;
- (id)autoRotateFilterFFT:(id)fft image:(struct CGImage *)image inputRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect minTiltAngle:(float)angle maxTiltAngle:(float)angle detectVerticalLines:(BOOL)lines thrVertAngle:(float)angle thrDomAngleDiff:(float)diff;
- (void)getAutocropRect:(id)rect rotateXfrm:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })xfrm inputImageRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect clipRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; } *)rect;
- (id)_scaleImageToMaxDimension:(unsigned int)dimension;
- (id)autoAdjustmentFiltersWithImageProperties:(id)properties options:(id)options;
- (id)autoAdjustmentFilters;
- (id)autoAdjustmentFiltersWithOptions:(id)options;
- (id)imageWithMesh:(id)mesh transform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (struct CGPoint { double x0; double x1; })pointWithDictionary:(id)dictionary name:(id)name index:(int)index transformedBy:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })by;
- (id)_dictForFeature:(id)feature invOrientationTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform extent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })inverseImageTransformForOrientation:(int)orientation;
- (id)_autoRedEyeFilterWithFeatures:(id)features imageProperties:(id)properties context:(id)context options:(id)options;
- (id)autoRedEyeFilterWithFeatures:(id)features imageProperties:(id)properties options:(id)options;
- (id)autoRedEyeFilterWithFeatures:(id)features options:(id)options;
- (id)_pdfDataRepresentation;
- (id)initWithAttributedString:(id)string format:(int)format;
- (id)initWithAttributedString:(id)string format:(int)format options:(id)options;
- (id)imageByConvertingWorkingSpaceToLab;
- (id)imageByConvertingLabToWorkingSpace;
- (id)initWithSemanticSegmentationMatte:(id)matte options:(id)options;
- (id)initWithSemanticSegmentationMatte:(id)matte;
- (id)initWithPortaitEffectsMatte:(id)matte options:(id)options;
- (id)initWithPortaitEffectsMatte:(id)matte;
- (id)initWithPortraitEffectsMatte:(id)matte options:(id)options;
- (id)initWithPortraitEffectsMatte:(id)matte;
- (id)initWithDepthData:(id)data options:(id)options;
- (id)initWithDepthData:(id)data;
- (id)_initWithIOSurface:(struct __IOSurface *)iosurface options:(id)options owner:(void *)owner;
- (id)initWithIOSurface:(struct __IOSurface *)iosurface;
- (id)initWithIOSurface:(struct __IOSurface *)iosurface options:(id)options;
- (void)_setOriginalCGImage:(struct CGImage *)cgimage options:(id)options;
- (struct CGImage *)_originalCGImage;
- (id)initWithCGImage:(struct CGImage *)cgimage;
- (id)_initNaiveWithCGImage:(struct CGImage *)cgimage options:(id)options;
- (id)initWithCGImage:(struct CGImage *)cgimage options:(id)options;
- (id)initAuxiliaryWithImageSource:(struct CGImageSource *)source index:(unsigned long long)index options:(id)options depth:(BOOL)depth;
- (struct __CVBuffer *)_pixelBufferFromAuxProps:(struct __CFDictionary *)props linear:(BOOL)linear;
- (id)initMatteWithImageSource:(struct CGImageSource *)source options:(id)options;
- (id)initWithCGImageSource:(struct CGImageSource *)source index:(unsigned long long)index options:(id)options;
- (id)initWithCGLayer:(struct CGLayer *)cglayer;
- (id)initWithCGLayer:(struct CGLayer *)cglayer options:(id)options;
- (id)_initWithBitmapData:(id)data bytesPerRow:(unsigned long long)row size:(struct CGSize { double x0; double x1; })size format:(int)format options:(id)options;
- (id)initWithBitmapData:(id)data bytesPerRow:(unsigned long long)row size:(struct CGSize { double x0; double x1; })size format:(int)format colorSpace:(struct CGColorSpace *)space;
- (id)initWithBitmapData:(id)data bytesPerRow:(unsigned long long)row size:(struct CGSize { double x0; double x1; })size format:(int)format options:(id)options;
- (id)initWithTexture:(unsigned int)texture size:(struct CGSize { double x0; double x1; })size flipped:(BOOL)flipped colorSpace:(struct CGColorSpace *)space;
- (id)initWithTexture:(unsigned int)texture size:(struct CGSize { double x0; double x1; })size flipped:(BOOL)flipped options:(id)options;
- (id)initWithTexture:(unsigned int)texture size:(struct CGSize { double x0; double x1; })size options:(id)options;
- (id)initWithMTLTexture:(id)mtltexture options:(id)options;
- (void)_setOriginalCVPixelBuffer:(struct __CVBuffer *)buffer options:(id)options;
- (struct __CVBuffer *)_originalCVPixelBuffer;
- (id)_initWithCVImageBuffer:(struct __CVBuffer *)buffer options:(id)options;
- (id)initWithCVPixelBuffer:(struct __CVBuffer *)buffer;
- (id)initWithCVPixelBuffer:(struct __CVBuffer *)buffer options:(id)options;
- (id)initWithCVImageBuffer:(struct __CVBuffer *)buffer;
- (id)initWithCVImageBuffer:(struct __CVBuffer *)buffer options:(id)options;
- (id)initWithEmptyClearColor;
- (id)initWithColorR:(double)r G:(double)g B:(double)b A:(double)a;
- (id)initWithColor:(id)color;
- (id)init;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })imageTransformForOrientation:(int)orientation;
- (id)imageByApplyingOrientation:(int)orientation;
- (struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })imageTransformForCGOrientation:(unsigned int)cgorientation;
- (id)imageByApplyingCGOrientation:(unsigned int)cgorientation;
- (id)initWithData:(id)data;
- (id)initWithData:(id)data options:(id)options;
- (id)initWithContentsOfURL:(id)url;
- (id)initWithContentsOfURL:(id)url options:(id)options;
- (id)initWithContentsOfFile:(id)file;
- (id)initWithContentsOfFile:(id)file options:(id)options;
- (id)_imageByApplyingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform highQualityDownsample:(struct Trilean { char x0; })downsample;
- (id)imageByApplyingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform;
- (id)imageByApplyingTransform:(struct CGAffineTransform { double x0; double x1; double x2; double x3; double x4; double x5; })transform highQualityDownsample:(BOOL)downsample;
- (id)imageByCroppingToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)imageByClampingToRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (id)imageByClampingToExtent;
- (id)imageByCompositingOverImage:(id)image;
- (id)_imageByPremultiplying;
- (id)imageByPremultiplyingAlpha;
- (id)_imageByUnpremultiplying;
- (id)imageByUnpremultiplyingAlpha;
- (id)_imageByClampingAlpha;
- (id)imageBySettingAlphaOneInExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
- (id)_imageByApplyingGamma:(double)gamma;
- (id)_imageByApplyingBlur:(double)blur;
- (id)imageByApplyingGaussianBlurWithSigma:(double)sigma;
- (id)_imageByMatchingWorkingSpaceToColorSpace:(struct CGColorSpace *)space;
- (id)imageByColorMatchingWorkingSpaceToColorSpace:(struct CGColorSpace *)space;
- (id)imageByColorMatchingWorkingSpaceToRGBorGrayColorSpace:(struct CGColorSpace *)space;
- (id)_imageByMatchingColorSpaceToWorkingSpace:(struct CGColorSpace *)space;
- (id)imageByColorMatchingColorSpaceToWorkingSpace:(struct CGColorSpace *)space;
- (id)imageByToneMappingColorSpaceToWorkingSpace:(struct CGColorSpace *)space;
- (id)imageByTaggingWithColorSpace:(struct CGColorSpace *)space;
- (id)_imageByApplyingColorMatrixRed:green:blue:bias:;
- (id)imageByInsertingIntermediate;
- (id)imageByInsertingIntermediate:(BOOL)intermediate;
- (id)_imageByRenderingToIntermediate;
- (id)imageBySettingProperties:(id)properties;
- (id)imageBySettingPropertiesNoCopy:(id)copy;
- (id)imageBySamplingNearest;
- (id)imageBySamplingLinear;
- (id)_imageBySamplingNearest;
- (id)_imageBySamplingLinear;
- (id)initForRenderingWithMetal:(id)metal orNonMetal:(id)metal;
- (id)initForRenderingWithMPS:(id)mps orNonMPS:(id)mps;
- (id)initForRenderingWithMetalContext:(id)context orOpenGLContextUsingMetal:(id)metal orNonMetalContext:(id)context;
- (id)initWithArrayOfImages:(id)images selector:(id /* block */)selector;
- (void)dealloc;
- (id)description;
- (id)debugDescription;
- (struct CGColorSpace *)baseColorSpace;
- (BOOL)isOpaque;
- (int)outputFormat;
- (void)setUserInfo:(id)info;
- (id)userInfo;
- (void)setCacheHint:(BOOL)hint;
- (BOOL)cacheHint;
- (unsigned long long)digest;
- (unsigned long long)recipeDigest;
- (id)filteredImage:(id)image keysAndValues:(id)values;
- (id)imageByApplyingFilter:(id)filter withInputParameters:(id)parameters;
- (id)imageByApplyingFilter:(id)filter;
- (void)writeToTIFF:(id)tiff;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (void)printTree;
- (id)TIFFRepresentation;
- (id)_initWithInternalRepresentation:(void *)representation;
- (void *)_internalRepresentation;
- (struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })regionOfInterestForImage:(id)image inRect:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })rect;
- (void)setValue:(id)value forKeyPath:(id)path;
@end

#endif /* CIImage_h */
