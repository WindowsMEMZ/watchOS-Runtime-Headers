//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 1420.3.0.0.0
//
#ifndef CIFilter_h
#define CIFilter_h
@import Foundation;

#include "CIImage.h"
#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSArray, NSDictionary, NSString;

@interface CIFilter : NSObject<NSSecureCoding, NSCopying> {
  /* instance variables */
  void * _priv[8];
}

@property (readonly, @dynamic, nonatomic) CIImage *outputImage;
@property (copy, nonatomic) NSString *name;
@property BOOL enabled;
@property (readonly, nonatomic) NSArray *inputKeys;
@property (readonly, nonatomic) NSArray *outputKeys;
@property (readonly, nonatomic) NSDictionary *attributes;

/* class methods */
+ (int)minSDOFRenderingVersionSupported;
+ (int)maxSDOFRenderingVersionSupported;
+ (int)getMinMaxSimulatedApertureFrom:(struct __CFData *)from minValue:(float *)value maxValue:(float *)value version:(int *)version;
+ (id)metalFilterWithName:(id)name withInputParameters:(id)parameters;
+ (id)metalFilterWithName:(id)name;
+ (id)filterWithImageURL:(id)url options:(id)options;
+ (id)filterWithImageData:(id)data options:(id)options;
+ (id)filterWithCVPixelBuffer:(struct __CVBuffer *)buffer properties:(id)properties options:(id)options;
+ (id)supportedRawCameraModels;
+ (id)filterWithName:(id)name setDefaults:(BOOL)defaults;
+ (id)filterWithName:(id)name compatibilityVersion:(int)version;
+ (id)filterWithName:(id)name compatibilityVersion:(int)version keysAndValues:(id)values;
+ (id)allCategories:(BOOL)categories;
+ (void)unregisterFilterName:(id)name;
+ (id)filterWithName:(id)name;
+ (id)filterWithName:(id)name keysAndValues:(id)values;
+ (id)filterWithName:(id)name withInputParameters:(id)parameters;
+ (id)filterNamesInCategory:(id)category;
+ (id)filterNamesInCategories:(id)categories;
+ (void)registerFilterName:(id)name constructor:(id)constructor classAttributes:(id)attributes;
+ (id)localizedNameForFilterName:(id)name;
+ (id)localizedNameForCategory:(id)category;
+ (id)localizedDescriptionForFilterName:(id)name;
+ (id)localizedReferenceDocumentationForFilterName:(id)name;
+ (unsigned int)indexForWrapperNumber:(unsigned int)number;
+ (BOOL)exchangeImplementationsForClass;
+ (BOOL)wrapClassIfNeeded:(Class)needed;
+ (id)filterName:(id)name append:(id)append arguments:(id)arguments;
+ (id)filterName:(id)name prepend:(id)prepend imageName:(id)name arguments:(id)arguments;
+ (void)addFilterToSkip:(id)skip;
+ (id)filterName:(id)name replacement:(id)replacement arguments:(id)arguments;
+ (id)filterName:(id)name replacement:(id)replacement;
+ (id)gaussianGradientFilter;
+ (id)hueSaturationValueGradientFilter;
+ (id)linearGradientFilter;
+ (id)radialGradientFilter;
+ (id)smoothLinearGradientFilter;
+ (id)sharpenLuminanceFilter;
+ (id)unsharpMaskFilter;
+ (id)circularScreenFilter;
+ (id)CMYKHalftone;
+ (id)dotScreenFilter;
+ (id)hatchedScreenFilter;
+ (id)lineScreenFilter;
+ (id)bicubicScaleTransformFilter;
+ (id)edgePreserveUpsampleFilter;
+ (id)keystoneCorrectionCombinedFilter;
+ (id)keystoneCorrectionHorizontalFilter;
+ (id)keystoneCorrectionVerticalFilter;
+ (id)lanczosScaleTransformFilter;
+ (id)perspectiveCorrectionFilter;
+ (id)perspectiveRotateFilter;
+ (id)perspectiveTransformFilter;
+ (id)perspectiveTransformWithExtentFilter;
+ (id)straightenFilter;
+ (id)accordionFoldTransitionFilter;
+ (id)barsSwipeTransitionFilter;
+ (id)copyMachineTransitionFilter;
+ (id)disintegrateWithMaskTransitionFilter;
+ (id)dissolveTransitionFilter;
+ (id)flashTransitionFilter;
+ (id)modTransitionFilter;
+ (id)pageCurlTransitionFilter;
+ (id)pageCurlWithShadowTransitionFilter;
+ (id)rippleTransitionFilter;
+ (id)swipeTransitionFilter;
+ (id)additionCompositingFilter;
+ (id)colorBlendModeFilter;
+ (id)colorBurnBlendModeFilter;
+ (id)colorDodgeBlendModeFilter;
+ (id)darkenBlendModeFilter;
+ (id)differenceBlendModeFilter;
+ (id)divideBlendModeFilter;
+ (id)exclusionBlendModeFilter;
+ (id)hardLightBlendModeFilter;
+ (id)hueBlendModeFilter;
+ (id)lightenBlendModeFilter;
+ (id)linearBurnBlendModeFilter;
+ (id)linearDodgeBlendModeFilter;
+ (id)linearLightBlendModeFilter;
+ (id)luminosityBlendModeFilter;
+ (id)maximumCompositingFilter;
+ (id)minimumCompositingFilter;
+ (id)multiplyBlendModeFilter;
+ (id)multiplyCompositingFilter;
+ (id)overlayBlendModeFilter;
+ (id)pinLightBlendModeFilter;
+ (id)saturationBlendModeFilter;
+ (id)screenBlendModeFilter;
+ (id)softLightBlendModeFilter;
+ (id)sourceAtopCompositingFilter;
+ (id)sourceInCompositingFilter;
+ (id)sourceOutCompositingFilter;
+ (id)sourceOverCompositingFilter;
+ (id)subtractBlendModeFilter;
+ (id)vividLightBlendModeFilter;
+ (id)colorAbsoluteDifferenceFilter;
+ (id)colorClampFilter;
+ (id)colorControlsFilter;
+ (id)colorMatrixFilter;
+ (id)colorPolynomialFilter;
+ (id)colorThresholdFilter;
+ (id)colorThresholdOtsuFilter;
+ (id)depthToDisparityFilter;
+ (id)disparityToDepthFilter;
+ (id)exposureAdjustFilter;
+ (id)gammaAdjustFilter;
+ (id)hueAdjustFilter;
+ (id)linearToSRGBToneCurveFilter;
+ (id)sRGBToneCurveToLinearFilter;
+ (id)temperatureAndTintFilter;
+ (id)toneCurveFilter;
+ (id)vibranceFilter;
+ (id)whitePointAdjustFilter;
+ (id)colorCrossPolynomialFilter;
+ (id)colorCubeFilter;
+ (id)colorCubesMixedWithMaskFilter;
+ (id)colorCubeWithColorSpaceFilter;
+ (id)colorCurvesFilter;
+ (id)colorInvertFilter;
+ (id)colorMapFilter;
+ (id)colorMonochromeFilter;
+ (id)colorPosterizeFilter;
+ (id)convertLabToRGBFilter;
+ (id)convertRGBtoLabFilter;
+ (id)ditherFilter;
+ (id)documentEnhancerFilter;
+ (id)falseColorFilter;
+ (id)LabDeltaE;
+ (id)maskToAlphaFilter;
+ (id)maximumComponentFilter;
+ (id)minimumComponentFilter;
+ (id)paletteCentroidFilter;
+ (id)palettizeFilter;
+ (id)photoEffectChromeFilter;
+ (id)photoEffectFadeFilter;
+ (id)photoEffectInstantFilter;
+ (id)photoEffectMonoFilter;
+ (id)photoEffectNoirFilter;
+ (id)photoEffectProcessFilter;
+ (id)photoEffectTonalFilter;
+ (id)photoEffectTransferFilter;
+ (id)sepiaToneFilter;
+ (id)thermalFilter;
+ (id)vignetteFilter;
+ (id)vignetteEffectFilter;
+ (id)xRayFilter;
+ (id)bumpDistortionFilter;
+ (id)bumpDistortionLinearFilter;
+ (id)circleSplashDistortionFilter;
+ (id)circularWrapFilter;
+ (id)displacementDistortionFilter;
+ (id)drosteFilter;
+ (id)glassDistortionFilter;
+ (id)glassLozengeFilter;
+ (id)holeDistortionFilter;
+ (id)lightTunnelFilter;
+ (id)ninePartStretchedFilter;
+ (id)ninePartTiledFilter;
+ (id)pinchDistortionFilter;
+ (id)stretchCropFilter;
+ (id)torusLensDistortionFilter;
+ (id)twirlDistortionFilter;
+ (id)vortexDistortionFilter;
+ (id)affineClampFilter;
+ (id)affineTileFilter;
+ (id)eightfoldReflectedTileFilter;
+ (id)fourfoldReflectedTileFilter;
+ (id)fourfoldRotatedTileFilter;
+ (id)fourfoldTranslatedTileFilter;
+ (id)glideReflectedTileFilter;
+ (id)kaleidoscopeFilter;
+ (id)opTileFilter;
+ (id)parallelogramTileFilter;
+ (id)perspectiveTileFilter;
+ (id)sixfoldReflectedTileFilter;
+ (id)sixfoldRotatedTileFilter;
+ (id)triangleKaleidoscopeFilter;
+ (id)triangleTileFilter;
+ (id)twelvefoldReflectedTileFilter;
+ (id)attributedTextImageGeneratorFilter;
+ (id)aztecCodeGeneratorFilter;
+ (id)barcodeGeneratorFilter;
+ (id)blurredRectangleGeneratorFilter;
+ (id)checkerboardGeneratorFilter;
+ (id)code128BarcodeGeneratorFilter;
+ (id)lenticularHaloGeneratorFilter;
+ (id)meshGeneratorFilter;
+ (id)PDF417BarcodeGenerator;
+ (id)QRCodeGenerator;
+ (id)randomGeneratorFilter;
+ (id)roundedRectangleGeneratorFilter;
+ (id)roundedRectangleStrokeGeneratorFilter;
+ (id)starShineGeneratorFilter;
+ (id)stripesGeneratorFilter;
+ (id)sunbeamsGeneratorFilter;
+ (id)textImageGeneratorFilter;
+ (id)blendWithAlphaMaskFilter;
+ (id)blendWithBlueMaskFilter;
+ (id)blendWithMaskFilter;
+ (id)blendWithRedMaskFilter;
+ (id)bloomFilter;
+ (id)cannyEdgeDetectorFilter;
+ (id)comicEffectFilter;
+ (id)convolution3X3Filter;
+ (id)convolution5X5Filter;
+ (id)convolution7X7Filter;
+ (id)convolution9HorizontalFilter;
+ (id)convolution9VerticalFilter;
+ (id)convolutionRGB3X3Filter;
+ (id)convolutionRGB5X5Filter;
+ (id)convolutionRGB7X7Filter;
+ (id)convolutionRGB9HorizontalFilter;
+ (id)convolutionRGB9VerticalFilter;
+ (id)coreMLModelFilter;
+ (id)crystallizeFilter;
+ (id)depthOfFieldFilter;
+ (id)edgesFilter;
+ (id)edgeWorkFilter;
+ (id)gaborGradientsFilter;
+ (id)gloomFilter;
+ (id)heightFieldFromMaskFilter;
+ (id)hexagonalPixellateFilter;
+ (id)highlightShadowAdjustFilter;
+ (id)lineOverlayFilter;
+ (id)mixFilter;
+ (id)personSegmentationFilter;
+ (id)pixellateFilter;
+ (id)pointillizeFilter;
+ (id)saliencyMapFilter;
+ (id)shadedMaterialFilter;
+ (id)sobelGradientsFilter;
+ (id)spotColorFilter;
+ (id)spotLightFilter;
+ (id)bokehBlurFilter;
+ (id)boxBlurFilter;
+ (id)discBlurFilter;
+ (id)gaussianBlurFilter;
+ (id)maskedVariableBlurFilter;
+ (id)medianFilter;
+ (id)morphologyGradientFilter;
+ (id)morphologyMaximumFilter;
+ (id)morphologyMinimumFilter;
+ (id)morphologyRectangleMaximumFilter;
+ (id)morphologyRectangleMinimumFilter;
+ (id)motionBlurFilter;
+ (id)noiseReductionFilter;
+ (id)zoomBlurFilter;
+ (id)areaAverageFilter;
+ (id)areaHistogramFilter;
+ (id)areaLogarithmicHistogramFilter;
+ (id)areaMaximumFilter;
+ (id)areaMaximumAlphaFilter;
+ (id)areaMinimumFilter;
+ (id)areaMinimumAlphaFilter;
+ (id)areaMinMaxFilter;
+ (id)areaMinMaxRedFilter;
+ (id)columnAverageFilter;
+ (id)histogramDisplayFilter;
+ (id)KMeansFilter;
+ (id)rowAverageFilter;
+ (void)clearCache;
+ (id)customAttributes;
+ (id)filterWithString:(id)string;
+ (id)_propertyArrayFromFilters:(id)filters inputImageExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
+ (id)_filterArrayFromProperties:(id)properties inputImageExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
+ (struct CGImageMetadata *)_imageMetadataFromFilters:(id)filters inputImageExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
+ (id)_filterArrayFromImageMetadata:(struct CGImageMetadata *)metadata inputImageExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
+ (id)_filterArrayFromProperties:(id)properties;
+ (id)prewarmedFilterFromString:(id)string;
+ (id)keyPathsForValuesAffectingValueForKey:(id)key;
+ (BOOL)supportsSecureCoding;
+ (id)serializedXMPFromFilters:(id)filters inputImageExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent;
+ (id)filterArrayFromSerializedXMP:(id)xmp inputImageExtent:(struct CGRect { struct CGPoint { double x0; double x1; } x0; struct CGSize { double x0; double x1; } x1; })extent error:(id *)error;

/* instance methods */
- (id)apply:(id)apply image:(id)image arguments:(id)arguments inoutSpace:(struct CGColorSpace *)space;
- (id)apply:(id)apply image:(id)image arguments:(id)arguments inSpace:(struct CGColorSpace *)space;
- (int)compatibilityVersion;
- (void)_prependSingleFilter:(id)filter;
- (void)_prepend:(id)_prepend;
- (id)_appendSingleFilterTo:(id)to filterAndSettings:(id)settings;
- (id)_append:(id)_append image:(id)image;
- (id)outputImageCatchAll:(unsigned int)all;
- (id)wrappedOutputImage10;
- (id)wrappedOutputImage11;
- (id)wrappedOutputImage12;
- (id)wrappedOutputImage13;
- (id)wrappedOutputImage14;
- (id)wrappedOutputImage15;
- (id)wrappedOutputImage16;
- (id)wrappedOutputImage17;
- (id)wrappedOutputImage18;
- (id)wrappedOutputImage19;
- (id)wrappedOutputImage20;
- (id)wrappedOutputImage21;
- (id)wrappedOutputImage22;
- (id)wrappedOutputImage23;
- (id)wrappedOutputImage24;
- (id)wrappedOutputImage25;
- (id)wrappedOutputImage26;
- (id)wrappedOutputImage27;
- (id)wrappedOutputImage28;
- (id)wrappedOutputImage29;
- (id)wrappedOutputImage30;
- (id)wrappedOutputImage31;
- (id)wrappedOutputImage32;
- (id)wrappedOutputImage33;
- (id)wrappedOutputImage34;
- (id)wrappedOutputImage35;
- (id)wrappedOutputImage36;
- (id)wrappedOutputImage37;
- (id)wrappedOutputImage38;
- (id)wrappedOutputImage39;
- (id)wrappedOutputImage40;
- (id)wrappedOutputImage41;
- (id)wrappedOutputImage42;
- (id)wrappedOutputImage43;
- (id)wrappedOutputImage44;
- (id)wrappedOutputImage45;
- (id)wrappedOutputImage46;
- (id)wrappedOutputImage47;
- (id)wrappedOutputImage48;
- (id)wrappedOutputImage49;
- (id)wrappedOutputImage50;
- (id)wrappedOutputImage51;
- (id)wrappedOutputImage52;
- (id)wrappedOutputImage53;
- (id)wrappedOutputImage54;
- (id)wrappedOutputImage55;
- (id)wrappedOutputImage56;
- (id)wrappedOutputImage57;
- (id)wrappedOutputImage58;
- (id)wrappedOutputImage59;
- (id)wrappedOutputImage60;
- (id)wrappedOutputImage61;
- (id)wrappedOutputImage62;
- (id)wrappedOutputImage63;
- (id)wrappedOutputImage64;
- (id)wrappedOutputImage65;
- (id)wrappedOutputImage66;
- (id)wrappedOutputImage67;
- (id)wrappedOutputImage68;
- (id)wrappedOutputImage69;
- (id)wrappedOutputImage70;
- (id)wrappedOutputImage71;
- (id)wrappedOutputImage72;
- (id)wrappedOutputImage73;
- (id)wrappedOutputImage74;
- (id)wrappedOutputImage75;
- (id)wrappedOutputImage76;
- (id)wrappedOutputImage77;
- (id)wrappedOutputImage78;
- (id)wrappedOutputImage79;
- (id)wrappedOutputImage80;
- (id)wrappedOutputImage81;
- (id)wrappedOutputImage82;
- (id)wrappedOutputImage83;
- (id)wrappedOutputImage84;
- (id)wrappedOutputImage85;
- (id)wrappedOutputImage86;
- (id)wrappedOutputImage87;
- (id)wrappedOutputImage88;
- (id)wrappedOutputImage89;
- (id)wrappedOutputImage90;
- (id)wrappedOutputImage91;
- (id)wrappedOutputImage92;
- (id)wrappedOutputImage93;
- (id)wrappedOutputImage94;
- (id)wrappedOutputImage95;
- (id)wrappedOutputImage96;
- (id)wrappedOutputImage97;
- (id)wrappedOutputImage98;
- (id)wrappedOutputImage99;
- (id)customAttributes;
- (BOOL)_filterClassInCategory:(id)category;
- (BOOL)_isIdentity;
- (void)setIdentity;
- (void)setUserInfo:(id)info;
- (id)userInfo;
- (void)setOption:(id)option forKey:(id)key;
- (id)_serializedXMPString;
- (id)prewarmingString;
- (BOOL)verifyPrewarmedFilter:(id)filter;
- (unsigned long long)hash;
- (void)setValue:(id)value forUndefinedKey:(id)key;
- (id)valueForUndefinedKey:(id)key;
- (void)_crashed_when_dealloc_called_setValue_nil_forKey_probably_because_the_subclass_already_released_it:(id)key_probably_because_the_subclass_already_released_it className:(const char *)name overridesDealloc:(BOOL)dealloc;
- (void)dealloc;
- (void)setDefaults;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)_copyFilterWithZone:(struct _NSZone *)zone;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)mutableCopyWithZone:(struct _NSZone *)zone;
- (id)description;
- (id)debugDescription;
- (id)debugQuickLookObject;
- (id)apply:(id)apply arguments:(id)arguments options:(id)options;
- (id)apply:(id)apply;
- (BOOL)isEnabled;
@end

#endif /* CIFilter_h */
