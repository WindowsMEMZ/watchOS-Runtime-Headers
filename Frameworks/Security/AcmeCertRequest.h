//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 61040.64.1.0.0
//
#ifndef AcmeCertRequest_h
#define AcmeCertRequest_h
@import Foundation;

#include "SecJWSEncoder.h"

@class NSArray, NSData, NSDictionary, NSString;
@protocol OS_dispatch_queue, OS_xpc_object;

@interface AcmeCertRequest : NSObject

@property long long state;
@property BOOL logAcmeCSR;
@property BOOL permitLocalIssuer;
@property BOOL requireAttestation;
@property (retain) NSObject<OS_dispatch_queue> *queue;
@property (retain) NSArray *subject;
@property (retain) NSDictionary *parameters;
@property (retain) NSDictionary *keyParams;
@property (retain) NSArray *attestationOids;
@property (retain) NSArray *attestationChain;
@property (retain) NSData *attestation;
@property (retain) NSData *csr;
@property (retain) NSString *nonce;
@property (retain) NSString *location;
@property (retain) NSString *account;
@property (retain) NSString *token;
@property (retain) NSString *timestamp;
@property (retain) NSArray *authorizations;
@property (retain) NSString *authorizationURL;
@property (retain) NSString *challengeURL;
@property (retain) NSString *finalizeOrderURL;
@property (retain) NSString *orderURL;
@property (retain) NSString *certificateURL;
@property (retain) NSString *nextMessageURL;
@property (retain) NSString *acmeNewAccountURL;
@property (retain) NSString *acmeNewNonceURL;
@property (retain) NSString *acmeNewOrderURL;
@property (retain) NSObject<OS_dispatch_queue> *xpc_queue;
@property (retain) NSObject<OS_xpc_object> *connection;
@property (retain) SecJWSEncoder *encoder;
@property struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } * publicKey;
@property struct __SecKey { struct __CFRuntimeBase { unsigned long long x0; atomic  x1; unsigned long long x2; } x0; struct __SecKeyDescriptor * x1; void * x2; } * privateKey;
@property struct __SecCertificate * certificate;
@property struct __SecIdentity * identity;

/* instance methods */
- (id)initWithSubject:(id)subject parameters:(id)parameters;
- (void)dealloc;
- (id)serialNumber;
- (id)sanitizeSubject;
- (id)sanitizeParameters;
- (id)createKeyPair;
- (id)createCSR;
- (BOOL)deviceAttestationSupported;
- (id)requestAttestationChainWithError:(id *)error;
- (id)attestationObjectWithCertificates:(id)certificates;
- (id)createAttestation;
- (id)createCertificate;
- (id)attestationChainPEMRepresentation;
- (int)errorStatusWithHTTPErrorCode:(int)code;
- (id)sendRequestToXPCService:(id)xpcservice response:(id *)response;
- (id)pollForStatus:(id)status until:(id)until;
- (id)acmeRequest;
- (id)processReply:(id)reply;
- (BOOL)valueForBooleanDefault:(id)default;
- (id)executeRequest;
- (struct __SecIdentity *)identityWithError:(id *)error;
@end

#endif /* AcmeCertRequest_h */
