//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 61040.64.1.0.0
//
#ifndef SFSQLite_h
#define SFSQLite_h
@import Foundation;

@class NSDateFormatter, NSMutableDictionary, NSString;
@protocol SFSQLiteDelegate;

@interface SFSQLite : NSObject

@property (nonatomic) struct sqlite3 * db;
@property (nonatomic) unsigned long long openCount;
@property (nonatomic) BOOL corrupt;
@property (readonly, nonatomic) NSMutableDictionary *statementsBySQL;
@property (retain, nonatomic) NSDateFormatter *dateFormatter;
@property (retain, nonatomic) NSDateFormatter *oldDateFormatter;
@property (readonly, nonatomic) NSString *path;
@property (readonly, nonatomic) NSString *schema;
@property (readonly, nonatomic) NSString *schemaVersion;
@property (retain, nonatomic) NSString *objectClassPrefix;
@property (nonatomic) int userVersion;
@property (nonatomic) long long synchronousMode;
@property (readonly, nonatomic) BOOL isOpen;
@property (readonly, nonatomic) BOOL hasMigrated;
@property (nonatomic) BOOL traced;
@property (retain, nonatomic) NSObject<SFSQLiteDelegate> *delegate;

/* instance methods */
- (id)initWithPath:(id)path schema:(id)schema;
- (void)dealloc;
- (id)_synchronousModeString;
- (id)_createSchemaHash;
- (void)attemptProperDatabasePermissions;
- (BOOL)openWithError:(id *)error;
- (void)open;
- (void)close;
- (void)remove;
- (void)begin;
- (void)end;
- (void)rollback;
- (void)analyze;
- (void)vacuum;
- (long long)lastInsertRowID;
- (int)changes;
- (BOOL)executeSQL:(id)sql;
- (BOOL)executeSQL:(id)sql arguments:(char *)arguments;
- (id)statementForSQL:(id)sql;
- (void)removeAllStatements;
- (id)allTableNames;
- (void)dropAllTables;
- (id)propertyForKey:(id)key;
- (void)setProperty:(id)property forKey:(id)key;
- (id)datePropertyForKey:(id)key;
- (void)setDateProperty:(id)property forKey:(id)key;
- (void)removePropertyForKey:(id)key;
- (id)creationDate;
- (id)columnNamesForTable:(id)table;
- (id)select:(id)select from:(id)from;
- (id)select:(id)select from:(id)from mapEachRow:(id /* block */)row;
- (id)select:(id)select from:(id)from where:(id)where bindings:(id)bindings;
- (void)select:(id)select from:(id)from where:(id)where bindings:(id)bindings orderBy:(id)by limit:(id)limit block:(id /* block */)block;
- (void)select:(id)select from:(id)from where:(id)where bindings:(id)bindings orderBy:(id)by limit:(id)limit forEachRow:(id /* block */)row;
- (void)selectFrom:(id)from where:(id)where bindings:(id)bindings orderBy:(id)by limit:(id)limit block:(id /* block */)block;
- (id)selectFrom:(id)from where:(id)where bindings:(id)bindings limit:(id)limit;
- (void)update:(id)update set:(id)set where:(id)where bindings:(id)bindings limit:(id)limit;
- (id)selectAllFrom:(id)from where:(id)where bindings:(id)bindings;
- (unsigned long long)selectCountFrom:(id)from where:(id)where bindings:(id)bindings;
- (long long)insertOrReplaceInto:(id)into values:(id)values;
- (void)deleteFrom:(id)from matchingValues:(id)values;
- (void)deleteFrom:(id)from where:(id)where bindings:(id)bindings;
- (id)_tableNameForClass:(Class)class;
- (int)dbUserVersion;
- (int)autoVacuumSetting;
@end

#endif /* SFSQLite_h */
