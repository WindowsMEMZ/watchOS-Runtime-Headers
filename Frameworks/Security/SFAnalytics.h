//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 61040.64.1.0.0
//
#ifndef SFAnalytics_h
#define SFAnalytics_h
@import Foundation;

#include "SFAnalyticsCollection.h"
#include "SFAnalyticsProtocol-Protocol.h"
#include "SFAnalyticsSQLiteStore.h"

@class NSMutableDictionary, NSMutableSet, NSString;
@protocol OS_dispatch_queue;

@interface SFAnalytics : NSObject<SFAnalyticsProtocol> {
  /* instance variables */
  SFAnalyticsSQLiteStore *_database;
  NSObject<OS_dispatch_queue> *_queue;
  NSMutableDictionary *_samplers;
  NSMutableDictionary *_multisamplers;
  unsigned int x :1 _disableLogging;
}

@property (retain) NSMutableSet *metricsHooks;
@property (retain) SFAnalyticsCollection *collection;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)encodeSFACollection:(id)sfacollection error:(id *)error;
+ (id)logger;
+ (id)databasePath;
+ (id)defaultAnalyticsDatabasePath:(id)path;
+ (void)removeLegacyDefaultAnalyticsDatabasePath:(id)path usingDispatchToken:(long long *)token;
+ (id)defaultProtectedAnalyticsDatabasePath:(id)path uuid:(id)uuid;
+ (id)defaultProtectedAnalyticsDatabasePath:(id)path;
+ (long long)fuzzyDaysSinceDate:(id)date;
+ (long long)fuzzyInteger:(long long)integer;
+ (id)fuzzyNumber:(id)number;
+ (id)hwModelID;
+ (void)addOSVersionToEvent:(id)event;

/* instance methods */
- (void)addMetricsHook:(id /* block */)hook;
- (void)removeMetricsHook:(id /* block */)hook;
- (void)loadCollectionConfiguration;
- (void)updateCollectionConfigurationWithData:(id)data;
- (id)database;
- (void)removeStateAndUnlinkFile:(BOOL)file;
- (void)removeState;
- (void)setDateProperty:(id)property forKey:(id)key;
- (id)datePropertyForKey:(id)key;
- (void)incrementIntegerPropertyForKey:(id)key;
- (void)setNumberProperty:(id)property forKey:(id)key;
- (id)numberPropertyForKey:(id)key;
- (void)setDataProperty:(id)property forKey:(id)key;
- (id)dataPropertyForKey:(id)key;
- (id)metricsAccountID;
- (void)setMetricsAccountID:(id)id;
- (id)init;
- (id)dailyMetrics;
- (id)coreAnalyticsKeyFilter:(id)filter;
- (void)dailyCoreAnalyticsMetrics:(id)metrics;
- (void)logSuccessForEventNamed:(id)named timestampBucket:(unsigned int)bucket;
- (void)logSuccessForEventNamed:(id)named;
- (void)logHardFailureForEventNamed:(id)named withAttributes:(id)attributes timestampBucket:(unsigned int)bucket;
- (void)logHardFailureForEventNamed:(id)named withAttributes:(id)attributes;
- (void)logSoftFailureForEventNamed:(id)named withAttributes:(id)attributes timestampBucket:(unsigned int)bucket;
- (void)logSoftFailureForEventNamed:(id)named withAttributes:(id)attributes;
- (void)logResultForEvent:(id)event hardFailure:(BOOL)failure result:(id)result timestampBucket:(unsigned int)bucket;
- (void)logResultForEvent:(id)event hardFailure:(BOOL)failure result:(id)result;
- (void)logResultForEvent:(id)event hardFailure:(BOOL)failure result:(id)result withAttributes:(id)attributes timestampBucket:(unsigned int)bucket;
- (void)logResultForEvent:(id)event hardFailure:(BOOL)failure result:(id)result withAttributes:(id)attributes;
- (void)noteEventNamed:(id)named timestampBucket:(unsigned int)bucket;
- (void)noteEventNamed:(id)named;
- (void)logEventNamed:(id)named class:(long long)class attributes:(id)attributes timestampBucket:(unsigned int)bucket;
- (void)logEventNamed:(id)named class:(long long)class attributes:(id)attributes;
- (id)eventDictForEventName:(id)name withAttributes:(id)attributes eventClass:(long long)class timestampBucket:(double)bucket;
- (id)addMetricSamplerForName:(id)name withTimeInterval:(double)interval block:(id /* block */)block;
- (id)AddMultiSamplerForName:(id)name withTimeInterval:(double)interval block:(id /* block */)block;
- (id)existingMetricSamplerForName:(id)name;
- (id)existingMultiSamplerForName:(id)name;
- (void)removeMetricSamplerForName:(id)name;
- (void)removeMultiSamplerForName:(id)name;
- (id)logSystemMetricsForActivityNamed:(id)named withAction:(id /* block */)action;
- (id)startLogSystemMetricsForActivityNamed:(id)named;
- (void)logMetric:(id)metric withName:(id)name;
- (void)logMetric:(id)metric withName:(id)name oncePerReport:(BOOL)report;
- (void)noteLaunchSequence:(id)sequence;
- (void)drainLogQueue;
@end

#endif /* SFAnalytics_h */
