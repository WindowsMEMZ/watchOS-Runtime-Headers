//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef CLKClockTimer_h
#define CLKClockTimer_h
@import Foundation;

@class CADisplayLink, NSCalendar, NSDate, NSHashTable, NSString;
@protocol OS_dispatch_source;

@interface CLKClockTimer : NSObject {
  /* instance variables */
  CADisplayLink *_displayLink;
  NSHashTable * _handlersByUpdateFrequency[5];
  NSHashTable *_allHandlers;
  unsigned long long _nextToken;
  NSDate *_lastNow;
  long long _lastHour;
  long long _lastMinute;
  long long _lastSecond;
  long long _last15fps;
  long long _last30fps;
  long long _last60fps;
  BOOL _paused;
  BOOL _isForeground;
  BOOL _backlightOn;
  BOOL _permittedToRun;
  NSDate *_waitTimerScheduledFireTime;
  NSObject<OS_dispatch_source> *_waitForNextEventTimer;
  NSCalendar *_calendar;
  int _stateDumpNotifyToken;
  unsigned long long _stateDumpHandler;
}

@property (nonatomic) BOOL ignoreScreenState;
@property (readonly, nonatomic) NSString *identifier;

/* class methods */
+ (id)sharedInstance;
+ (id)now;

/* instance methods */
- (id)init;
- (id)initWithIdentifier:(id)identifier;
- (void)dealloc;
- (id)startUpdatesWithUpdateFrequency:(long long)frequency withHandler:(id /* block */)handler identificationLog:(id /* block */)log;
- (void)stopUpdatesForToken:(id)token;
- (id)_nextTokenWithUpdateFrequency:(long long)frequency wantsCommit:(BOOL)commit wantsHighAccuracy:(BOOL)accuracy identificationLog:(id /* block */)log handler:(id /* block */)handler;
- (void)setHandler:(id)handler wantsCommit:(BOOL)commit;
- (id)startMinuteUpdatesWithHandler:(id /* block */)handler identificationLog:(id /* block */)log;
- (id)startSecondUpdatesWithHandler:(id /* block */)handler identificationLog:(id /* block */)log;
- (id)start15fpsUpdatesWithHandler:(id /* block */)handler identificationLog:(id /* block */)log;
- (id)start30fpsUpdatesWithHandler:(id /* block */)handler identificationLog:(id /* block */)log;
- (id)start60fpsUpdatesWithHandler:(id /* block */)handler identificationLog:(id /* block */)log;
- (BOOL)_hasHandlers;
- (long long)_minimumPossibleUpdateFrequency;
- (double)_timeUntilNextHighAccuracyEventFromHour:(long long)hour minute:(long long)minute second:(long long)second nanosecond:(long long)nanosecond;
- (double)_timeUntilNextHighAccuracyEventFromNow;
- (void)_cancelWaitTimer;
- (void)_createDisplayLinkIfNeeded;
- (void)_setDisplayLinkFrameInterval:(long long)interval;
- (void)_updateDisplayLinkWithTimeUntilNextHighAccuracyEvent:(double)event withMinimumUpdateFrequency:(long long)frequency;
- (void)_updateDisplayLink;
- (void)_maybeClearLastSeenTimeComponents;
- (void)_onDisplayLink:(id)link;
- (void)_handleTimePassed;
- (void)_updateIsPermittedToRun;
- (void)unpause;
- (void)pause;
- (id)description;
- (void)_logTimerState;
- (id)_timerState;
- (struct os_state_data_s { unsigned int x0; union { unsigned int x0 :32; unsigned int x1; } x1; struct os_state_data_decoder_s { char x0[64] char x1[64] } x2; char x3[64] unsigned char x4[0] } *)_stateDump;
@end

#endif /* CLKClockTimer_h */
