//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 2398.45.8.0.0
//
#ifndef CLKDeviceMetrics_h
#define CLKDeviceMetrics_h
@import Foundation;

#include "CLKDevice.h"

@class NSMutableDictionary, NSNumber;

@interface CLKDeviceMetrics : NSObject {
  /* instance variables */
  CLKDevice *_device;
  unsigned long long _identitySizeClass;
  NSMutableDictionary *_scales;
}

@property (nonatomic) unsigned long long roundingBehavior;
@property (retain, nonatomic) NSNumber *newestAllowedSizeClass;

/* class methods */
+ (id)metricsWithDevice:(id)device identitySizeClass:(unsigned long long)class;

/* instance methods */
- (id)initWithDevice:(id)device identitySizeClass:(unsigned long long)class;
- (void)setScale:(double)scale forSizeClass:(unsigned long long)class;
- (double)_unroundedScaledValue:(double)value;
- (unsigned long long)_effectiveSizeClass;
- (double)scaledValue:(double)value;
- (double)constantValue:(double)value withOverride:(double)override forSizeClass:(unsigned long long)class;
- (double)scaledValue:(double)value withOverride:(double)override forSizeClass:(unsigned long long)class;
- (double)constantValue:(double)value withOverrides:(id)overrides;
- (double)scaledValue:(double)value withOverrides:(id)overrides;
- (double)valueCompact:(double)compact regular:(double)regular luxoCompact:(double)compact luxoRegular:(double)regular aloeCompact:(double)compact aloeRegular:(double)regular;
- (double)valueCompact:(double)compact regular:(double)regular luxoCompact:(double)compact luxoRegular:(double)regular aloeCompact:(double)compact aloeRegular:(double)regular agave:(double)agave;
- (struct CGPoint { double x0; double x1; })scaledPoint:(struct CGPoint { double x0; double x1; })point;
- (struct CGPoint { double x0; double x1; })constantPoint:(struct CGPoint { double x0; double x1; })point withOverride:(struct CGPoint { double x0; double x1; })override forSizeClass:(unsigned long long)class;
- (struct CGPoint { double x0; double x1; })scaledPoint:(struct CGPoint { double x0; double x1; })point withOverride:(struct CGPoint { double x0; double x1; })override forSizeClass:(unsigned long long)class;
- (struct CGPoint { double x0; double x1; })constantPoint:(struct CGPoint { double x0; double x1; })point withOverrides:(id)overrides;
- (struct CGPoint { double x0; double x1; })scaledPoint:(struct CGPoint { double x0; double x1; })point withOverrides:(id)overrides;
- (struct CGPoint { double x0; double x1; })pointCompact:(struct CGPoint { double x0; double x1; })compact regular:(struct CGPoint { double x0; double x1; })regular luxoCompact:(struct CGPoint { double x0; double x1; })compact luxoRegular:(struct CGPoint { double x0; double x1; })regular aloeCompact:(struct CGPoint { double x0; double x1; })compact aloeRegular:(struct CGPoint { double x0; double x1; })regular;
- (struct CGPoint { double x0; double x1; })pointCompact:(struct CGPoint { double x0; double x1; })compact regular:(struct CGPoint { double x0; double x1; })regular luxoCompact:(struct CGPoint { double x0; double x1; })compact luxoRegular:(struct CGPoint { double x0; double x1; })regular aloeCompact:(struct CGPoint { double x0; double x1; })compact aloeRegular:(struct CGPoint { double x0; double x1; })regular agave:(struct CGPoint { double x0; double x1; })agave;
- (struct CGSize { double x0; double x1; })scaledSize:(struct CGSize { double x0; double x1; })size;
- (struct CGSize { double x0; double x1; })constantSize:(struct CGSize { double x0; double x1; })size withOverride:(struct CGSize { double x0; double x1; })override forSizeClass:(unsigned long long)class;
- (struct CGSize { double x0; double x1; })scaledSize:(struct CGSize { double x0; double x1; })size withOverride:(struct CGSize { double x0; double x1; })override forSizeClass:(unsigned long long)class;
- (struct CGSize { double x0; double x1; })constantSize:(struct CGSize { double x0; double x1; })size withOverrides:(id)overrides;
- (struct CGSize { double x0; double x1; })scaledSize:(struct CGSize { double x0; double x1; })size withOverrides:(id)overrides;
- (struct CGSize { double x0; double x1; })sizeCompact:(struct CGSize { double x0; double x1; })compact regular:(struct CGSize { double x0; double x1; })regular luxoCompact:(struct CGSize { double x0; double x1; })compact luxoRegular:(struct CGSize { double x0; double x1; })regular aloeCompact:(struct CGSize { double x0; double x1; })compact aloeRegular:(struct CGSize { double x0; double x1; })regular;
- (struct CGSize { double x0; double x1; })sizeCompact:(struct CGSize { double x0; double x1; })compact regular:(struct CGSize { double x0; double x1; })regular luxoCompact:(struct CGSize { double x0; double x1; })compact luxoRegular:(struct CGSize { double x0; double x1; })regular aloeCompact:(struct CGSize { double x0; double x1; })compact aloeRegular:(struct CGSize { double x0; double x1; })regular agave:(struct CGSize { double x0; double x1; })agave;
@end

#endif /* CLKDeviceMetrics_h */
