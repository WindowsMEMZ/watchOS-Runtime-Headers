//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 162.13.0.0.0
//
#ifndef SNTimeUtils_h
#define SNTimeUtils_h
@import Foundation;

@interface SNTimeUtils : NSObject // (Swift)
/* class methods */
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })makeInvalidTimeRange;
+ (BOOL)checkTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range isIdenticalToOther:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })other;
+ (BOOL)checkTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range isEqualToOther:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })other;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })convertScaleForTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range toValue:(int)value startRoundingMethod:(unsigned int)method durationRoundingMethod:(unsigned int)method;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })convertScaleForTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range toValue:(int)value preferShrinkingWhenRounding:(BOOL)rounding;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })standardizeTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range directionShouldBePositive:(BOOL)positive;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })standardizeTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time negativeShouldResideInTimescale:(BOOL)timescale;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })standardizeTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range negativeShouldResideInTimeScale:(BOOL)scale;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })standardizeTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range directionShouldBePositive:(BOOL)positive negativeShouldResideInTimescale:(BOOL)timescale;
+ (void)clipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range toBounds:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })bounds handler:(id /* block */)handler;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })clipTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range toBounds:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })bounds;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })addOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset toTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })subtractOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset fromTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range;
+ (id)addOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset toTimes:(id)times;
+ (id)addOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset toTimeRanges:(id)ranges;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })negateTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeFromAVAudioTime:(id)time;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })divideTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time byTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time error:(id *)error;
+ (id)integerDivideTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time byTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time roundingMethod:(unsigned int)method error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })roundTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toMultipleOf:(struct { long long x0; int x1; unsigned int x2; long long x3; })of relativeTo:(struct { long long x0; int x1; unsigned int x2; long long x3; })to roundingMethod:(unsigned int)method error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })remainderOfDividingTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time byTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time error:(id *)error;
+ (struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })timeRangeSteppingFromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time towardTargetTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time stepSize:(struct { long long x0; int x1; unsigned int x2; long long x3; })size roundingMethod:(unsigned int)method error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })moveInStepsFromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time towardTargetTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time stepSize:(struct { long long x0; int x1; unsigned int x2; long long x3; })size roundingMethod:(unsigned int)method movementHandler:(id /* block */)handler error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })selectEarliestBetweenTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time andTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })selectLatestBetweenTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time andTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
+ (id)endTimesFromTimeRangeCollection:(id)collection;
+ (long long)orderingFromEarliestToLatestCompareTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time toOther:(struct { long long x0; int x1; unsigned int x2; long long x3; })other;
+ (long long)orderingFromEarliestToLatestCompareTimeValue:(id)value toOther:(id)other;
+ (id /* block */)comparatorOrderingTimeValuesEarliestToLatest;
+ (id)latestTimeInTimeCollection:(id)collection;
+ (id)latestEndTimeInTimeRangeCollection:(id)collection;
+ (BOOL)validateTimeContainedInTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range time:(struct { long long x0; int x1; unsigned int x2; long long x3; })time error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeSinceBeginningOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range toTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeSinceBeginningOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range toTimeWithinRange:(struct { long long x0; int x1; unsigned int x2; long long x3; })range error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeToEndOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range fromTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeToEndOfTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range fromTimeWithinRange:(struct { long long x0; int x1; unsigned int x2; long long x3; })range error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })timeWithinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range precedingEndByMaxTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
+ (BOOL)checkTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range hasTimescale:(int)timescale;
+ (BOOL)validateTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range hasTimescale:(int)timescale error:(id *)error;
+ (id)multiplesOfTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time count:(unsigned long long)count;
+ (id)multiplesOfTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time fromOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset count:(unsigned long long)count;
+ (id)multiplesOfTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time withinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range error:(id *)error;
+ (id)splitTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range atEachMultipleOf:(struct { long long x0; int x1; unsigned int x2; long long x3; })of error:(id *)error;
+ (id)splitTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range atEachMultipleOf:(struct { long long x0; int x1; unsigned int x2; long long x3; })of fromOffset:(struct { long long x0; int x1; unsigned int x2; long long x3; })offset error:(id *)error;
+ (struct { long long x0; int x1; unsigned int x2; long long x3; })loopTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time withinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range error:(id *)error;
+ (id)loopTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range withinTimeRange:(struct { struct { long long x0; int x1; unsigned int x2; long long x3; } x0; struct { long long x0; int x1; unsigned int x2; long long x3; } x1; })range error:(id *)error;
+ (id)audioTimeAdvancedByFrames:(unsigned int)frames fromTime:(id)time;

/* instance methods */
- (id)init;
@end

#endif /* SNTimeUtils_h */
