//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 162.13.0.0.0
//
#ifndef SNNumberUtils_h
#define SNNumberUtils_h
@import Foundation;

@interface SNNumberUtils : NSObject // (Swift)
/* class methods */
+ (long long)saturatedIntegerFromNumber:(id)number;
+ (unsigned long long)saturatedUnsignedIntegerFromNumber:(id)number;
+ (long long)saturatedInt64FromNumber:(id)number;
+ (unsigned long long)saturatedUInt64FromNumber:(id)number;
+ (int)saturatedInt32FromNumber:(id)number;
+ (unsigned int)saturatedUInt32FromNumber:(id)number;
+ (short)saturatedInt16FromNumber:(id)number;
+ (unsigned short)saturatedUInt16FromNumber:(id)number;
+ (char)saturatedInt8FromNumber:(id)number;
+ (unsigned char)saturatedUInt8FromNumber:(id)number;
+ (id)numberClampedToSaturatedInteger:(id)integer;
+ (id)numberClampedToSaturatedUnsignedInteger:(id)integer;
+ (id)numberClampedToSaturatedInt64:(id)int64;
+ (id)numberClampedToSaturatedUInt64:(id)uint64;
+ (id)numberClampedToSaturatedInt32:(id)int32;
+ (id)numberClampedToSaturatedUInt32:(id)uint32;
+ (id)numberClampedToSaturatedInt16:(id)int16;
+ (id)numberClampedToSaturatedUInt16:(id)uint16;
+ (id)numberClampedToSaturatedInt8:(id)int8;
+ (id)numberClampedToSaturatedUInt8:(id)uint8;
+ (BOOL)thoroughlyCheckNumber:(id)number isEqualToNumber:(id)number;
+ (BOOL)numberIsDouble:(id)double;
+ (BOOL)numberIsInteger:(id)integer;
+ (BOOL)numberIsUnsignedInteger:(id)integer;
+ (BOOL)numberIsInt64:(id)int64;
+ (BOOL)numberIsUInt64:(id)uint64;
+ (BOOL)numberIsInt32:(id)int32;
+ (BOOL)numberIsUInt32:(id)uint32;
+ (BOOL)numberIsInt16:(id)int16;
+ (BOOL)numberIsUInt16:(id)uint16;
+ (BOOL)numberIsInt8:(id)int8;
+ (BOOL)numberIsUInt8:(id)uint8;
+ (BOOL)numberIsPositive:(id)positive;
+ (BOOL)numberIsNegative:(id)negative;
+ (BOOL)validateNumberIsDouble:(id)double error:(id *)error;
+ (BOOL)validateNumberIsInteger:(id)integer error:(id *)error;
+ (BOOL)validateNumberIsUnsignedInteger:(id)integer error:(id *)error;
+ (BOOL)validateNumberIsInt64:(id)int64 error:(id *)error;
+ (BOOL)validateNumberIsUInt64:(id)uint64 error:(id *)error;
+ (BOOL)validateNumberIsInt32:(id)int32 error:(id *)error;
+ (BOOL)validateNumberIsUInt32:(id)uint32 error:(id *)error;
+ (BOOL)validateNumberIsInt16:(id)int16 error:(id *)error;
+ (BOOL)validateNumberIsUInt16:(id)uint16 error:(id *)error;
+ (BOOL)validateNumberIsInt8:(id)int8 error:(id *)error;
+ (BOOL)validateNumberIsUInt8:(id)uint8 error:(id *)error;
+ (BOOL)validateNumberIsPositive:(id)positive error:(id *)error;
+ (BOOL)validateNumberIsNegative:(id)negative error:(id *)error;
+ (long long)gcdOfInt64:(long long)int64 andOther:(long long)other;

/* instance methods */
- (id)init;
@end

#endif /* SNNumberUtils_h */
