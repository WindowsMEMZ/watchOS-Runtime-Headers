//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHPersonChangeRequest_h
#define PHPersonChangeRequest_h
@import Foundation;

#include "PHChangeRequest.h"
#include "PHInsertChangeRequest-Protocol.h"
#include "PHObjectPlaceholder.h"
#include "PHPerson.h"
#include "PHRelationshipChangeRequestHelper.h"
#include "PHUpdateChangeRequest-Protocol.h"
#include "PHUserFeedback.h"

@class NSDictionary, NSManagedObjectID, NSMutableArray, NSMutableSet, NSSet, NSString;

@interface PHPersonChangeRequest : PHChangeRequest<PHInsertChangeRequest, PHUpdateChangeRequest> {
  /* instance variables */
  NSMutableArray *_personUUIDsToMerge;
  NSString *_nominalMergeTargetUUID;
  NSMutableSet *_faceUUIDsRequiringFaceCropGeneration;
  NSMutableSet *_rejectedMergeCandidatePersonUUIDs;
  NSMutableSet *_graphDedupePersonUUIDs;
  NSMutableSet *_faceUUIDsRequiringNewUnverifiedPerson;
  BOOL _didUnsetUserFeedback;
  BOOL _didUnsetAutonamingUserFeedbacks;
}

@property (nonatomic) short keyFacePickSource;
@property (nonatomic) unsigned short suggestedForClientType;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *detectedFacesHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *temporalFacesHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *keyFaceHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *rejectedFacesHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *mergeCandidatesHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *mergeCandidatesWithConfidenceHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *invalidMergeCandidatesHelper;
@property (retain, nonatomic) PHPerson *targetPerson;
@property (readonly, nonatomic) PHObjectPlaceholder *placeholderForCreatedPerson;
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *displayName;
@property (copy, nonatomic) NSString *identifier;
@property (nonatomic) long long type;
@property (nonatomic) unsigned long long manualOrder;
@property (nonatomic) double mergeCandidateConfidence;
@property (copy, nonatomic) NSString *personUri;
@property (nonatomic) BOOL inPersonNamingModel;
@property (nonatomic) BOOL verified;
@property (nonatomic) long long verifiedType;
@property (nonatomic) unsigned short questionType;
@property (nonatomic) unsigned short ageType;
@property (nonatomic) unsigned short genderType;
@property (nonatomic) unsigned short sexType;
@property (copy, nonatomic) NSDictionary *contactMatchingDictionary;
@property (nonatomic) short detectionType;
@property (nonatomic) long long assetSortOrder;
@property (copy, nonatomic) PHUserFeedback *userFeedback;
@property (copy, nonatomic) NSSet *autonamingUserFeedbacks;
@property (copy, nonatomic) NSString *mdID;
@property (readonly) BOOL isNewRequest;
@property (nonatomic) BOOL shouldPerformConcurrentWork;
@property (readonly) BOOL mutated;
@property (readonly, nonatomic) NSString *managedEntityName;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) BOOL clientEntitled;
@property (readonly, nonatomic) NSString *clientName;
@property (readonly, nonatomic) long long accessScopeOptionsRequirement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)creationRequestForPerson;
+ (id)changeRequestForPerson:(id)person;
+ (void)deletePersons:(id)persons;
+ (id)changeRequestForMergingPersons:(id)persons;
+ (id)changeRequestForMergingPersons:(id)persons nominalTargetIdentifier:(id)identifier;
+ (id)changeRequestsForMergeCandidatePersons:(id)persons;
+ (id)changeRequestForDedupingGraphPersons:(id)persons;
+ (id)changeRequestForDedupingGraphPersons:(id)persons withUserVerifiedPerson:(id)person;
+ (BOOL)_allPersonsAreGraphPersons:(id)persons;

/* instance methods */
- (id)initForNewObject;
- (id)initWithUUID:(id)uuid objectID:(id)id;
- (id)initWithXPCDict:(id)xpcdict request:(id)request clientAuthorization:(id)authorization;
- (void)encodeToXPCDict:(id)xpcdict;
- (id)personUUID;
- (void)setPersonUUID:(id)uuid;
- (BOOL)isInPersonNamingModel;
- (void)setManualOrder:(unsigned long long)order verified:(BOOL)verified;
- (BOOL)isVerified;
- (BOOL)_containsUserMutations;
- (BOOL)_hasMutationForVerifiedType:(int *)type;
- (BOOL)validateMutationsToManagedObject:(id)object error:(id *)error;
- (BOOL)_validateMergePerson:(id)person withPersonUUIDs:(id)uuids error:(id *)error;
- (BOOL)_shouldPromotePerson:(id)person toVerifiedType:(int *)type;
- (BOOL)applyMutationsToManagedObject:(id)object photoLibrary:(id)library error:(id *)error;
- (BOOL)_ensureModelConsistencyForVerifiedTypePromotion:(id)promotion originalVerifiedType:(int)type error:(id *)error;
- (BOOL)validateInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (id)_existentFaceObjectIDs;
- (id)_existentTemporalFaceObjectIDs;
- (id)_existentRejectedFaceObjectIDs;
- (id)_noLimitsPersonFetchOptions;
- (id)_existentMergeCandidateObjectIDs;
- (id)_existentMergeCandidateWithConfidenceObjectIDs;
- (id)_existentInvalidMergeCandidateObjectIDs;
- (void)_prepareKeyFaceHelperIfNeeded;
- (id)_mutableFaceObjectIDsAndUUIDs;
- (id)_mutableTemporalFaceObjectIDsAndUUIDs;
- (id)_mutableKeyFaceObjectIDsAndUUIDs;
- (id)_mutableRejectedFacesObjectIDsAndUUIDs;
- (id)_mutableMergeCandidateObjectIDsAndUUIDs;
- (id)_mutableMergeCandidateWithConfidenceObjectIDsAndUUIDs;
- (id)_mutableInvalidMergeCandidateObjectIDsAndUUIDs;
- (id)_mutableRequiringFaceCropGenerationFacesUUIDs;
- (id)_mutableRequiringNewUnverifiedPersonFacesUUIDs;
- (void)_addObjectIDsOfFaces:(id)faces toFaceIDs:(id)ids temporalIDs:(id)ids;
- (void)addFaces:(id)faces;
- (BOOL)_removeObjects:(id)objects fromArray:(id)array;
- (void)removeFaces:(id)faces;
- (void)addTemporalFaces:(id)faces;
- (void)removeTemporalFaces:(id)faces;
- (void)setTemporalFaces:(id)faces;
- (void)_setKeyFace:(id)face forCluster:(BOOL)cluster pickSource:(short)source;
- (void)setKeyFaceForUserPick:(id)pick;
- (void)setKeyFaceForUserPick:(id)pick forCluster:(BOOL)cluster;
- (void)setKeyFace:(id)face forCluster:(BOOL)cluster;
- (void)setKeyFace:(id)face;
- (void)addRejectedFaces:(id)faces forCluster:(BOOL)cluster;
- (void)addRejectedFaces:(id)faces;
- (void)removeRejectedFaces:(id)faces;
- (void)persistSuggestionForClient:(unsigned long long)client;
- (void)_setNominalMergeTargetUUID:(id)uuid;
- (void)mergePersons:(id)persons;
- (void)addMergeCandidatePersons:(id)persons;
- (void)removeMergeCandidatePersons:(id)persons;
- (void)rejectMergeCandidatePersons:(id)persons;
- (void)addMergeCandidateWithConfidencePersons:(id)persons;
- (void)removeMergeCandidateWithConfidencePersons:(id)persons;
- (void)addInvalidMergeCandidatePersons:(id)persons;
- (void)_setGraphDedupePersons:(id)persons;
@end

#endif /* PHPersonChangeRequest_h */
