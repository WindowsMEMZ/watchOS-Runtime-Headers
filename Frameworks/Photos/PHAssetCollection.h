//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHAssetCollection_h
#define PHAssetCollection_h
@import Foundation;

#include "PHCollection.h"
#include "PHQuery.h"

@class CLLocation, NSArray, NSDate, NSManagedObjectID, NSString, NSURL, PLQuery;

@interface PHAssetCollection : PHCollection {
  /* instance variables */
  NSString *_localizedTitle;
  BOOL _canShowCloudComments;
  NSManagedObjectID *_parentFolderObjectID;
  BOOL _didFetchDates;
  struct os_unfair_lock_s { unsigned int _os_unfair_lock_opaque; } _datesLock;
}

@property (readonly, nonatomic) int plAlbumKind;
@property (readonly, nonatomic) NSString *transientSubtitle;
@property (readonly, nonatomic) PHQuery *query;
@property (readonly, nonatomic) NSArray *assetOids;
@property (readonly, nonatomic) NSArray *assets;
@property (nonatomic) BOOL _canShowCloudComments;
@property (readonly, nonatomic) NSManagedObjectID *customKeyAsset;
@property (readonly, nonatomic) BOOL shouldQueryForCustomKeyAsset;
@property (readonly, nonatomic) unsigned long long titleFontNameHash;
@property (readonly, nonatomic) NSString *title;
@property (readonly, nonatomic) long long titleCategory;
@property (readonly, nonatomic) BOOL isPendingPhotoStreamAlbum;
@property (readonly, nonatomic) BOOL shouldDeleteWhenEmpty;
@property (readonly, nonatomic) NSString *cloudGUID;
@property (readonly, nonatomic) unsigned long long approximateCount;
@property (readonly, nonatomic) unsigned long long approximatePhotosCount;
@property (readonly, nonatomic) unsigned long long approximateVideosCount;
@property (readonly, nonatomic) BOOL isLibrary;
@property (readonly, nonatomic) BOOL isCameraRoll;
@property (readonly, nonatomic) BOOL isPanoramasCollection;
@property (readonly, nonatomic) BOOL isPhotoStreamCollection;
@property (readonly, nonatomic) BOOL isCloudSharedAlbum;
@property (readonly, nonatomic) BOOL isOwnedCloudSharedAlbum;
@property (readonly, nonatomic) BOOL isMultipleContributorCloudSharedAlbum;
@property (readonly, nonatomic) BOOL isLastImportedAlbum;
@property (readonly, nonatomic) BOOL isTrashBin;
@property (readonly, nonatomic) BOOL isPlacesAlbum;
@property (readonly, nonatomic) BOOL isUserSmartAlbum;
@property (readonly, nonatomic) BOOL isPrivacySensitiveAlbum;
@property (readonly, nonatomic) long long privacyState;
@property (readonly, nonatomic) BOOL isSmartCollection;
@property (retain, nonatomic) PLQuery *userQuery;
@property (readonly, nonatomic) NSURL *groupURL;
@property (readonly, copy, nonatomic) id /* block */ sortingComparator;
@property (readonly, nonatomic) NSString *importSessionID;
@property (readonly, nonatomic) int pendingItemsCount;
@property (readonly, nonatomic) int pendingItemsType;
@property (readonly, nonatomic) BOOL hasUnseenContentBoolValue;
@property (readonly, nonatomic) BOOL canShowAvalancheStacks;
@property (readonly, nonatomic) BOOL canContributeToCloudSharedAlbum;
@property (readonly, nonatomic) BOOL canShowComments;
@property (readonly, nonatomic) BOOL canContainCustomKeyAssets;
@property (readonly, nonatomic) BOOL keyAssetsAtEnd;
@property (readonly, nonatomic) BOOL containsPrivateContent;
@property (readonly, nonatomic) NSString *transientIdentifier;
@property (readonly, nonatomic) NSString *titleFontName;
@property (readonly, nonatomic) long long assetCollectionType;
@property (readonly, nonatomic) long long assetCollectionSubtype;
@property (readonly, nonatomic) unsigned long long estimatedAssetCount;
@property (readonly, nonatomic) NSDate *startDate;
@property (readonly, nonatomic) NSDate *endDate;
@property (readonly, nonatomic) CLLocation *approximateLocation;
@property (readonly, nonatomic) NSArray *localizedLocationNames;

/* class methods */
+ (id)fetchAssetCollectionsForReferences:(id)references photoLibrary:(id)library;
+ (id)pl_PHAssetCollectionForAssetContainer:(id)container photoLibrary:(id)library;
+ (id)pl_PHAssetCollectionForAssetContainer:(id)container photoLibrary:(id)library includeTrash:(BOOL)trash;
+ (id)posterImageForAssetCollection:(id)collection;
+ (id)corePropertiesToFetch;
+ (id)_composePropertiesToFetchWithHint:(unsigned long long)hint;
+ (id)propertiesToFetchWithHint:(unsigned long long)hint;
+ (id)managedEntityName;
+ (id)fetchType;
+ (BOOL)managedObjectSupportsTrashedState;
+ (id)identifierCode;
+ (id)entityKeyMap;
+ (id)transformValueExpression:(id)expression forKeyPath:(id)path;
+ (id)fetchAssetCollectionsContainingAsset:(id)asset withType:(long long)type options:(id)options;
+ (id)fetchAssetCollectionsContainingAssets:(id)assets withType:(long long)type options:(id)options;
+ (id)fetchAssetCollectionsWithType:(long long)type localIdentifiers:(id)identifiers options:(id)options;
+ (id)fetchAssetCollectionsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)fetchAssetCollectionsWithType:(long long)type subtype:(long long)subtype options:(id)options;
+ (id)fetchAssetCollectionsWithALAssetGroupURLs:(id)urls options:(id)options;
+ (id)fetchAssetCollectionsWithObjectIDs:(id)ids options:(id)options;
+ (id)fetchUserLibraryAlbumWithOptions:(id)options;
+ (id)fetchRecentContentSyndicationAssetCollectionsWithOptions:(id)options maxNumberOfStacks:(long long)stacks maxNumberOfAssetsPerStack:(long long)stack;
+ (id)fetchSuggestedContributionsForAssetsFetchResult:(id)result options:(id)options;
+ (id)assetsMetadataFromAssets:(id)assets;
+ (id)fetchSuggestedContributionsForFileURLs:(id)urls options:(id)options;
+ (id)fetchSuggestedContributionsForAssetsMetadata:(id)metadata options:(id)options;
+ (id)fetchMomentsInMomentList:(id)list options:(id)options;
+ (id)fetchMomentsWithOptions:(id)options;
+ (id)fetchMomentsBackingMemory:(id)memory options:(id)options;
+ (id)fetchMomentsBackingSuggestion:(id)suggestion options:(id)options;
+ (id)fetchPhotosHighlightsContainingMoments:(id)moments options:(id)options;
+ (id)fetchMomentsInHighlight:(id)highlight options:(id)options;
+ (id)transientAssetCollectionWithAssets:(id)assets title:(id)title;
+ (id)transientAssetCollectionWithAssets:(id)assets subtype:(long long)subtype identifier:(id)identifier startDate:(id)date endDate:(id)date title:(id)title;
+ (id)transientAssetCollectionWithAssetFetchResult:(id)result title:(id)title;
+ (id)transientAssetCollectionWithAssetFetchResult:(id)result title:(id)title subtitle:(id)subtitle identifier:(id)identifier startDate:(id)date endDate:(id)date;
+ (id)transientAssetCollectionWithAssetFetchResult:(id)result title:(id)title subtitle:(id)subtitle titleFontName:(id)name;
+ (id)transientAssetCollectionWithAssetFetchResult:(id)result type:(long long)type subtype:(long long)subtype title:(id)title subtitle:(id)subtitle titleFontName:(id)name;
+ (id)transientAssetCollectionWithFetchOptions:(id)options title:(id)title subtitle:(id)subtitle titleFontName:(id)name identifier:(id)identifier;
+ (id)transientAssetCollectionWithAssetFetchResult:(id)result subtype:(long long)subtype;
+ (id)transientAssetCollectionWithAssetFetchResult:(id)result title:(id)title subtype:(long long)subtype;
+ (id)transientAssetCollectionWithAssets:(id)assets title:(id)title identifier:(id)identifier photoLibrary:(id)library;
+ (id)transientAssetCollectionWithAssetFetchResult:(id)result title:(id)title identifier:(id)identifier;
+ (id)graphOptionsForTransientAssetCollection:(id)collection needsCompleteMomentsInfo:(BOOL)info options:(id)options;
+ (id)defaultTitleFontNames;
+ (id)titleFontNameForTitleCategory:(long long)category;
+ (long long)titleCategoryForTitleFontName:(id)name;
+ (unsigned long long)titleFontNameHashFromDate:(id)date;
+ (unsigned long long)titleFontNameHashFromString:(id)string;
+ (unsigned long long)titleFontNameHashFromHash:(unsigned long long)hash andHash:(unsigned long long)hash;
+ (id)assetCollectionDuplicateTypeMappingForAssetCollectionUUIDs:(id)uuids photoLibrary:(id)library error:(id *)error;
+ (id)descriptionForType:(long long)type;
+ (id)descriptionForSubtype:(long long)subtype;
+ (id)descriptionOfTitleCategory:(long long)category;

/* instance methods */
- (id)objectReference;
- (id)pl_assetContainer;
- (Class)changeRequestClass;
- (id)initWithFetchDictionary:(id)dictionary propertyHint:(unsigned long long)hint photoLibrary:(id)library;
- (id)localizedTitle;
- (id)localizedSubtitle;
- (unsigned long long)estimatedPhotosCount;
- (unsigned long long)estimatedVideosCount;
- (BOOL)_shouldFetchDatesIfNeeded;
- (id)_fetchAggregateDatesForSmartAlbum;
- (void)_fetchDatesIfNeeded;
- (id)localizedSharedByLabelAllowsEmail:(BOOL)email;
- (BOOL)alwaysRecalculateCounts;
- (BOOL)collectionHasFixedOrder;
- (unsigned long long)collectionFixedOrderPriority;
- (id)parentFolderID;
- (id)effectiveCustomSortKey;
- (BOOL)isAlbumContentSort;
- (BOOL)isAlbumContentTitleSort;
- (id)identifier;
- (BOOL)canPerformEditOperation:(long long)operation;
- (BOOL)canContainAssets;
- (BOOL)hasLocationInfo;
- (BOOL)startsAtEnd;
- (id)initTransientWithAssets:(id)assets orFetchResult:(id)result title:(id)title identifier:(id)identifier;
- (id)initTransientWithAssets:(id)assets orFetchResult:(id)result title:(id)title identifier:(id)identifier albumKind:(int)kind;
- (id)initTransientWithAssets:(id)assets orFetchResult:(id)result title:(id)title identifier:(id)identifier albumKind:(int)kind subtype:(long long)subtype;
- (id)initTransientWithAssets:(id)assets orFetchResult:(id)result title:(id)title subtitle:(id)subtitle titleFontName:(id)name identifier:(id)identifier albumKind:(int)kind subtype:(long long)subtype photoLibrary:(id)library;
- (id)initTransientWithAssets:(id)assets orFetchResult:(id)result orQuery:(id)query title:(id)title subtitle:(id)subtitle titleFontName:(id)name identifier:(id)identifier albumKind:(int)kind subtype:(long long)subtype photoLibrary:(id)library;
- (id)initTransientWithAssets:(id)assets orFetchResult:(id)result orQuery:(id)query title:(id)title subtitle:(id)subtitle titleFontName:(id)name identifier:(id)identifier albumKind:(int)kind subtype:(long long)subtype startDate:(id)date endDate:(id)date photoLibrary:(id)library;
- (id)initTransientWithAssets:(id)assets orFetchResult:(id)result orQuery:(id)query title:(id)title subtitle:(id)subtitle titleFontName:(id)name identifier:(id)identifier albumKind:(int)kind type:(long long)type subtype:(long long)subtype startDate:(id)date endDate:(id)date photoLibrary:(id)library;
- (id)description;
- (void)_setCanShowCloudComments:(BOOL)comments;
@end

#endif /* PHAssetCollection_h */
