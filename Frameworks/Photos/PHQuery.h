//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHQuery_h
#define PHQuery_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSPredicateVisitor-Protocol.h"
#include "PHCollection.h"
#include "PHFetchOptions.h"
#include "PHPhotoLibrary.h"

@class NSArray, NSDictionary, NSFetchRequest, NSManagedObjectID, NSMutableDictionary, NSMutableSet, NSPredicate, NSRelationshipDescription, NSSet, NSString;

@interface PHQuery : NSObject<NSPredicateVisitor, NSCopying> {
  /* instance variables */
  NSPredicate *_cachedFetchOptionsPredicate;
  long long _collectionFetchType;
  BOOL _preparedContainerInfo;
  NSManagedObjectID *_containerIdentifier;
  PHCollection *_containerCollection;
  BOOL _preparedCombinedQueryKeys;
  BOOL _preparedFilteringAttributes;
  NSMutableSet *_filteringObjectKeyPaths;
  id /* block */ _identificationBlock;
}

@property (nonatomic) BOOL _includesCameraRoll;
@property (retain) NSArray *propertiesToGroupBy;
@property (retain) NSArray *propertiesToFetchWhenGrouping;
@property (readonly, nonatomic) NSRelationshipDescription *containerRelationship;
@property (readonly) NSString *fetchType;
@property (readonly) NSFetchRequest *fetchRequest;
@property (readonly) NSPredicate *basePredicate;
@property (readonly) NSPredicate *filterPredicate;
@property (readonly) NSArray *seedOIDs;
@property (readonly) PHPhotoLibrary *photoLibrary;
@property (readonly, nonatomic) NSString *shortDescription;
@property (readonly) id combinedQueryGroupKey;
@property (readonly) NSString *combinedQueryKeyPath;
@property (readonly) NSManagedObjectID *combinedQuerySeparatingIdentifier;
@property (readonly) NSSet *filteringKeys;
@property (readonly) unsigned long long filteringAttributesIndexValue;
@property (readonly) unsigned long long filteringRelationshipsIndexValue;
@property (readonly) unsigned long long sortingAttributesIndexValue;
@property (readonly) unsigned long long objectToContainerRelationshipIndexValue;
@property (readonly) unsigned long long containerToObjectRelationshipIndexValue;
@property (readonly) unsigned long long containerSortingAttributesIndexValue;
@property (readonly) unsigned long long containerUserQueryIndexValue;
@property (readonly, nonatomic) NSSet *filteringOids;
@property (readonly, nonatomic) NSDictionary *filteringRelationshipsIndexValueByBaseEntityName;
@property (copy, nonatomic) PHFetchOptions *fetchOptions;

/* class methods */
+ (id)queryForType:(id)type withBasePredicate:(id)predicate inLibrary:(id)library;
+ (id)queryForType:(id)type withBasePredicate:(id)predicate seedOIDs:(id)oids inLibrary:(id)library;
+ (id)_relationshipForFetchType:(id)type predicate:(id)predicate;
+ (id)defaultSortDescriptorForFetchType:(id)type predicate:(id)predicate;
+ (id)_transformedSortDescriptors:(id)descriptors forFetchType:(id)type;
+ (id)_containerIdentifierForFetchType:(id)type predicate:(id)predicate outRelationship:(id *)relationship;
+ (id)_filterPredicateFromFetchOptionsPredicate:(id)predicate options:(id)options phClass:(Class)class;
+ (BOOL)_isKindOfMomentOrAlbumEntity:(id)entity;
+ (short)_participationStateFromLibraryScope:(id)scope;
+ (id)combinedFetchRequestForQueries:(id)queries;
+ (id)_fetchOptionsForFetchingAssetsFromImportSessions:(id)sessions options:(id)options;
+ (id)_fetchOptionsForFetchingAssetsFromAssetCollection:(id)collection options:(id)options changeDetectionCriteria:(id)criteria;
+ (id)_assetIDsFromAssets:(id)assets anyAsset:(id *)asset;
+ (id)queryForCuratedAssetsInMemory:(id)memory options:(id)options;
+ (id)queryForExtendedCuratedAssetsInMemory:(id)memory options:(id)options;
+ (id)queryForKeyAssetInMemory:(id)memory options:(id)options;
+ (id)queryForAllAssetsAssociatedWithMemory:(id)memory options:(id)options;
+ (id)queryForKeyAssetsInSuggestion:(id)suggestion options:(id)options;
+ (id)queryForRepresentativeAssetsInSuggestion:(id)suggestion options:(id)options;
+ (id)queryForRepresentativeAssetsInMemory:(id)memory options:(id)options;
+ (id)queryForCuratedAssetsInPhotosHighlight:(id)highlight options:(id)options;
+ (id)queryForCuratedAssetsInMomentShare:(id)share options:(id)options;
+ (id)queryForKeyAssetInPhotosHighlight:(id)highlight options:(id)options;
+ (id)queryForAssetsInBoundingBoxWithTopLeftLocation:(id)location bottomRightLocation:(id)location options:(id)options;
+ (id)_guestAssetOnlyPredicate;
+ (id)queryForAssetsInImportSessions:(id)sessions options:(id)options;
+ (id)queryForAssetsInAssetCollection:(id)collection options:(id)options;
+ (id)queryForMovieCuratedAssetsInMemory:(id)memory options:(id)options;
+ (id)queryForUserCuratedAssetsInMemory:(id)memory options:(id)options;
+ (id)queryForCustomUserAssetsInMemory:(id)memory options:(id)options;
+ (id)queryForAssetsWithMediaType:(long long)type options:(id)options;
+ (id)queryForType:(id)type withIdentifiers:(id)identifiers identiferKeyPath:(id)path options:(id)options;
+ (id)queryForType:(id)type withIdentifiers:(id)identifiers local:(BOOL)local options:(id)options;
+ (id)_defaultFetchOptionsForIdentifiedAssetsQueryInPhotoLibrary:(id)library;
+ (id)_queryForAssetsWithIdentifiers:(id)identifiers local:(BOOL)local options:(id)options;
+ (id)queryForAssetsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForAssetsWithUUIDs:(id)uuids options:(id)options;
+ (id)queryForAssetsWithCloudIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForCloudSharedAlbumInvitationRecordsWithOptions:(id)options;
+ (id)queryForCloudSharedAlbumInvitationRecordsForCloudSharedAlbum:(id)album options:(id)options;
+ (id)queryForAssetsWithOptions:(id)options;
+ (id)queryForGuestAssetsWithOptions:(id)options;
+ (id)queryForGuestAssetsInCollectionContainingAsset:(id)asset options:(id)options;
+ (id)queryForAssetsWithObjectIDs:(id)ids options:(id)options;
+ (id)queryForAssetsWithBurstIdentifier:(id)identifier options:(id)options;
+ (id)queryForCustomKeyAssetsInAssetCollection:(id)collection options:(id)options;
+ (id)queryForKeyAssetsInMomentShare:(id)share options:(id)options;
+ (id)queryForKeySharingSuggestionAssetsInHighlight:(id)highlight options:(id)options;
+ (id)queryForKeyAssetsInAssetCollection:(id)collection options:(id)options;
+ (id)queryForAssetsForKeywords:(id)keywords options:(id)options;
+ (id)queryForReferencedAssetsWithOptions:(id)options;
+ (id)queryForAllAssetsInYearRepresentedByYearHighlight:(id)highlight options:(id)options;
+ (id)queryForAssetsForBehavioralCurationWithOptions:(id)options;
+ (id)queryForAssetsFromCameraSinceDate:(id)date options:(id)options;
+ (id)queryForAssetsInLibraryScope:(id)scope options:(id)options;
+ (id)queryForAssetsWithCurrentUserAsLibraryScopeContributor:(BOOL)contributor inLibraryScope:(id)scope options:(id)options;
+ (id)queryForAssetsInPreviewStateInLibraryScope:(id)scope options:(id)options;
+ (id)queryForAssetsInPreviewStateWithSuggestedByClientTypes:(id)types options:(id)options;
+ (id)queryForAssetCollectionsContainingAsset:(id)asset withType:(long long)type options:(id)options;
+ (id)queryForAssetCollectionsContainingAssets:(id)assets withType:(long long)type options:(id)options;
+ (BOOL)_validateLocalIdentifiers:(id)identifiers compatibilityWithFetchType:(id)type;
+ (id)queryForAssetCollectionsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)_fetchTypeForLocalIdentifiers:(id)identifiers;
+ (id)queryForAssetCollectionsWithType:(long long)type localIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForAssetCollectionsWithType:(long long)type subtype:(long long)subtype options:(id)options;
+ (id)queryForAssetCollectionsWithObjectIDs:(id)ids options:(id)options;
+ (id)queryForMomentsWithOptions:(id)options;
+ (id)queryForMomentsBackingMemory:(id)memory;
+ (id)queryForMomentsBackingSuggestion:(id)suggestion;
+ (id)queryForPhotosHighlightsContainingMoments:(id)moments;
+ (id)queryForParentHighlightForPhotosHighlight:(id)highlight options:(id)options;
+ (id)queryForParentHighlightsForPhotosHighlights:(id)highlights options:(id)options;
+ (id)queryForChildrenHighlightsForPhotosHighlight:(id)highlight options:(id)options;
+ (id)queryForParentDayGroupHighlightForPhotosHighlight:(id)highlight options:(id)options;
+ (id)queryForChildrenDayGroupHighlightsForPhotosHighlight:(id)highlight options:(id)options;
+ (id)queryForMomentsInPhotosHighlight:(id)highlight;
+ (id)queryForMomentsInMomentList:(id)list options:(id)options;
+ (id)queryForMomentsForFacesWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForMomentsForPersonsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForMomentsContainingAssetsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForMomentsContainingAssetsWithOIDs:(id)oids options:(id)options;
+ (id)queryForCollectionsInCollectionList:(id)list options:(id)options;
+ (id)queryForCollectionListContainingCollection:(id)collection options:(id)options;
+ (id)queryForCollectionListsWithType:(long long)type localIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForCollectionListsWithType:(long long)type subtype:(long long)subtype options:(id)options;
+ (id)fetchRootFolderIDForAlbumKind:(int)kind photoLibrary:(id)library;
+ (id)queryForRootAlbumCollectionListWithOptions:(id)options;
+ (id)queryForRootProjectCollectionListWithOptions:(id)options;
+ (id)_queryForRootCollectionListWithRootFolder:(id)folder options:(id)options;
+ (id)queryForTopLevelUserCollectionsWithOptions:(id)options;
+ (id)queryForTopLevelCollectionsMatchingPredicate:(id)predicate options:(id)options;
+ (id)queryForMomentListsWithSubType:(long long)type containingMoment:(id)moment;
+ (id)queryForMomentListsWithSubType:(long long)type options:(id)options;
+ (id)queryForFacesWithOptions:(id)options;
+ (id)queryForSingletonFacesWithOptions:(id)options;
+ (id)queryForFacesInAsset:(id)asset options:(id)options;
+ (id)queryForFacesInAssets:(id)assets options:(id)options;
+ (id)queryForFacesForPerson:(id)person options:(id)options;
+ (id)queryForFacesInFaceGroup:(id)group options:(id)options;
+ (id)queryForKeyFaceForFaceGroup:(id)group options:(id)options;
+ (id)queryForFacesWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForFacesWithVuObservationIDs:(id)ids options:(id)options;
+ (id)queryForFacesOnAssetWithFace:(id)face options:(id)options;
+ (id)queryForFacesOnFaceCrop:(id)crop options:(id)options;
+ (id)queryForRejectedFacesOnPerson:(id)person options:(id)options;
+ (id)queryForKeyFaceOnPerson:(id)person options:(id)options;
+ (id)queryForPersonsWithOptions:(id)options;
+ (id)queryForPersonsWithType:(long long)type options:(id)options;
+ (id)queryForPersonsWithQuestionType:(unsigned short)type options:(id)options;
+ (id)queryForPersonsWithObjectIDs:(id)ids options:(id)options;
+ (id)queryForPersonsInAsset:(id)asset options:(id)options;
+ (id)queryForPersonsInAssets:(id)assets withOptions:(id)options;
+ (id)queryForPersonsInAssetsFetchResult:(id)result withOptions:(id)options;
+ (id)_queryForPersonsInAssetsWithObjectIDs:(id)ids withOptions:(id)options;
+ (id)queryForPersonsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForPersonsWithMdIDs:(id)ids options:(id)options;
+ (id)_queryForPersonsWithFaceRelationshipPredicate:(id)predicate options:(id)options;
+ (id)queryForPersonsWithContactIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForPersonWithShareParticipant:(id)participant options:(id)options;
+ (id)queryForPersonWithFace:(id)face options:(id)options;
+ (id)queryForPersonsWithFaces:(id)faces options:(id)options;
+ (id)queryForRejectedPersonsForFace:(id)face options:(id)options;
+ (id)queryForPersonForFaceCrop:(id)crop options:(id)options;
+ (id)queryForAssetsForPersons:(id)persons options:(id)options;
+ (id)queryForAssetsForFaceGroups:(id)groups options:(id)options;
+ (id)queryForAssetsForFaces:(id)faces options:(id)options;
+ (id)queryForFaceGroupsWithOptions:(id)options;
+ (id)queryForFaceGroupsForPerson:(id)person options:(id)options;
+ (id)queryForFaceGroupsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForFaceGroupsWithFace:(id)face options:(id)options;
+ (id)queryForEmptyFaceGroupsWithOptions:(id)options;
+ (id)queryForAssociatedPersonForFaceGroup:(id)group withOptions:(id)options;
+ (id)queryForMergeCandidatePersonsForPerson:(id)person options:(id)options;
+ (id)queryForMergeCandidateWithConfidencePersonsForPerson:(id)person options:(id)options;
+ (id)queryForInvalidMergeCandidatePersonsForPerson:(id)person options:(id)options;
+ (id)queryForFaceCropsWithOptions:(id)options;
+ (id)queryForFaceCropsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForFaceCropsForPerson:(id)person options:(id)options;
+ (id)queryForPersonsWithNonNilUserFeedbackWithTypes:(id)types options:(id)options;
+ (id)queryForShareParticipantsInShare:(id)share options:(id)options;
+ (id)queryForShareParticipantsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForShareParticipantWithPerson:(id)person options:(id)options;
+ (id)queryForSuggestionsWithOptions:(id)options;
+ (id)queryForSuggestionsWithState:(unsigned short)state options:(id)options;
+ (id)queryForSuggestionsWithState:(unsigned short)state type:(unsigned short)type options:(id)options;
+ (id)queryForSuggestionsWithTypes:(id)types options:(id)options;
+ (id)queryForSuggestionsWithFeaturedState:(unsigned short)state types:(id)types options:(id)options;
+ (id)queryForImportSessionsWithOptions:(id)options;
+ (id)queryForProjectsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForKeywordsWithOptions:(id)options;
+ (id)queryForKeywordsWithTitles:(id)titles options:(id)options;
+ (id)queryForKeywordsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForKeywordsForAsset:(id)asset options:(id)options;
+ (id)queryForQuestionsWithOptions:(id)options;
+ (id)queryForQuestionsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForAnsweredYesOrNoQuestionsWithOptions:(id)options;
+ (id)queryForAnsweredQuestionsWithOptions:(id)options;
+ (id)queryForQuestionsWithState:(unsigned short)state options:(id)options;
+ (void)_setLibraryScopeDefaultSortDescriptor:(id)descriptor;
+ (id)queryforLibraryScopesWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)queryForLibraryScopesWithOptions:(id)options;
+ (id)queryForActiveLibraryScopeWithOptions:(id)options;
+ (id)queryForPreviewLibraryScopeWithOptions:(id)options;
+ (id)queryForPendingLibraryScopeInvitationWithOptions:(id)options;
+ (id /* block */)identificationBlockForSmartAlbumKind:(int)kind;
+ (id /* block */)identificationBlockForAlbumSortKey:(unsigned int)key;
+ (id /* block */)identificationBlockForAssetCollectionType:(long long)type;

/* instance methods */
- (id)initForType:(id)type withBasePredicate:(id)predicate seedOIDs:(id)oids inLibrary:(id)library;
- (id)initForType:(id)type withBasePredicate:(id)predicate inLibrary:(id)library;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)updatedQueryWithChange:(id)change;
- (id)_createFetchRequestIncludingBasePredicate:(BOOL)predicate;
- (BOOL)_isAlbumContentSort;
- (BOOL)_isAlbumContentTitleSort;
- (BOOL)_isUserSmartAlbum;
- (id)_effectiveSortDescriptors;
- (id)_effectiveDefaultSortDescriptor;
- (long long)collectionFetchType;
- (void)_setCollectionFetchType:(long long)type;
- (id)containerIdentifier;
- (void)_setContainerCollection:(id)collection;
- (void)_setBasePredicate:(id)predicate;
- (void)_prepareContainerInfo;
- (id)_globalPredicatesForPHClass:(Class)phclass;
- (BOOL)overrideResultClassWithFetchType;
- (id)effectivePredicateForPHClass:(Class)phclass includingBasePredicate:(BOOL)predicate;
- (id)executeQuery;
- (BOOL)evaluateWithObject:(id)object;
- (void)_prepareCombinedQueryKeys;
- (void)_prepareFilteringAttributes;
- (id)_substitutedChangeTrackingKeyPathFromKeyPath:(id)path;
- (void)visitPredicate:(id)predicate;
- (void)visitPredicateOperator:(id)operator;
- (void)visitPredicateExpression:(id)expression;
- (id)description;
- (void)_setIdentificationBlock:(id /* block */)block;
- (void)_setIncludesCameraRoll:(BOOL)roll;
@end

#endif /* PHQuery_h */
