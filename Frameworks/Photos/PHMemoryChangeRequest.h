//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHMemoryChangeRequest_h
#define PHMemoryChangeRequest_h
@import Foundation;

#include "PHChangeRequest.h"
#include "PHInsertChangeRequest-Protocol.h"
#include "PHMemory.h"
#include "PHMemoryFeature.h"
#include "PHObjectPlaceholder.h"
#include "PHRelationshipChangeRequestHelper.h"
#include "PHUpdateChangeRequest-Protocol.h"
#include "PHUserFeedback.h"

@class NSData, NSDate, NSDictionary, NSManagedObjectID, NSNumber, NSString;

@interface PHMemoryChangeRequest : PHChangeRequest<PHInsertChangeRequest, PHUpdateChangeRequest> {
  /* instance variables */
  PHMemory *_backingMemory;
  BOOL _incrementPlayCount;
  BOOL _incrementShareCount;
  BOOL _incrementViewCount;
  BOOL _didUnsetUserFeedback;
  BOOL _didSetUserCreated;
}

@property (retain, nonatomic) NSNumber *customMaximumNumberOfAssetsForUnitTesting;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *keyAssetHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *representativeAssetsHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *curatedAssetsHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *extendedCuratedAssetsHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *movieCuratedAssetsHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *userCuratedAssetsHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *customUserAssetsHelper;
@property (readonly, nonatomic) BOOL clientEntitledToMemoryMutation;
@property (nonatomic) unsigned long long category;
@property (retain, nonatomic) NSDate *creationDate;
@property (readonly, nonatomic) PHObjectPlaceholder *placeholderForCreatedMemory;
@property (nonatomic) BOOL rejected;
@property (nonatomic) BOOL favorite;
@property (nonatomic) unsigned short pendingState;
@property (nonatomic) BOOL userCreated;
@property (nonatomic) double score;
@property (readonly, nonatomic) NSDictionary *movieAssetState;
@property (retain, nonatomic) NSData *movieData;
@property (retain, nonatomic) NSData *photosGraphData;
@property (nonatomic) long long photosGraphVersion;
@property (retain, nonatomic) NSDate *lastViewedDate;
@property (retain, nonatomic) NSDate *lastMoviePlayedDate;
@property (retain, nonatomic) NSDate *lastEnrichmentDate;
@property (retain, nonatomic) NSString *subtitle;
@property (retain, nonatomic) NSString *title;
@property (retain, nonatomic) NSString *graphMemoryIdentifier;
@property (nonatomic) long long storyColorGradeKind;
@property (retain, nonatomic) NSString *storyTitleCategory;
@property (nonatomic) unsigned long long notificationState;
@property (nonatomic) long long featuredState;
@property (retain, nonatomic) PHMemoryFeature *blacklistedFeature;
@property (copy, nonatomic) PHUserFeedback *userFeedback;
@property (readonly) BOOL isNewRequest;
@property (nonatomic) BOOL shouldPerformConcurrentWork;
@property (readonly) BOOL mutated;
@property (readonly, nonatomic) NSString *managedEntityName;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) BOOL clientEntitled;
@property (readonly, nonatomic) NSString *clientName;
@property (readonly, nonatomic) long long accessScopeOptionsRequirement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)creationRequestForMemoryWithTitle:(id)title subtitle:(id)subtitle creationDate:(id)date category:(unsigned long long)category subcategory:(unsigned long long)subcategory representativeAssets:(id)assets curatedAssets:(id)assets extendedCuratedAssets:(id)assets keyAsset:(id)asset;
+ (id)creationRequestForMemoryWithTitle:(id)title subtitle:(id)subtitle creationDate:(id)date category:(unsigned long long)category subcategory:(unsigned long long)subcategory representativeAssetUUIDs:(id)uuids curatedAssetUUIDs:(id)uuids extendedCuratedAssetUUIDs:(id)uuids keyAssetUUID:(id)uuid;
+ (id)preferredAttributesForMemoryCreationFromAssetCollection:(id)collection proposedAttributes:(id)attributes;
+ (id)preferredAttributesForMemoryCreationFromCollectionList:(id)list proposedAttributes:(id)attributes;
+ (id)preferredAttributesForMemoryCreationFromPeople:(id)people proposedAttributes:(id)attributes;
+ (BOOL)_shouldAcceptProposedAttributes:(id)attributes;
+ (long long)_titleFormatForProposedAttributes:(id)attributes;
+ (id)_preferredAttributesForMemoryCreationFromObject:(id)object withSuccess:(BOOL)success title:(id)title subtitle:(id)subtitle error:(id)error proposedAttributes:(id)attributes;
+ (id)changeRequestForMemory:(id)memory;
+ (id)validateMemoryTitle:(id)title error:(id *)error;
+ (void)deleteMemories:(id)memories;
+ (void)blockPerson:(id)person;
+ (void)blockPerson:(id)person withAsset:(id)asset;
+ (void)unblockPersonsInMemoriesWithBlockedPersonFeature:(id)feature;
+ (id)changeRequestForRemotelyViewedMemoryWithLocalIdentifier:(id)identifier;

/* instance methods */
- (id)initForNewObject;
- (id)initWithUUID:(id)uuid objectID:(id)id;
- (id)initWithXPCDict:(id)xpcdict request:(id)request clientAuthorization:(id)authorization;
- (void)encodeToXPCDict:(id)xpcdict;
- (BOOL)isRejected;
- (BOOL)isFavorite;
- (unsigned long long)subcategory;
- (void)setSubcategory:(unsigned long long)subcategory;
- (long long)storySerializedTitleCategory;
- (void)setStorySerializedTitleCategory:(long long)category;
- (BOOL)isUserCreated;
- (void)_prepareAssetIDsIfNeeded;
- (id)_mutableRepresentativeAssetObjectIDsAndUUIDs;
- (id)_mutableCuratedAssetObjectIDsAndUUIDs;
- (id)_mutableExtendedCuratedAssetObjectIDsAndUUIDs;
- (id)_mutableKeyAssetObjectIDsAndUUIDs;
- (void)setRepresentativeAssets:(id)assets curatedAssets:(id)assets extendedCuratedAssets:(id)assets keyAsset:(id)asset;
- (void)setKeyAsset:(id)asset;
- (void)setRepresentativeAssetUUIDs:(id)uuids curatedAssetUUIDs:(id)uuids extendedCuratedAssetUUIDs:(id)uuids keyAssetUUID:(id)uuid;
- (void)setKeyAssetUUID:(id)uuid;
- (void)setMovieCuratedAssets:(id)assets;
- (void)setUserCuratedAssets:(id)assets;
- (void)setMovieStateData:(id)data forAsset:(id)asset;
- (void)_setBackingMemory:(id)memory;
- (void)_prepareCustomUserAssetIDsIfNeeded;
- (void)setCustomUserAssets:(id)assets;
- (void)addCustomUserAssets:(id)assets;
- (void)insertCustomUserAssets:(id)assets atIndexes:(id)indexes;
- (void)removeCustomUserAssets:(id)assets;
- (void)removeCustomUserAssetsAtIndexes:(id)indexes;
- (void)replaceCustomUserAssetsAtIndexes:(id)indexes withAssets:(id)assets;
- (void)moveCustomUserAssetsAtIndexes:(id)indexes toIndex:(unsigned long long)index;
- (void)setQueryHintObject:(id)object;
- (void)setQueryHintObjects:(id)objects;
- (void)incrementPlayCount;
- (void)incrementShareCount;
- (void)incrementViewCount;
- (id)_validateAssetCounts;
- (BOOL)validateInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (BOOL)validateMutationsToManagedObject:(id)object error:(id *)error;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (BOOL)allowMutationToManagedObject:(id)object propertyKey:(id)key error:(id *)error;
- (BOOL)applyMutationsToManagedObject:(id)object photoLibrary:(id)library error:(id *)error;
@end

#endif /* PHMemoryChangeRequest_h */
