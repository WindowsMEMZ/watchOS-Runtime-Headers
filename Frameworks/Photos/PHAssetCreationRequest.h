//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHAssetCreationRequest_h
#define PHAssetCreationRequest_h
@import Foundation;

#include "PHAssetChangeRequest.h"
#include "PHAssetCreationAdjustmentBakeInOptions.h"
#include "PHAssetCreationCameraIngestOptions.h"
#include "PHAssetCreationDerivativeContext.h"
#include "PHAssetCreationMetadataCopyOptions.h"
#include "PHAssetResourceBag.h"
#include "PHInsertChangeRequest-Protocol.h"
#include "PHMomentShare.h"
#include "PHRelationshipChangeRequestHelper.h"

@class NSDictionary, NSManagedObjectID, NSMutableArray, NSMutableDictionary, NSNumber, NSString, PLIndicatorFileCoordinator;

@interface PHAssetCreationRequest : PHAssetChangeRequest<PHInsertChangeRequest> {
  /* instance variables */
  NSMutableArray *_assetResources;
  NSMutableDictionary *_movedFiles;
  NSString *_resourceHoldingDirectoryPath;
  PLIndicatorFileCoordinator *_fileCoordinator;
  PHAssetCreationDerivativeContext *_derivativeContext;
}

@property (readonly, nonatomic) NSDictionary *_movedFiles;
@property (nonatomic) BOOL duplicateAllowsPrivateMetadata;
@property (nonatomic) BOOL shouldCreateScreenshot;
@property (nonatomic) BOOL shouldUseAutomaticallyGeneratedOriginalFilename;
@property (retain, nonatomic) NSManagedObjectID *limitedLibraryFetchFilterObjectID;
@property (retain, nonatomic) NSNumber *assetExistsWithSyndicationIdentifier;
@property (nonatomic) BOOL assetExistingWithSyndicationIdentifierIsTrashed;
@property (nonatomic) BOOL crashBeforeCreation;
@property (retain, nonatomic) PHAssetResourceBag *assetResourceBag;
@property (nonatomic) int retryCount;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *momentShareHelper;
@property (retain, nonatomic) NSString *duplicateAssetIdentifier;
@property (nonatomic) unsigned short duplicateAssetPhotoLibraryType;
@property (nonatomic) struct { long long x0; int x1; unsigned int x2; long long x3; } duplicateStillSourceTime;
@property (nonatomic) BOOL duplicateLivePhotoAsStill;
@property (nonatomic) BOOL duplicateAsOriginal;
@property (nonatomic) BOOL duplicateSinglePhotoFromBurst;
@property (nonatomic) BOOL duplicateAsAlternateAsset;
@property (copy, nonatomic) PHAssetCreationAdjustmentBakeInOptions *adjustmentBakeInOptions;
@property (copy, nonatomic) PHAssetCreationMetadataCopyOptions *metadataCopyOptions;
@property (readonly, nonatomic) NSString *forcePairingIdentifier;
@property (retain, nonatomic) PHMomentShare *momentShare;
@property (readonly, nonatomic) NSString *momentShareUUID;
@property (nonatomic) unsigned short bundleScope;
@property (retain, nonatomic) NSDictionary *customAssetProperties;
@property (nonatomic) BOOL useRecoverableStagingDirectory;
@property (copy, nonatomic) PHAssetCreationCameraIngestOptions *cameraIngestOptions;
@property (retain, nonatomic) NSString *importSessionID;
@property (retain, nonatomic) NSString *conversationID;
@property (copy, nonatomic) NSString *importedByBundleIdentifier;
@property (nonatomic) BOOL createAsCompanionSyncedAsset;
@property (nonatomic) long long importedBy;
@property (copy, nonatomic) NSString *syndicationIdentifier;
@property (readonly) BOOL isNewRequest;
@property (nonatomic) BOOL shouldPerformConcurrentWork;
@property (readonly) BOOL mutated;
@property (readonly, nonatomic) NSString *managedEntityName;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) BOOL clientEntitled;
@property (readonly, nonatomic) NSString *clientName;
@property (readonly, nonatomic) long long accessScopeOptionsRequirement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_creationRequestForAssetUsingUUID:(id)uuid;
+ (id)creationRequestForAsset;
+ (id)creationRequestForAssetWithUUID:(id)uuid;
+ (id)creationRequestForAssetWithOptions:(id)options;
+ (id)creationRequestForAssetWithUUID:(id)uuid options:(id)options;
+ (id)creationRequestForAssetFromImageData:(id)data;
+ (id)creationRequestForAssetFromImageData:(id)data options:(id)options;
+ (id)creationRequestForAssetFromImageData:(id)data usingUUID:(id)uuid;
+ (id)creationRequestForAssetFromVideoJobDictionary:(id)dictionary;
+ (id)creationRequestForAssetFromImageJobDictionary:(id)dictionary holdingDirectoryPath:(id)path;
+ (id)creationRequestForAssetFromBatchImageJobDictionary:(id)dictionary;
+ (id)creationRequestForAssetFromScreenshotImage:(id)image;
+ (id)creationRequestForAssetFromImage:(id)image;
+ (id)creationRequestForAssetFromImageAtFileURL:(id)url;
+ (id)creationRequestForAssetFromVideoAtFileURL:(id)url;
+ (id)creationRequestForAssetWithSyndicationIdentifier:(id)identifier;
+ (id)creationRequestForAssetFromVideoComplementBundle:(id)bundle;
+ (id)creationRequestForAssetFromAssetBundle:(id)bundle;
+ (id)creationRequestForAssetFromGuestAsset:(id)asset;
+ (id)creationRequestForAssetFromGuestAsset:(id)asset checkForMomentShareAsset:(BOOL)asset;
+ (id)creationRequestForAssetCopyFromAsset:(id)asset options:(id)options;
+ (id)creationRequestForAssetCopyFromAsset:(id)asset;
+ (BOOL)supportsAssetResourceTypes:(id)types;
+ (BOOL)supportsImportAssetResourceTypes:(id)types;
+ (BOOL)setDeferredIdentifierAndCreateDeferredDestinationURLFromCurrentDstURL:(id *)url withMainFileMetadata:(id)metadata managedAsset:(id)asset photoLibrary:(id)library error:(id *)error;
+ (BOOL)setdbgFileWithAsset:(id)asset dbgFilePath:(id)path photoFilename:(id)filename;
+ (BOOL)_shouldGenerateThumbnailsDuringCreationForImageSource:(struct CGImageSource *)source contentType:(id)type;
+ (id)_imageIOThumbnailCreationOptionsFromDerivativeContext:(id)context;
+ (id)_jpegDataFromRAWData:(id)rawdata derivativeContext:(id)context;
+ (id)_uuidForAssetWithSyndicationIdentifier:(id)identifier inLibrary:(id)library isTrashed:(BOOL *)trashed;
+ (long long)_originalResourceTypeFromAdjustedResourceType:(long long)type sourceAssetIsLoopingVideo:(BOOL)video sourceAssetIsVideo:(BOOL)video;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (void)_copyMetadataFromAsset:(id)asset;
- (void)_copyUserSpecificMetadataFromAsset:(id)asset;
- (void)_copyMediaAnalysisProperties:(id)properties;
- (void)_didMoveFileFromURL:(id)url toURL:(id)url;
- (BOOL)_restoreMovedFilesOnFailure;
- (void)_resetMovedFiles;
- (id)_secureMove:(BOOL)move fileAtURL:(id)url toURL:(id)url capabilities:(id)capabilities error:(id *)error;
- (id)_secureMove:(BOOL)move assetResource:(id)resource photoLibrary:(id)library error:(id *)error;
- (id)makeSubstitueRenderImageFileFromPath:(id)path primaryResource:(id)resource fileSuffix:(id)suffix error:(id *)error;
- (BOOL)_createAssetAsAdjusted:(id)adjusted fromValidatedResources:(id)resources mainFileMetadata:(id)metadata error:(id *)error;
- (BOOL)_ingestOriginalInPlaceSrcURL:(id)url dstURL:(id)url asset:(id)asset error:(id *)error;
- (id)_ingestOriginalFromSrcURL:(id)url toDstURL:(id)url useSecureMove:(BOOL)move resource:(id)resource resourceType:(unsigned int)type asset:(id)asset error:(id *)error;
- (BOOL)_createAssetAsPhotoIris:(id)iris fromValidatedResources:(id)resources mainFileMetadata:(id)metadata error:(id *)error;
- (BOOL)_createRAWSidecarForAsset:(id)asset fromValidatedResources:(id)resources mainFileMetadata:(id)metadata photoLibrary:(id)library error:(id *)error;
- (BOOL)_createSocResourceForAsset:(id)asset fromValidatedResources:(id)resources photoLibrary:(id)library error:(id *)error;
- (BOOL)_createXmpResourceForAsset:(id)asset fromValidatedResources:(id)resources photoLibrary:(id)library error:(id *)error;
- (BOOL)_createAudioResourceForAsset:(id)asset fromValidatedResources:(id)resources photoLibrary:(id)library error:(id *)error;
- (BOOL)_createOriginalResourceForAsset:(id)asset fromValidatedResource:(id)resource resourceType:(unsigned int)type photoLibrary:(id)library destinationURL:(id)url error:(id *)error;
- (id)_filteredImagePropertiesByConditionallyRemovingLivePhotoIdentifiersFromSourceImageProperties:(id)properties;
- (short)_savedAssetTypeForAsset;
- (id)_managedAssetFromPrimaryResourceData:(id)data validatedResources:(id)resources withUUID:(id)uuid photoLibrary:(id)library mainFileMetadata:(id *)metadata getImageSource:(struct CGImageSource * *)source imageData:(id *)data;
- (BOOL)_accessWritableURLForUUID:(id)uuid imageUTI:(id)uti originalFilename:(id)filename photoLibrary:(id)library withHandler:(id /* block */)handler;
- (BOOL)_writeDataToDisk:(id)disk imageUTIType:(id)utitype exifProperties:(id)properties mainFileURL:(id)url thumbnailData:(id)data;
- (id)_externalLivePhotoResourceForAsset:(id)asset;
- (id)_createAdjustmentsFileFromJobDictionary:(id)dictionary;
- (void)_setupDerivativeCreationContextForAsset:(id)asset imageSource:(struct CGImageSource *)source imageData:(id)data;
- (struct CGImageSource *)_imageSourceForDerivatives;
- (void)performConcurrentWork;
- (void)finalizeRequestWithBatchSuccess:(BOOL)success;
- (id)createAssetFromValidatedResources:(id)resources withUUID:(id)uuid assetAlreadyExistsAsPlaceholder:(BOOL)placeholder inPhotoLibrary:(id)library error:(id *)error;
- (void)_setCreatingAssetIsBusy:(BOOL)busy;
- (void)didSendChangeToServiceHandlerWithResult:(BOOL)result;
- (BOOL)_unTrashAndResetAsset:(id)asset;
- (id)_createAssetFromValidatedResources:(id)resources withUUID:(id)uuid assetAlreadyExistsAsPlaceholder:(BOOL)placeholder inPhotoLibrary:(id)library error:(id *)error;
- (id)initForNewObject;
- (id)initForNewObjectWithUUID:(id)uuid;
- (id)initWithHelper:(id)helper;
- (id)_resolveResourceHoldingDirectoryPath;
- (void)addResourceWithType:(long long)type fileURL:(id)url options:(id)options;
- (void)addResourceWithType:(long long)type data:(id)data options:(id)options;
- (void)_addResourceWithType:(long long)type data:(id)data orFileURL:(id)url options:(id)options;
- (id)placeholderForCreatedAsset;
- (long long)_mediaTypeForCreatedAsset;
- (id)initWithXPCDict:(id)xpcdict request:(id)request clientAuthorization:(id)authorization;
- (void)encodeToXPCDict:(id)xpcdict;
- (id)duplicatedAssetResourcesFromAsset:(id)asset stillSourceTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time flattenLivePhotoIntoStillPhoto:(BOOL)photo duplicateAsOriginal:(BOOL)original duplicateWithAdjustmentsBakedIn:(BOOL)in duplicatePhotoAsData:(BOOL)data error:(id *)error;
- (void)_updateMutationsForDuplicatingPrivateMetadataFromAsset:(id)asset;
- (BOOL)_populateDuplicatingAssetCreationRequest:(id)request photoLibrary:(id)library error:(id *)error;
- (BOOL)validateInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (BOOL)_validateNewObjectUUID:(id)uuid inPhotoLibrary:(id)library error:(id *)error;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (BOOL)applyMutationsToManagedObject:(id)object photoLibrary:(id)library error:(id *)error;
- (void)performTransactionCompletionHandlingInPhotoLibrary:(id)library;
- (void)_prepareMomentShareHelperIfNeeded;
- (id)_mutableMomentShareObjectIDsAndUUIDs;
- (BOOL)isNew;
- (void)_setDuplicateAllowsPrivateMetadata:(BOOL)metadata;
- (void)_setShouldCreateScreenshot:(BOOL)screenshot;
- (BOOL)_shouldCreateScreenshot;
- (void)_setShouldUseAutomaticallyGeneratedOriginalFilename:(BOOL)filename;
- (BOOL)_shouldUseAutomaticallyGeneratedOriginalFilename;
- (BOOL)isDuplicateAssetCreationRequest;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)_limitedLibraryFetchFilterObjectID;
- (void)_setLimitedLibraryFetchFilterObjectID:(id)id;
- (void)_setDuplicateAssetIdentifier:(id)identifier;
- (void)_setDuplicateAssetPhotoLibraryType:(unsigned short)type;
- (void)_setDuplicateStillSourceTime:(struct { long long x0; int x1; unsigned int x2; long long x3; })time;
- (void)_setDuplicateLivePhotoAsStill:(BOOL)still;
- (void)_setDuplicateAsOriginal:(BOOL)original;
- (void)_setDuplicateSinglePhotoFromBurst:(BOOL)burst;
- (void)_setDuplicateAsAlternateAsset:(BOOL)asset;
- (void)_setAdjustmentBakeInOptions:(id)options;
- (void)_setMetadataCopyOptions:(id)options;
- (void)_setUseRecoverableStagingDirectory:(BOOL)directory;
@end

#endif /* PHAssetCreationRequest_h */
