//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHPhotoLibrary_h
#define PHPhotoLibrary_h
@import Foundation;

#include "CPLStatusDelegate-Protocol.h"
#include "PHBatchFetchingArrayDataSource-Protocol.h"
#include "PHFetchOptions.h"
#include "PHPerformChangesRequest-Protocol.h"
#include "PHPerformChangesRequest.h"
#include "PHPersistentChangeToken.h"
#include "PHPhotoLibraryAppPrivateData.h"

@class CPLStatus, NSError, NSHashTable, NSManagedObjectID, NSMutableDictionary, NSProgress, NSString, NSURL, PLAssetsdClient, PLCacheMetricsCollectorClient, PLFileSystemVolume, PLLazyObject, PLPhotoAnalysisServiceClient, PLPhotoKitVariationCache, PLPhotoLibrary, PLPhotoLibraryBundle;
@protocol OS_dispatch_queue;

@interface PHPhotoLibrary : NSObject<PHBatchFetchingArrayDataSource, CPLStatusDelegate, PHPerformChangesRequest> {
  /* instance variables */
  PLLazyObject *_lazyPhotoLibrary;
  PLLazyObject *_lazyMainQueueConcurrencyPhotoLibrary;
  PLLazyObject *_lazyMainQueuePhotoLibrary;
  PLLazyObject *_lazyBackgroundQueuePhotoLibrary;
  PLLazyObject *_lazyUserInitiatedQueuePhotoLibrary;
  PLLazyObject *_lazyBackgroundQueueObjectFetchingPhotoLibrary;
  PLLazyObject *_lazyChangeHandlingPhotoLibrary;
  PLLazyObject *_lazyAlbumRootFolderObjectID;
  PLLazyObject *_lazyProjectAlbumRootFolderObjectID;
  PLLazyObject *_lazyAppPrivateData;
  PLLazyObject *_lazyCacheMetricsCollectorClient;
  PLLazyObject *_lazyCPLStatus;
  PLLazyObject *_lazyIsReadyForAnalysis;
  PLLazyObject *_lazyIsReadyForAnalysisQuickCheck;
  PLLazyObject *_lazySearchIndex;
  PLFileSystemVolume *_libraryFileSystemVolume;
  atomic BOOL _isCompletedPostOpenInitialization;
  struct atomic_flag { atomic  _Value; BOOL x0; } _isChangeProcessingPending;
  BOOL _opened;
  NSError *_openError;
  PHFetchOptions *_customLibrarySpecificFetchOptions;
}

@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *isolationQueue;
@property (readonly) PLPhotoLibrary *photoLibrary;
@property (readonly) PLPhotoLibrary *mainQueuePhotoLibrary;
@property (readonly) PLPhotoLibrary *userInitiatedQueuePhotoLibrary;
@property (readonly) PLPhotoLibrary *backgroundQueuePhotoLibrary;
@property (readonly) PLPhotoLibrary *backgroundQueueObjectFetchingPhotoLibrary;
@property (readonly) PLPhotoLibrary *transactionPhotoLibrary;
@property (retain, nonatomic) NSObject<OS_dispatch_queue> *transactionQueue;
@property (retain, nonatomic) PHPerformChangesRequest *performChangesRequest;
@property (retain, nonatomic) NSHashTable *fetchResultsRegisteredForChangeNotifications;
@property (retain, nonatomic) NSHashTable *internalChangeObservers;
@property (retain, nonatomic) NSHashTable *externalChangeObservers;
@property (nonatomic) BOOL isChangeHandlingActive;
@property (nonatomic) BOOL isChangeHandlingAuthorized;
@property (retain, nonatomic) NSMutableDictionary *changeNotificationInfo;
@property (nonatomic) BOOL unknownMergeEvent;
@property (nonatomic) double lastChangeProcessingStarted;
@property (retain, nonatomic) NSHashTable *availabilityObservers;
@property (retain) NSError *unavailabilityReason;
@property (readonly) PLPhotoLibrary *changeHandlingPhotoLibrary;
@property (readonly, nonatomic) NSManagedObjectID *albumRootFolderObjectID;
@property (readonly, nonatomic) NSManagedObjectID *projectAlbumRootFolderObjectID;
@property (readonly, nonatomic) unsigned short type;
@property (readonly, nonatomic) long long wellKnownPhotoLibraryIdentifier;
@property (readonly, nonatomic) BOOL isSystemPhotoLibrary;
@property (readonly, nonatomic) BOOL isCloudPhotoLibrary;
@property (readonly, nonatomic) BOOL cloudPhotoLibraryEnabled;
@property (readonly, nonatomic) BOOL isReadOnlyCloudPhotoLibrary;
@property (readonly, nonatomic) CPLStatus *cplStatus;
@property (readonly, nonatomic) BOOL isWalrusEnabled;
@property (readonly, nonatomic) BOOL isSharedAlbumsEnabled;
@property (readonly, copy, nonatomic) NSString *databaseUUID;
@property (readonly, nonatomic) NSURL *photoLibraryURL;
@property (readonly) PLPhotoLibraryBundle *photoLibraryBundle;
@property (readonly) PLPhotoKitVariationCache *variationCache;
@property (readonly, nonatomic) PLPhotoLibrary *mainQueueConcurrencyPhotoLibrary;
@property (readonly, nonatomic) NSProgress *postOpenProgress;
@property (readonly, nonatomic) PHPhotoLibraryAppPrivateData *appPrivateData;
@property (nonatomic) BOOL clearsOIDCacheAfterFetchResultDealloc;
@property (readonly, nonatomic) PLPhotoAnalysisServiceClient *photoAnalysisClient;
@property (readonly, nonatomic) PLAssetsdClient *assetsdClient;
@property (readonly, nonatomic) PLCacheMetricsCollectorClient *cacheMetricsCollector;
@property BOOL postsPersistentHistoryChangedNotifications;
@property (readonly, nonatomic) PHPersistentChangeToken *currentToken;
@property (readonly, nonatomic) BOOL isReadyForAnalysis;
@property (readonly, nonatomic) BOOL isReadyForAnalysis_FOR_UI_USE_ONLY;
@property (readonly, nonatomic) PHPersistentChangeToken *currentChangeToken;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_countOfAnalysisVersionsForKey:(id)key inLibrary:(id)library;
+ (unsigned long long)_countOfAssetsWithPredicate:(id)predicate entityName:(id)name inLibrary:(id)library;
+ (BOOL)shouldDisplayMergeCandidates:(id)candidates forPerson:(id)person;
+ (double)nextOverrideTimeIntervalForSystemBudgets:(unsigned long long)budgets;
+ (void)assertRunningInExtension;
+ (BOOL)hasSharedPhotoLibrary;
+ (void)setSharedPhotoLibrary:(id)library;
+ (void)setNeedsToRepairKeyCuratedAssetForMemories:(id)memories;
+ (id)mediaProcessingDeviceIndependentFacesSortDescriptors;
+ (id)mediaProcessingFacesSortDescriptorsForGeneratingPersonModel;
+ (void)initialize;
+ (id)sharedPhotoLibrary;
+ (id)_sharedPhotoLibrary;
+ (id)imagePickerPhotoLibrary;
+ (BOOL)setImagePickerPhotoLibrary:(id)library error:(id *)error;
+ (id)sharedMomentSharePhotoLibrary;
+ (long long)authorizationStatus;
+ (BOOL)checkAuthorizationStatusForAPIAccessLevel:(long long)level;
+ (BOOL)_checkAuthorizationStatusForAPIAccessLevel:(long long)level suppressPrompt:(BOOL)prompt;
+ (long long)_photosAccessAllowedForAccessLevel:(long long)level;
+ (long long)authorizationStatusForAccessLevel:(long long)level;
+ (void)requestAuthorization:(id /* block */)authorization;
+ (void)requestAuthorizationForAccessLevel:(long long)level handler:(id /* block */)handler;
+ (void)_requestAuthorizationForAccessLevel:(long long)level supportsLimited:(BOOL)limited handler:(id /* block */)handler;
+ (void)_forceUserInterfaceReload;
+ (void)enableMultiLibraryMode;
+ (BOOL)isMultiLibraryModeEnabled;
+ (id)systemPhotoLibraryURL;
+ (id)wellKnownPhotoLibraryURLForIdentifier:(long long)identifier;
+ (id)openPhotoLibraryWithWellKnownIdentifier:(long long)identifier error:(id *)error;
+ (BOOL)createOrUpgradePhotoLibraryWithWellKnownIdentifier:(long long)identifier error:(id *)error;
+ (void)unsafeShutdownLibraryWithPhotoLibraryURL:(id)url;
+ (BOOL)setSystemPhotoLibraryURL:(id)url error:(id *)error;
+ (const char *)systemPhotoLibraryURLChangeNotificationName;
+ (const char *)systemPhotoLibraryAvailableNotificationName;
+ (BOOL)isPhotosApplicationInstalled;
+ (BOOL)isSystemPhotoLibraryURL:(id)url;
+ (id)sharedLazyPhotoLibraryForCMM;
+ (void)assertTransaction;
+ (id)stringFromPHPhotoLibraryType:(unsigned short)type;
+ (id)photoLibraryForCurrentTransaction;
+ (long long)collectionListTypeForIdentifierCode:(id)code;
+ (id)fetchTypeForLocalIdentifierCode:(id)code;
+ (Class)classForFetchType:(id)type;
+ (id)PHObjectClassesByEntityName;
+ (Class)PHObjectClassForEntityName:(id)name;
+ (id)PHObjectClasses;
+ (Class)PHObjectClassForOID:(id)oid;
+ (Class)PHObjectClassForObjectType:(long long)type;
+ (id)_effectiveRootEntity:(id)entity;
+ (id)uniqueObjectIDCache;
+ (id)uniquedOID:(id)oid;
+ (id)uniquedOIDs:(id)oids;
+ (id)uniquedOIDsFromObjects:(id)objects;
+ (void)removeAllUniquedOIDs;
+ (BOOL)_isInternalObserver:(id)observer;
+ (id)sharedContactStore;

/* instance methods */
- (BOOL)internal_processIdenticalDuplicatesWithError:(id *)error;
- (BOOL)isInitialDuplicateDetectorProcessingCompleted;
- (BOOL)assetsArePendingForDuplicateMergeProcessingWithLocalIdentifiers:(id)identifiers;
- (void)mergeDuplicateAssetsWithLocalIdentifiers:(id)identifiers completionHandler:(id /* block */)handler;
- (id)requestGraphInferencesSummaryWithDateInterval:(id)interval error:(id *)error;
- (id)requestGraphInferencesSummaryWithMomentLocalIdentifiers:(id)identifiers error:(id *)error;
- (id)requestGraphMomentLocalIdentifiersWithDateInterval:(id)interval error:(id *)error;
- (BOOL)requestStartSharedLibrarySuggestionResultWithError:(id *)error;
- (id)_photoLibraryForAnalysisState;
- (id)faceAnalysisProcessingCounts;
- (void)requestTotalProgressCountsForWorkerType:(short)type states:(id)states completion:(id /* block */)completion;
- (id)_assetOIDsForHighlight:(id)highlight withContext:(id)context;
- (double)faceAnalysisProgressForHighlight:(id)highlight;
- (BOOL)petVIPModelExists;
- (id)faceAnalysisProgressCounts;
- (double)_ratioOfAssetsAtOrAboveVersion:(short)version forKey:(id)key;
- (double)ratioOfAssetsAtOrAboveSceneAnalysisVersion:(short)version;
- (long long)fetchCountOfAssetsWithAllowedForAnalysis;
- (long long)fetchCountOfAssetsWithScenesProcessed;
- (long long)fetchCountOfAssetsWithFacesProcessedToLatestVersion;
- (long long)fetchCountOfAssetsWithFacesProcessedToAnyVersion;
- (long long)fetchCountOfAssetsWithMediaAnalysisProcessed;
- (double)ratioOfAssetsWithScenesProcessed;
- (double)ratioOfAssetsAtOrAboveFaceAnalysisVersion:(short)version;
- (double)ratioOfAssetsWithFacesProcessed;
- (double)ratioOfAssetsWithMediaAnalysisProcessed;
- (double)sceneAnalysisProgressForHighlight:(id)highlight;
- (double)_analysisProgressForHighlight:(id)highlight fetchCountBlock:(id /* block */)block;
- (BOOL)photoAnalysisClientAllowed;
- (void)cancelOperationsWithIdentifiers:(id)identifiers reply:(id /* block */)reply;
- (id)memoryDebugInformationForMemoryWithLocalIdentifier:(id)identifier error:(id *)error;
- (id)highlightDebugInformationForHighlightWithLocalIdentifier:(id)identifier error:(id *)error;
- (id)curationDebugInformationForAssetLocalIdentifier:(id)identifier error:(id *)error;
- (id)curationDebugInformationForAssetCollectionWithLocalIdentifier:(id)identifier options:(id)options error:(id *)error;
- (id)summaryCurationForHighlightForLocalIdentifier:(id)identifier options:(id)options error:(id *)error;
- (id)relatedDebugInformationBetweenAssetForLocalIdentifier:(id)identifier andRelatedAssetCollectionForLocalIdentifier:(id)identifier options:(id)options relatedType:(unsigned long long)type error:(id *)error;
- (id)relatedDebugInformationBetweenReferenceAssetCollectionForLocalIdentifier:(id)identifier andRelatedAssetCollectionForLocalIdentifier:(id)identifier options:(id)options relatedType:(unsigned long long)type error:(id *)error;
- (id)sharingSuggestionDebugInformationForAssetCollectionLocalIdentifier:(id)identifier error:(id *)error;
- (id)sharingMessageSuggestionDebugInformationForAssetCollectionLocalIdentifier:(id)identifier error:(id *)error;
- (id)graphStatusDescription:(id *)description;
- (id)graphStatisticsDescription:(id *)description;
- (void)requestHighlightEstimatesWithCompletion:(id /* block */)completion;
- (id)exportGraphForPurpose:(id)purpose error:(id *)error;
- (BOOL)invalidateTransientGraphCachesAndReturnError:(id *)error;
- (BOOL)invalidatePersistentGraphCachesAndReturnError:(id *)error;
- (void)requestGraphRebuildWithProgress:(id)progress completion:(id /* block */)completion;
- (void)requestGraphRebuildWithOptions:(id)options progress:(id)progress completion:(id /* block */)completion;
- (void)requestGraphRebuildProgressWithCompletion:(id /* block */)completion;
- (void)requestGraphReadyNotificationWithCoalescingIdentifier:(id)identifier completion:(id /* block */)completion;
- (BOOL)requestHighlightEnrichmentWithOptions:(id)options error:(id *)error;
- (BOOL)requestHighlightCollectionEnrichmentWithOptions:(id)options error:(id *)error;
- (BOOL)requestAssetRevGeocodingWithError:(id *)error;
- (BOOL)requestAssetRevGeocodingForAssetLocalIdentifiers:(id)identifiers withError:(id *)error;
- (BOOL)requestEnrichmentWithOptions:(id)options error:(id *)error;
- (void)simulateMemoriesNotificationWithOptions:(id)options reply:(id /* block */)reply;
- (id)requestTextFeaturesForMomentLocalIdentifiers:(id)identifiers error:(id *)error;
- (void)runPFLWithAttachments:(id)attachments recipeUserInfo:(id)info resultBlock:(id /* block */)block;
- (void)runShadowEvaluationWithRecipe:(id)recipe models:(id)models trialDeploymentID:(id)id trialExperimentID:(id)id trialTreatmentID:(id)id resultBlock:(id /* block */)block;
- (void)requestGenerateQuestionsWithOptions:(id)options reply:(id /* block */)reply;
- (void)requestSyndicationProcessingWithOptions:(id)options reply:(id /* block */)reply;
- (void)requestExternalAssetRelevanceProcessingWithReply:(id /* block */)reply;
- (void)requestSearchIndexUpdates:(id)updates withCompletion:(id /* block */)completion;
- (void)requestSearchIndexGraphUpdates:(id)updates supportingData:(id)data withCompletion:(id /* block */)completion;
- (id)sortedArrayOfPersonIdentifiers:(id)identifiers error:(id *)error;
- (id)allSocialGroupsForPersonLocalIdentifier:(id)identifier options:(id)options error:(id *)error;
- (id)socialGroupsOverlappingPersonLocalIdentifiers:(id)identifiers error:(id *)error;
- (id)assetIdentifiersForPersonIdentifiers:(id)identifiers error:(id *)error;
- (id)suggestedMePersonIdentifierWithError:(id *)error;
- (void)personPromotionProcessingStatusForUserInterface:(id /* block */)interface;
- (id)suggestionsForPersonLocalIdentifier:(id)identifier clusterSequenceNumbers:(id)numbers excludePersonLocalIdentifiers:(id)identifiers minimumSuggestionFaceCount:(unsigned long long)count;
- (id)faceClusterSequenceNumbersOfKeyFacesInAlgorithmicFaceGroupsForPerson:(id)person verifiedClusterSequenceNumbers:(id)numbers;
- (BOOL)isFaceProcessingFinished;
- (id)faceClusterSequenceNumbersOfFacesWithClusterSequenceNumbers:(id)numbers error:(id *)error;
- (unsigned long long)countOfUnprocessedFaceCrops;
- (unsigned long long)countOfFaceCropsToBeGenerated;
- (unsigned long long)countOfDirtyFaceGroups;
- (unsigned long long)countOfClusteringEligibleFaces;
- (unsigned long long)countOfUnclusteredFaces;
- (id)newClusteringEligibleFacesFetchOptions;
- (id)newFaceCropsToBeGeneratedFetchOptions;
- (id)newUnclusteredFacesFetchOptions;
- (void)requestGraphModelResultWithOptions:(id)options progress:(id)progress completion:(id /* block */)completion;
- (id)bfa_fetchedObjectsForOIDs:(id)oids propertySetClass:(Class)class;
- (id)bfa_fetchObjectsForOIDs:(id)oids propertyHint:(unsigned long long)hint overrideResultsWithClass:(Class)class;
- (id)bfa_tombstoneObjectForOID:(id)oid uuid:(id)uuid propertyHint:(unsigned long long)hint overrideResultsWithClass:(Class)class;
- (BOOL)bfa_supportsPrivacyRestrictionsForOIDs:(id)oids;
- (id)bfa_fetchUUIDsForRestrictedOIDs:(id)oids;
- (id)bfa_photoLibrary;
- (id)localIdentifierMappingsForCloudIdentifiers:(id)identifiers;
- (id)cloudIdentifierMappingsForLocalIdentifiers:(id)identifiers;
- (id)localIdentifiersForCloudIdentifiers:(id)identifiers;
- (id)cloudIdentifiersForLocalIdentifiers:(id)identifiers;
- (void)setCloudPhotoLibraryPauseState:(BOOL)state reason:(short)reason;
- (void)overrideSystemBudgetsForSyncSession:(BOOL)session pauseReason:(id)reason systemBudgets:(unsigned long long)budgets completionHandler:(id /* block */)handler;
- (id)_cloudInternalClient;
- (id)managedObjectContextForCurrentQueueQoS;
- (id)migrationDate;
- (void)setWidgetTimelineGeneratedForDisplaySize:(struct CGSize { double x0; double x1; })size;
- (id)sceneTaxonomyDetectorNodeSceneIDsFromSceneID:(unsigned int)id sceneTaxonomy:(id)taxonomy;
- (id)pl_syncProgressAlbums;
- (id)sharingSuggestionWithRandomPick:(BOOL)pick fallbackToRecentMoments:(BOOL)moments needsNotification:(BOOL)notification;
- (int)requestProcessingTypes:(unsigned long long)types forAssetsWithLocalIdentifiers:(id)identifiers progressHandler:(id /* block */)handler completionHandler:(id /* block */)handler;
- (id)processUniversalSearchJITForCoreSpotlightUniqueIdentifier:(id)identifier bundleID:(id)id processingTypes:(unsigned long long)types error:(id *)error;
- (BOOL)processUniversalSearchJITForAssetLocalIdentifier:(id)identifier processingTypes:(unsigned long long)types error:(id *)error;
- (id)fetchAssetsForMediaProcessingTaskID:(unsigned long long)id priority:(unsigned long long)priority analysisVersion:(int)version sceneConfidenceThreshold:(float)threshold adjustedSinceDate:(id)date error:(id *)error;
- (id)_fetchOptionsForMediaProcessingTaskID:(unsigned long long)id priority:(unsigned long long)priority analysisVersion:(int)version sceneConfidenceThreshold:(float)threshold adjustedSinceDate:(id)date error:(id *)error;
- (BOOL)_isValidTaskID:(unsigned long long)id;
- (id)_internalPredicateForTaskID:(unsigned long long)id priority:(unsigned long long)priority analysisVersion:(int)version sceneConfidenceThreshold:(float)threshold adjustedSinceDate:(id)date;
- (id)_assetKindPredicateForTaskID:(unsigned long long)id;
- (id)_adjustedSincePredicateWithDate:(id)date;
- (id)_priorityPredicateForTaskID:(unsigned long long)id priority:(unsigned long long)priority sceneConfidenceThreshold:(float)threshold;
- (id)_needsProcessingPredicateForTaskID:(unsigned long long)id analysisVersion:(int)version;
- (BOOL)_shouldIncludeGuestAssetsForTaskID:(unsigned long long)id;
- (BOOL)_shouldIncludeAllBurstAssetsForTaskID:(unsigned long long)id;
- (BOOL)_shouldIncludeTrashedAssetsForTaskID:(unsigned long long)id;
- (BOOL)_shouldIncludeHiddenAssetsForTaskID:(unsigned long long)id;
- (id)_propertySetsForTaskID:(unsigned long long)id;
- (id)_imagesInternalPredicate;
- (id)_livePhotosInternalPredicate;
- (id)_nonPanoInternalPredicate;
- (id)_moviesInternalPredicate;
- (id)fetchFacesForMediaProcessingWithPersonLocalIdentifiers:(id)identifiers inMoment:(id)moment;
- (id)_baseFetchOptionsForMediaProcessing;
- (id)_facesFetchOptionsForMediaProcessing;
- (id)_assetFetchOptionsForMediaProcessing;
- (id)init;
- (id)initSharedLibrary;
- (id)initMomentShareLibrary;
- (id)initWithPhotoLibraryURL:(id)url;
- (BOOL)isCloudPhotoLibraryEnabled;
- (void)getCPLConfigrationValueForClient:(unsigned long long)client completionHandler:(id /* block */)handler;
- (id)_initializeAppPrivateData;
- (id)_initializeSearchIndex;
- (id)searchIndex;
- (BOOL)_postOpenInitializationWithError:(id *)error;
- (BOOL)createPhotoLibraryWithError:(id *)error;
- (BOOL)createPhotoLibraryWithOptions:(unsigned long long)options error:(id *)error;
- (BOOL)createPhotoLibraryUsingOptions:(id)options error:(id *)error;
- (BOOL)createOrUpgradeLibraryUsingOptions:(id)options error:(id *)error;
- (BOOL)shouldMobileSlideShowLaunchWithError:(id *)error;
- (id)plLibraryOptionsFromPHOptions:(id)phoptions createOptions:(unsigned long long *)options;
- (BOOL)openAndWaitWithUpgrade:(BOOL)upgrade error:(id *)error;
- (BOOL)openAndWaitWithUpgrade:(BOOL)upgrade options:(id)options error:(id *)error;
- (id)upgradePhotoLibraryUsingOptions:(id)options completion:(id /* block */)completion;
- (void)resetFaceAnalysisWithResetLevel:(long long)level completionHandler:(id /* block */)handler;
- (BOOL)requestSandboxExtensionsIfNeededWithError:(id *)error;
- (void)close;
- (void)closeWithReason:(id)reason;
- (BOOL)isPHPhotoLibraryForCMM;
- (id)initWithPLPhotoLibrary:(id)library;
- (id)initWithPLPhotoLibrary:(id)library type:(unsigned short)type;
- (id)initWithPhotoLibraryURL:(id)url type:(unsigned short)type;
- (id)initWithPhotoLibraryBundle:(id)bundle type:(unsigned short)type;
- (void)_invalidateEverythingWithReason:(id)reason;
- (void)dealloc;
- (id)_initializeCPLStatus;
- (void)statusDidChange:(id)change;
- (id)_initializeIsReadyForAnalysis;
- (id)_initializeIsReadyForAnalysisQuickCheck;
- (void)accountDidChange:(id)change;
- (id)libraryID;
- (id)pathManager;
- (id)pl_photoLibraryForCMM;
- (id)_lazyPhotoLibrary;
- (id)managedObjectContext;
- (id)mainQueueManagedObjectContext;
- (id)photoLibraryForCurrentQueueQoS;
- (id)objectFetchingContextForCurrentQueueQoS;
- (id)objectFetchingManagedObjectContextForObject:(id)object propertySet:(id)set;
- (void)registerFetchResult:(id)result;
- (void)unregisterFetchResult:(id)result;
- (void)registerAvailabilityObserver:(id)observer;
- (void)unregisterAvailabilityObserver:(id)observer;
- (void)_startWatchingForLibraryAvailability;
- (void)_handleLibraryBecameUnavailable:(id)unavailable reason:(id)reason;
- (void)_stopWatchingForLibraryAvailability;
- (void)_startWatchingFileSystemVolumeForLibraryAvailability;
- (void)_stopWatchingFileSystemVolumeForLibraryAvailability;
- (void)observeValueForKeyPath:(id)path ofObject:(id)object change:(id)change context:(void *)context;
- (void)_startObservingServiceConnectionInvalidated;
- (void)_stopObservingServiceConnectionInvalidated;
- (void)_handleServiceConnectionClosed:(id)closed;
- (BOOL)_setUnavailabilityReason:(id)reason;
- (void)_notifyAvailabilityObserversWithReason:(id)reason;
- (void)_onQueueNotifyAvailabilityObserversWithReason:(id)reason;
- (void)appPrivateDataWriteFailedWithError:(id)error;
- (void)registerChangeObserver:(id)observer;
- (void)unregisterChangeObserver:(id)observer;
- (void)_addObservers:(id)observers authorizationStatus:(long long)status;
- (void)_removeObserver:(id)observer;
- (void)_resumeChangeHandlingIfNeeded;
- (void)_pauseChangeHandlingIfNeeded;
- (BOOL)_hasChangeObservers;
- (void)_beginTransaction;
- (void)_commitTransactionOnExecutionContext:(id)context withInstrumentation:(id)instrumentation completionHandler:(id /* block */)handler;
- (id)_popChangesRequest;
- (long long)_initialRetryCountForChangesRequest:(id)request;
- (void)_sendChangesRequest:(id)request onExecutionContext:(id)context withInstrumentation:(id)instrumentation remainingRetryCount:(long long)count reply:(id /* block */)reply;
- (void)_sendChangesRequest:(id)request onExecutionContext:(id)context withInstrumentation:(id)instrumentation reply:(id /* block */)reply;
- (void)_endTransaction;
- (void)_cancelTransactionOnExecutionContext:(id)context withInstrumentation:(id)instrumentation completionHandler:(id /* block */)handler;
- (void)_denyTransactionOnExecutionContext:(id)context withInstrumentation:(id)instrumentation authorizationStatus:(long long)status accessLevel:(long long)level completionHandler:(id /* block */)handler;
- (id)_errorForAuthorizationStatus:(long long)status accessLevel:(long long)level;
- (BOOL)_preflightRequest:(id)request withError:(id *)error;
- (void)performCancellableChanges:(id /* block */)changes completionHandler:(id /* block */)handler;
- (BOOL)performCancellableChangesAndWait:(id /* block */)wait error:(id *)error;
- (void)performChanges:(id /* block */)changes completionHandler:(id /* block */)handler;
- (BOOL)performChangesAndWait:(id /* block */)wait error:(id *)error;
- (void)assertTransaction;
- (void)recordInsertRequest:(id)request;
- (void)recordUpdateRequest:(id)request;
- (void)recordDeleteRequest:(id)request;
- (id)changeRequestForUUID:(id)uuid;
- (void)setChangeRequest:(id)request forUUID:(id)uuid;
- (id)urlForApplicationDataFolderIdentifier:(long long)identifier;
- (id)queryForType:(id)type withIdentifiers:(id)identifiers local:(BOOL)local;
- (id)fetchPHObjectsForOIDs:(id)oids;
- (id)fetchDictionariesByPHClassForOIDs:(id)oids propertyHint:(unsigned long long)hint includeTrash:(BOOL)trash overrideWithPHClass:(Class)phclass;
- (id)fetchPHObjectsForOIDs:(id)oids propertyHint:(unsigned long long)hint includeTrash:(BOOL)trash overrideResultsWithClass:(Class)class;
- (id)fetchPropertiesByOID:(id)oid propertyNamesByEntityName:(id)name;
- (id)fetchedObjectsForOIDs:(id)oids propertySetClass:(Class)class;
- (id)fetchPHObjectsForUUIDs:(id)uuids entityName:(id)name;
- (id)fetchUpdatedObject:(id)object;
- (id)allowedEntities;
- (void)setCustomLibrarySpecificFetchOptions:(id)options;
- (id)librarySpecificFetchOptions;
- (void)handleMergeNotification:(id)notification;
- (void)_processPendingChanges;
- (id)fetchPersistentChangesWithRequest:(id)request error:(id *)error;
- (id)_fetchPersistentChangesSinceToken:(id)token options:(id)options error:(id *)error;
- (id)fetchPersistentChangesSinceToken:(id)token error:(id *)error;
- (void)_notifyPersistentChangeObservers;
- (void)countOfReferencedMediaWithCompletionHandler:(id /* block */)handler;
- (void)resetLimitedLibraryAccessForApplication:(id)application completionHandler:(id /* block */)handler;
- (id)limitedLibraryPredicateForApplication:(id)application fetchType:(id)type;
- (void)cloudQuotaResourceBytesUsedForMinVideoSize:(unsigned long long)size completion:(id /* block */)completion;
- (BOOL)cloudQuotaResourceBytesUsed:(id *)used error:(id *)error;
- (BOOL)cloudQuotaResourceBytesUsed:(id *)used minVideoSize:(unsigned long long)size error:(id *)error;
- (void)_callLegacyCompletionTarget:(id)target completionSelector:(SEL)selector contextInfo:(void *)info withSuccess:(BOOL)success error:(id)error;
- (void)legacySaveImageDataToCameraRoll:(id)roll completionTarget:(id)target completionSelector:(SEL)selector contextInfo:(void *)info;
- (void)legacySaveVideoToCameraRoll:(id)roll completionTarget:(id)target completionSelector:(SEL)selector contextInfo:(void *)info;
- (void)legacySaveImageToCameraRoll:(id)roll completionTarget:(id)target completionSelector:(SEL)selector contextInfo:(void *)info;
- (void)legacySaveScreenshotToCameraRoll:(id)roll completionTarget:(id)target completionSelector:(SEL)selector contextInfo:(void *)info;
@end

#endif /* PHPhotoLibrary_h */
