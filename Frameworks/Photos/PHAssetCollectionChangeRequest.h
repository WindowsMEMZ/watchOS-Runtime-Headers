//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHAssetCollectionChangeRequest_h
#define PHAssetCollectionChangeRequest_h
@import Foundation;

#include "PHChangeRequest.h"
#include "PHAssetCollection.h"
#include "PHInsertChangeRequest-Protocol.h"
#include "PHObjectPlaceholder.h"
#include "PHRelationshipChangeRequestHelper.h"
#include "PHUpdateChangeRequest-Protocol.h"

@class NSManagedObjectID, NSString;

@interface PHAssetCollectionChangeRequest : PHChangeRequest<PHInsertChangeRequest, PHUpdateChangeRequest>

@property (retain, nonatomic) PHAssetCollection *originalAssetCollection;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *assetsHelper;
@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *customKeyAssetHelper;
@property (nonatomic) unsigned int customSortKey;
@property (nonatomic) BOOL customSortAscending;
@property (readonly, nonatomic) PHObjectPlaceholder *placeholderForCreatedAssetCollection;
@property (retain, nonatomic) NSString *title;
@property (readonly) BOOL isNewRequest;
@property (nonatomic) BOOL shouldPerformConcurrentWork;
@property (readonly) BOOL mutated;
@property (readonly, nonatomic) NSString *managedEntityName;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) BOOL clientEntitled;
@property (readonly, nonatomic) NSString *clientName;
@property (readonly, nonatomic) long long accessScopeOptionsRequirement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_changeRequestForAssetCollection:(id)collection optionalAssets:(id)assets;
+ (id)changeRequestForAssetCollection:(id)collection;
+ (id)changeRequestForAssetCollection:(id)collection assets:(id)assets;
+ (id)creationRequestForAssetCollectionWithTitle:(id)title;
+ (id)validateAssetCollectionTitle:(id)title error:(id *)error;
+ (id)creationRequestForAssetCollectionCopyFromAssetCollection:(id)collection;
+ (void)deleteAssetCollections:(id)collections;
+ (void)expungeAssetCollections:(id)collections;
+ (void)undeleteAssetCollections:(id)collections;
+ (void)_deleteAssetCollections:(id)collections withOperation:(long long)operation topLevelSelector:(SEL)selector;

/* instance methods */
- (id)initForNewObject;
- (id)initWithUUID:(id)uuid objectID:(id)id;
- (id)initWithXPCDict:(id)xpcdict request:(id)request clientAuthorization:(id)authorization;
- (void)encodeToXPCDict:(id)xpcdict;
- (BOOL)isPinned;
- (void)setIsPinned:(BOOL)pinned;
- (void)_prepareKeyAssetIDIfNeeded;
- (id)_mutableKeyAssetObjectIDsAndUUIDs;
- (void)setCustomKeyAsset:(id)asset;
- (void)_setOriginalAssetCollection:(id)collection;
- (void)_prepareWithFetchResult:(id)result;
- (void)_prepareAssetIDsIfNeeded;
- (id)_mutableAssetsObjectIDsAndUUIDs;
- (void)insertAsset:(id)asset inAssetsAtIndex:(unsigned long long)index;
- (void)removeAssetFromAssetsAtIndex:(unsigned long long)index;
- (void)insertAssets:(id)assets atIndexes:(id)indexes;
- (void)removeAssetsAtIndexes:(id)indexes;
- (void)replaceAssetInAssetsAtIndex:(unsigned long long)index withAsset:(id)asset;
- (void)replaceAssetsAtIndexes:(id)indexes withAssets:(id)assets;
- (void)moveAssetsAtIndexes:(id)indexes toIndex:(unsigned long long)index;
- (void)addAsset:(id)asset;
- (void)removeAsset:(id)asset;
- (void)addAssets:(id)assets;
- (void)removeAssets:(id)assets;
- (BOOL)validateInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (BOOL)allowMutationToManagedObject:(id)object propertyKey:(id)key error:(id *)error;
- (BOOL)applyMutationsToManagedObject:(id)object photoLibrary:(id)library error:(id *)error;
@end

#endif /* PHAssetCollectionChangeRequest_h */
