//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHPerson_h
#define PHPerson_h
@import Foundation;

#include "PHObject.h"

@class NSDictionary, NSString;

@interface PHPerson : PHObject

@property (readonly, nonatomic) double mergeCandidateConfidence;
@property (readonly, nonatomic) unsigned long long persistedSuggestionForClient;
@property (readonly, copy, nonatomic) NSString *mdID;
@property (readonly, nonatomic) NSString *name;
@property (readonly, nonatomic) NSString *displayName;
@property (readonly, nonatomic) long long type;
@property (readonly, nonatomic) unsigned long long manualOrder;
@property (readonly, nonatomic) NSString *personUri;
@property (readonly, nonatomic) BOOL inPersonNamingModel;
@property (readonly, nonatomic) long long faceCount;
@property (readonly, nonatomic) BOOL verified;
@property (readonly, nonatomic) long long verifiedType;
@property (readonly, nonatomic) unsigned short questionType;
@property (readonly, nonatomic) unsigned short ageType;
@property (readonly, nonatomic) unsigned short genderType;
@property (readonly, nonatomic) unsigned short sexType;
@property (readonly, nonatomic) short detectionType;
@property (readonly, nonatomic) long long assetSortOrder;
@property (readonly, nonatomic) NSDictionary *contactMatchingDictionary;

/* class methods */
+ (id)personSuggestionsForPerson:(id)person confirmedPersonSuggestions:(id)suggestions rejectedPersonSuggestions:(id)suggestions;
+ (long long)personSuggestionsForPerson:(id)person confirmedPersonSuggestions:(id)suggestions rejectedPersonSuggestions:(id)suggestions completion:(id /* block */)completion;
+ (long long)_personSuggestionsForPerson:(id)person confirmedPersonSuggestions:(id)suggestions rejectedPersonSuggestions:(id)suggestions fromClient:(id)client completion:(id /* block */)completion;
+ (id)_personSuggestionMarkedAsConfirmed:(BOOL)confirmed fromPersonSuggestion:(id)suggestion;
+ (id)_packageSuggestionList:(id)list photoLibrary:(id)library;
+ (id)_convertToPersonSuggestion:(id)suggestion photoLibrary:(id)library;
+ (long long)updateKeyFacesOfPersons:(id)persons forceUpdate:(BOOL)update completion:(id /* block */)completion;
+ (id)fetchPersonsForReferences:(id)references photoLibrary:(id)library;
+ (id)managedEntityName;
+ (id)fetchType;
+ (BOOL)managedObjectSupportsPersonFilters;
+ (BOOL)managedObjectSupportsKeyFaces;
+ (BOOL)managedObjectSupportsDetectionType;
+ (BOOL)managedObjectSupportsTorsoOnly;
+ (id)identifierCode;
+ (id)_composePropertiesToFetchWithHint:(unsigned long long)hint;
+ (id)propertiesToFetchWithHint:(unsigned long long)hint;
+ (id)identifierPropertiesToFetch;
+ (id)corePropertiesToFetch;
+ (id)entityKeyMap;
+ (id)transformValueExpression:(id)expression forKeyPath:(id)path;
+ (id)localIdentifierExpressionForFetchRequests;
+ (id)fetchPredicateFromComparisonPredicate:(id)predicate options:(id)options;
+ (id)fetchPersonsWithOptions:(id)options;
+ (id)fetchPersonsWithType:(long long)type options:(id)options;
+ (id)fetchPersonsWithQuestionType:(unsigned short)type options:(id)options;
+ (id)fetchPersonsWithLocalIdentifiers:(id)identifiers options:(id)options;
+ (id)fetchPersonsWithMdIDs:(id)ids options:(id)options;
+ (id)fetchPersonsWithObjectIDs:(id)ids options:(id)options;
+ (id)fetchPersonsInAsset:(id)asset options:(id)options;
+ (id)fetchPersonsInAssets:(id)assets options:(id)options;
+ (id)fetchPersonsInAssetsFetchResult:(id)result options:(id)options;
+ (id)fetchPersonsForAssetCollection:(id)collection options:(id)options;
+ (id)fetchPersonForShareParticipant:(id)participant options:(id)options;
+ (id)fetchPersonWithFace:(id)face options:(id)options;
+ (id)fetchPersonsWithFaces:(id)faces options:(id)options;
+ (id)fetchRejectedPersonsForFace:(id)face options:(id)options;
+ (id)fetchPersonForFaceCrop:(id)crop options:(id)options;
+ (id)fetchPersonAssociatedWithFaceGroup:(id)group options:(id)options;
+ (id)fetchAssociatedPersonsGroupedByFaceGroupLocalIdentifierForFaceGroups:(id)groups options:(id)options;
+ (id)fetchMergeCandidatePersonsForPerson:(id)person options:(id)options;
+ (id)fetchMergeCandidateWithConfidencePersonsForPerson:(id)person options:(id)options;
+ (id)fetchInvalidMergeCandidatePersonsForPerson:(id)person options:(id)options;
+ (id)fetchFinalMergeTargetPersonsForPersonWithUUID:(id)uuid options:(id)options;
+ (id)_assetLocalIdentifiersForAssetCollection:(id)collection;
+ (id)_momentLocalIdentifiersForAssetCollection:(id)collection;
+ (id)fetchSuggestedPersonsForAssetCollection:(id)collection options:(id)options;
+ (id)fetchSuggestedPersonsForFocusedAssetCollection:(id)collection options:(id)options;
+ (id)fetchSuggestedRecipientsForAssetCollection:(id)collection options:(id)options;
+ (id)fetchSuggestedRecipientsForFocusedAssetCollection:(id)collection options:(id)options;
+ (id)batchFetchSuggestedRecipientsForAssets:(id)assets options:(id)options;
+ (id)_fetchSuggestedPersonsForRecipients:(id)recipients options:(id)options photoLibrary:(id)library;
+ (id)_fetchSuggestedRecipientsForFocusedAssetCollection:(id)collection assetCollection:(id)collection options:(id)options client:(unsigned long long)client;
+ (id)momentCountsByPersonUUIDForPersonsWithUUIDs:(id)uuids afterDate:(id)date photoLibrary:(id)library;
+ (id)fetchPersonUUIDsGroupedByAssetUUIDForAssetUUIDs:(id)uuids options:(id)options;
+ (id)fetchVerifiedPersonUUIDsGroupedByAssetUUIDForAssetUUIDs:(id)uuids options:(id)options;
+ (id)fetchPersonsGroupedByAssetLocalIdentifierForAssets:(id)assets options:(id)options;
+ (id)fetchPersonCountGroupedByAssetLocalIdentifierForAssets:(id)assets options:(id)options;
+ (id)personToKeepForCloudConsistencyFromPersons:(id)persons;
+ (id)fullNameFromContact:(id)contact;
+ (id)displayNameFromContact:(id)contact;
+ (id)fetchPersonsForContacts:(id)contacts options:(id)options;
+ (id)fetchPersonsForContactIdentifiers:(id)identifiers options:(id)options;
+ (id)batchFetchRelationshipInferencesForPersons:(id)persons;
+ (id)batchFetchContactInferencesForPersons:(id)persons queryOptions:(unsigned long long)options;
+ (id)fetchSuggestedPersonsForClient:(unsigned long long)client options:(id)options;
+ (id)_requestSuggestedPersonsForClient:(unsigned long long)client options:(id)options;
+ (id)_fetchSuggestedPersonsForClient:(unsigned long long)client options:(id)options;
+ (id)fetchPersonsWithUserFeedbackWithOptions:(id)options;
+ (id)fetchPersonsWithAutonamingSuggestionFeatureUserFeedbackWithOptions:(id)options;
+ (id)fetchPersonsWithUserFeedbackOfAllTypesWithOptions:(id)options;
+ (Class)propertySetClassForPropertySet:(id)set;
+ (id)propertySetAccessorsByPropertySet;
+ (unsigned long long)propertyFetchHintsForPropertySets:(id)sets;
+ (id)propertySetsForPropertyFetchHints:(unsigned long long)hints;

/* instance methods */
- (id)objectReference;
- (Class)changeRequestClass;
- (id)initWithFetchDictionary:(id)dictionary propertyHint:(unsigned long long)hint photoLibrary:(id)library;
- (BOOL)isVerified;
- (void)markAsNeedingKeyFace;
- (id)linkedContactWithKeysToFetch:(id)fetch;
- (id)description;
- (id)_createPropertyObjectOfClass:(Class)class preFetchedProperties:(id)properties;
- (id)_createPropertyObjectOfClass:(Class)class;
- (id)userFeedbackProperties;
- (BOOL)isInPersonNamingModel;
@end

#endif /* PHPerson_h */
