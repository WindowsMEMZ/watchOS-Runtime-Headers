//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHUserFeedback_h
#define PHUserFeedback_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDate, NSString;

@interface PHUserFeedback : NSObject<NSCopying, NSSecureCoding>

@property (readonly) NSString *uuid;
@property (readonly) unsigned long long type;
@property (readonly) unsigned long long feature;
@property (readonly) unsigned long long creationType;
@property (readonly, copy) NSString *context;
@property (readonly, copy) NSDate *lastModifiedDate;

/* class methods */
+ (id)negativeUserFeedbackForMemoryFeature:(id)feature existingFeedback:(id)feedback;
+ (id)negativeUserFeedbackForMemoryMusicWithSongIdentifier:(id)identifier existingFeedback:(id)feedback;
+ (id)negativeUserFeedbackForPerson:(id)person;
+ (id)negativeAutonamingUserFeedbackForPerson:(id)person rejectedName:(id)name;
+ (id)negativeAutonamingUserFeedbackForPerson:(id)person rejectedContactIdentifier:(id)identifier;
+ (unsigned long long)mergeFeedbackType:(unsigned long long)type withOtherFeedbackType:(unsigned long long)type;
+ (unsigned long long)sumFeedbackType:(unsigned long long)type withOtherFeedbackType:(unsigned long long)type;
+ (BOOL)supportsSecureCoding;
+ (id)_contextForMemoryFeature:(id)feature;
+ (id)_contextForSongIdentifiers:(id)identifiers;
+ (unsigned long long)_feedbackFeatureForMemoryFeature:(id)feature;

/* instance methods */
- (id)initWithType:(unsigned long long)type feature:(unsigned long long)feature context:(id)context;
- (id)initWithType:(unsigned long long)type feature:(unsigned long long)feature context:(id)context lastModifiedDate:(id)date;
- (id)initWithUUID:(id)uuid type:(unsigned long long)type feature:(unsigned long long)feature creationType:(unsigned long long)type context:(id)context lastModifiedDate:(id)date;
- (id)contextAsStringWithError:(id *)error;
- (id)contextAsDateWithError:(id *)error;
- (id)contextAsDateIntervalWithError:(id *)error;
- (id)contextAsLocationWithError:(id *)error;
- (id)contextAsListOfSongIdentifiersWithError:(id *)error;
- (BOOL)isEqualWithoutUUID:(id)uuid;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
- (id)description;
@end

#endif /* PHUserFeedback_h */
