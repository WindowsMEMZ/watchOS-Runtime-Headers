//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 624.0.100.0.0
//
#ifndef PHCollectionListChangeRequest_h
#define PHCollectionListChangeRequest_h
@import Foundation;

#include "PHChangeRequest.h"
#include "PHCollectionList.h"
#include "PHInsertChangeRequest-Protocol.h"
#include "PHObjectPlaceholder.h"
#include "PHRelationshipChangeRequestHelper.h"
#include "PHUpdateChangeRequest-Protocol.h"

@class NSManagedObjectID, NSString;

@interface PHCollectionListChangeRequest : PHChangeRequest<PHInsertChangeRequest, PHUpdateChangeRequest> {
  /* instance variables */
  PHCollectionList *_originalCollectionList;
}

@property (readonly, nonatomic) PHRelationshipChangeRequestHelper *collectionsHelper;
@property (nonatomic) unsigned int customSortKey;
@property (nonatomic) BOOL customSortAscending;
@property (nonatomic) BOOL isTopLevelUserCollection;
@property (readonly, nonatomic) PHObjectPlaceholder *placeholderForCreatedCollectionList;
@property (retain, nonatomic) NSString *title;
@property (readonly) BOOL isNewRequest;
@property (nonatomic) BOOL shouldPerformConcurrentWork;
@property (readonly) BOOL mutated;
@property (readonly, nonatomic) NSString *managedEntityName;
@property (readonly, nonatomic) NSManagedObjectID *objectID;
@property (readonly, nonatomic) BOOL clientEntitled;
@property (readonly, nonatomic) NSString *clientName;
@property (readonly, nonatomic) long long accessScopeOptionsRequirement;
@property (readonly) unsigned long long hash;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *description;
@property (readonly, copy) NSString *debugDescription;

/* class methods */
+ (id)_changeRequestForCollectionList:(id)list optionalChildCollections:(id)collections;
+ (id)changeRequestForCollectionList:(id)list;
+ (id)changeRequestForCollectionList:(id)list childCollections:(id)collections;
+ (id)changeRequestForTopLevelCollectionListUserCollections:(id)collections;
+ (id)creationRequestForCollectionListWithTitle:(id)title;
+ (void)deleteCollectionLists:(id)lists;
+ (void)expungeCollectionLists:(id)lists;
+ (void)undeleteCollectionLists:(id)lists;
+ (void)_deleteCollectionLists:(id)lists withOperation:(long long)operation topLevelSelector:(SEL)selector;

/* instance methods */
- (id)initForNewObject;
- (id)initWithUUID:(id)uuid objectID:(id)id;
- (id)initWithXPCDict:(id)xpcdict request:(id)request clientAuthorization:(id)authorization;
- (void)encodeToXPCDict:(id)xpcdict;
- (void)_setOriginalCollectionList:(id)list;
- (void)_prepareWithFetchResult:(id)result;
- (void)_prepareAssetIDsIfNeeded;
- (id)_mutableObjectIDsAndUUIDs;
- (void)insertChildCollection:(id)collection inChildCollectionsAtIndex:(unsigned long long)index;
- (void)removeChildCollectionFromChildCollectionsAtIndex:(unsigned long long)index;
- (void)insertChildCollections:(id)collections atIndexes:(id)indexes;
- (void)removeChildCollectionsAtIndexes:(id)indexes;
- (void)replaceChildCollectionsAtIndex:(unsigned long long)index withChildCollection:(id)collection;
- (void)replaceChildCollectionsAtIndexes:(id)indexes withChildCollections:(id)collections;
- (void)moveChildCollectionsAtIndexes:(id)indexes toIndex:(unsigned long long)index;
- (void)addChildCollection:(id)collection;
- (void)removeChildCollection:(id)collection;
- (void)addChildCollections:(id)collections;
- (void)removeChildCollections:(id)collections;
- (id)createManagedObjectForInsertIntoPhotoLibrary:(id)library error:(id *)error;
- (BOOL)allowMutationToManagedObject:(id)object propertyKey:(id)key error:(id *)error;
- (BOOL)applyMutationsToManagedObject:(id)object photoLibrary:(id)library error:(id *)error;
@end

#endif /* PHCollectionListChangeRequest_h */
