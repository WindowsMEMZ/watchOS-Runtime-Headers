//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 794.2.2.0.0
//
#ifndef UTType_h
#define UTType_h
@import Foundation;

#include "NSCopying-Protocol.h"
#include "NSSecureCoding-Protocol.h"

@class NSDictionary, NSNumber, NSOrderedSet, NSSet, NSString, NSURL, UTTypeRecord;

@interface UTType : NSObject<NSCopying, NSSecureCoding> {
  /* instance variables */
  UTTypeRecord *_typeRecord;
}

@property (readonly) NSSet *supertypes;
@property (readonly) NSDictionary *tags;
@property (readonly) long long _constantIndex;
@property (readonly) long long _constantIndex;
@property (readonly) BOOL _realized;
@property (readonly) UTTypeRecord *_typeRecord;
@property (readonly) NSDictionary *_localizedDescriptionDictionary;
@property (readonly) NSString *_kindString;
@property (readonly) NSDictionary *_kindStringDictionary;
@property (readonly) NSOrderedSet *_parentTypes;
@property (readonly) NSSet *_childTypes;
@property (readonly) NSSet *_subtypes;
@property (readonly) BOOL _exported;
@property (readonly) BOOL _imported;
@property (readonly) BOOL _wildcard;
@property (readonly) BOOL _coreType;
@property (readonly) NSString *identifier;
@property (readonly) NSString *preferredFilenameExtension;
@property (readonly) NSString *preferredMIMEType;
@property (readonly) NSString *localizedDescription;
@property (readonly) NSNumber *version;
@property (readonly) NSURL *referenceURL;
@property (readonly) BOOL dynamic;
@property (readonly) BOOL declared;
@property (readonly) BOOL publicType;

/* class methods */
+ (id)_typeWithIdentifier:(id)identifier allowUndeclared:(BOOL)undeclared;
+ (id)_constantTypeForURLPropertyProviderWithIdentifier:(id)identifier;
+ (id)_typeForURLPropertyProviderWithTypeRecord:(id)record;
+ (id)_typeWithIdentifier:(id)identifier constantIndex:(long long)index error:(id *)error;
+ (id)_exportedTypeWithIdentifier:(id)identifier bundle:(id)bundle conformingToType:(id)type;
+ (id)_importedTypeWithIdentifier:(id)identifier bundle:(id)bundle conformingToType:(id)type;
+ (id)exportedTypeWithIdentifier:(id)identifier;
+ (id)exportedTypeWithIdentifier:(id)identifier conformingToType:(id)type;
+ (id)importedTypeWithIdentifier:(id)identifier;
+ (id)importedTypeWithIdentifier:(id)identifier conformingToType:(id)type;
+ (id)typeWithTag:(id)tag tagClass:(id)class conformingToType:(id)type;
+ (id)typesWithTag:(id)tag tagClass:(id)class conformingToType:(id)type;
+ (id)_typeWithBluetoothProductID:(unsigned int)id vendorID:(unsigned short)id;
+ (id)_typeOfCurrentDevice;
+ (id)_typeWithDeviceModelCode:(id)code;
+ (id)_typeWithDeviceModelCode:(id)code enclosureColor:(struct UTHardwareColor { unsigned char x0; unsigned char x1[3] union { struct { unsigned char x0; unsigned char x1; unsigned char x2; } x0; int x1; } x2; })color;
+ (id)_typeWithDeviceModelCodeWithoutResolvingCurrentDevice:(id)device;
+ (id)new;
+ (id)typeWithIdentifier:(id)identifier;
+ (id)typeWithFilenameExtension:(id)extension;
+ (id)typeWithFilenameExtension:(id)extension conformingToType:(id)type;
+ (id)typeWithMIMEType:(id)mimetype;
+ (id)typeWithMIMEType:(id)mimetype conformingToType:(id)type;
+ (void)_enumerateAllDeclaredTypesUsingBlock:(id /* block */)block;
+ (id)_typesWithIdentifiers:(id)identifiers;
+ (id)_typeOfItemAtFileURL:(id)url error:(id *)error;
+ (id)_typeOfPromiseAtFileURL:(id)url error:(id *)error;
+ (id)_typeWithTypeRecord:(id)record detachTypeRecord:(BOOL)record findConstant:(BOOL)constant;
+ (void)_unrealizeAllCoreTypes;
+ (BOOL)supportsSecureCoding;

/* instance methods */
- (BOOL)_shouldURLPropertyProviderEncodeTypeRecord;
- (BOOL)conformsToType:(id)type;
- (BOOL)isSupertypeOfType:(id)type;
- (BOOL)isSubtypeOfType:(id)type;
- (BOOL)_getPreferredEnclosureColor:(struct UTHardwareColor { unsigned char x0; unsigned char x1[3] union { struct { unsigned char x0; unsigned char x1; unsigned char x2; } x0; int x1; } x2; } *)color;
- (unsigned long long)_getEnclosureColors:(struct UTHardwareColor { unsigned char x0; unsigned char x1[3] union { struct { unsigned char x0; unsigned char x1; unsigned char x2; } x0; int x1; } x2; } *)colors count:(unsigned long long)count;
- (BOOL)_getEnclosureColor:(struct UTHardwareColor { unsigned char x0; unsigned char x1[3] union { struct { unsigned char x0; unsigned char x1; unsigned char x2; } x0; int x1; } x2; } *)color;
- (id)init;
- (BOOL)isDynamic;
- (BOOL)isDeclared;
- (BOOL)isPublicType;
- (id)_localizedDescriptionWithPreferredLocalizations:(id)localizations;
- (id)_kindStringWithPreferredLocalizations:(id)localizations;
- (BOOL)_isExported;
- (BOOL)_isImported;
- (BOOL)_isWildcard;
- (BOOL)_isCoreType;
- (id)_initWithTypeRecord:(id)record;
- (BOOL)_isRealized;
- (void)_unrealize;
- (id)_preferredTagOfClass:(id)class;
- (id)description;
- (id)debugDescription;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)encodeWithCoder:(id)coder;
- (id)initWithCoder:(id)coder;
@end

#endif /* UTType_h */
