//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 12563.0.0.0.0
//
#ifndef ABSAddressBook_h
#define ABSAddressBook_h
@import Foundation;

#include "ABSAddressBookContextStorage.h"
#include "ABSBulkFaultHandler.h"
#include "ABSChangeCallbacks.h"

@class CNContactStore, CNFuture;

@interface ABSAddressBook : NSObject

@property (readonly, nonatomic) CNFuture *storeFuture;
@property (readonly, nonatomic) ABSBulkFaultHandler *faultHandler;
@property (retain, nonatomic) ABSAddressBookContextStorage *contacts;
@property (retain, nonatomic) ABSAddressBookContextStorage *groups;
@property (retain, nonatomic) ABSAddressBookContextStorage *sources;
@property (readonly, nonatomic) CNContactStore *store;
@property (readonly) BOOL hasUnsavedChanges;
@property (readonly) ABSChangeCallbacks *changeCallbacks;

/* class methods */
+ (void)initialize;
+ (void)ABInitialize;
+ (BOOL)eraseAllDataAtLocationName:(id)name error:(id *)error;
+ (id)localizedLabelForLabel:(id)label;
+ (long long)authorizationStatus;
+ (void)requestAccessWithCompletion:(id /* block */)completion;
+ (void)callLocalChangeCallbacks:(BOOL)callbacks;

/* instance methods */
- (id)init;
- (id)initWithOptions:(id)options error:(id *)error;
- (id)initWithOptions:(id)options policy:(int)policy error:(id *)error;
- (id)initWithSettings:(id)settings error:(id *)error;
- (unsigned long long)_cfTypeID;
- (id)_storageForRecordClass:(Class)class;
- (BOOL)addRecord:(id)record error:(id *)error;
- (BOOL)recordUpdated:(id)updated;
- (BOOL)removeRecord:(id)record error:(id *)error;
- (BOOL)save:(id *)save;
- (void)revert;
- (void)registerExternalChangeCallback:(undefined *)callback context:(void *)context;
- (void)unregisterExternalChangeCallback:(undefined *)callback context:(void *)context;
- (long long)personCount;
- (id)allPeople;
- (id)peopleWithCNIdentifiers:(id)cnidentifiers;
- (id)personWithRecordID:(int)id;
- (id)findPersonMatchingURL:(id)url;
- (id)findPersonMatchingEmailAddress:(id)address;
- (id)findPersonMatchingPhoneNumber:(id)number country:(id)country;
- (id)contactsWithIdentifiers:(id)identifiers keysToFetch:(id)fetch;
- (void)updatePeople:(id)people refetchingProperties:(id)properties;
- (void)completePerson:(id)person withKeysToFetch:(id)fetch;
- (id)_resultRecordsFromFetchedCNImpls:(id)cnimpls mergedWithStorage:(id)storage creationBlock:(id /* block */)block;
- (id)_peoplePreferringExistingRecordsForFetchRequest:(id)request;
- (id)peopleInSource:(id)source sortOrder:(unsigned int)order;
- (id)peopleInGroup:(id)group sortOrder:(unsigned int)order;
- (id)peopleMatchingNameString:(id)string;
- (id)mePerson;
- (id)peopleLinkedToPerson:(id)person;
- (BOOL)linkPerson:(id)person toPerson:(id)person;
- (BOOL)unlinkPerson:(id)person;
- (id)_sourcesPreferringExistingRecordsFetchedWithPredicate:(id)predicate;
- (id)sourceWithRecordID:(int)id;
- (id)allSources;
- (id)defaultSource;
- (id)localSource;
- (id)sourceForRecord:(id)record;
- (void)updateFetchingAllPropertiesForSources:(id)sources;
- (BOOL)addMember:(id)member toGroup:(id)group error:(id *)error;
- (BOOL)removeMember:(id)member fromGroup:(id)group error:(id *)error;
- (id)allGroups;
- (long long)groupCount;
- (id)groupWithRecordID:(int)id;
- (void)updateFetchingAllPropertiesForGroups:(id)groups;
- (id)groupsInSource:(id)source;
- (id)uniqueDatabaseVersionIdentifier;
- (int)saveSequenceCount;
@end

#endif /* ABSAddressBook_h */
