//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLRenderPassStencilAttachmentDescriptorInternal_h
#define MTLRenderPassStencilAttachmentDescriptorInternal_h
@import Foundation;

#include ".h"

@protocol {MTLRenderPassAttachmentDescriptorPrivate="texture"@"<MTLTextureImplementation>""level"Q"slice"Q"depthPlane"Q"loadAction"Q"storeAction"Q"storeActionOptions"Q"clearColor"{?="red"d"green"d"blue"d"alpha"d}"clearDepth"d"clearStencil"I"stencilResolveFilter"Q"resolveTexture"@"<MTLTextureImplementation>""resolveLevel"Q"resolveSlice"Q"resolveDepthPlane"Q"resolveFilter"Q"width"Q"height"Q"yInvert"B};

@interface MTLRenderPassStencilAttachmentDescriptorInternal :  {
  /* instance variables */
  struct MTLRenderPassAttachmentDescriptorPrivate { <MTLTextureImplementation> *texture; unsigned long long level; unsigned long long slice; unsigned long long depthPlane; unsigned long long loadAction; unsigned long long storeAction; unsigned long long storeActionOptions; struct { double red; double green; double blue; double alpha; } clearColor; double clearDepth; unsigned int clearStencil; unsigned long long stencilResolveFilter; <MTLTextureImplementation> *resolveTexture; unsigned long long resolveLevel; unsigned long long resolveSlice; unsigned long long resolveDepthPlane; unsigned long long resolveFilter; unsigned long long width; unsigned long long height; BOOL yInvert; } _private;
}

/* class methods */
+ (id)attachmentDescriptor;

/* instance methods */
- (id)init;
- (id)copyWithZone:(struct _NSZone *)zone;
- (void)dealloc;
- (BOOL)isEqual:(id)equal;
- (unsigned long long)hash;
- (id)formattedDescription:(unsigned long long)description;
- (id)description;
- (void)setTexture:(id)texture;
- (id)texture;
- (void)setResolveTexture:(id)texture;
- (id)resolveTexture;
- (void)setLevel:(unsigned long long)level;
- (unsigned long long)level;
- (void)setSlice:(unsigned long long)slice;
- (unsigned long long)slice;
- (void)setDepthPlane:(unsigned long long)plane;
- (unsigned long long)depthPlane;
- (void)setClearStencil:(unsigned int)stencil;
- (unsigned int)clearStencil;
- (unsigned long long)stencilResolveFilter;
- (void)setStencilResolveFilter:(unsigned long long)filter;
- (void)setResolveLevel:(unsigned long long)level;
- (unsigned long long)resolveLevel;
- (void)setResolveSlice:(unsigned long long)slice;
- (unsigned long long)resolveSlice;
- (void)setResolveDepthPlane:(unsigned long long)plane;
- (unsigned long long)resolveDepthPlane;
- (void)setYInvert:(BOOL)yinvert;
- (BOOL)yInvert;
- (unsigned long long)loadAction;
- (void)setLoadAction:(unsigned long long)action;
- (unsigned long long)storeAction;
- (void)setStoreAction:(unsigned long long)action;
- (unsigned long long)storeActionOptions;
- (void)setStoreActionOptions:(unsigned long long)options;
- (const struct MTLRenderPassAttachmentDescriptorPrivate { id x0; unsigned long long x1; unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; unsigned long long x6; struct { double x0; double x1; double x2; double x3; } x7; double x8; unsigned int x9; unsigned long long x10; id x11; unsigned long long x12; unsigned long long x13; unsigned long long x14; unsigned long long x15; unsigned long long x16; unsigned long long x17; BOOL x18; } *)_descriptorPrivate;
@end

#endif /* MTLRenderPassStencilAttachmentDescriptorInternal_h */
