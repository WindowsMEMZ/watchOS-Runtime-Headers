//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLSamplerDescriptorInternal_h
#define MTLSamplerDescriptorInternal_h
@import Foundation;

#include ".h"

@interface MTLSamplerDescriptorInternal :  {
  /* instance variables */
  struct MTLSamplerDescriptorPrivate { union { struct { unsigned int x :2 minFilter; unsigned int x :2 magFilter; unsigned int x :2 mipFilter; unsigned int x :3 sAddressMode; unsigned int x :3 tAddressMode; unsigned int x :3 rAddressMode; unsigned int x :1 normalizedCoords; unsigned int x :2 borderColor; unsigned int x :1 lodAverage; unsigned int x :3 compareFunction; unsigned int x :1 supportArgumentBuffers; unsigned int x :1 forceResourceIndex; unsigned int x :1 forceSeamsOnCubemapFiltering; } x0; unsigned int miscHash; } x0; union { unsigned int lodMinClampHash; float lodMinClamp; } x1; union { unsigned int lodMaxClampHash; float lodMaxClamp; } x2; union { unsigned int lodBiasHash; float lodBias; } x3; unsigned long long maxAnisotropy; NSString *label; unsigned long long resourceIndex; unsigned int x[4] customBorderColorValue; unsigned long long pixelFormat; } _private;
}

@property (nonatomic) unsigned long long borderColorSPI;
@property (nonatomic) unsigned int customBorderColorValue_0;
@property (nonatomic) unsigned int customBorderColorValue_1;
@property (nonatomic) unsigned int customBorderColorValue_2;
@property (nonatomic) unsigned int customBorderColorValue_3;
@property (nonatomic) BOOL forceSeamsOnCubemapFiltering;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)formattedDescription:(unsigned long long)description;
- (id)description;
- (unsigned long long)minFilter;
- (void)setMinFilter:(unsigned long long)filter;
- (unsigned long long)magFilter;
- (void)setMagFilter:(unsigned long long)filter;
- (unsigned long long)mipFilter;
- (void)setMipFilter:(unsigned long long)filter;
- (unsigned long long)maxAnisotropy;
- (void)setMaxAnisotropy:(unsigned long long)anisotropy;
- (unsigned long long)sAddressMode;
- (void)setSAddressMode:(unsigned long long)mode;
- (unsigned long long)tAddressMode;
- (void)setTAddressMode:(unsigned long long)mode;
- (unsigned long long)rAddressMode;
- (void)setRAddressMode:(unsigned long long)mode;
- (unsigned long long)borderColor;
- (void)setBorderColor:(unsigned long long)color;
- (BOOL)normalizedCoordinates;
- (void)setNormalizedCoordinates:(BOOL)coordinates;
- (float)lodMinClamp;
- (void)setLodMinClamp:(float)clamp;
- (float)lodMaxClamp;
- (void)setLodMaxClamp:(float)clamp;
- (float)lodBias;
- (void)setLodBias:(float)bias;
- (BOOL)lodAverage;
- (void)setLodAverage:(BOOL)average;
- (void)setPixelFormat:(unsigned long long)format;
- (unsigned long long)pixelFormat;
- (unsigned long long)compareFunction;
- (void)setCompareFunction:(unsigned long long)function;
- (BOOL)supportArgumentBuffers;
- (void)setSupportArgumentBuffers:(BOOL)buffers;
- (BOOL)forceResourceIndex;
- (void)setForceResourceIndex:(BOOL)index;
- (unsigned long long)resourceIndex;
- (void)setResourceIndex:(unsigned long long)index;
- (id)label;
- (void)setLabel:(id)label;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (const struct MTLSamplerDescriptorPrivate { union { struct { unsigned int x0 :2; unsigned int x1 :2; unsigned int x2 :2; unsigned int x3 :3; unsigned int x4 :3; unsigned int x5 :3; unsigned int x6 :1; unsigned int x7 :2; unsigned int x8 :1; unsigned int x9 :3; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; } x0; unsigned int x1; } x0; union { unsigned int x0; float x1; } x1; union { unsigned int x0; float x1; } x2; union { unsigned int x0; float x1; } x3; unsigned long long x4; id x5; unsigned long long x6; unsigned int x7[4] unsigned long long x8; } *)descriptorPrivate;
@end

#endif /* MTLSamplerDescriptorInternal_h */
