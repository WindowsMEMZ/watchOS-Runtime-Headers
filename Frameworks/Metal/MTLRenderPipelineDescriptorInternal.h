//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLRenderPipelineDescriptorInternal_h
#define MTLRenderPipelineDescriptorInternal_h
@import Foundation;

#include ".h"

@protocol {MTLRenderPipelineDescriptorPrivate="attachments"@"MTLRenderPipelineColorAttachmentDescriptorArrayInternal""rtBlendDescHash"[8Q]"depthAttachmentPixelFormat"Q"stencilAttachmentPixelFormat"Q"tessellationPartitionMode"Q"maxTessellationFactor"Q"tessellationFactorScaleEnabled"B"tessellationFactorFormat"Q"tessellationControlPointIndexType"Q"tessellationFactorStepFunction"Q"tessellationOutputWindingOrder"Q"postVertexDumpBufferIndex"Q"supportIndirectCommandBuffers"B"textureWriteRoundingMode"q""(?="sampleCount"Q"rasterSampleCount"Q)"sampleMask"Q""(?="sampleCoverageHash"I"sampleCoverage"f)"paddingToRemove"Q"colorSampleCount"Q""(?="miscHash"[2I]""{?="alphaToCoverageEnabled"b1"alphaToOneEnabled"b1"rasterizationEnabled"b1"inputPrimitiveTopology"b2"private0"b1"depthStencilWriteDisabled"b1"openGLMode"b1"sampleCoverageInvert"b1"private4"b1"vertexAmplificationMode"b1"twoSideEnabled"b1"pointSizeOutputVS"b1"pointCoordLowerLeft"b1"pointSmoothEnabled"b1"clipDistanceEnableMask"b8"alphaTestFunc"b3"alphaTestEnabled"b1"logicOp"b4"logicOpEnabled"b1"forceResourceIndex"b1"forceSoftwareVertexFetch"b1"objectThreadgroupSizeIsMultipleOfThreadExecutionWidth"b1"meshThreadgroupSizeIsMultipleOfThreadExecutionWidth"b1})"vertexDepthCompareClampMask"I"fragmentDepthCompareClampMask"I"resourceIndex"Q"label"@"NSString""vertexFunction"@"<MTLFunction>""fragmentFunction"@"<MTLFunction>""vertexDescriptor"@"MTLVertexDescriptorInternal""objectFunction"@"<MTLFunction>""meshFunction"@"<MTLFunction>""objectThreadsPerThreadgroup_DO_NOT_USE_WILL_BE_REMOVED"{?="width"Q"height"Q"depth"Q}"meshThreadsPerThreadgroup_DO_NOT_USE_WILL_BE_REMOVED"{?="width"Q"height"Q"depth"Q}"maxPipelineChildren"{?="width"Q"height"Q"depth"Q}"pipelineMemoryLength"Q"objectBuffers"@"MTLPipelineBufferDescriptorArrayInternal""meshBuffers"@"MTLPipelineBufferDescriptorArrayInternal""maxTotalThreadsPerObjectThreadgroup"Q"maxTotalThreadsPerMeshThreadgroup"Q"vertexBuffers"@"MTLPipelineBufferDescriptorArrayInternal""fragmentBuffers"@"MTLPipelineBufferDescriptorArrayInternal""driverCompilerOptions"@"NSDictionary""gpuCompilerSPIOptions"@"NSDictionary""pipelineLibrary"@"<MTLPipelineLibrary>""pad0"^v"pad1"^v"pluginData"@"NSDictionary""needsCustomBorderColorSamplers"B"maxVertexAmplificationCount"I"binaryArchives"@"NSArray""vertexLinkedFunctions"@"MTLLinkedFunctions""fragmentLinkedFunctions"@"MTLLinkedFunctions""objectLinkedFunctions"@"MTLLinkedFunctions""meshLinkedFunctions"@"MTLLinkedFunctions""vertexPreloadedLibraries"@"NSArray""fragmentPreloadedLibraries"@"NSArray""objectPreloadedLibraries"@"NSArray""meshPreloadedLibraries"@"NSArray""maxVertexStackCallDepth"Q"maxFragmentStackCallDepth"Q"supportAddingVertexBinaryFunctions"B"supportAddingFragmentBinaryFunctions"B"maxMeshStackCallDepth"Q"maxObjectStackCallDepth"Q"supportAddingMeshBinaryFunctions"B"supportAddingObjectBinaryFunctions"B"profileControl"@"MTLProfileControl""explicitVisibilityGroupID"I"maxAccelerationStructureTraversalDepth"Q};

@interface MTLRenderPipelineDescriptorInternal :  {
  /* instance variables */
  struct MTLRenderPipelineDescriptorPrivate { MTLRenderPipelineColorAttachmentDescriptorArrayInternal *attachments; unsigned long long x[8] rtBlendDescHash; unsigned long long depthAttachmentPixelFormat; unsigned long long stencilAttachmentPixelFormat; unsigned long long tessellationPartitionMode; unsigned long long maxTessellationFactor; BOOL tessellationFactorScaleEnabled; unsigned long long tessellationFactorFormat; unsigned long long tessellationControlPointIndexType; unsigned long long tessellationFactorStepFunction; unsigned long long tessellationOutputWindingOrder; unsigned long long postVertexDumpBufferIndex; BOOL supportIndirectCommandBuffers; long long textureWriteRoundingMode; union { unsigned long long sampleCount; unsigned long long rasterSampleCount; } x0; unsigned long long sampleMask; union { unsigned int sampleCoverageHash; float sampleCoverage; } x1; unsigned long long paddingToRemove; unsigned long long colorSampleCount; union { unsigned int x[2] miscHash; struct { unsigned int x :1 alphaToCoverageEnabled; unsigned int x :1 alphaToOneEnabled; unsigned int x :1 rasterizationEnabled; unsigned int x :2 inputPrimitiveTopology; unsigned int x :1 private0; unsigned int x :1 depthStencilWriteDisabled; unsigned int x :1 openGLMode; unsigned int x :1 sampleCoverageInvert; unsigned int x :1 private4; unsigned int x :1 vertexAmplificationMode; unsigned int x :1 twoSideEnabled; unsigned int x :1 pointSizeOutputVS; unsigned int x :1 pointCoordLowerLeft; unsigned int x :1 pointSmoothEnabled; unsigned int x :8 clipDistanceEnableMask; unsigned int x :3 alphaTestFunc; unsigned int x :1 alphaTestEnabled; unsigned int x :4 logicOp; unsigned int x :1 logicOpEnabled; unsigned int x :1 forceResourceIndex; unsigned int x :1 forceSoftwareVertexFetch; unsigned int x :1 objectThreadgroupSizeIsMultipleOfThreadExecutionWidth; unsigned int x :1 meshThreadgroupSizeIsMultipleOfThreadExecutionWidth; } x0; } x2; unsigned int vertexDepthCompareClampMask; unsigned int fragmentDepthCompareClampMask; unsigned long long resourceIndex; NSString *label; <MTLFunction> *vertexFunction; <MTLFunction> *fragmentFunction; MTLVertexDescriptorInternal *vertexDescriptor; <MTLFunction> *objectFunction; <MTLFunction> *meshFunction; struct { unsigned long long width; unsigned long long height; unsigned long long depth; } objectThreadsPerThreadgroup_DO_NOT_USE_WILL_BE_REMOVED; struct { unsigned long long width; unsigned long long height; unsigned long long depth; } meshThreadsPerThreadgroup_DO_NOT_USE_WILL_BE_REMOVED; struct { unsigned long long width; unsigned long long height; unsigned long long depth; } maxPipelineChildren; unsigned long long pipelineMemoryLength; MTLPipelineBufferDescriptorArrayInternal *objectBuffers; MTLPipelineBufferDescriptorArrayInternal *meshBuffers; unsigned long long maxTotalThreadsPerObjectThreadgroup; unsigned long long maxTotalThreadsPerMeshThreadgroup; MTLPipelineBufferDescriptorArrayInternal *vertexBuffers; MTLPipelineBufferDescriptorArrayInternal *fragmentBuffers; NSDictionary *driverCompilerOptions; NSDictionary *gpuCompilerSPIOptions; <MTLPipelineLibrary> *pipelineLibrary; void *pad0; void *pad1; NSDictionary *pluginData; BOOL needsCustomBorderColorSamplers; unsigned int maxVertexAmplificationCount; NSArray *binaryArchives; MTLLinkedFunctions *vertexLinkedFunctions; MTLLinkedFunctions *fragmentLinkedFunctions; MTLLinkedFunctions *objectLinkedFunctions; MTLLinkedFunctions *meshLinkedFunctions; NSArray *vertexPreloadedLibraries; NSArray *fragmentPreloadedLibraries; NSArray *objectPreloadedLibraries; NSArray *meshPreloadedLibraries; unsigned long long maxVertexStackCallDepth; unsigned long long maxFragmentStackCallDepth; BOOL supportAddingVertexBinaryFunctions; BOOL supportAddingFragmentBinaryFunctions; unsigned long long maxMeshStackCallDepth; unsigned long long maxObjectStackCallDepth; BOOL supportAddingMeshBinaryFunctions; BOOL supportAddingObjectBinaryFunctions; MTLProfileControl *profileControl; unsigned int explicitVisibilityGroupID; unsigned long long maxAccelerationStructureTraversalDepth; } _private;
}

@property (nonatomic) unsigned long long postVertexDumpBufferIndex;
@property (nonatomic) BOOL forceSoftwareVertexFetch;

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)formattedDescription:(unsigned long long)description;
- (id)description;
- (unsigned long long)tessellationPartitionMode;
- (void)setTessellationPartitionMode:(unsigned long long)mode;
- (unsigned long long)maxTessellationFactor;
- (void)setMaxTessellationFactor:(unsigned long long)factor;
- (BOOL)isTessellationFactorScaleEnabled;
- (void)setTessellationFactorScaleEnabled:(BOOL)enabled;
- (unsigned long long)tessellationFactorFormat;
- (void)setTessellationFactorFormat:(unsigned long long)format;
- (unsigned long long)tessellationControlPointIndexType;
- (void)setTessellationControlPointIndexType:(unsigned long long)type;
- (unsigned long long)tessellationFactorStepFunction;
- (void)setTessellationFactorStepFunction:(unsigned long long)function;
- (unsigned long long)tessellationOutputWindingOrder;
- (void)setTessellationOutputWindingOrder:(unsigned long long)order;
- (BOOL)supportIndirectCommandBuffers;
- (void)setSupportIndirectCommandBuffers:(BOOL)buffers;
- (void)setTextureWriteRoundingMode:(long long)mode;
- (long long)textureWriteRoundingMode;
- (BOOL)forceResourceIndex;
- (void)setForceResourceIndex:(BOOL)index;
- (unsigned long long)resourceIndex;
- (void)setResourceIndex:(unsigned long long)index;
- (unsigned long long)sampleCount;
- (void)setSampleCount:(unsigned long long)count;
- (unsigned long long)rasterSampleCount;
- (void)setRasterSampleCount:(unsigned long long)count;
- (unsigned long long)sampleMask;
- (void)setSampleMask:(unsigned long long)mask;
- (float)sampleCoverage;
- (void)setSampleCoverage:(float)coverage;
- (BOOL)isAlphaToCoverageEnabled;
- (void)setAlphaToCoverageEnabled:(BOOL)enabled;
- (BOOL)isAlphaToOneEnabled;
- (void)setAlphaToOneEnabled:(BOOL)enabled;
- (BOOL)isRasterizationEnabled;
- (void)setRasterizationEnabled:(BOOL)enabled;
- (unsigned long long)vertexAmplificationMode;
- (void)setVertexAmplificationMode:(unsigned long long)mode;
- (unsigned long long)maxVertexAmplificationCount;
- (void)setMaxVertexAmplificationCount:(unsigned long long)count;
- (unsigned long long)colorSampleCount;
- (void)setColorSampleCount:(unsigned long long)count;
- (BOOL)isLogicOperationEnabled;
- (void)setLogicOperationEnabled:(BOOL)enabled;
- (unsigned long long)logicOperation;
- (void)setLogicOperation:(unsigned long long)operation;
- (BOOL)isAlphaTestEnabled;
- (void)setAlphaTestEnabled:(BOOL)enabled;
- (unsigned long long)alphaTestFunction;
- (void)setAlphaTestFunction:(unsigned long long)function;
- (void)setClipDistanceEnableMask:(unsigned char)mask;
- (unsigned char)clipDistanceEnableMask;
- (BOOL)isPointSmoothEnabled;
- (void)setPointSmoothEnabled:(BOOL)enabled;
- (BOOL)isPointCoordLowerLeft;
- (void)setPointCoordLowerLeft:(BOOL)left;
- (BOOL)isPointSizeOutputVS;
- (void)setPointSizeOutputVS:(BOOL)vs;
- (BOOL)isTwoSideEnabled;
- (void)setTwoSideEnabled:(BOOL)enabled;
- (unsigned int)vertexDepthCompareClampMask;
- (void)setVertexDepthCompareClampMask:(unsigned int)mask;
- (unsigned int)fragmentDepthCompareClampMask;
- (void)setFragmentDepthCompareClampMask:(unsigned int)mask;
- (id)pluginData;
- (void)setPluginData:(id)data;
- (BOOL)openGLModeEnabled;
- (void)setOpenGLModeEnabled:(BOOL)enabled;
- (BOOL)needsCustomBorderColorSamplers;
- (void)setNeedsCustomBorderColorSamplers:(BOOL)samplers;
- (BOOL)sampleCoverageInvert;
- (void)setSampleCoverageInvert:(BOOL)invert;
- (BOOL)isDepthStencilWriteDisabled;
- (void)setDepthStencilWriteDisabled:(BOOL)disabled;
- (unsigned long long)inputPrimitiveTopology;
- (void)setInputPrimitiveTopology:(unsigned long long)topology;
- (void)setBinaryArchives:(id)archives;
- (id)binaryArchives;
- (id)vertexLinkedFunctions;
- (void)setVertexLinkedFunctions:(id)functions;
- (id)fragmentLinkedFunctions;
- (void)setFragmentLinkedFunctions:(id)functions;
- (id)objectLinkedFunctions;
- (void)setObjectLinkedFunctions:(id)functions;
- (id)meshLinkedFunctions;
- (void)setMeshLinkedFunctions:(id)functions;
- (id)vertexPreloadedLibraries;
- (void)setVertexPreloadedLibraries:(id)libraries;
- (id)fragmentPreloadedLibraries;
- (void)setFragmentPreloadedLibraries:(id)libraries;
- (id)objectPreloadedLibraries;
- (void)setObjectPreloadedLibraries:(id)libraries;
- (id)meshPreloadedLibraries;
- (void)setMeshPreloadedLibraries:(id)libraries;
- (id)insertVertexLibraries;
- (void)setInsertVertexLibraries:(id)libraries;
- (id)insertFragmentLibraries;
- (void)setInsertFragmentLibraries:(id)libraries;
- (id)insertObjectLibraries;
- (void)setInsertObjectLibraries:(id)libraries;
- (id)insertMeshLibraries;
- (void)setInsertMeshLibraries:(id)libraries;
- (BOOL)supportAddingVertexBinaryFunctions;
- (void)setSupportAddingVertexBinaryFunctions:(BOOL)functions;
- (BOOL)supportAddingFragmentBinaryFunctions;
- (void)setSupportAddingFragmentBinaryFunctions:(BOOL)functions;
- (unsigned long long)maxVertexCallStackDepth;
- (void)setMaxVertexCallStackDepth:(unsigned long long)depth;
- (unsigned long long)maxFragmentCallStackDepth;
- (void)setMaxFragmentCallStackDepth:(unsigned long long)depth;
- (BOOL)supportAddingMeshBinaryFunctions;
- (void)setSupportAddingMeshBinaryFunctions:(BOOL)functions;
- (BOOL)supportAddingObjectBinaryFunctions;
- (void)setSupportAddingObjectBinaryFunctions:(BOOL)functions;
- (unsigned long long)maxMeshCallStackDepth;
- (void)setMaxMeshCallStackDepth:(unsigned long long)depth;
- (unsigned long long)maxObjectCallStackDepth;
- (void)setMaxObjectCallStackDepth:(unsigned long long)depth;
- (id)vertexBuffers;
- (id)fragmentBuffers;
- (unsigned int)explicitVisibilityGroupID;
- (void)setExplicitVisibilityGroupID:(unsigned int)id;
- (id)profileControl;
- (void)setProfileControl:(id)control;
- (unsigned long long)maxAccelerationStructureTraversalDepth;
- (void)setMaxAccelerationStructureTraversalDepth:(unsigned long long)depth;
- (void)reset;
- (id)label;
- (void)setLabel:(id)label;
- (void)setVertexFunction:(id)function;
- (id)vertexFunction;
- (void)setFragmentFunction:(id)function;
- (id)fragmentFunction;
- (void)setObjectFunction:(id)function;
- (id)objectFunction;
- (void)setMeshFunction:(id)function;
- (id)meshFunction;
- (id)objectBuffers;
- (id)meshBuffers;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })objectThreadsPerThreadgroup;
- (void)setObjectThreadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })meshThreadsPerThreadgroup;
- (void)setMeshThreadsPerThreadgroup:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })threadgroup;
- (unsigned long long)maxTotalThreadsPerObjectThreadgroup;
- (void)setMaxTotalThreadsPerObjectThreadgroup:(unsigned long long)threadgroup;
- (unsigned long long)maxTotalThreadsPerMeshThreadgroup;
- (void)setMaxTotalThreadsPerMeshThreadgroup:(unsigned long long)threadgroup;
- (BOOL)objectThreadgroupSizeIsMultipleOfThreadExecutionWidth;
- (void)setObjectThreadgroupSizeIsMultipleOfThreadExecutionWidth:(BOOL)width;
- (BOOL)meshThreadgroupSizeIsMultipleOfThreadExecutionWidth;
- (void)setMeshThreadgroupSizeIsMultipleOfThreadExecutionWidth:(BOOL)width;
- (unsigned long long)pipelineMemoryLength;
- (void)setPipelineMemoryLength:(unsigned long long)length;
- (struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })maxPipelineChildren;
- (void)setMaxPipelineChildren:(struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; })children;
- (void)setPipelineLibrary:(id)library;
- (id)pipelineLibrary;
- (void)attachVertexDescriptor:(id)descriptor;
- (void)setVertexDescriptor:(id)descriptor;
- (id)vertexDescriptor;
- (void)setDriverCompilerOptions:(id)options;
- (id)driverCompilerOptions;
- (void)setGpuCompilerSPIOptions:(id)spioptions;
- (id)gpuCompilerSPIOptions;
- (const struct MTLRenderPipelineDescriptorPrivate { id x0; unsigned long long x1[8] unsigned long long x2; unsigned long long x3; unsigned long long x4; unsigned long long x5; BOOL x6; unsigned long long x7; unsigned long long x8; unsigned long long x9; unsigned long long x10; unsigned long long x11; BOOL x12; long long x13; union { unsigned long long x0; unsigned long long x1; } x14; unsigned long long x15; union { unsigned int x0; float x1; } x16; unsigned long long x17; unsigned long long x18; union { unsigned int x0[2] struct { unsigned int x0 :1; unsigned int x1 :1; unsigned int x2 :1; unsigned int x3 :2; unsigned int x4 :1; unsigned int x5 :1; unsigned int x6 :1; unsigned int x7 :1; unsigned int x8 :1; unsigned int x9 :1; unsigned int x10 :1; unsigned int x11 :1; unsigned int x12 :1; unsigned int x13 :1; unsigned int x14 :8; unsigned int x15 :3; unsigned int x16 :1; unsigned int x17 :4; unsigned int x18 :1; unsigned int x19 :1; unsigned int x20 :1; unsigned int x21 :1; unsigned int x22 :1; } x1; } x19; unsigned int x20; unsigned int x21; unsigned long long x22; id x23; id x24; id x25; id x26; id x27; id x28; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x29; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x30; struct { unsigned long long x0; unsigned long long x1; unsigned long long x2; } x31; unsigned long long x32; id x33; id x34; unsigned long long x35; unsigned long long x36; id x37; id x38; id x39; id x40; id x41; void * x42; void * x43; id x44; BOOL x45; unsigned int x46; id x47; id x48; id x49; id x50; id x51; id x52; id x53; id x54; id x55; unsigned long long x56; unsigned long long x57; BOOL x58; BOOL x59; unsigned long long x60; unsigned long long x61; BOOL x62; BOOL x63; id x64; unsigned int x65; unsigned long long x66; } *)_descriptorPrivate;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)colorAttachments;
- (unsigned long long)depthAttachmentPixelFormat;
- (void)setDepthAttachmentPixelFormat:(unsigned long long)format;
- (unsigned long long)stencilAttachmentPixelFormat;
- (void)setStencilAttachmentPixelFormat:(unsigned long long)format;
- (BOOL)validateWithDevice:(id)device error:(id *)error;
- (void)validateWithDevice:(id)device;
- (id)newSerializedFragmentDataWithFlags:(unsigned long long)flags options:(unsigned long long)options;
- (id)serializeFragmentData;
- (id)newSerializedVertexDataWithFlags:(unsigned long long)flags error:(id *)error;
- (id)newSerializedVertexDataWithFlags:(unsigned long long)flags options:(unsigned long long)options error:(id *)error;
- (id)newSerializedObjectDataWithFlags:(unsigned long long)flags options:(unsigned long long)options error:(id *)error;
- (id)newSerializedMeshDataWithFlags:(unsigned long long)flags options:(unsigned long long)options error:(id *)error;
- (id)newPipelineScript;
@end

#endif /* MTLRenderPipelineDescriptorInternal_h */
