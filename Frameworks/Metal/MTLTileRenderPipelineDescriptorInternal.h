//
//   Generated by https://github.com/blacktop/ipsw (Version: 3.1.454, BuildTime: 2024-02-08T22:07:34Z)
//
//    - LC_BUILD_VERSION:  Platform: watchOSSimulator, MinOS: 10.2, SDK: 10.2, Tool: ld (902.8)
//    - LC_SOURCE_VERSION: 341.35.0.0.0
//
#ifndef MTLTileRenderPipelineDescriptorInternal_h
#define MTLTileRenderPipelineDescriptorInternal_h
@import Foundation;

#include ".h"

@protocol {MTLTileRenderPipelineDescriptorPrivate="attachments"@"MTLTileRenderPipelineColorAttachmentDescriptorArrayInternal"""(?="sampleCount"Q"rasterSampleCount"Q)"label"@"NSString""tileFunction"@"<MTLFunction>""threadgroupSizeMatchesTileSize"B"paddingToRemove"Q"colorSampleCount"Q"tileBuffers"@"MTLPipelineBufferDescriptorArrayInternal""maxTotalThreadsPerThreadgroup"S"textureWriteRoundingMode"q"pluginData"@"NSDictionary""binaryArchives"@"NSArray""linkedFunctions"@"MTLLinkedFunctions""preloadedLibraries"@"NSArray""maxStackCallDepth"Q"supportAddingBinaryFunctions"B"profileControl"@"MTLProfileControl""maxAccelerationStructureTraversalDepth"Q"gpuCompilerSPIOptions"@"NSDictionary"};

@interface MTLTileRenderPipelineDescriptorInternal :  {
  /* instance variables */
  struct MTLTileRenderPipelineDescriptorPrivate { MTLTileRenderPipelineColorAttachmentDescriptorArrayInternal *attachments; union { unsigned long long sampleCount; unsigned long long rasterSampleCount; } x0; NSString *label; <MTLFunction> *tileFunction; BOOL threadgroupSizeMatchesTileSize; unsigned long long paddingToRemove; unsigned long long colorSampleCount; MTLPipelineBufferDescriptorArrayInternal *tileBuffers; unsigned short maxTotalThreadsPerThreadgroup; long long textureWriteRoundingMode; NSDictionary *pluginData; NSArray *binaryArchives; MTLLinkedFunctions *linkedFunctions; NSArray *preloadedLibraries; unsigned long long maxStackCallDepth; BOOL supportAddingBinaryFunctions; MTLProfileControl *profileControl; unsigned long long maxAccelerationStructureTraversalDepth; NSDictionary *gpuCompilerSPIOptions; } _private;
}

/* instance methods */
- (id)init;
- (void)dealloc;
- (id)copyWithZone:(struct _NSZone *)zone;
- (id)formattedDescription:(unsigned long long)description;
- (id)description;
- (unsigned long long)sampleCount;
- (void)setSampleCount:(unsigned long long)count;
- (unsigned long long)rasterSampleCount;
- (void)setRasterSampleCount:(unsigned long long)count;
- (id)pluginData;
- (void)setPluginData:(id)data;
- (unsigned long long)colorSampleCount;
- (void)setColorSampleCount:(unsigned long long)count;
- (id)tileBuffers;
- (id)profileControl;
- (void)setProfileControl:(id)control;
- (unsigned long long)maxAccelerationStructureTraversalDepth;
- (void)setMaxAccelerationStructureTraversalDepth:(unsigned long long)depth;
- (void)reset;
- (id)label;
- (void)setLabel:(id)label;
- (void)setTileFunction:(id)function;
- (id)tileFunction;
- (void)setThreadgroupSizeMatchesTileSize:(BOOL)size;
- (BOOL)threadgroupSizeMatchesTileSize;
- (const struct MTLTileRenderPipelineDescriptorPrivate { id x0; union { unsigned long long x0; unsigned long long x1; } x1; id x2; id x3; BOOL x4; unsigned long long x5; unsigned long long x6; id x7; unsigned short x8; long long x9; id x10; id x11; id x12; id x13; unsigned long long x14; BOOL x15; id x16; unsigned long long x17; id x18; } *)_descriptorPrivate;
- (void)setMaxTotalThreadsPerThreadgroup:(unsigned long long)threadgroup;
- (unsigned long long)maxTotalThreadsPerThreadgroup;
- (void)setTextureWriteRoundingMode:(long long)mode;
- (long long)textureWriteRoundingMode;
- (void)setBinaryArchives:(id)archives;
- (id)binaryArchives;
- (id)linkedFunctions;
- (void)setLinkedFunctions:(id)functions;
- (id)preloadedLibraries;
- (void)setPreloadedLibraries:(id)libraries;
- (id)insertLibraries;
- (void)setInsertLibraries:(id)libraries;
- (BOOL)supportAddingBinaryFunctions;
- (void)setSupportAddingBinaryFunctions:(BOOL)functions;
- (unsigned long long)maxCallStackDepth;
- (void)setMaxCallStackDepth:(unsigned long long)depth;
- (unsigned long long)hash;
- (BOOL)isEqual:(id)equal;
- (id)colorAttachments;
- (BOOL)validateWithDevice:(id)device error:(id *)error;
- (void)validateWithDevice:(id)device;
- (id)newSerializedTileDataWithFlags:(unsigned long long)flags options:(unsigned long long)options error:(id *)error;
- (id)newPipelineScript;
- (void)setGpuCompilerSPIOptions:(id)spioptions;
- (id)gpuCompilerSPIOptions;
@end

#endif /* MTLTileRenderPipelineDescriptorInternal_h */
